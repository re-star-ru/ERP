name: Static site deploy
on:
  push:
    paths:
      - 'site/**'
      - '.github/workflows/site.yaml'

# env:
#   REPO: ${{github.repository}}
#   USERNAME: ${{github.actor}}
#   GITHUB_REF: ${{github.ref}}
#   GITHUB_SHA: ${{github.sha}}
#   GITHUB_PACKAGE_TOKEN: ${{secrets.GITHUB_TOKEN}}
#   K: '02'

jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./site
    steps:
      - uses: actions/checkout@v3

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2

      - name: Build
        run: hugo --minify

      - name: copy dist via ssh key
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.KEY }}
          source: 'public'
          target: '/var/lib/caddy/testdeploy'
#       - name: set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: build and deploy master image to ghcr.io
#         run: |
#           cd frontend
#           ref="$(echo ${GITHUB_REF} | cut -d'/' -f3)"
#           echo GITHUB_REF - $ref
#           echo ${GITHUB_PACKAGE_TOKEN} | docker login ghcr.io -u ${USERNAME} --password-stdin
#           docker buildx build --push \
#             --build-arg CI=github --build-arg GITHUB_SHA=${GITHUB_SHA} --build-arg GIT_BRANCH=${ref} \
#             --platform linux/amd64 \
#             -t ghcr.io/${REPO}:${ref} \
#             -t ghcr.io/${REPO}:${GITHUB_SHA} \
#             -t ghcr.io/${REPO}:latest .

#       - name: Deploy with kube-tools
#         uses: stefanprodan/kube-tools@v1
#         env:
#           KUBECONFIG: .kubeconfig
#           UPDATE: .deploy.yaml
#         with:
#           command: |
#             cd kube
#             kustomize edit set image ghcr.io/re-star-ru/erp:latest=ghcr.io/${REPO}:${GITHUB_SHA}
#             kustomize build . > $UPDATE
#             echo "${{secrets.KUBE_CONFIG}}" > $KUBECONFIG
#             kubectl apply -f $UPDATE

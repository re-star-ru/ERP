//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package model provides an interface for working with high-level objects (models) in PDF files, including
// reading and writing documents.
//
// The document structure of a PDF is constructed of a hierarchy of data models, representing a tree
// of information starting from the Document catalog (Figure 5 p. 80).
// It is based on the core package which handles core functionality such as file i/o, parsing and
// handling of primitive PDF objects (core.PdfObject).
//
// As an example of the interface, the following snippet can read the PDF and output the number of pages:
//
//	f, err := os.Open(inputPath)
//		if err != nil {
//		return nil, err
//	}
//	defer f.Close()
// 	pdfReader, err := unipdf.NewPdfReader(f)
//	if err != nil {
//		fmt.Printf("Failed to read PDF file: %v\n", err)
//		os.Exit(1)
//	}
//	numPages, err := pdfReader.GetNumPages()
//	if err != nil {
//		fmt.Printf("Failed to get number of pages: %v\n", err)
//		os.Exit(1)
//	}
//	fmt.Printf("The PDF file has %d pages\n", numPages)
//
// For more examples, see the unidoc-examples repository on GitHub: https://github.com/unidoc/unidoc-examples
package model ;import (_c "bufio";_aa "bytes";_gf "crypto/md5";_ef "crypto/rand";_fe "crypto/sha1";_dd "crypto/x509";_f "encoding/binary";_ae "encoding/hex";_ag "errors";_e "fmt";_dcfa "github.com/unidoc/pkcs7";_dcf "github.com/unidoc/unipdf/v3/common";
_bgg "github.com/unidoc/unipdf/v3/core";_de "github.com/unidoc/unipdf/v3/core/security";_fb "github.com/unidoc/unipdf/v3/core/security/crypt";_fbb "github.com/unidoc/unipdf/v3/internal/cmap";_dcg "github.com/unidoc/unipdf/v3/internal/imageutil";_dba "github.com/unidoc/unipdf/v3/internal/license";
_ceg "github.com/unidoc/unipdf/v3/internal/sampling";_cc "github.com/unidoc/unipdf/v3/internal/textencoding";_egb "github.com/unidoc/unipdf/v3/internal/timeutils";_bb "github.com/unidoc/unipdf/v3/internal/transform";_cg "github.com/unidoc/unipdf/v3/model/internal/docutil";
_dad "github.com/unidoc/unipdf/v3/model/internal/fonts";_bg "github.com/unidoc/unipdf/v3/model/mdp";_ad "github.com/unidoc/unipdf/v3/model/sigutil";_dgc "github.com/unidoc/unipdf/v3/ps";_df "github.com/unidoc/unitype";_agf "golang.org/x/xerrors";_a "hash";
_dc "image";_aea "image/color";_ "image/gif";_ "image/png";_gb "io";_ge "io/ioutil";_db "math";_ce "math/rand";_eg "os";_da "regexp";_gg "sort";_dgd "strconv";_ba "strings";_b "sync";_g "time";_ee "unicode";_ffd "unicode/utf8";);

// ToPdfObject returns the PDF representation of the function.
func (_eebf *PdfFunctionType4 )ToPdfObject ()_bgg .PdfObject {_acdc :=_eebf ._dcegf ;if _acdc ==nil {_eebf ._dcegf =&_bgg .PdfObjectStream {};_acdc =_eebf ._dcegf ;};_caeff :=_bgg .MakeDict ();_caeff .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bgg .MakeInteger (4));
_fcfb :=&_bgg .PdfObjectArray {};for _ ,_bgdg :=range _eebf .Domain {_fcfb .Append (_bgg .MakeFloat (_bgdg ));};_caeff .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fcfb );_cbffa :=&_bgg .PdfObjectArray {};for _ ,_cbaf :=range _eebf .Range {_cbffa .Append (_bgg .MakeFloat (_cbaf ));
};_caeff .Set ("\u0052\u0061\u006eg\u0065",_cbffa );if _eebf ._bgca ==nil &&_eebf .Program !=nil {_eebf ._bgca =[]byte (_eebf .Program .String ());};_caeff .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bgg .MakeInteger (int64 (len (_eebf ._bgca ))));_acdc .Stream =_eebf ._bgca ;
_acdc .PdfObjectDictionary =_caeff ;return _acdc ;};

// GetContainingPdfObject implements interface PdfModel.
func (_bagcd *PdfAnnotation )GetContainingPdfObject ()_bgg .PdfObject {return _bagcd ._gec };func (_afeda *LTV )getCRLs (_eafd []*_dd .Certificate )([][]byte ,error ){_cbgad :=make ([][]byte ,0,len (_eafd ));for _ ,_faddc :=range _eafd {for _ ,_beab :=range _faddc .CRLDistributionPoints {if _afeda .CertClient .IsCA (_faddc ){continue ;
};_gfec ,_eddc :=_afeda .CRLClient .MakeRequest (_beab ,_faddc );if _eddc !=nil {_dcf .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043R\u004c\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074 \u0065\u0072\u0072o\u0072:\u0020\u0025\u0076",_eddc );continue ;
};_cbgad =append (_cbgad ,_gfec );};};return _cbgad ,nil ;};

// ColorToRGB converts a CalRGB color to an RGB color.
func (_aabf *PdfColorspaceCalRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_aaae ,_cffd :=color .(*PdfColorCalRGB );if !_cffd {_dcf .Log .Debug ("\u0049\u006e\u0070ut\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0063\u0061\u006c\u0020\u0072\u0067\u0062");
return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_fdde :=_aaae .A ();_gcdcc :=_aaae .B ();_ccag :=_aaae .C ();X :=_aabf .Matrix [0]*_db .Pow (_fdde ,_aabf .Gamma [0])+_aabf .Matrix [3]*_db .Pow (_gcdcc ,_aabf .Gamma [1])+_aabf .Matrix [6]*_db .Pow (_ccag ,_aabf .Gamma [2]);
Y :=_aabf .Matrix [1]*_db .Pow (_fdde ,_aabf .Gamma [0])+_aabf .Matrix [4]*_db .Pow (_gcdcc ,_aabf .Gamma [1])+_aabf .Matrix [7]*_db .Pow (_ccag ,_aabf .Gamma [2]);Z :=_aabf .Matrix [2]*_db .Pow (_fdde ,_aabf .Gamma [0])+_aabf .Matrix [5]*_db .Pow (_gcdcc ,_aabf .Gamma [1])+_aabf .Matrix [8]*_db .Pow (_ccag ,_aabf .Gamma [2]);
_fcdd :=3.240479*X +-1.537150*Y +-0.498535*Z ;_fccg :=-0.969256*X +1.875992*Y +0.041556*Z ;_efbe :=0.055648*X +-0.204043*Y +1.057311*Z ;_fcdd =_db .Min (_db .Max (_fcdd ,0),1.0);_fccg =_db .Min (_db .Max (_fccg ,0),1.0);_efbe =_db .Min (_db .Max (_efbe ,0),1.0);
return NewPdfColorDeviceRGB (_fcdd ,_fccg ,_efbe ),nil ;};

// NewXObjectImageFromStream builds the image xobject from a stream object.
// An image dictionary is the dictionary portion of a stream object representing an image XObject.
func NewXObjectImageFromStream (stream *_bgg .PdfObjectStream )(*XObjectImage ,error ){_feegf :=&XObjectImage {};_feegf ._cfcfd =stream ;_bfab :=*(stream .PdfObjectDictionary );_ffae ,_gbccd :=_bgg .NewEncoderFromStream (stream );if _gbccd !=nil {return nil ,_gbccd ;
};_feegf .Filter =_ffae ;if _bcfga :=_bgg .TraceToDirectObject (_bfab .Get ("\u0057\u0069\u0064t\u0068"));_bcfga !=nil {_eebde ,_cbggb :=_bcfga .(*_bgg .PdfObjectInteger );if !_cbggb {return nil ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0069\u006d\u0061g\u0065\u0020\u0077\u0069\u0064\u0074\u0068\u0020\u006f\u0062j\u0065\u0063\u0074");
};_degfg :=int64 (*_eebde );_feegf .Width =&_degfg ;}else {return nil ,_ag .New ("\u0077\u0069\u0064\u0074\u0068\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _fbdgbfd :=_bgg .TraceToDirectObject (_bfab .Get ("\u0048\u0065\u0069\u0067\u0068\u0074"));
_fbdgbfd !=nil {_aaecb ,_fbcde :=_fbdgbfd .(*_bgg .PdfObjectInteger );if !_fbcde {return nil ,_ag .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_eefaf :=int64 (*_aaecb );
_feegf .Height =&_eefaf ;}else {return nil ,_ag .New ("\u0068\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};if _edgcfg :=_bgg .TraceToDirectObject (_bfab .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065"));
_edgcfg !=nil {_dgfee ,_baggd :=NewPdfColorspaceFromPdfObject (_edgcfg );if _baggd !=nil {return nil ,_baggd ;};_feegf .ColorSpace =_dgfee ;}else {_dcf .Log .Debug ("\u0058O\u0062\u006a\u0065c\u0074\u0020\u0049m\u0061ge\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u002d\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067 1\u0020c\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065n\u0074\u0020\u002d\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047r\u0061\u0079");
_feegf .ColorSpace =NewPdfColorspaceDeviceGray ();};if _abgde :=_bgg .TraceToDirectObject (_bfab .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074"));_abgde !=nil {_eegfg ,_bafbg :=_abgde .(*_bgg .PdfObjectInteger );
if !_bafbg {return nil ,_ag .New ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0069\u006d\u0061\u0067\u0065\u0020\u0068\u0065\u0069g\u0068\u0074\u0020o\u0062j\u0065\u0063\u0074");};_fdcee :=int64 (*_eegfg );_feegf .BitsPerComponent =&_fdcee ;};_feegf .Intent =_bfab .Get ("\u0049\u006e\u0074\u0065\u006e\u0074");
_feegf .ImageMask =_bfab .Get ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k");_feegf .Mask =_bfab .Get ("\u004d\u0061\u0073\u006b");_feegf .Decode =_bfab .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");_feegf .Interpolate =_bfab .Get ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065");
_feegf .Alternatives =_bfab .Get ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073");_feegf .SMask =_bfab .Get ("\u0053\u004d\u0061s\u006b");_feegf .SMaskInData =_bfab .Get ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061");
_feegf .Matte =_bfab .Get ("\u004d\u0061\u0074t\u0065");_feegf .Name =_bfab .Get ("\u004e\u0061\u006d\u0065");_feegf .StructParent =_bfab .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_feegf .ID =_bfab .Get ("\u0049\u0044");
_feegf .OPI =_bfab .Get ("\u004f\u0050\u0049");_feegf .Metadata =_bfab .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_feegf .OC =_bfab .Get ("\u004f\u0043");_feegf .Stream =stream .Stream ;return _feegf ,nil ;};

// AddExtGState adds a graphics state to the XObject resources.
func (_bcabe *PdfPage )AddExtGState (name _bgg .PdfObjectName ,egs *_bgg .PdfObjectDictionary )error {if _bcabe .Resources ==nil {_bcabe .Resources =NewPdfPageResources ();};if _bcabe .Resources .ExtGState ==nil {_bcabe .Resources .ExtGState =_bgg .MakeDict ();
};_dafae ,_cbee :=_bgg .TraceToDirectObject (_bcabe .Resources .ExtGState ).(*_bgg .PdfObjectDictionary );if !_cbee {_dcf .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bgg .TraceToDirectObject (_bcabe .Resources .ExtGState ));
return _ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dafae .Set (name ,egs );return nil ;};

// B returns the value of the B component of the color.
func (_dgge *PdfColorCalRGB )B ()float64 {return _dgge [1]};func (_gaedf *PdfShading )getShadingDict ()(*_bgg .PdfObjectDictionary ,error ){_agdcd :=_gaedf ._fcfbb ;if _cbab ,_eaea :=_agdcd .(*_bgg .PdfIndirectObject );_eaea {_dfbf ,_gfce :=_cbab .PdfObject .(*_bgg .PdfObjectDictionary );
if !_gfce {return nil ,_bgg .ErrTypeError ;};return _dfbf ,nil ;}else if _eagdf ,_gfeaa :=_agdcd .(*_bgg .PdfObjectStream );_gfeaa {return _eagdf .PdfObjectDictionary ,nil ;}else if _gfbfdf ,_addbf :=_agdcd .(*_bgg .PdfObjectDictionary );_addbf {return _gfbfdf ,nil ;
}else {_dcf .Log .Debug ("U\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0061\u0063\u0063\u0065s\u0073\u0020\u0073\u0068\u0061\u0064\u0069n\u0067\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079");return nil ,_bgg .ErrTypeError ;};};

// WriteString outputs the object as it is to be written to file.
func (_eadef *pdfSignDictionary )WriteString ()string {_eadef ._ccecb =0;_eadef ._acbeb =0;_eadef ._gdfb =0;_eadef ._efce =0;_cbgcb :=_aa .NewBuffer (nil );_cbgcb .WriteString ("\u003c\u003c");for _ ,_gfed :=range _eadef .Keys (){_cffcb :=_eadef .Get (_gfed );
switch _gfed {case "\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e":_cbgcb .WriteString (_gfed .WriteString ());_cbgcb .WriteString ("\u0020");_eadef ._gdfb =_cbgcb .Len ();_cbgcb .WriteString (_cffcb .WriteString ());_cbgcb .WriteString ("\u0020");_eadef ._efce =_cbgcb .Len ()-1;
case "\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073":_cbgcb .WriteString (_gfed .WriteString ());_cbgcb .WriteString ("\u0020");_eadef ._ccecb =_cbgcb .Len ();_cbgcb .WriteString (_cffcb .WriteString ());_cbgcb .WriteString ("\u0020");_eadef ._acbeb =_cbgcb .Len ()-1;
default:_cbgcb .WriteString (_gfed .WriteString ());_cbgcb .WriteString ("\u0020");_cbgcb .WriteString (_cffcb .WriteString ());};};_cbgcb .WriteString ("\u003e\u003e");return _cbgcb .String ();};

// PdfAnnotationMovie represents Movie annotations.
// (Section 12.5.6.17).
type PdfAnnotationMovie struct{*PdfAnnotation ;T _bgg .PdfObject ;Movie _bgg .PdfObject ;A _bgg .PdfObject ;};

// SetContext sets the sub annotation (context).
func (_dgde *PdfAnnotation )SetContext (ctx PdfModel ){_dgde ._afg =ctx };

// Encrypt encrypts the output file with a specified user/owner password.
func (_bedfa *PdfWriter )Encrypt (userPass ,ownerPass []byte ,options *EncryptOptions )error {_ccabb :=RC4_128bit ;if options !=nil {_ccabb =options .Algorithm ;};_fdfbd :=_de .PermOwner ;if options !=nil {_fdfbd =options .Permissions ;};var _adffg _fb .Filter ;
switch _ccabb {case RC4_128bit :_adffg =_fb .NewFilterV2 (16);case AES_128bit :_adffg =_fb .NewFilterAESV2 ();case AES_256bit :_adffg =_fb .NewFilterAESV3 ();default:return _e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020a\u006cg\u006fr\u0069\u0074\u0068\u006d\u003a\u0020\u0025v",options .Algorithm );
};_gdba ,_eeccb ,_dfcae :=_bgg .PdfCryptNewEncrypt (_adffg ,userPass ,ownerPass ,_fdfbd );if _dfcae !=nil {return _dfcae ;};_bedfa ._dfade =_gdba ;if _eeccb .Major !=0{_bedfa .SetVersion (_eeccb .Major ,_eeccb .Minor );};_bedfa ._ddcbec =_eeccb .Encrypt ;
_bedfa ._gcege ,_bedfa ._dafd =_eeccb .ID0 ,_eeccb .ID1 ;_bdbda :=_bgg .MakeIndirectObject (_eeccb .Encrypt );_bedfa ._baefd =_bdbda ;_bedfa .addObject (_bdbda );return nil ;};

// FlattenFields flattens the form fields and annotations for the PDF loaded in `pdf` and makes
// non-editable.
// Looks up all widget annotations corresponding to form fields and flattens them by drawing the content
// through the content stream rather than annotations.
// References to flattened annotations will be removed from Page Annots array. For fields the AcroForm entry
// will be emptied.
// When `allannots` is true, all annotations will be flattened. Keep false if want to keep non-form related
// annotations intact.
// When `appgen` is not nil, it will be used to generate appearance streams for the field annotations.
func (_cdcg *PdfReader )FlattenFields (allannots bool ,appgen FieldAppearanceGenerator )error {return _cdcg .flattenFieldsWithOpts (allannots ,appgen ,nil );};

// PdfColorPattern represents a pattern color.
type PdfColorPattern struct{Color PdfColor ;PatternName _bgg .PdfObjectName ;};

// ImageToRGB returns the passed in image. Method exists in order to satisfy
// the PdfColorspace interface.
func (_eeegg *PdfColorspaceDeviceRGB )ImageToRGB (img Image )(Image ,error ){return img ,nil };

// SetPdfCreationDate sets the CreationDate attribute of the output PDF.
func SetPdfCreationDate (creationDate _g .Time ){_abfga .Lock ();defer _abfga .Unlock ();_gcdbd =creationDate ;};

// ToPdfObject implements interface PdfModel.
func (_ede *PdfActionImportData )ToPdfObject ()_bgg .PdfObject {_ede .PdfAction .ToPdfObject ();_dfab :=_ede ._ddf ;_gad :=_dfab .PdfObject .(*_bgg .PdfObjectDictionary );_gad .SetIfNotNil ("\u0053",_bgg .MakeName (string (ActionTypeImportData )));if _ede .F !=nil {_gad .Set ("\u0046",_ede .F .ToPdfObject ());
};return _dfab ;};func (_dcfbg *PdfWriter )checkPendingObjects (){for _cdfgg ,_cfaga :=range _dcfbg ._gceaa {if !_dcfbg .hasObject (_cdfgg ){_dcf .Log .Debug ("\u0057\u0041\u0052\u004e\u0020\u0050\u0065n\u0064\u0069\u006eg\u0020\u006f\u0062j\u0065\u0063t\u0020\u0025\u002b\u0076\u0020\u0025T\u0020(%\u0070\u0029\u0020\u006e\u0065\u0076\u0065\u0072\u0020\u0061\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0077\u0072\u0069\u0074\u0069\u006e\u0067",_cdfgg ,_cdfgg ,_cdfgg );
for _ ,_fgaef :=range _cfaga {for _ ,_bfaae :=range _fgaef .Keys (){_afbba :=_fgaef .Get (_bfaae );if _afbba ==_cdfgg {_dcf .Log .Debug ("\u0050e\u006e\u0064i\u006e\u0067\u0020\u006fb\u006a\u0065\u0063t\u0020\u0066\u006f\u0075\u006e\u0064\u0021\u0020\u0061nd\u0020\u0072\u0065p\u006c\u0061c\u0065\u0064\u0020\u0077\u0069\u0074h\u0020\u006eu\u006c\u006c");
_fgaef .Set (_bfaae ,_bgg .MakeNull ());break ;};};};};};};

// NewPdfRectangle creates a PDF rectangle object based on an input array of 4 integers.
// Defining the lower left (LL) and upper right (UR) corners with
// floating point numbers.
func NewPdfRectangle (arr _bgg .PdfObjectArray )(*PdfRectangle ,error ){_beege :=PdfRectangle {};if arr .Len ()!=4{return nil ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0072\u0065\u0063\u0074\u0061\u006e\u0067\u006c\u0065\u0020\u0061\u0072r\u0061\u0079\u002c\u0020\u006c\u0065\u006e \u0021\u003d\u0020\u0034");
};var _faffa error ;_beege .Llx ,_faffa =_bgg .GetNumberAsFloat (arr .Get (0));if _faffa !=nil {return nil ,_faffa ;};_beege .Lly ,_faffa =_bgg .GetNumberAsFloat (arr .Get (1));if _faffa !=nil {return nil ,_faffa ;};_beege .Urx ,_faffa =_bgg .GetNumberAsFloat (arr .Get (2));
if _faffa !=nil {return nil ,_faffa ;};_beege .Ury ,_faffa =_bgg .GetNumberAsFloat (arr .Get (3));if _faffa !=nil {return nil ,_faffa ;};return &_beege ,nil ;};

// Clear clears flag fl from the flag and returns the resulting flag.
func (_fecdg FieldFlag )Clear (fl FieldFlag )FieldFlag {return FieldFlag (_fecdg .Mask ()&^fl .Mask ())};

// SetShadingByName sets a shading resource specified by keyName.
func (_dfcgf *PdfPageResources )SetShadingByName (keyName _bgg .PdfObjectName ,shadingObj _bgg .PdfObject )error {if _dfcgf .Shading ==nil {_dfcgf .Shading =_bgg .MakeDict ();};_cbbbb ,_gefga :=_dfcgf .Shading .(*_bgg .PdfObjectDictionary );if !_gefga {return _bgg .ErrTypeError ;
};_cbbbb .Set (keyName ,shadingObj );return nil ;};

// String returns a string representation of the field.
func (_dfea *PdfField )String ()string {if _bccfd ,_gcab :=_dfea .ToPdfObject ().(*_bgg .PdfIndirectObject );_gcab {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_dfea ._afag ,_bccfd .PdfObject .String ());};return "";};

// PdfAnnotationPopup represents Popup annotations.
// (Section 12.5.6.14).
type PdfAnnotationPopup struct{*PdfAnnotation ;Parent _bgg .PdfObject ;Open _bgg .PdfObject ;};

// SetContext sets the specific fielddata type, e.g. would be PdfFieldButton for a button field.
func (_ddbe *PdfField )SetContext (ctx PdfModel ){_ddbe ._afag =ctx };func (_gbgg *PdfField )inherit (_abagg func (*PdfField )bool )(bool ,error ){_cadcc :=map[*PdfField ]bool {};_aebd :=false ;_deff :=_gbgg ;for _deff !=nil {if _ ,_ggfgg :=_cadcc [_deff ];
_ggfgg {return false ,_ag .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};_ggfgf :=_abagg (_deff );if _ggfgf {_aebd =true ;break ;};_cadcc [_deff ]=true ;_deff =_deff .Parent ;};return _aebd ,nil ;
};

// ColorToRGB converts a CMYK32 color to an RGB color.
func (_begbb *PdfColorspaceDeviceCMYK )ColorToRGB (color PdfColor )(PdfColor ,error ){_cegaf ,_egbf :=color .(*PdfColorDeviceCMYK );if !_egbf {_dcf .Log .Debug ("I\u006e\u0070\u0075\u0074\u0020\u0063o\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0064e\u0076\u0069\u0063e\u0020c\u006d\u0079\u006b");
return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_gdgf :=_cegaf .C ();_ddgb :=_cegaf .M ();_ade :=_cegaf .Y ();_ceaee :=_cegaf .K ();_gdgf =_gdgf *(1-_ceaee )+_ceaee ;_ddgb =_ddgb *(1-_ceaee )+_ceaee ;
_ade =_ade *(1-_ceaee )+_ceaee ;_caee :=1-_gdgf ;_cbfa :=1-_ddgb ;_bcga :=1-_ade ;return NewPdfColorDeviceRGB (_caee ,_cbfa ,_bcga ),nil ;};func (_ecfeg *PdfReader )loadOutlines ()(*PdfOutlineTreeNode ,error ){if _ecfeg ._ebdgc .GetCrypter ()!=nil &&!_ecfeg ._ebdgc .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_ecade :=_ecfeg ._gaebb ;_fgddd :=_ecade .Get ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");if _fgddd ==nil {return nil ,nil ;};_dcf .Log .Trace ("\u002d\u0048\u0061\u0073\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");_acce :=_bgg .ResolveReference (_fgddd );
_dcf .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0020\u0072\u006f\u006f\u0074\u003a\u0020\u0025\u0076",_acce );if _dbagb :=_bgg .IsNullObject (_acce );_dbagb {_dcf .Log .Trace ("\u004f\u0075\u0074li\u006e\u0065\u0020\u0072\u006f\u006f\u0074\u0020\u0069s\u0020n\u0075l\u006c \u002d\u0020\u006e\u006f\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0073");
return nil ,nil ;};_fcgc ,_aedaa :=_acce .(*_bgg .PdfIndirectObject );if !_aedaa {if _ ,_dcfbd :=_bgg .GetDict (_acce );!_dcfbd {_dcf .Log .Debug ("\u0049\u006e\u0076a\u006c\u0069\u0064\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067");
return nil ,nil ;};_dcf .Log .Debug ("\u004f\u0075t\u006c\u0069\u006e\u0065\u0020r\u006f\u006f\u0074\u0020\u0069s\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
_fcgc =_bgg .MakeIndirectObject (_acce );};_dfacb ,_aedaa :=_fcgc .PdfObject .(*_bgg .PdfObjectDictionary );if !_aedaa {return nil ,_ag .New ("\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072y");
};_dcf .Log .Trace ("O\u0075\u0074\u006c\u0069ne\u0020r\u006f\u006f\u0074\u0020\u0064i\u0063\u0074\u003a\u0020\u0025\u0076",_dfacb );_gbaf ,_ ,_bfdd :=_ecfeg .buildOutlineTree (_fcgc ,nil ,nil ,nil );if _bfdd !=nil {return nil ,_bfdd ;};_dcf .Log .Trace ("\u0052\u0065\u0073\u0075\u006c\u0074\u0069\u006e\u0067\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065:\u0020\u0025\u0076",_gbaf );
return _gbaf ,nil ;};func (_bfgca *pdfFontSimple )getFontEncoding ()(_gcge string ,_bgfe map[_cc .CharCode ]_cc .GlyphName ,_gbedg error ){_gcge ="\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067";if _cecgb ,_dgee :=_fcaffd [_bfgca ._dbbc ];
_dgee {_gcge =_cecgb ;}else if _bfgca .fontFlags ()&_dcga !=0{for _faafa ,_bdgag :=range _fcaffd {if _ba .Contains (_bfgca ._dbbc ,_faafa ){_gcge =_bdgag ;break ;};};};if _bfgca .Encoding ==nil {return _gcge ,nil ,nil ;};switch _cbdae :=_bfgca .Encoding .(type ){case *_bgg .PdfObjectName :return string (*_cbdae ),nil ,nil ;
case *_bgg .PdfObjectDictionary :_eecd ,_ccecf :=_bgg .GetName (_cbdae .Get ("\u0042\u0061\u0073e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _ccecf {_gcge =_eecd .String ();};if _fgcc :=_cbdae .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073");
_fgcc !=nil {_bdgdc ,_bgdcf :=_bgg .GetArray (_fgcc );if !_bgdcf {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042a\u0064\u0020\u0066on\u0074\u0020\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u003d\u0025\u002b\u0076\u0020\u0044\u0069f\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073=\u0025\u0054",_cbdae ,_cbdae .Get ("D\u0069\u0066\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0073"));
return "",nil ,_bgg .ErrTypeError ;};_bgfe ,_gbedg =_cc .FromFontDifferences (_bdgdc );};return _gcge ,_bgfe ,_gbedg ;default:_dcf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0072\u0020\u0064\u0069\u0063t\u0020\u0028\u0025\u0054\u0029\u0020\u0025\u0073",_bfgca .Encoding ,_bfgca .Encoding );
return "",nil ,_bgg .ErrTypeError ;};};func _cdcbc (_bgcge _bgg .PdfObject )(*PdfPattern ,error ){_gcfcb :=&PdfPattern {};var _fceda *_bgg .PdfObjectDictionary ;if _cedaa ,_fegb :=_bgg .GetIndirect (_bgcge );_fegb {_gcfcb ._aebfe =_cedaa ;_bdbdg ,_afbc :=_cedaa .PdfObject .(*_bgg .PdfObjectDictionary );
if !_afbc {_dcf .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006fn\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079\u0020\u0028g\u006f\u0074\u0020%\u0054\u0029",_cedaa .PdfObject );
return nil ,_bgg .ErrTypeError ;};_fceda =_bdbdg ;}else if _adgaf ,_dddc :=_bgg .GetStream (_bgcge );_dddc {_gcfcb ._aebfe =_adgaf ;_fceda =_adgaf .PdfObjectDictionary ;}else {_dcf .Log .Debug ("\u0050a\u0074\u0074e\u0072\u006e\u0020\u006eo\u0074\u0020\u0061n\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 o\u0062\u006a\u0065c\u0074\u0020o\u0072\u0020\u0073\u0074\u0072\u0065a\u006d\u002e \u0025\u0054",_bgcge );
return nil ,_bgg .ErrTypeError ;};_aeba :=_fceda .Get ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065");if _aeba ==nil {_dcf .Log .Debug ("\u0050\u0064\u0066\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069n\u0067\u0020\u0050\u0061\u0074t\u0065\u0072n\u0054\u0079\u0070\u0065");
return nil ,ErrRequiredAttributeMissing ;};_beeb ,_gbaga :=_aeba .(*_bgg .PdfObjectInteger );if !_gbaga {_dcf .Log .Debug ("\u0050\u0061tt\u0065\u0072\u006e \u0074\u0079\u0070\u0065 no\u0074 a\u006e\u0020\u0069\u006e\u0074\u0065\u0067er\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_aeba );
return nil ,_bgg .ErrTypeError ;};if *_beeb !=1&&*_beeb !=2{_dcf .Log .Debug ("\u0050\u0061\u0074\u0074e\u0072\u006e\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d \u0031/\u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",*_beeb );return nil ,_bgg .ErrRangeError ;
};_gcfcb .PatternType =int64 (*_beeb );switch *_beeb {case 1:_gcgc ,_dcfda :=_dgbfa (_fceda );if _dcfda !=nil {return nil ,_dcfda ;};_gcgc .PdfPattern =_gcfcb ;_gcfcb ._dcdgae =_gcgc ;return _gcfcb ,nil ;case 2:_ccccc ,_bfedb :=_begfa (_fceda );if _bfedb !=nil {return nil ,_bfedb ;
};_ccccc .PdfPattern =_gcfcb ;_gcfcb ._dcdgae =_ccccc ;return _gcfcb ,nil ;};return nil ,_ag .New ("\u0075n\u006bn\u006f\u0077\u006e\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e");};var _adce =map[string ]struct{}{"\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061c\u0052\u006f\u006da\u006e\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{},"\u004d\u0061\u0063\u0045\u0078\u0070\u0065\u0072\u0074\u0045\u006e\u0063o\u0064\u0069\u006e\u0067":{},"\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067":{}};


// ToPdfObject implements interface PdfModel.
func (_eedc *PdfAnnotationPrinterMark )ToPdfObject ()_bgg .PdfObject {_eedc .PdfAnnotation .ToPdfObject ();_cbce :=_eedc ._gec ;_fcad :=_cbce .PdfObject .(*_bgg .PdfObjectDictionary );_fcad .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b"));
_fcad .SetIfNotNil ("\u004d\u004e",_eedc .MN );return _cbce ;};

// ColorToRGB only converts color used with uncolored patterns (defined in underlying colorspace).  Does not go into the
// pattern objects and convert those.  If that is desired, needs to be done separately.  See for example
// grayscale conversion example in unidoc-examples repo.
func (_aabd *PdfColorspaceSpecialPattern )ColorToRGB (color PdfColor )(PdfColor ,error ){_dafg ,_feag :=color .(*PdfColorPattern );if !_feag {_dcf .Log .Debug ("\u0043\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0070a\u0074\u0074\u0065\u0072\u006e\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",color );
return nil ,ErrTypeCheck ;};if _dafg .Color ==nil {return color ,nil ;};if _aabd .UnderlyingCS ==nil {return nil ,_ag .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};return _aabd .UnderlyingCS .ColorToRGB (_dafg .Color );
};

// VRI represents a Validation-Related Information dictionary.
// The VRI dictionary contains validation data in the form of
// certificates, OCSP and CRL information, for a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type VRI struct{Cert []*_bgg .PdfObjectStream ;OCSP []*_bgg .PdfObjectStream ;CRL []*_bgg .PdfObjectStream ;TU *_bgg .PdfObjectString ;TS *_bgg .PdfObjectString ;};func (_dfee *PdfReader )newPdfAnnotationHighlightFromDict (_gdgd *_bgg .PdfObjectDictionary )(*PdfAnnotationHighlight ,error ){_deca :=PdfAnnotationHighlight {};
_deb ,_adcg :=_dfee .newPdfAnnotationMarkupFromDict (_gdgd );if _adcg !=nil {return nil ,_adcg ;};_deca .PdfAnnotationMarkup =_deb ;_deca .QuadPoints =_gdgd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_deca ,nil ;};

// SetFlag sets the flag for the field.
func (_abda *PdfField )SetFlag (flag FieldFlag ){_abda .Ff =_bgg .MakeInteger (int64 (flag ))};

// Optimizer is the interface that performs optimization of PDF object structure for output writing.
//
// Optimize receives a slice of input `objects`, performs optimization, including removing, replacing objects and
// output the optimized slice of objects.
type Optimizer interface{Optimize (_afbff []_bgg .PdfObject )([]_bgg .PdfObject ,error );};

// SetOCProperties sets the optional content properties.
func (_gcbffg *PdfWriter )SetOCProperties (ocProperties _bgg .PdfObject )error {_ccedfc :=_gcbffg ._ffbb ;if ocProperties !=nil {_dcf .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u004f\u0043\u0020\u0050\u0072o\u0070\u0065\u0072\u0074\u0069\u0065\u0073\u002e\u002e\u002e");
_ccedfc .Set ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",ocProperties );return _gcbffg .addObjects (ocProperties );};return nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_gabg pdfCIDFontType2 )GetCharMetrics (code _cc .CharCode )(_dad .CharMetrics ,bool ){if _ebeee ,_bfade :=_gabg ._gbbe [code ];_bfade {return _dad .CharMetrics {Wx :_ebeee },true ;};_cbcbc :=rune (code );_fdcef ,_fbbd :=_gabg ._bfcb [_cbcbc ];if !_fbbd {_fdcef =int (_gabg ._bgcc );
};return _dad .CharMetrics {Wx :float64 (_fdcef )},true ;};

// ToPdfObject implements interface PdfModel.
func (_aegg *PdfAnnotationCircle )ToPdfObject ()_bgg .PdfObject {_aegg .PdfAnnotation .ToPdfObject ();_gafb :=_aegg ._gec ;_ffba :=_gafb .PdfObject .(*_bgg .PdfObjectDictionary );_aegg .PdfAnnotationMarkup .appendToPdfDictionary (_ffba );_ffba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0043\u0069\u0072\u0063\u006c\u0065"));
_ffba .SetIfNotNil ("\u0042\u0053",_aegg .BS );_ffba .SetIfNotNil ("\u0049\u0043",_aegg .IC );_ffba .SetIfNotNil ("\u0042\u0045",_aegg .BE );_ffba .SetIfNotNil ("\u0052\u0044",_aegg .RD );return _gafb ;};

// GetDescent returns the Descent of the font `descriptor`.
func (_ceab *PdfFontDescriptor )GetDescent ()(float64 ,error ){return _bgg .GetNumberAsFloat (_ceab .Descent );};

// WriteToFile writes the Appender output to file specified by path.
func (_edgb *PdfAppender )WriteToFile (outputPath string )error {_decc ,_bdgf :=_eg .Create (outputPath );if _bdgf !=nil {return _bdgf ;};defer _decc .Close ();return _edgb .Write (_decc );};

// NewXObjectFormFromStream builds the Form XObject from a stream object.
// TODO: Should this be exposed? Consider different access points.
func NewXObjectFormFromStream (stream *_bgg .PdfObjectStream )(*XObjectForm ,error ){_fggdf :=&XObjectForm {};_fggdf ._eaeegc =stream ;_bgggac :=*(stream .PdfObjectDictionary );_bfge ,_aaggb :=_bgg .NewEncoderFromStream (stream );if _aaggb !=nil {return nil ,_aaggb ;
};_fggdf .Filter =_bfge ;if _gagdb :=_bgggac .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_gagdb !=nil {_decb ,_cbgce :=_gagdb .(*_bgg .PdfObjectName );if !_cbgce {return nil ,_ag .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if *_decb !="\u0046\u006f\u0072\u006d"{_dcf .Log .Debug ("I\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");return nil ,_ag .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0066\u006f\u0072m\u0020\u0073\u0075\u0062ty\u0070\u0065");
};};if _feeed :=_bgggac .Get ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065");_feeed !=nil {_fggdf .FormType =_feeed ;};if _ggaba :=_bgggac .Get ("\u0042\u0042\u006f\u0078");_ggaba !=nil {_fggdf .BBox =_ggaba ;};if _cfbag :=_bgggac .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");
_cfbag !=nil {_fggdf .Matrix =_cfbag ;};if _gbfa :=_bgggac .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_gbfa !=nil {_gbfa =_bgg .TraceToDirectObject (_gbfa );_ebabb ,_egedb :=_gbfa .(*_bgg .PdfObjectDictionary );if !_egedb {_dcf .Log .Debug ("\u0049\u006e\u0076\u0061\u006ci\u0064\u0020\u0058\u004f\u0062j\u0065c\u0074\u0020\u0046\u006f\u0072\u006d\u0020\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u002c\u0020\u0070\u006f\u0069\u006e\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u006e\u006f\u006e\u002d\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_bgg .ErrTypeError ;};_fcge ,_debfb :=NewPdfPageResourcesFromDict (_ebabb );if _debfb !=nil {_dcf .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0020\u0072\u0065\u0073\u006f\u0075rc\u0065\u0073");
return nil ,_debfb ;};_fggdf .Resources =_fcge ;_dcf .Log .Trace ("\u0046\u006f\u0072\u006d r\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u003a\u0020\u0025\u0023\u0076",_fggdf .Resources );};_fggdf .Group =_bgggac .Get ("\u0047\u0072\u006fu\u0070");
_fggdf .Ref =_bgggac .Get ("\u0052\u0065\u0066");_fggdf .MetaData =_bgggac .Get ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061");_fggdf .PieceInfo =_bgggac .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_fggdf .LastModified =_bgggac .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");
_fggdf .StructParent =_bgggac .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");_fggdf .StructParents =_bgggac .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");_fggdf .OPI =_bgggac .Get ("\u004f\u0050\u0049");
_fggdf .OC =_bgggac .Get ("\u004f\u0043");_fggdf .Name =_bgggac .Get ("\u004e\u0061\u006d\u0065");_fggdf .Stream =stream .Stream ;return _fggdf ,nil ;};func _gcfde (_fafce []*_bgg .PdfObjectStream )*_bgg .PdfObjectArray {if len (_fafce )==0{return nil ;
};_bbcaf :=make ([]_bgg .PdfObject ,0,len (_fafce ));for _ ,_fbfgc :=range _fafce {_bbcaf =append (_bbcaf ,_fbfgc );};return _bgg .MakeArray (_bbcaf ...);};

// ValidateSignatures validates digital signatures in the document.
func (_aegcg *PdfReader )ValidateSignatures (handlers []SignatureHandler )([]SignatureValidationResult ,error ){if _aegcg .AcroForm ==nil {return nil ,nil ;};if _aegcg .AcroForm .Fields ==nil {return nil ,nil ;};type sigFieldPair struct{_efcc *PdfSignature ;
_ddbgc *PdfField ;_abace SignatureHandler ;};var _dgcf []*sigFieldPair ;for _ ,_cecae :=range _aegcg .AcroForm .AllFields (){if _cecae .V ==nil {continue ;};if _becce ,_eeggg :=_bgg .GetDict (_cecae .V );_eeggg {if _aebfc ,_acdce :=_bgg .GetNameVal (_becce .Get ("\u0054\u0079\u0070\u0065"));
_acdce &&_aebfc =="\u0053\u0069\u0067"{_ebeab ,_eged :=_bgg .GetIndirect (_cecae .V );if !_eged {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0061\u0069\u006e\u0065\u0072\u0020\u0069s\u0020\u006e\u0069\u006c");
return nil ,ErrTypeCheck ;};_dggda ,_bgeb :=_aegcg .newPdfSignatureFromIndirect (_ebeab );if _bgeb !=nil {return nil ,_bgeb ;};var _ccfd SignatureHandler ;for _ ,_bbcbb :=range handlers {if _bbcbb .IsApplicable (_dggda ){_ccfd =_bbcbb ;break ;};};_dgcf =append (_dgcf ,&sigFieldPair {_efcc :_dggda ,_ddbgc :_cecae ,_abace :_ccfd });
};};};var _dbeac []SignatureValidationResult ;for _ ,_adcgfg :=range _dgcf {_cgeef :=SignatureValidationResult {IsSigned :true ,Fields :[]*PdfField {_adcgfg ._ddbgc }};if _adcgfg ._abace ==nil {_cgeef .Errors =append (_cgeef .Errors ,"\u0068a\u006ed\u006c\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
_dbeac =append (_dbeac ,_cgeef );continue ;};_cfdcg ,_befc :=_adcgfg ._abace .NewDigest (_adcgfg ._efcc );if _befc !=nil {_cgeef .Errors =append (_cgeef .Errors ,"\u0064\u0069\u0067e\u0073\u0074\u0020\u0065\u0072\u0072\u006f\u0072",_befc .Error ());_dbeac =append (_dbeac ,_cgeef );
continue ;};_efcgb :=_adcgfg ._efcc .ByteRange ;if _efcgb ==nil {_cgeef .Errors =append (_cgeef .Errors ,"\u0042\u0079\u0074\u0065\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");_dbeac =append (_dbeac ,_cgeef );continue ;};for _baddc :=0;
_baddc < _efcgb .Len ();_baddc =_baddc +2{_ddgeb ,_ :=_bgg .GetNumberAsInt64 (_efcgb .Get (_baddc ));_ccde ,_ :=_bgg .GetIntVal (_efcgb .Get (_baddc +1));if _ ,_bebfg :=_aegcg ._aeacdd .Seek (_ddgeb ,_gb .SeekStart );_bebfg !=nil {return nil ,_bebfg ;};
_dedag :=make ([]byte ,_ccde );if _ ,_agcff :=_aegcg ._aeacdd .Read (_dedag );_agcff !=nil {return nil ,_agcff ;};_cfdcg .Write (_dedag );};var _ffgc SignatureValidationResult ;if _bdgcb ,_gdcg :=_adcgfg ._abace .(SignatureHandlerDocMDP );_gdcg {_ffgc ,_befc =_bdgcb .ValidateWithOpts (_adcgfg ._efcc ,_cfdcg ,SignatureHandlerDocMDPParams {Parser :_aegcg ._ebdgc });
}else {_ffgc ,_befc =_adcgfg ._abace .Validate (_adcgfg ._efcc ,_cfdcg );};if _befc !=nil {_dcf .Log .Debug ("E\u0052\u0052\u004f\u0052: \u0025v\u0020\u0028\u0025\u0054\u0029 \u002d\u0020\u0073\u006b\u0069\u0070",_befc ,_adcgfg ._abace );_ffgc .Errors =append (_ffgc .Errors ,_befc .Error ());
};_ffgc .Name =_adcgfg ._efcc .Name .Decoded ();_ffgc .Reason =_adcgfg ._efcc .Reason .Decoded ();if _adcgfg ._efcc .M !=nil {_fcffd ,_cgaba :=NewPdfDate (_adcgfg ._efcc .M .String ());if _cgaba !=nil {_dcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cgaba );
_ffgc .Errors =append (_ffgc .Errors ,_cgaba .Error ());continue ;};_ffgc .Date =_fcffd ;};_ffgc .ContactInfo =_adcgfg ._efcc .ContactInfo .Decoded ();_ffgc .Location =_adcgfg ._efcc .Location .Decoded ();_ffgc .Fields =_cgeef .Fields ;_dbeac =append (_dbeac ,_ffgc );
};return _dbeac ,nil ;};

// PdfAnnotationStamp represents Stamp annotations.
// (Section 12.5.6.12).
type PdfAnnotationStamp struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Name _bgg .PdfObject ;};func (_cgf *PdfReader )newPdfActionSubmitFormFromDict (_cbc *_bgg .PdfObjectDictionary )(*PdfActionSubmitForm ,error ){_ecgg ,_fed :=_cbd (_cbc .Get ("\u0046"));
if _fed !=nil {return nil ,_fed ;};return &PdfActionSubmitForm {F :_ecgg ,Fields :_cbc .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_cbc .Get ("\u0046\u006c\u0061g\u0073")},nil ;};func _aegee (_fdgb []byte )bool {if len (_fdgb )< 4{return true ;
};for _bbdec :=range _fdgb [:4]{_ccgd :=rune (_bbdec );if !_ee .Is (_ee .ASCII_Hex_Digit ,_ccgd )&&!_ee .IsSpace (_ccgd ){return true ;};};return false ;};

// GetCatalogStructTreeRoot gets the catalog StructTreeRoot object.
func (_bfedd *PdfReader )GetCatalogStructTreeRoot ()(_bgg .PdfObject ,bool ){if _bfedd ._gaebb ==nil {return nil ,false ;};_afgfff :=_bfedd ._gaebb .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0054\u0072\u0065e\u0052\u006f\u006f\u0074");return _afgfff ,_afgfff !=nil ;
};

// ImageToRGB converts ICCBased colorspace image to RGB and returns the result.
func (_ggec *PdfColorspaceICCBased )ImageToRGB (img Image )(Image ,error ){if _ggec .Alternate ==nil {_dcf .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _ggec .N ==1{_dcf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_egad :=NewPdfColorspaceDeviceGray ();return _egad .ImageToRGB (img );}else if _ggec .N ==3{_dcf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return img ,nil ;}else if _ggec .N ==4{_dcf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_bgecc :=NewPdfColorspaceDeviceCMYK ();return _bgecc .ImageToRGB (img );}else {return img ,_ag .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_dcf .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_ggec );
_cdaf ,_feae :=_ggec .Alternate .ImageToRGB (img );_dcf .Log .Trace ("I\u0043C\u0020\u0049\u006e\u0070\u0075\u0074\u0020\u0069m\u0061\u0067\u0065\u003a %\u002b\u0076",img );_dcf .Log .Trace ("I\u0043\u0043\u0020\u004fut\u0070u\u0074\u0020\u0069\u006d\u0061g\u0065\u003a\u0020\u0025\u002b\u0076",_cdaf );
return _cdaf ,_feae ;};

// CompliancePdfReader is a wrapper over PdfReader that is used for verifying if the input Pdf document matches the
// compliance rules of standards like PDF/A.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type CompliancePdfReader struct{*PdfReader ;_dggeb _bgg .ParserMetadata ;};

// PdfAnnotationRichMedia represents Rich Media annotations.
type PdfAnnotationRichMedia struct{*PdfAnnotation ;RichMediaSettings _bgg .PdfObject ;RichMediaContent _bgg .PdfObject ;};const (_ PdfOutputIntentType =iota ;PdfOutputIntentTypeA1 ;PdfOutputIntentTypeA2 ;PdfOutputIntentTypeA3 ;PdfOutputIntentTypeA4 ;PdfOutputIntentTypeX ;
);

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_agec *PdfColorspaceSpecialIndexed )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};N :=_agec .Base .GetNumComponents ();_adad :=int (vals [0])*N ;
if _adad < 0||(_adad +N -1)>=len (_agec ._cdfe ){_dcf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_adad );return nil ,ErrColorOutOfRange ;};_gfge :=_agec ._cdfe [_adad :_adad +N ];
var _gcbffd []float64 ;for _ ,_bbbe :=range _gfge {_gcbffd =append (_gcbffd ,float64 (_bbbe )/255.0);};_ebbbf ,_aefa :=_agec .Base .ColorFromFloats (_gcbffd );if _aefa !=nil {return nil ,_aefa ;};return _ebbbf ,nil ;};func (_ccef *PdfReader )newPdfAnnotationMarkupFromDict (_bff *_bgg .PdfObjectDictionary )(*PdfAnnotationMarkup ,error ){_dbd :=&PdfAnnotationMarkup {};
if _eac :=_bff .Get ("\u0054");_eac !=nil {_dbd .T =_eac ;};if _fbdd :=_bff .Get ("\u0050\u006f\u0070u\u0070");_fbdd !=nil {_dbg ,_edcb :=_fbdd .(*_bgg .PdfIndirectObject );if !_edcb {if _ ,_egcd :=_fbdd .(*_bgg .PdfObjectNull );!_egcd {return nil ,_ag .New ("p\u006f\u0070\u0075\u0070\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074\u0020t\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072ec\u0074\u0020\u006fb\u006ae\u0063\u0074");
};}else {_afd ,_cggd :=_ccef .newPdfAnnotationFromIndirectObject (_dbg );if _cggd !=nil {return nil ,_cggd ;};if _afd !=nil {_efe ,_geg :=_afd ._afg .(*PdfAnnotationPopup );if !_geg {return nil ,_ag .New ("\u006f\u0062\u006ae\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0072\u0065\u0066\u0065\u0072\u0072\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0020\u0070\u006f\u0070\u0075\u0070\u0020\u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e");
};_dbd .Popup =_efe ;};};};if _cdfa :=_bff .Get ("\u0043\u0041");_cdfa !=nil {_dbd .CA =_cdfa ;};if _fgfe :=_bff .Get ("\u0052\u0043");_fgfe !=nil {_dbd .RC =_fgfe ;};if _ddbf :=_bff .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065");
_ddbf !=nil {_dbd .CreationDate =_ddbf ;};if _gccb :=_bff .Get ("\u0049\u0052\u0054");_gccb !=nil {_dbd .IRT =_gccb ;};if _gdc :=_bff .Get ("\u0053\u0075\u0062\u006a");_gdc !=nil {_dbd .Subj =_gdc ;};if _ffc :=_bff .Get ("\u0052\u0054");_ffc !=nil {_dbd .RT =_ffc ;
};if _cfb :=_bff .Get ("\u0049\u0054");_cfb !=nil {_dbd .IT =_cfb ;};if _bffe :=_bff .Get ("\u0045\u0078\u0044\u0061\u0074\u0061");_bffe !=nil {_dbd .ExData =_bffe ;};return _dbd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dacdg *PdfAnnotationText )ToPdfObject ()_bgg .PdfObject {_dacdg .PdfAnnotation .ToPdfObject ();_bdbd :=_dacdg ._gec ;_ggag :=_bdbd .PdfObject .(*_bgg .PdfObjectDictionary );if _dacdg .PdfAnnotationMarkup !=nil {_dacdg .PdfAnnotationMarkup .appendToPdfDictionary (_ggag );
};_ggag .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0054\u0065\u0078\u0074"));_ggag .SetIfNotNil ("\u004f\u0070\u0065\u006e",_dacdg .Open );_ggag .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dacdg .Name );_ggag .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_dacdg .State );
_ggag .SetIfNotNil ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c",_dacdg .StateModel );return _bdbd ;};

// NewPdfOutputIntentFromPdfObject creates a new PdfOutputIntent from the input core.PdfObject.
func NewPdfOutputIntentFromPdfObject (object _bgg .PdfObject )(*PdfOutputIntent ,error ){_daea :=&PdfOutputIntent {};if _ggba :=_daea .ParsePdfObject (object );_ggba !=nil {return nil ,_ggba ;};return _daea ,nil ;};func _dggf (_cfgf _bgg .PdfObject )(*PdfColorspaceICCBased ,error ){_aebe :=&PdfColorspaceICCBased {};
if _ecbc ,_gfga :=_cfgf .(*_bgg .PdfIndirectObject );_gfga {_aebe ._caad =_ecbc ;};_cfgf =_bgg .TraceToDirectObject (_cfgf );_gcdb ,_gca :=_cfgf .(*_bgg .PdfObjectArray );if !_gca {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _gcdb .Len ()!=2{return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020c\u006f\u006c\u006fr\u0073p\u0061\u0063\u0065");};_cfgf =_bgg .TraceToDirectObject (_gcdb .Get (0));_dbbbe ,_gca :=_cfgf .(*_bgg .PdfObjectName );
if !_gca {return nil ,_e .Errorf ("\u0049\u0043\u0043B\u0061\u0073\u0065\u0064 \u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_dbbbe !="\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"{return nil ,_e .Errorf ("\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0049\u0043\u0043\u0042a\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");
};_cfgf =_gcdb .Get (1);_bffeg ,_gca :=_bgg .GetStream (_cfgf );if !_gca {_dcf .Log .Error ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006e\u006f\u0074\u0020\u0070o\u0069\u006e\u0074\u0069\u006e\u0067\u0020t\u006f\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020%\u0054",_cfgf );
return nil ,_e .Errorf ("\u0049\u0043\u0043Ba\u0073\u0065\u0064\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_eeaa :=_bffeg .PdfObjectDictionary ;_cefg ,_gca :=_eeaa .Get ("\u004e").(*_bgg .PdfObjectInteger );
if !_gca {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u006d\u0069\u0073\u0073\u0069n\u0067\u0020\u004e\u0020\u0066\u0072\u006fm\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0064\u0069c\u0074");};if *_cefg !=1&&*_cefg !=3&&*_cefg !=4{return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061s\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u006e\u006f\u0074\u0020\u0031\u002c\u0033\u002c\u0034\u0029");
};_aebe .N =int (*_cefg );if _cbff :=_eeaa .Get ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e");_cbff !=nil {_ecbg ,_fcfe :=NewPdfColorspaceFromPdfObject (_cbff );if _fcfe !=nil {return nil ,_fcfe ;};_aebe .Alternate =_ecbg ;};if _gcbd :=_eeaa .Get ("\u0052\u0061\u006eg\u0065");
_gcbd !=nil {_gcbd =_bgg .TraceToDirectObject (_gcbd );_bafg ,_fggf :=_gcbd .(*_bgg .PdfObjectArray );if !_fggf {return nil ,_e .Errorf ("I\u0043\u0043\u0042\u0061\u0073\u0065d\u0020\u0052\u0061\u006e\u0067\u0065\u0020\u006e\u006ft\u0020\u0061\u006e \u0061r\u0072\u0061\u0079");
};if _bafg .Len ()!=2*_aebe .N {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u0052\u0061\u006e\u0067e\u0020\u0077\u0072\u006f\u006e\u0067 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0065\u006c\u0065m\u0065\u006e\u0074\u0073");
};_fbgd ,_fabb :=_bafg .GetAsFloat64Slice ();if _fabb !=nil {return nil ,_fabb ;};_aebe .Range =_fbgd ;}else {_aebe .Range =make ([]float64 ,2*_aebe .N );for _bbgg :=0;_bbgg < _aebe .N ;_bbgg ++{_aebe .Range [2*_bbgg ]=0.0;_aebe .Range [2*_bbgg +1]=1.0;
};};if _fbaf :=_eeaa .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_fbaf !=nil {_aggfg ,_bcab :=_fbaf .(*_bgg .PdfObjectStream );if !_bcab {return nil ,_e .Errorf ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064\u0020\u004de\u0074\u0061\u0064\u0061\u0074\u0061\u0020n\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d");
};_aebe .Metadata =_aggfg ;};_bdd ,_aebf :=_bgg .DecodeStream (_bffeg );if _aebf !=nil {return nil ,_aebf ;};_aebe .Data =_bdd ;_aebe ._fdedb =_bffeg ;return _aebe ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gbgbc *PdfShadingType7 )ToPdfObject ()_bgg .PdfObject {_gbgbc .PdfShading .ToPdfObject ();_abeea ,_gafgff :=_gbgbc .getShadingDict ();if _gafgff !=nil {_dcf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gbgbc .BitsPerCoordinate !=nil {_abeea .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gbgbc .BitsPerCoordinate );};if _gbgbc .BitsPerComponent !=nil {_abeea .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gbgbc .BitsPerComponent );
};if _gbgbc .BitsPerFlag !=nil {_abeea .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_gbgbc .BitsPerFlag );};if _gbgbc .Decode !=nil {_abeea .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gbgbc .Decode );};if _gbgbc .Function !=nil {if len (_gbgbc .Function )==1{_abeea .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gbgbc .Function [0].ToPdfObject ());
}else {_ddeebc :=_bgg .MakeArray ();for _ ,_feagc :=range _gbgbc .Function {_ddeebc .Append (_feagc .ToPdfObject ());};_abeea .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ddeebc );};};return _gbgbc ._fcfbb ;};func (_bbfa *PdfReader )newPdfAnnotationCaretFromDict (_deef *_bgg .PdfObjectDictionary )(*PdfAnnotationCaret ,error ){_ddbg :=PdfAnnotationCaret {};
_ebfe ,_gfff :=_bbfa .newPdfAnnotationMarkupFromDict (_deef );if _gfff !=nil {return nil ,_gfff ;};_ddbg .PdfAnnotationMarkup =_ebfe ;_ddbg .RD =_deef .Get ("\u0052\u0044");_ddbg .Sy =_deef .Get ("\u0053\u0079");return &_ddbg ,nil ;};

// NewOutlineItem returns a new outline item instance.
func NewOutlineItem (title string ,dest OutlineDest )*OutlineItem {return &OutlineItem {Title :title ,Dest :dest };};

// GetStandardApplier gets currently used StandardApplier..
func (_bedc *PdfWriter )GetStandardApplier ()StandardApplier {return _bedc ._dabfc };

// PdfVersion returns version of the PDF file.
func (_cbcef *PdfReader )PdfVersion ()_bgg .Version {return _cbcef ._ebdgc .PdfVersion ()};

// GetIndirectObjectByNumber retrieves and returns a specific PdfObject by object number.
func (_decgd *PdfReader )GetIndirectObjectByNumber (number int )(_bgg .PdfObject ,error ){_fagde ,_fcbfc :=_decgd ._ebdgc .LookupByNumber (number );return _fagde ,_fcbfc ;};

// ToPdfObject converts the PdfFont object to its PDF representation.
func (_gbdeg *PdfFont )ToPdfObject ()_bgg .PdfObject {if _gbdeg ._efdec ==nil {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0066\u006f\u006e\u0074 \u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073 \u006e\u0069\u006c");return _bgg .MakeNull ();
};return _gbdeg ._efdec .ToPdfObject ();};func _dadbb (_cbead _bgg .PdfObject )(*fontFile ,error ){_dcf .Log .Trace ("\u006e\u0065\u0077\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0046\u0072\u006f\u006dP\u0064f\u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u006f\u0062\u006a\u003d\u0025\u0073",_cbead );
_daebd :=&fontFile {};_cbead =_bgg .TraceToDirectObject (_cbead );_cgbef ,_bfgcb :=_cbead .(*_bgg .PdfObjectStream );if !_bfgcb {_dcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020F\u006f\u006et\u0046\u0069\u006c\u0065\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d \u0028\u0025\u0054\u0029",_cbead );
return nil ,_bgg .ErrTypeError ;};_abfg :=_cgbef .PdfObjectDictionary ;_cegad ,_gaaf :=_bgg .DecodeStream (_cgbef );if _gaaf !=nil {return nil ,_gaaf ;};_fgcbe ,_bfgcb :=_bgg .GetNameVal (_abfg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_bfgcb {_daebd ._caaab =_fgcbe ;
if _fgcbe =="\u0054\u0079\u0070\u0065\u0031\u0043"{_dcf .Log .Debug ("T\u0079\u0070\u0065\u0031\u0043\u0020\u0066\u006f\u006e\u0074\u0073\u0020\u0061\u0072\u0065\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u006e\u006f\u0074 s\u0075\u0070\u0070o\u0072t\u0065\u0064");
return nil ,ErrType1CFontNotSupported ;};};_cdbae ,_ :=_bgg .GetIntVal (_abfg .Get ("\u004ce\u006e\u0067\u0074\u0068\u0031"));_gefae ,_ :=_bgg .GetIntVal (_abfg .Get ("\u004ce\u006e\u0067\u0074\u0068\u0032"));if _cdbae > len (_cegad ){_cdbae =len (_cegad );
};if _cdbae +_gefae > len (_cegad ){_gefae =len (_cegad )-_cdbae ;};_feade :=_cegad [:_cdbae ];var _ggdg []byte ;if _gefae > 0{_ggdg =_cegad [_cdbae :_cdbae +_gefae ];};if _cdbae > 0&&_gefae > 0{_bdgagg :=_daebd .loadFromSegments (_feade ,_ggdg );if _bdgagg !=nil {return nil ,_bdgagg ;
};};return _daebd ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_aace *PdfColorspaceSpecialIndexed )ColorFromPdfObjects (objects []_bgg .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dcaf ,_fecd :=_bgg .GetNumbersAsFloat (objects );
if _fecd !=nil {return nil ,_fecd ;};return _aace .ColorFromFloats (_dcaf );};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_eecegc *PdfOutlineItem )ToPdfObject ()_bgg .PdfObject {_eddgc :=_eecegc ._gcec ;_gdaba :=_eddgc .PdfObject .(*_bgg .PdfObjectDictionary );_gdaba .Set ("\u0054\u0069\u0074l\u0065",_eecegc .Title );if _eecegc .A !=nil {_gdaba .Set ("\u0041",_eecegc .A );
};if _gddgg :=_gdaba .Get ("\u0053\u0045");_gddgg !=nil {_gdaba .Remove ("\u0053\u0045");};if _eecegc .C !=nil {_gdaba .Set ("\u0043",_eecegc .C );};if _eecegc .Dest !=nil {_gdaba .Set ("\u0044\u0065\u0073\u0074",_eecegc .Dest );};if _eecegc .F !=nil {_gdaba .Set ("\u0046",_eecegc .F );
};if _eecegc .Count !=nil {_gdaba .Set ("\u0043\u006f\u0075n\u0074",_bgg .MakeInteger (*_eecegc .Count ));};if _eecegc .Next !=nil {_gdaba .Set ("\u004e\u0065\u0078\u0074",_eecegc .Next .ToPdfObject ());};if _eecegc .First !=nil {_gdaba .Set ("\u0046\u0069\u0072s\u0074",_eecegc .First .ToPdfObject ());
};if _eecegc .Prev !=nil {_gdaba .Set ("\u0050\u0072\u0065\u0076",_eecegc .Prev .GetContext ().GetContainingPdfObject ());};if _eecegc .Last !=nil {_gdaba .Set ("\u004c\u0061\u0073\u0074",_eecegc .Last .GetContext ().GetContainingPdfObject ());};if _eecegc .Parent !=nil {_gdaba .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_eecegc .Parent .GetContext ().GetContainingPdfObject ());
};return _eddgc ;};

// ToPdfObject returns a stream object.
func (_adgc *XObjectForm )ToPdfObject ()_bgg .PdfObject {_begbde :=_adgc ._eaeegc ;_bgadgc :=_begbde .PdfObjectDictionary ;if _adgc .Filter !=nil {_bgadgc =_adgc .Filter .MakeStreamDict ();_begbde .PdfObjectDictionary =_bgadgc ;};_bgadgc .Set ("\u0054\u0079\u0070\u0065",_bgg .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_bgadgc .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0046\u006f\u0072\u006d"));_bgadgc .SetIfNotNil ("\u0046\u006f\u0072\u006d\u0054\u0079\u0070\u0065",_adgc .FormType );_bgadgc .SetIfNotNil ("\u0042\u0042\u006f\u0078",_adgc .BBox );
_bgadgc .SetIfNotNil ("\u004d\u0061\u0074\u0072\u0069\u0078",_adgc .Matrix );if _adgc .Resources !=nil {_bgadgc .SetIfNotNil ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_adgc .Resources .ToPdfObject ());};_bgadgc .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_adgc .Group );
_bgadgc .SetIfNotNil ("\u0052\u0065\u0066",_adgc .Ref );_bgadgc .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0044\u0061\u0074\u0061",_adgc .MetaData );_bgadgc .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_adgc .PieceInfo );_bgadgc .SetIfNotNil ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_adgc .LastModified );
_bgadgc .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_adgc .StructParent );_bgadgc .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_adgc .StructParents );_bgadgc .SetIfNotNil ("\u004f\u0050\u0049",_adgc .OPI );
_bgadgc .SetIfNotNil ("\u004f\u0043",_adgc .OC );_bgadgc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_adgc .Name );_bgadgc .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bgg .MakeInteger (int64 (len (_adgc .Stream ))));_begbde .Stream =_adgc .Stream ;return _begbde ;
};

// SetContentStream sets the pattern cell's content stream.
func (_ebffd *PdfTilingPattern )SetContentStream (content []byte ,encoder _bgg .StreamEncoder )error {_bdda ,_bffc :=_ebffd ._aebfe .(*_bgg .PdfObjectStream );if !_bffc {_dcf .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ebffd ._aebfe );
return _bgg .ErrTypeError ;};if encoder ==nil {encoder =_bgg .NewRawEncoder ();};_fbebd :=_bdda .PdfObjectDictionary ;_gbegc :=encoder .MakeStreamDict ();_fbebd .Merge (_gbegc );_adbgb ,_fceaa :=encoder .EncodeBytes (content );if _fceaa !=nil {return _fceaa ;
};_fbebd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bgg .MakeInteger (int64 (len (_adbgb ))));_bdda .Stream =_adbgb ;return nil ;};

// GetPageAsIndirectObject returns the page as a dictionary within an PdfIndirectObject.
func (_ddbeb *PdfPage )GetPageAsIndirectObject ()*_bgg .PdfIndirectObject {return _ddbeb ._bcdg };

// PdfBorderStyle represents a border style dictionary (12.5.4 Border Styles p. 394).
type PdfBorderStyle struct{W *float64 ;S *BorderStyle ;D *[]int ;_bcg _bgg .PdfObject ;};func _gegd (_ebcb *fontCommon )*pdfCIDFontType0 {return &pdfCIDFontType0 {fontCommon :*_ebcb }};

// ColorToRGB converts an Indexed color to an RGB color.
func (_befg *PdfColorspaceSpecialIndexed )ColorToRGB (color PdfColor )(PdfColor ,error ){if _befg .Base ==nil {return nil ,_ag .New ("\u0069\u006e\u0064\u0065\u0078\u0065d\u0020\u0062\u0061\u0073\u0065\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _befg .Base .ColorToRGB (color );};func (_feb *PdfReader )newPdfAnnotationUnderlineFromDict (_efd *_bgg .PdfObjectDictionary )(*PdfAnnotationUnderline ,error ){_fecc :=PdfAnnotationUnderline {};_aac ,_afdg :=_feb .newPdfAnnotationMarkupFromDict (_efd );
if _afdg !=nil {return nil ,_afdg ;};_fecc .PdfAnnotationMarkup =_aac ;_fecc .QuadPoints =_efd .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_fecc ,nil ;};

// ToPdfObject returns the PDF representation of the outline tree node.
func (_eafdg *PdfOutlineTreeNode )ToPdfObject ()_bgg .PdfObject {return _eafdg .GetContext ().ToPdfObject ();};

// IsPush returns true if the button field represents a push button, false otherwise.
func (_caebe *PdfFieldButton )IsPush ()bool {return _caebe .GetType ()==ButtonTypePush };

// Read reads an image and loads into a new Image object with an RGB
// colormap and 8 bits per component.
func (_bgcff DefaultImageHandler )Read (reader _gb .Reader )(*Image ,error ){_bgcfc ,_ ,_acacc :=_dc .Decode (reader );if _acacc !=nil {_dcf .Log .Debug ("\u0045\u0072\u0072or\u0020\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0073",_acacc );
return nil ,_acacc ;};return _bgcff .NewImageFromGoImage (_bgcfc );};

// NewPdfPageResources returns a new PdfPageResources object.
func NewPdfPageResources ()*PdfPageResources {_fbafb :=&PdfPageResources {};_fbafb ._ddgdd =_bgg .MakeDict ();return _fbafb ;};func (_dagdd *LTV )enable (_gaacd ,_ggggd []*_dd .Certificate ,_bdbgc string )error {_dcfe ,_cbbe ,_eeabc :=_dagdd .buildCertChain (_gaacd ,_ggggd );
if _eeabc !=nil {return _eeabc ;};_fedfb ,_eeabc :=_dagdd .getCerts (_dcfe );if _eeabc !=nil {return _eeabc ;};_cdfgd ,_eeabc :=_dagdd .getOCSPs (_dcfe ,_cbbe );if _eeabc !=nil {return _eeabc ;};_dfba ,_eeabc :=_dagdd .getCRLs (_dcfe );if _eeabc !=nil {return _eeabc ;
};_fbddab :=_dagdd ._ebce ;_fdaae ,_eeabc :=_fbddab .addCerts (_fedfb );if _eeabc !=nil {return _eeabc ;};_baaa ,_eeabc :=_fbddab .addOCSPs (_cdfgd );if _eeabc !=nil {return _eeabc ;};_eedg ,_eeabc :=_fbddab .addCRLs (_dfba );if _eeabc !=nil {return _eeabc ;
};if _bdbgc !=""{_fbddab .VRI [_bdbgc ]=&VRI {Cert :_fdaae ,OCSP :_baaa ,CRL :_eedg };};_dagdd ._gafcc .SetDSS (_fbddab );return nil ;};

// NewPdfActionGoTo3DView returns a new "goTo3DView" action.
func NewPdfActionGoTo3DView ()*PdfActionGoTo3DView {_adcd :=NewPdfAction ();_aaf :=&PdfActionGoTo3DView {};_aaf .PdfAction =_adcd ;_adcd .SetContext (_aaf );return _aaf ;};

// NewStandard14FontWithEncoding returns the standard 14 font named `basefont` as a *PdfFont and
// a TextEncoder that encodes all the runes in `alphabet`, or an error if this is not possible.
// An error can occur if `basefont` is not one the standard 14 font names.
func NewStandard14FontWithEncoding (basefont StdFontName ,alphabet map[rune ]int )(*PdfFont ,_cc .SimpleEncoder ,error ){_beed ,_bbfc :=_ddce (basefont );if _bbfc !=nil {return nil ,nil ,_bbfc ;};_cbace ,_edbf :=_beed .Encoder ().(_cc .SimpleEncoder );
if !_edbf {return nil ,nil ,_e .Errorf ("\u006f\u006e\u006c\u0079\u0020s\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006eg\u0020\u0069\u0073\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u002c\u0020\u0067\u006f\u0074\u0020\u0025\u0054",_beed .Encoder ());
};_daeed :=make (map[rune ]_cc .GlyphName );for _aabdc :=range alphabet {if _ ,_bdgcc :=_cbace .RuneToCharcode (_aabdc );!_bdgcc {_ ,_bgdd :=_beed ._ebfec .Read (_aabdc );if !_bgdd {_dcf .Log .Trace ("r\u0075\u006e\u0065\u0020\u0025\u0023x\u003d\u0025\u0071\u0020\u006e\u006f\u0074\u0020\u0069n\u0020\u0074\u0068e\u0020f\u006f\u006e\u0074",_aabdc ,_aabdc );
continue ;};_cdbf ,_bgdd :=_cc .RuneToGlyph (_aabdc );if !_bgdd {_dcf .Log .Debug ("\u006eo\u0020\u0067\u006c\u0079\u0070\u0068\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u0020\u0025\u0023\u0078\u003d\u0025\u0071",_aabdc ,_aabdc );continue ;};if len (_daeed )>=255{return nil ,nil ,_ag .New ("\u0074\u006f\u006f\u0020\u006d\u0061\u006e\u0079\u0020\u0063\u0068\u0061\u0072a\u0063\u0074\u0065\u0072\u0073\u0020f\u006f\u0072\u0020\u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0065\u006e\u0063o\u0064\u0069\u006e\u0067");
};_daeed [_aabdc ]=_cdbf ;};};var (_fggc []_cc .CharCode ;_gdcb []_cc .CharCode ;);for _dbaff :=_cc .CharCode (1);_dbaff <=0xff;_dbaff ++{_dgfea ,_cdbd :=_cbace .CharcodeToRune (_dbaff );if !_cdbd {_fggc =append (_fggc ,_dbaff );continue ;};if _ ,_cdbd =alphabet [_dgfea ];
!_cdbd {_gdcb =append (_gdcb ,_dbaff );};};_bgdfd :=append (_fggc ,_gdcb ...);if len (_bgdfd )< len (_daeed ){return nil ,nil ,_e .Errorf ("n\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u006ec\u006f\u0064\u0065\u0020\u0025\u0064\u0020ru\u006e\u0065\u0073\u002c \u0062\u0075\u0074\u0020\u0068\u0061\u0076\u0065\u0020on\u006c\u0079 \u0025\u0064\u0020\u0073\u006c\u006f\u0074\u0073",len (_daeed ),len (_bgdfd ));
};_aeda :=make ([]rune ,0,len (_daeed ));for _cfga :=range _daeed {_aeda =append (_aeda ,_cfga );};_gg .Slice (_aeda ,func (_adged ,_ggcb int )bool {return _aeda [_adged ]< _aeda [_ggcb ]});_defg :=make (map[_cc .CharCode ]_cc .GlyphName ,len (_aeda ));
for _ ,_dfda :=range _aeda {_cgggf :=_bgdfd [0];_bgdfd =_bgdfd [1:];_defg [_cgggf ]=_daeed [_dfda ];};_cbace =_cc .ApplyDifferences (_cbace ,_defg );_beed .SetEncoder (_cbace );return &PdfFont {_efdec :&_beed },_cbace ,nil ;};

// HasExtGState checks if ExtGState name is available.
func (_dgccc *PdfPage )HasExtGState (name _bgg .PdfObjectName )bool {if _dgccc .Resources ==nil {return false ;};if _dgccc .Resources .ExtGState ==nil {return false ;};_fbgga ,_egef :=_bgg .TraceToDirectObject (_dgccc .Resources .ExtGState ).(*_bgg .PdfObjectDictionary );
if !_egef {_dcf .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0045\u0078t\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0064i\u0063t\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a\u0020\u0025\u0076",_bgg .TraceToDirectObject (_dgccc .Resources .ExtGState ));
return false ;};_dgddd :=_fbgga .Get (name );_dfggf :=_dgddd !=nil ;return _dfggf ;};func _gdbgd ()_g .Time {_abfga .Lock ();defer _abfga .Unlock ();return _gcdbd };

// GetCharMetrics returns the char metrics for character code `code`.
func (_dagd pdfCIDFontType0 )GetCharMetrics (code _cc .CharCode )(_dad .CharMetrics ,bool ){_gfef :=_dagd ._ceceg ;if _ccgfa ,_agca :=_dagd ._debd [code ];_agca {_gfef =_ccgfa ;};return _dad .CharMetrics {Wx :_gfef },true ;};func (_afgb *PdfReader )newPdfAnnotationWatermarkFromDict (_adfe *_bgg .PdfObjectDictionary )(*PdfAnnotationWatermark ,error ){_aeg :=PdfAnnotationWatermark {};
_aeg .FixedPrint =_adfe .Get ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074");return &_aeg ,nil ;};

// IsSimple returns true if `font` is a simple font.
func (_gdea *PdfFont )IsSimple ()bool {_ ,_baace :=_gdea ._efdec .(*pdfFontSimple );return _baace };

// ToPdfObject returns a PDF object representation of the outline destination.
func (_fagba OutlineDest )ToPdfObject ()_bgg .PdfObject {if (_fagba .PageObj ==nil &&_fagba .Page < 0)||_fagba .Mode ==""{return _bgg .MakeNull ();};_gdgb :=_bgg .MakeArray ();if _fagba .PageObj !=nil {_gdgb .Append (_fagba .PageObj );}else {_gdgb .Append (_bgg .MakeInteger (_fagba .Page ));
};_gdgb .Append (_bgg .MakeName (_fagba .Mode ));switch _fagba .Mode {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":_gdgb .Append (_bgg .MakeFloat (_fagba .Y ));case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":_gdgb .Append (_bgg .MakeFloat (_fagba .X ));
case "\u0058\u0059\u005a":_gdgb .Append (_bgg .MakeFloat (_fagba .X ));_gdgb .Append (_bgg .MakeFloat (_fagba .Y ));_gdgb .Append (_bgg .MakeFloat (_fagba .Zoom ));default:_gdgb .Set (1,_bgg .MakeName ("\u0046\u0069\u0074"));};return _gdgb ;};

// BorderStyle defines border type, typically used for annotations.
type BorderStyle int ;

// NewPdfColorspaceLab returns a new Lab colorspace object.
func NewPdfColorspaceLab ()*PdfColorspaceLab {_eaee :=&PdfColorspaceLab {};_eaee .BlackPoint =[]float64 {0.0,0.0,0.0};_eaee .Range =[]float64 {-100,100,-100,100};return _eaee ;};

// PdfSignatureReference represents a PDF signature reference dictionary and is used for signing via form signature fields.
// (Section 12.8.1, Table 253 - Entries in a signature reference dictionary p. 469 in PDF32000_2008).
type PdfSignatureReference struct{_fcggb *_bgg .PdfObjectDictionary ;Type *_bgg .PdfObjectName ;TransformMethod *_bgg .PdfObjectName ;TransformParams _bgg .PdfObject ;Data _bgg .PdfObject ;DigestMethod *_bgg .PdfObjectName ;};

// Set applies flag fl to the flag's bitmask and returns the combined flag.
func (_cgff FieldFlag )Set (fl FieldFlag )FieldFlag {return FieldFlag (_cgff .Mask ()|fl .Mask ())};func (_aeab fontCommon )coreString ()string {_bebbc :="";if _aeab ._abdg !=nil {_bebbc =_aeab ._abdg .String ();};return _e .Sprintf ("\u0025#\u0071\u0020%\u0023\u0071\u0020%\u0071\u0020\u006f\u0062\u006a\u003d\u0025d\u0020\u0054\u006f\u0055\u006e\u0069c\u006f\u0064\u0065\u003d\u0025\u0074\u0020\u0066\u006c\u0061\u0067s\u003d\u0030\u0078\u0025\u0030\u0078\u0020\u0025\u0073",_aeab ._dadgd ,_aeab ._dbbc ,_aeab ._afge ,_aeab ._dggfe ,_aeab ._fdded !=nil ,_aeab .fontFlags (),_bebbc );
};

// SetFilter sets compression filter. Decodes with current filter sets and
// encodes the data with the new filter.
func (_dcaef *XObjectImage )SetFilter (encoder _bgg .StreamEncoder )error {_afcdd :=_dcaef .Stream ;_dfbda ,_efabf :=_dcaef .Filter .DecodeBytes (_afcdd );if _efabf !=nil {return _efabf ;};_dcaef .Filter =encoder ;encoder .UpdateParams (_dcaef .getParamsDict ());
_afcdd ,_efabf =encoder .EncodeBytes (_dfbda );if _efabf !=nil {return _efabf ;};_dcaef .Stream =_afcdd ;return nil ;};

// UpdateXObjectImageFromImage creates a new XObject Image from an
// Image object `img` and default masks from xobjIn.
// The default masks are overridden if img.hasAlpha
// If `encoder` is nil, uses raw encoding (none).
func UpdateXObjectImageFromImage (xobjIn *XObjectImage ,img *Image ,cs PdfColorspace ,encoder _bgg .StreamEncoder )(*XObjectImage ,error ){if encoder ==nil {encoder =_bgg .NewRawEncoder ();};encoder .UpdateParams (img .GetParamsDict ());_agbab ,_bbbcd :=encoder .EncodeBytes (img .Data );
if _bbbcd !=nil {_dcf .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_bbbcd );return nil ,_bbbcd ;};_cbadfa :=NewXObjectImage ();_fbecf :=img .Width ;_effdd :=img .Height ;
_cbadfa .Width =&_fbecf ;_cbadfa .Height =&_effdd ;_gegedb :=img .BitsPerComponent ;_cbadfa .BitsPerComponent =&_gegedb ;_cbadfa .Filter =encoder ;_cbadfa .Stream =_agbab ;if cs ==nil {if img .ColorComponents ==1{_cbadfa .ColorSpace =NewPdfColorspaceDeviceGray ();
}else if img .ColorComponents ==3{_cbadfa .ColorSpace =NewPdfColorspaceDeviceRGB ();}else if img .ColorComponents ==4{_cbadfa .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return nil ,_ag .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");
};}else {_cbadfa .ColorSpace =cs ;};if len (img ._bfcec )!=0{_adfed :=NewXObjectImage ();_adfed .Filter =encoder ;_abcee ,_dfbe :=encoder .EncodeBytes (img ._bfcec );if _dfbe !=nil {_dcf .Log .Debug ("\u0045\u0072\u0072or\u0020\u0077\u0069\u0074\u0068\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003a\u0020\u0025\u0076",_dfbe );
return nil ,_dfbe ;};_adfed .Stream =_abcee ;_adfed .BitsPerComponent =_cbadfa .BitsPerComponent ;_adfed .Width =&img .Width ;_adfed .Height =&img .Height ;_adfed .ColorSpace =NewPdfColorspaceDeviceGray ();_cbadfa .SMask =_adfed .ToPdfObject ();}else {_cbadfa .SMask =xobjIn .SMask ;
_cbadfa .ImageMask =xobjIn .ImageMask ;if _cbadfa .ColorSpace .GetNumComponents ()==1{_dgebe (_cbadfa );};};return _cbadfa ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_aade pdfFontType3 )GetCharMetrics (code _cc .CharCode )(_dad .CharMetrics ,bool ){if _gaac ,_ebdg :=_aade ._ggbd [code ];_ebdg {return _dad .CharMetrics {Wx :_gaac },true ;};if _dad .IsStdFont (_dad .StdFontName (_aade ._dbbc )){return _dad .CharMetrics {Wx :250},true ;
};return _dad .CharMetrics {},false ;};func _debb (_gbad _bgg .PdfObject )(*PdfColorspaceDeviceNAttributes ,error ){_geaa :=&PdfColorspaceDeviceNAttributes {};var _gfgc *_bgg .PdfObjectDictionary ;switch _fddea :=_gbad .(type ){case *_bgg .PdfIndirectObject :_geaa ._faad =_fddea ;
var _cefgf bool ;_gfgc ,_cefgf =_fddea .PdfObject .(*_bgg .PdfObjectDictionary );if !_cefgf {_dcf .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ag .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};case *_bgg .PdfObjectDictionary :_gfgc =_fddea ;case *_bgg .PdfObjectReference :_fbdda :=_fddea .Resolve ();return _debb (_fbdda );default:_dcf .Log .Error ("\u0044\u0065\u0076\u0069c\u0065\u004e\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065 \u0074\u0079\u0070\u0065\u0020\u0065\u0072r\u006f\u0072");
return nil ,_ag .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fedb :=_gfgc .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");_fedb !=nil {_gbde ,_efbb :=_bgg .TraceToDirectObject (_fedb ).(*_bgg .PdfObjectName );if !_efbb {_dcf .Log .Error ("\u0044\u0065vi\u0063\u0065\u004e \u0061\u0074\u0074\u0072ibu\u0074e \u0053\u0075\u0062\u0074\u0079\u0070\u0065 t\u0079\u0070\u0065\u0020\u0065\u0072\u0072o\u0072");
return nil ,_ag .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_geaa .Subtype =_gbde ;};if _gbac :=_gfgc .Get ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s");_gbac !=nil {_geaa .Colorants =_gbac ;};if _edddg :=_gfgc .Get ("\u0050r\u006f\u0063\u0065\u0073\u0073");
_edddg !=nil {_geaa .Process =_edddg ;};if _acgf :=_gfgc .Get ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073");_acgf !=nil {_geaa .MixingHints =_acgf ;};return _geaa ,nil ;};

// NewPdfActionGoTo returns a new "go to" action.
func NewPdfActionGoTo ()*PdfActionGoTo {_cb :=NewPdfAction ();_ebb :=&PdfActionGoTo {};_ebb .PdfAction =_cb ;_cb .SetContext (_ebb );return _ebb ;};

// Add appends a top level outline item to the outline.
func (_dgaec *Outline )Add (item *OutlineItem ){_dgaec .Entries =append (_dgaec .Entries ,item )};

// NewOutlineDest returns a new outline destination which can be used
// with outline items.
func NewOutlineDest (page int64 ,x ,y float64 )OutlineDest {return OutlineDest {Page :page ,Mode :"\u0058\u0059\u005a",X :x ,Y :y };};

// PdfAppender appends new PDF content to an existing PDF document via incremental updates.
type PdfAppender struct{_ddbge _gb .ReadSeeker ;_ega *_bgg .PdfParser ;_bded *PdfReader ;Reader *PdfReader ;_daab []*PdfPage ;_fgbb *PdfAcroForm ;_ebdc *DSS ;_ddcg *Permissions ;_ccee _bgg .XrefTable ;_bcgb int64 ;_adab int ;_dfgd []_bgg .PdfObject ;_eccg map[_bgg .PdfObject ]struct{};
_fbdg map[_bgg .PdfObject ]int64 ;_faf map[_bgg .PdfObject ]struct{};_efaa map[_bgg .PdfObject ]struct{};_dge int64 ;_acg bool ;_bdgg string ;_gacd *EncryptOptions ;_gdfg *PdfInfo ;};func (_cbbfg *PdfReader )newPdfSignatureFromIndirect (_dbcde *_bgg .PdfIndirectObject )(*PdfSignature ,error ){_fdgd ,_dagc :=_dbcde .PdfObject .(*_bgg .PdfObjectDictionary );
if !_dagc {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,ErrTypeCheck ;};if _bfcbc ,_baadbf :=_cbbfg ._gabea .GetModelFromPrimitive (_dbcde ).(*PdfSignature );_baadbf {return _bfcbc ,nil ;};_ggacb :=&PdfSignature {};_ggacb ._ddfdc =_dbcde ;_ggacb .Type ,_ =_bgg .GetName (_fdgd .Get ("\u0054\u0079\u0070\u0065"));
_ggacb .Filter ,_dagc =_bgg .GetName (_fdgd .Get ("\u0046\u0069\u006c\u0074\u0065\u0072"));if !_dagc {_dcf .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0053i\u0067\u006e\u0061\u0074\u0075r\u0065\u0020\u0046\u0069\u006c\u0074\u0065\u0072\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_ggacb .SubFilter ,_ =_bgg .GetName (_fdgd .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r"));_ggacb .Contents ,_dagc =_bgg .GetString (_fdgd .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073"));if !_dagc {_dcf .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006et\u0065\u006e\u0074\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};if _adafe ,_ffccd :=_bgg .GetArray (_fdgd .Get ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e"));_ffccd {_ggacb .Reference =_bgg .MakeArray ();for _ ,_gdeff :=range _adafe .Elements (){_fefg ,_bggeg :=_bgg .GetDict (_gdeff );
if !_bggeg {_dcf .Log .Error ("\u0045\u0052R\u004f\u0052\u003a\u0020R\u0065\u0066e\u0072\u0065\u006e\u0063\u0065\u0020\u0063\u006fn\u0074\u0065\u006e\u0074\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0061\u0074\u0065\u0064");return nil ,ErrInvalidAttribute ;
};_bbff ,_ccabc :=_cbbfg .newPdfSignatureReferenceFromDict (_fefg );if _ccabc !=nil {return nil ,_ccabc ;};_ggacb .Reference .Append (_bbff .ToPdfObject ());};};_ggacb .Cert =_fdgd .Get ("\u0043\u0065\u0072\u0074");_ggacb .ByteRange ,_ =_bgg .GetArray (_fdgd .Get ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e"));
_ggacb .Changes ,_ =_bgg .GetArray (_fdgd .Get ("\u0043h\u0061\u006e\u0067\u0065\u0073"));_ggacb .Name ,_ =_bgg .GetString (_fdgd .Get ("\u004e\u0061\u006d\u0065"));_ggacb .M ,_ =_bgg .GetString (_fdgd .Get ("\u004d"));_ggacb .Location ,_ =_bgg .GetString (_fdgd .Get ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e"));
_ggacb .Reason ,_ =_bgg .GetString (_fdgd .Get ("\u0052\u0065\u0061\u0073\u006f\u006e"));_ggacb .ContactInfo ,_ =_bgg .GetString (_fdgd .Get ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f"));_ggacb .R ,_ =_bgg .GetInt (_fdgd .Get ("\u0052"));
_ggacb .V ,_ =_bgg .GetInt (_fdgd .Get ("\u0056"));_ggacb .PropBuild ,_ =_bgg .GetDict (_fdgd .Get ("\u0050\u0072\u006f\u0070\u005f\u0042\u0075\u0069\u006c\u0064"));_ggacb .PropAuthTime ,_ =_bgg .GetInt (_fdgd .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0069\u006d\u0065"));
_ggacb .PropAuthType ,_ =_bgg .GetName (_fdgd .Get ("\u0050\u0072\u006f\u0070\u005f\u0041\u0075\u0074\u0068\u0054\u0079\u0070\u0065"));_cbbfg ._gabea .Register (_dbcde ,_ggacb );return _ggacb ,nil ;};

// PdfFunctionType4 is a Postscript calculator functions.
type PdfFunctionType4 struct{Domain []float64 ;Range []float64 ;Program *_dgc .PSProgram ;_gffdf *_dgc .PSExecutor ;_bgca []byte ;_dcegf *_bgg .PdfObjectStream ;};

// PdfAnnotationScreen represents Screen annotations.
// (Section 12.5.6.18).
type PdfAnnotationScreen struct{*PdfAnnotation ;T _bgg .PdfObject ;MK _bgg .PdfObject ;A _bgg .PdfObject ;AA _bgg .PdfObject ;};

// ToPdfObject returns the PDF representation of the DSS dictionary.
func (_febd *DSS )ToPdfObject ()_bgg .PdfObject {_bdae :=_febd ._cegfd .PdfObject .(*_bgg .PdfObjectDictionary );_bdae .Clear ();_cdfc :=_bgg .MakeDict ();for _fccge ,_gacb :=range _febd .VRI {_cdfc .Set (*_bgg .MakeName (_fccge ),_gacb .ToPdfObject ());
};_bdae .SetIfNotNil ("\u0043\u0065\u0072t\u0073",_gcfde (_febd .Certs ));_bdae .SetIfNotNil ("\u004f\u0043\u0053P\u0073",_gcfde (_febd .OCSPs ));_bdae .SetIfNotNil ("\u0043\u0052\u004c\u0073",_gcfde (_febd .CRLs ));_bdae .Set ("\u0056\u0052\u0049",_cdfc );
return _febd ._cegfd ;};

// GetPdfName returns the PDF name used to indicate the border style.
// (Table 166 p. 395).
func (_fgdc *BorderStyle )GetPdfName ()string {switch *_fgdc {case BorderStyleSolid :return "\u0053";case BorderStyleDashed :return "\u0044";case BorderStyleBeveled :return "\u0042";case BorderStyleInset :return "\u0049";case BorderStyleUnderline :return "\u0055";
};return "";};

// GetContainingPdfObject returns the container of the outline (indirect object).
func (_affeb *PdfOutline )GetContainingPdfObject ()_bgg .PdfObject {return _affeb ._aeag };

// ToPdfObject implements interface PdfModel.
func (_dacdgc *PdfAnnotationMovie )ToPdfObject ()_bgg .PdfObject {_dacdgc .PdfAnnotation .ToPdfObject ();_cgc :=_dacdgc ._gec ;_fgdf :=_cgc .PdfObject .(*_bgg .PdfObjectDictionary );_fgdf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u004d\u006f\u0076i\u0065"));
_fgdf .SetIfNotNil ("\u0054",_dacdgc .T );_fgdf .SetIfNotNil ("\u004d\u006f\u0076i\u0065",_dacdgc .Movie );_fgdf .SetIfNotNil ("\u0041",_dacdgc .A );return _cgc ;};

// String implements interface PdfObject.
func (_ffdc *PdfAction )String ()string {_aae ,_ed :=_ffdc .ToPdfObject ().(*_bgg .PdfIndirectObject );if _ed {return _e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_ffdc ._adc ,_aae .PdfObject .String ());};return "";};func (_gggafd *PdfReader )buildOutlineTree (_gbcb _bgg .PdfObject ,_fbcgf *PdfOutlineTreeNode ,_gaaa *PdfOutlineTreeNode ,_dgdee map[_bgg .PdfObject ]struct{})(*PdfOutlineTreeNode ,*PdfOutlineTreeNode ,error ){if _dgdee ==nil {_dgdee =map[_bgg .PdfObject ]struct{}{};
};_dgdee [_gbcb ]=struct{}{};_bbfgc ,_degdf :=_gbcb .(*_bgg .PdfIndirectObject );if !_degdf {return nil ,nil ,_e .Errorf ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0063\u006f\u006et\u0061\u0069\u006e\u0065r\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_gbcb );
};_dgfag ,_eedcb :=_bbfgc .PdfObject .(*_bgg .PdfObjectDictionary );if !_eedcb {return nil ,nil ,_ag .New ("\u006e\u006f\u0074 a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_dcf .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0074\u0072\u0065\u0065\u003a\u0020d\u0069\u0063\u0074\u003a\u0020\u0025\u0076\u0020\u0028\u0025\u0076\u0029\u0020p\u003a\u0020\u0025\u0070",_dgfag ,_bbfgc ,_bbfgc );
if _eccbc :=_dgfag .Get ("\u0054\u0069\u0074l\u0065");_eccbc !=nil {_cbfcg ,_egcfd :=_gggafd .newPdfOutlineItemFromIndirectObject (_bbfgc );if _egcfd !=nil {return nil ,nil ,_egcfd ;};_cbfcg .Parent =_fbcgf ;_cbfcg .Prev =_gaaa ;_baafdc :=_bgg .ResolveReference (_dgfag .Get ("\u0046\u0069\u0072s\u0074"));
if _ ,_fdeaa :=_dgdee [_baafdc ];_baafdc !=nil &&_baafdc !=_bbfgc &&!_fdeaa {if !_bgg .IsNullObject (_baafdc ){_ceaca ,_eeba ,_ecebd :=_gggafd .buildOutlineTree (_baafdc ,&_cbfcg .PdfOutlineTreeNode ,nil ,_dgdee );if _ecebd !=nil {_dcf .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0069\u0074\u0065\u006d\u0020\u0074\u0072\u0065\u0065\u003a \u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020n\u006f\u0064\u0065\u0020\u0063\u0068\u0069\u006c\u0064\u0072\u0065n\u002e",_ecebd );
}else {_cbfcg .First =_ceaca ;_cbfcg .Last =_eeba ;};};};_acgdd :=_bgg .ResolveReference (_dgfag .Get ("\u004e\u0065\u0078\u0074"));if _ ,_bbefd :=_dgdee [_acgdd ];_acgdd !=nil &&_acgdd !=_bbfgc &&!_bbefd {if !_bgg .IsNullObject (_acgdd ){_cfegf ,_gaedcf ,_gcgbe :=_gggafd .buildOutlineTree (_acgdd ,_fbcgf ,&_cbfcg .PdfOutlineTreeNode ,_dgdee );
if _gcgbe !=nil {_dcf .Log .Debug ("D\u0045\u0042U\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006fu\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065\u0020\u0066\u006f\u0072\u0020\u004ee\u0078\u0074\u0020\u006e\u006f\u0064\u0065\u003a\u0020\u0025\u0076\u002e\u0020S\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006e\u006f\u0064e\u002e",_gcgbe );
}else {_cbfcg .Next =_cfegf ;return &_cbfcg .PdfOutlineTreeNode ,_gaedcf ,nil ;};};};return &_cbfcg .PdfOutlineTreeNode ,&_cbfcg .PdfOutlineTreeNode ,nil ;};_ggaee ,_cfdg :=_gebb (_bbfgc );if _cfdg !=nil {return nil ,nil ,_cfdg ;};_ggaee .Parent =_fbcgf ;
if _cafd :=_dgfag .Get ("\u0046\u0069\u0072s\u0074");_cafd !=nil {_cafd =_bgg .ResolveReference (_cafd );if _ ,_abecg :=_dgdee [_cafd ];_cafd !=nil &&_cafd !=_bbfgc &&!_abecg {_acaab :=_bgg .TraceToDirectObject (_cafd );if _ ,_dfdbb :=_acaab .(*_bgg .PdfObjectNull );
!_dfdbb &&_acaab !=nil {_aebg ,_fedcc ,_fgeba :=_gggafd .buildOutlineTree (_cafd ,&_ggaee .PdfOutlineTreeNode ,nil ,_dgdee );if _fgeba !=nil {_dcf .Log .Debug ("\u0044\u0045\u0042\u0055\u0047\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020b\u0075\u0069\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0074\u0072\u0065\u0065\u003a\u0020\u0025\u0076\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006e\u006f\u0064\u0065 \u0063\u0068i\u006c\u0064r\u0065n\u002e",_fgeba );
}else {_ggaee .First =_aebg ;_ggaee .Last =_fedcc ;};};};};return &_ggaee .PdfOutlineTreeNode ,&_ggaee .PdfOutlineTreeNode ,nil ;};

// NewPdfReaderWithOpts creates a new PdfReader for an input io.ReadSeeker interface
// with a ReaderOpts.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderWithOpts (rs _gb .ReadSeeker ,opts *ReaderOpts )(*PdfReader ,error ){const _egdbf ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0057\u0069\u0074\u0068O\u0070\u0074\u0073";return _cdffe (rs ,opts ,true ,_egdbf );
};

// IsCheckbox returns true if the button field represents a checkbox, false otherwise.
func (_dbecd *PdfFieldButton )IsCheckbox ()bool {return _dbecd .GetType ()==ButtonTypeCheckbox };func _aefgg (_eggdd _bgg .PdfObject ,_cdgef *PdfReader )(*OutlineDest ,error ){_faefb ,_dafb :=_bgg .GetArray (_eggdd );if !_dafb {return nil ,_ag .New ("\u006f\u0075\u0074\u006c\u0069\u006e\u0065 \u0064\u0065\u0073t\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};_becb :=_faefb .Len ();if _becb < 2{return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u006fu\u0074\u006c\u0069n\u0065\u0020\u0064\u0065\u0073\u0074\u0069\u006e\u0061ti\u006f\u006e\u0020a\u0072\u0072a\u0079\u0020\u006c\u0065\u006e\u0067t\u0068\u003a \u0025\u0064",_becb );
};_cdcd :=&OutlineDest {Mode :"\u0046\u0069\u0074"};_dddb :=_faefb .Get (0);if _dbabc ,_abfe :=_bgg .GetIndirect (_dddb );_abfe {if _ ,_aegca ,_adgag :=_cdgef .PageFromIndirectObject (_dbabc );_adgag ==nil {_cdcd .Page =int64 (_aegca -1);}else {_dcf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020g\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0069\u006e\u0064\u0065\u0078\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u002b\u0076",_dbabc );
};_cdcd .PageObj =_dbabc ;}else if _fdgff ,_dcdgc :=_bgg .GetIntVal (_dddb );_dcdgc {if _fdgff >=0&&_fdgff < len (_cdgef .PageList ){_cdcd .PageObj =_cdgef .PageList [_fdgff ].GetPageAsIndirectObject ();}else {_dcf .Log .Debug ("\u0057\u0041R\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0067\u0065\u0074\u0020\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0070\u0061\u0067\u0065\u0020\u0025\u0064",_fdgff );
};_cdcd .Page =int64 (_fdgff );}else {return nil ,_e .Errorf ("\u0069\u006eva\u006c\u0069\u0064 \u006f\u0075\u0074\u006cine\u0020de\u0073\u0074\u0069\u006e\u0061\u0074\u0069on\u0020\u0070\u0061\u0067\u0065\u003a\u0020%\u0054",_dddb );};_bgeee ,_dafb :=_bgg .GetNameVal (_faefb .Get (1));
if !_dafb {_dcf .Log .Debug ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065s\u0074\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006d\u0061\u0067\u006e\u0069\u0066\u0069\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_faefb .Get (1));
return _cdcd ,nil ;};switch _bgeee {case "\u0046\u0069\u0074","\u0046\u0069\u0074\u0042":case "\u0046\u0069\u0074\u0048","\u0046\u0069\u0074B\u0048":if _becb > 2{_cdcd .Y ,_ =_bgg .GetNumberAsFloat (_bgg .TraceToDirectObject (_faefb .Get (2)));};case "\u0046\u0069\u0074\u0056","\u0046\u0069\u0074B\u0056":if _becb > 2{_cdcd .X ,_ =_bgg .GetNumberAsFloat (_bgg .TraceToDirectObject (_faefb .Get (2)));
};case "\u0058\u0059\u005a":if _becb > 4{_cdcd .X ,_ =_bgg .GetNumberAsFloat (_bgg .TraceToDirectObject (_faefb .Get (2)));_cdcd .Y ,_ =_bgg .GetNumberAsFloat (_bgg .TraceToDirectObject (_faefb .Get (3)));_cdcd .Zoom ,_ =_bgg .GetNumberAsFloat (_bgg .TraceToDirectObject (_faefb .Get (4)));
};default:_bgeee ="\u0046\u0069\u0074";};_cdcd .Mode =_bgeee ;return _cdcd ,nil ;};

// NewXObjectImage returns a new XObjectImage.
func NewXObjectImage ()*XObjectImage {_bddcda :=&XObjectImage {};_cdecc :=&_bgg .PdfObjectStream {};_cdecc .PdfObjectDictionary =_bgg .MakeDict ();_bddcda ._cfcfd =_cdecc ;return _bddcda ;};func (_ddfab *PdfPage )getParentResources ()(*PdfPageResources ,error ){_dbff :=_ddfab .Parent ;
for _dbff !=nil {_gaccf ,_gefcd :=_bgg .GetDict (_dbff );if !_gefcd {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020n\u006f\u0064\u0065");return nil ,_ag .New ("i\u006e\u0076\u0061\u006cid\u0020p\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};if _bcada :=_gaccf .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_bcada !=nil {_gfab ,_fgbc :=_bgg .GetDict (_bcada );if !_fgbc {return nil ,_ag .New ("i\u006e\u0076\u0061\u006cid\u0020r\u0065\u0073\u006f\u0075\u0072c\u0065\u0020\u0064\u0069\u0063\u0074");
};_aaedg ,_abca :=NewPdfPageResourcesFromDict (_gfab );if _abca !=nil {return nil ,_abca ;};return _aaedg ,nil ;};_dbff =_gaccf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,nil ;};

// BorderEffect represents a border effect (Table 167 p. 395).
type BorderEffect int ;func (_cfaf *PdfReader )newPdfFieldFromIndirectObject (_dabce *_bgg .PdfIndirectObject ,_dcbbd *PdfField )(*PdfField ,error ){if _afcc ,_efbbc :=_cfaf ._gabea .GetModelFromPrimitive (_dabce ).(*PdfField );_efbbc {return _afcc ,nil ;
};_eace ,_ecadd :=_bgg .GetDict (_dabce );if !_ecadd {return nil ,_e .Errorf ("\u0050\u0064f\u0046\u0069\u0065\u006c\u0064 \u0069\u006e\u0064\u0069\u0072e\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_dbcd :=NewPdfField ();_dbcd ._fagb =_dabce ;_dbcd ._fagb .PdfObject =_eace ;if _ffcd ,_edbb :=_bgg .GetName (_eace .Get ("\u0046\u0054"));_edbb {_dbcd .FT =_ffcd ;};if _dcbbd !=nil {_dbcd .Parent =_dcbbd ;};_dbcd .T ,_ =_eace .Get ("\u0054").(*_bgg .PdfObjectString );
_dbcd .TU ,_ =_eace .Get ("\u0054\u0055").(*_bgg .PdfObjectString );_dbcd .TM ,_ =_eace .Get ("\u0054\u004d").(*_bgg .PdfObjectString );_dbcd .Ff ,_ =_eace .Get ("\u0046\u0066").(*_bgg .PdfObjectInteger );_dbcd .V =_eace .Get ("\u0056");_dbcd .DV =_eace .Get ("\u0044\u0056");
_dbcd .AA =_eace .Get ("\u0041\u0041");if DA :=_eace .Get ("\u0044\u0041");DA !=nil {DA ,_ :=_bgg .GetString (DA );_dbcd .VariableText =&VariableText {DA :DA };Q ,_ :=_eace .Get ("\u0051").(*_bgg .PdfObjectInteger );DS ,_ :=_eace .Get ("\u0044\u0053").(*_bgg .PdfObjectString );
RV :=_eace .Get ("\u0052\u0056");_dbcd .VariableText .Q =Q ;_dbcd .VariableText .DS =DS ;_dbcd .VariableText .RV =RV ;};_bdba :=_dbcd .FT ;if _bdba ==nil &&_dcbbd !=nil {_bdba =_dcbbd .FT ;};if _bdba !=nil {switch *_bdba {case "\u0054\u0078":_fbee ,_dega :=_dcaea (_eace );
if _dega !=nil {return nil ,_dega ;};_fbee .PdfField =_dbcd ;_dbcd ._afag =_fbee ;case "\u0043\u0068":_dacff ,_bbdf :=_cab (_eace );if _bbdf !=nil {return nil ,_bbdf ;};_dacff .PdfField =_dbcd ;_dbcd ._afag =_dacff ;case "\u0042\u0074\u006e":_cbgc ,_acbdc :=_dbea (_eace );
if _acbdc !=nil {return nil ,_acbdc ;};_cbgc .PdfField =_dbcd ;_dbcd ._afag =_cbgc ;case "\u0053\u0069\u0067":_eafa ,_gagd :=_cfaf .newPdfFieldSignatureFromDict (_eace );if _gagd !=nil {return nil ,_gagd ;};_eafa .PdfField =_dbcd ;_dbcd ._afag =_eafa ;
default:_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072t\u0065d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0025\u0073",*_dbcd .FT );return nil ,_ag .New ("\u0075\u006e\u0073\u0075pp\u006f\u0072\u0074\u0065\u0064\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0074\u0079p\u0065");
};};if _bebf ,_febgd :=_bgg .GetName (_eace .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));_febgd {if *_bebf =="\u0057\u0069\u0064\u0067\u0065\u0074"{_fecb ,_ebaf :=_cfaf .newPdfAnnotationFromIndirectObject (_dabce );if _ebaf !=nil {return nil ,_ebaf ;
};_aafe ,_dgda :=_fecb .GetContext ().(*PdfAnnotationWidget );if !_dgda {return nil ,_ag .New ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0067e\u0074 \u0061n\u006e\u006f\u0074\u0061\u0074\u0069\u006fn");};_aafe ._aaa =_dbcd ;_aafe .Parent =_dbcd ._fagb ;
_dbcd .Annotations =append (_dbcd .Annotations ,_aafe );return _dbcd ,nil ;};};_gcag :=true ;if _fefd ,_dgbg :=_bgg .GetArray (_eace .Get ("\u004b\u0069\u0064\u0073"));_dgbg {_aaff :=make ([]*_bgg .PdfIndirectObject ,0,_fefd .Len ());for _ ,_dfgf :=range _fefd .Elements (){_deae ,_cgbe :=_bgg .GetIndirect (_dfgf );
if !_cgbe {_gaabb ,_eecgc :=_bgg .GetStream (_dfgf );if _eecgc &&_gaabb .PdfObjectDictionary !=nil {_gadf ,_cece :=_bgg .GetNameVal (_gaabb .Get ("\u0054\u0079\u0070\u0065"));if _cece &&_gadf =="\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061"{_dcf .Log .Debug ("E\u0052RO\u0052:\u0020f\u006f\u0072\u006d\u0020\u0066i\u0065\u006c\u0064 \u004b\u0069\u0064\u0073\u0020a\u0072\u0072\u0061y\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0069n\u0076\u0061\u006cid \u004d\u0065\u0074\u0061\u0064\u0061t\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0053\u006bi\u0070p\u0069\u006e\u0067\u002e");
continue ;};};return nil ,_ag .New ("n\u006f\u0074\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063t\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0028\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065\u006cd\u0029");};_dgebc ,_afec :=_bgg .GetDict (_deae );
if !_afec {return nil ,ErrTypeCheck ;};if _gcag {_gcag =!_fgbg (_dgebc );};_aaff =append (_aaff ,_deae );};for _ ,_afcf :=range _aaff {if _gcag {_eece ,_deee :=_cfaf .newPdfAnnotationFromIndirectObject (_afcf );if _deee !=nil {_dcf .Log .Debug ("\u0045r\u0072\u006fr\u0020\u006c\u006fa\u0064\u0069\u006e\u0067\u0020\u0077\u0069d\u0067\u0065\u0074\u0020\u0061\u006en\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0066\u006f\u0072 \u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_deee );
return nil ,_deee ;};_cfab ,_eeab :=_eece ._afg .(*PdfAnnotationWidget );if !_eeab {return nil ,ErrTypeCheck ;};_cfab ._aaa =_dbcd ;_dbcd .Annotations =append (_dbcd .Annotations ,_cfab );}else {_abgg ,_ggfae :=_cfaf .newPdfFieldFromIndirectObject (_afcf ,_dbcd );
if _ggfae !=nil {_dcf .Log .Debug ("\u0045\u0072r\u006f\u0072\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0068\u0069\u006c\u0064\u0020\u0066\u0069\u0065\u006c\u0064: \u0025\u0076",_ggfae );return nil ,_ggfae ;};_dbcd .Kids =append (_dbcd .Kids ,_abgg );
};};};return _dbcd ,nil ;};

// PdfActionURI represents an URI action.
type PdfActionURI struct{*PdfAction ;URI _bgg .PdfObject ;IsMap _bgg .PdfObject ;};

// GetVersion gets the document version.
func (_gefade *PdfWriter )GetVersion ()_bgg .Version {return _gefade ._ffgff };

// PdfInfo holds document information that will overwrite
// document information global variables defined above.
type PdfInfo struct{Title *_bgg .PdfObjectString ;Author *_bgg .PdfObjectString ;Subject *_bgg .PdfObjectString ;Keywords *_bgg .PdfObjectString ;Creator *_bgg .PdfObjectString ;Producer *_bgg .PdfObjectString ;CreationDate *PdfDate ;ModifiedDate *PdfDate ;
Trapped *_bgg .PdfObjectName ;_fdaag *_bgg .PdfObjectDictionary ;};type pdfCIDFontType2 struct{fontCommon ;_fadag *_bgg .PdfIndirectObject ;_dfffe _cc .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// Dictionary that defines the character collection of the CIDFont (required).
// See Table 116.
CIDSystemInfo *_bgg .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bgg .PdfObject ;W _bgg .PdfObject ;DW2 _bgg .PdfObject ;W2 _bgg .PdfObject ;

// CIDs to glyph indices mapping (optional).
CIDToGIDMap _bgg .PdfObject ;_gbbe map[_cc .CharCode ]float64 ;_bgcc float64 ;_bfcb map[rune ]int ;};func _bcdedd ()string {_dgef :="\u0051\u0057\u0045\u0052\u0054\u0059\u0055\u0049\u004f\u0050\u0041S\u0044\u0046\u0047\u0048\u004a\u004b\u004c\u005a\u0058\u0043V\u0042\u004e\u004d";
var _acad _aa .Buffer ;for _cfdd :=0;_cfdd < 6;_cfdd ++{_acad .WriteRune (rune (_dgef [_ce .Intn (len (_dgef ))]));};return _acad .String ();};

// String returns a string representation of PdfTransformParamsDocMDP.
func (_ceeec *PdfTransformParamsDocMDP )String ()string {return _e .Sprintf ("\u0025\u0073\u0020\u0050\u003a\u0020\u0025\u0073\u0020V\u003a\u0020\u0025\u0073",_ceeec .Type ,_ceeec .P ,_ceeec .V );};func _cdafd (_efgee *fontCommon )*pdfFontType0 {return &pdfFontType0 {fontCommon :*_efgee }};


// NewPdfAnnotationStamp returns a new stamp annotation.
func NewPdfAnnotationStamp ()*PdfAnnotationStamp {_dda :=NewPdfAnnotation ();_faae :=&PdfAnnotationStamp {};_faae .PdfAnnotation =_dda ;_faae .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dda .SetContext (_faae );return _faae ;};

// EncryptOptions represents encryption options for an output PDF.
type EncryptOptions struct{Permissions _de .Permissions ;Algorithm EncryptionAlgorithm ;};

// PdfColorspaceDeviceCMYK represents a CMYK32 colorspace.
type PdfColorspaceDeviceCMYK struct{};

// Decrypt decrypts the PDF file with a specified password.  Also tries to
// decrypt with an empty password.  Returns true if successful,
// false otherwise.
func (_adbgc *PdfReader )Decrypt (password []byte )(bool ,error ){_efdgc ,_egfge :=_adbgc ._ebdgc .Decrypt (password );if _egfge !=nil {return false ,_egfge ;};if !_efdgc {return false ,nil ;};_egfge =_adbgc .loadStructure ();if _egfge !=nil {_dcf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0046\u0061\u0069\u006c\u0020\u0074\u006f \u006co\u0061d\u0020s\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065\u0020\u0028\u0025\u0073\u0029",_egfge );
return false ,_egfge ;};return true ,nil ;};

// PdfFilespec represents a file specification which can either refer to an external or embedded file.
type PdfFilespec struct{Type _bgg .PdfObject ;FS _bgg .PdfObject ;F _bgg .PdfObject ;UF _bgg .PdfObject ;DOS _bgg .PdfObject ;Mac _bgg .PdfObject ;Unix _bgg .PdfObject ;ID _bgg .PdfObject ;V _bgg .PdfObject ;EF _bgg .PdfObject ;RF _bgg .PdfObject ;Desc _bgg .PdfObject ;
CI _bgg .PdfObject ;_efde _bgg .PdfObject ;};func _baeac (_caeab *_bgg .PdfObjectDictionary )(*PdfShadingType2 ,error ){_bgacf :=PdfShadingType2 {};_ddgbf :=_caeab .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _ddgbf ==nil {_dcf .Log .Debug ("R\u0065\u0071\u0075\u0069\u0072\u0065d\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067\u003a\u0020\u0020\u0043\u006f\u006f\u0072d\u0073");
return nil ,ErrRequiredAttributeMissing ;};_aegce ,_ffbca :=_ddgbf .(*_bgg .PdfObjectArray );if !_ffbca {_dcf .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ddgbf );
return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};if _aegce .Len ()!=4{_dcf .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0034\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_aegce .Len ());
return nil ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");};_bgacf .Coords =_aegce ;if _cgaab :=_caeab .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_cgaab !=nil {_cgaab =_bgg .TraceToDirectObject (_cgaab );
_adcda ,_gacgd :=_cgaab .(*_bgg .PdfObjectArray );if !_gacgd {_dcf .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_cgaab );return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_bgacf .Domain =_adcda ;};_ddgbf =_caeab .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _ddgbf ==nil {_dcf .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_bgacf .Function =[]PdfFunction {};if _dcgad ,_bfcd :=_ddgbf .(*_bgg .PdfObjectArray );_bfcd {for _ ,_edcda :=range _dcgad .Elements (){_acbf ,_eggge :=_aefac (_edcda );if _eggge !=nil {_dcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eggge );
return nil ,_eggge ;};_bgacf .Function =append (_bgacf .Function ,_acbf );};}else {_aadae ,_debcf :=_aefac (_ddgbf );if _debcf !=nil {_dcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_debcf );
return nil ,_debcf ;};_bgacf .Function =append (_bgacf .Function ,_aadae );};if _ceef :=_caeab .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_ceef !=nil {_ceef =_bgg .TraceToDirectObject (_ceef );_dagba ,_cfdf :=_ceef .(*_bgg .PdfObjectArray );if !_cfdf {_dcf .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ceef );
return nil ,_bgg .ErrTypeError ;};if _dagba .Len ()!=2{_dcf .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_dagba .Len ());return nil ,ErrInvalidAttribute ;
};_bgacf .Extend =_dagba ;};return &_bgacf ,nil ;};

// NewPdfAnnotationRedact returns a new redact annotation.
func NewPdfAnnotationRedact ()*PdfAnnotationRedact {_dfcg :=NewPdfAnnotation ();_dfce :=&PdfAnnotationRedact {};_dfce .PdfAnnotation =_dfcg ;_dfce .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_dfcg .SetContext (_dfce );return _dfce ;};func (_efdece fontCommon )asPdfObjectDictionary (_fdda string )*_bgg .PdfObjectDictionary {if _fdda !=""&&_efdece ._dadgd !=""&&_fdda !=_efdece ._dadgd {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061\u0073\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020O\u0076\u0065\u0072\u0072\u0069\u0064\u0069\u006e\u0067\u0020\u0073\u0075\u0062t\u0079\u0070\u0065\u0020\u0074\u006f \u0025\u0023\u0071 \u0025\u0073",_fdda ,_efdece );
}else if _fdda ==""&&_efdece ._dadgd ==""{_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0061s\u0050\u0064\u0066Ob\u006a\u0065\u0063\u0074\u0044\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074y\u0070\u0065\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_efdece );
}else if _efdece ._dadgd ==""{_efdece ._dadgd =_fdda ;};_bagd :=_bgg .MakeDict ();_bagd .Set ("\u0054\u0079\u0070\u0065",_bgg .MakeName ("\u0046\u006f\u006e\u0074"));_bagd .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_bgg .MakeName (_efdece ._dbbc ));
_bagd .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName (_efdece ._dadgd ));if _efdece ._abdg !=nil {_bagd .Set ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072",_efdece ._abdg .ToPdfObject ());};if _efdece ._fdded !=nil {_bagd .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_efdece ._fdded );
}else if _efdece ._ffed !=nil {_ebdad ,_dbdfa :=_efdece ._ffed .Stream ();if _dbdfa !=nil {_dcf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006eo\u0074\u0020\u0067\u0065\u0074\u0020C\u004d\u0061\u0070\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u002e\u0020\u0065r\u0072\u003d\u0025\u0076",_dbdfa );
}else {_bagd .Set ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e",_ebdad );};};return _bagd ;};

// GetNamedDestinations returns the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_agddd *PdfReader )GetNamedDestinations ()(_bgg .PdfObject ,error ){_fbcd :=_bgg .ResolveReference (_agddd ._gaebb .Get ("\u0044\u0065\u0073t\u0073"));if _fbcd ==nil {return nil ,nil ;};if !_agddd ._cdbfbb {_eaddb :=_agddd .traverseObjectData (_fbcd );
if _eaddb !=nil {return nil ,_eaddb ;};};return _fbcd ,nil ;};

// SetNamedDestinations sets the Dests entry in the PDF catalog.
// See section 12.3.2.3 "Named Destinations" (p. 367 PDF32000_2008).
func (_eebaeg *PdfWriter )SetNamedDestinations (dests _bgg .PdfObject )error {if dests ==nil {return nil ;};_dcf .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u0044\u0065\u0073\u0074\u0073\u002e\u002e\u002e");
_eebaeg ._ffbb .Set ("\u0044\u0065\u0073t\u0073",dests );return _eebaeg .addObjects (dests );};func (_bcca *pdfCIDFontType2 )baseFields ()*fontCommon {return &_bcca .fontCommon };

// ColorToRGB converts a Lab color to an RGB color.
func (_dgdc *PdfColorspaceLab )ColorToRGB (color PdfColor )(PdfColor ,error ){_bgbc :=func (_bfed float64 )float64 {if _bfed >=6.0/29{return _bfed *_bfed *_bfed ;};return 108.0/841*(_bfed -4/29);};_efbf ,_bdeb :=color .(*PdfColorLab );if !_bdeb {_dcf .Log .Debug ("\u0069\u006e\u0070\u0075t \u0063\u006f\u006c\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u006c\u0061\u0062");
return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};LStar :=_efbf .L ();AStar :=_efbf .A ();BStar :=_efbf .B ();L :=(LStar +16)/116+AStar /500;M :=(LStar +16)/116;N :=(LStar +16)/116-BStar /200;
X :=_dgdc .WhitePoint [0]*_bgbc (L );Y :=_dgdc .WhitePoint [1]*_bgbc (M );Z :=_dgdc .WhitePoint [2]*_bgbc (N );_bee :=3.240479*X +-1.537150*Y +-0.498535*Z ;_ddac :=-0.969256*X +1.875992*Y +0.041556*Z ;_fabc :=0.055648*X +-0.204043*Y +1.057311*Z ;_bee =_db .Min (_db .Max (_bee ,0),1.0);
_ddac =_db .Min (_db .Max (_ddac ,0),1.0);_fabc =_db .Min (_db .Max (_fabc ,0),1.0);return NewPdfColorDeviceRGB (_bee ,_ddac ,_fabc ),nil ;};

// NewImageFromGoImage creates a new NRGBA32 unidoc Image from a golang Image.
// If `goimg` is grayscale (*goimage.Gray8) then calls NewGrayImageFromGoImage instead.
func (_gbfec DefaultImageHandler )NewImageFromGoImage (goimg _dc .Image )(*Image ,error ){_befd ,_gdefc :=_dcg .FromGoImage (goimg );if _gdefc !=nil {return nil ,_gdefc ;};_eagec :=_ddccc (_befd .Base ());return &_eagec ,nil ;};

// G returns the value of the green component of the color.
func (_geag *PdfColorDeviceRGB )G ()float64 {return _geag [1]};

// C returns the value of the cyan component of the color.
func (_gdff *PdfColorDeviceCMYK )C ()float64 {return _gdff [0]};

// PdfAnnotationProjection represents Projection annotations.
type PdfAnnotationProjection struct{*PdfAnnotation ;*PdfAnnotationMarkup ;};

// AlphaMapFunc represents a alpha mapping function: byte -> byte. Can be used for
// thresholding the alpha channel, i.e. setting all alpha values below threshold to transparent.
type AlphaMapFunc func (_fgcg byte )byte ;

// NewPdfColorspaceDeviceN returns an initialized PdfColorspaceDeviceN.
func NewPdfColorspaceDeviceN ()*PdfColorspaceDeviceN {_edaf :=&PdfColorspaceDeviceN {};return _edaf };

// ToPdfObject implements interface PdfModel.
func (_cdff *PdfAnnotationUnderline )ToPdfObject ()_bgg .PdfObject {_cdff .PdfAnnotation .ToPdfObject ();_fff :=_cdff ._gec ;_bbee :=_fff .PdfObject .(*_bgg .PdfObjectDictionary );_cdff .PdfAnnotationMarkup .appendToPdfDictionary (_bbee );_bbee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee"));
_bbee .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_cdff .QuadPoints );return _fff ;};

// PdfAnnotationFileAttachment represents FileAttachment annotations.
// (Section 12.5.6.15).
type PdfAnnotationFileAttachment struct{*PdfAnnotation ;*PdfAnnotationMarkup ;FS _bgg .PdfObject ;Name _bgg .PdfObject ;};

// GetSubFilter returns SubFilter value or empty string.
func (_defge *pdfSignDictionary )GetSubFilter ()string {_bfdgd :=_defge .Get ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r");if _bfdgd ==nil {return "";};if _bbeec ,_cffe :=_bgg .GetNameVal (_bfdgd );_cffe {return _bbeec ;};return "";};

// GetContext returns the action context which contains the specific type-dependent context.
// The context represents the subaction.
func (_eee *PdfAction )GetContext ()PdfModel {if _eee ==nil {return nil ;};return _eee ._adc ;};

// PdfFont represents an underlying font structure which can be of type:
// - Type0
// - Type1
// - TrueType
// etc.
type PdfFont struct{_efdec pdfFont };func (_fced *pdfFontSimple )addEncoding ()error {var (_fdgc string ;_fbggb map[_cc .CharCode ]_cc .GlyphName ;_faffg _cc .SimpleEncoder ;);if _fced .Encoder ()!=nil {_debee ,_cbebd :=_fced .Encoder ().(_cc .SimpleEncoder );
if _cbebd &&_debee !=nil {_fdgc =_debee .BaseName ();};};if _fced .Encoding !=nil {_cdbfb ,_ebfc ,_cdgbe :=_fced .getFontEncoding ();if _cdgbe !=nil {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0073\u0065F\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0053u\u0062t\u0079\u0070\u0065\u003d\u0025\u0071\u0020\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u003d\u0025\u0073 \u0028\u0025\u0054\u0029\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_fced ._dbbc ,_fced ._dadgd ,_fced .Encoding ,_fced .Encoding ,_cdgbe );
return _cdgbe ;};if _cdbfb !=""{_fdgc =_cdbfb ;};_fbggb =_ebfc ;_faffg ,_cdgbe =_cc .NewSimpleTextEncoder (_fdgc ,_fbggb );if _cdgbe !=nil {return _cdgbe ;};};if _faffg ==nil {_ffdb :=_fced ._abdg ;if _ffdb !=nil {switch _fced ._dadgd {case "\u0054\u0079\u0070e\u0031":if _ffdb .fontFile !=nil &&_ffdb .fontFile ._eeabg !=nil {_dcf .Log .Debug ("\u0055\u0073\u0069\u006e\u0067\u0020\u0066\u006f\u006et\u0046\u0069\u006c\u0065");
_faffg =_ffdb .fontFile ._eeabg ;};case "\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":if _ffdb ._bgfg !=nil {_dcf .Log .Debug ("\u0055s\u0069n\u0067\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032");_deccb ,_bcbd :=_ffdb ._bgfg .MakeEncoder ();
if _bcbd ==nil {_faffg =_deccb ;};};};};};if _faffg !=nil {if _fbggb !=nil {_dcf .Log .Trace ("\u0064\u0069\u0066fe\u0072\u0065\u006e\u0063\u0065\u0073\u003d\u0025\u002b\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_fbggb ,_fced .baseFields ());
_faffg =_cc .ApplyDifferences (_faffg ,_fbggb );};_fced .SetEncoder (_faffg );};return nil ;};func (_edbe *PdfReader )newPdfAnnotationStrikeOut (_fgfeg *_bgg .PdfObjectDictionary )(*PdfAnnotationStrikeOut ,error ){_daadd :=PdfAnnotationStrikeOut {};_cgfc ,_gff :=_edbe .newPdfAnnotationMarkupFromDict (_fgfeg );
if _gff !=nil {return nil ,_gff ;};_daadd .PdfAnnotationMarkup =_cgfc ;_daadd .QuadPoints =_fgfeg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_daadd ,nil ;};

// GetNumComponents returns the number of color components (1 for Separation).
func (_cecf *PdfColorspaceSpecialSeparation )GetNumComponents ()int {return 1};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_dbgf pdfCIDFontType2 )GetRuneMetrics (r rune )(_dad .CharMetrics ,bool ){_daed ,_ddee :=_dbgf ._bfcb [r ];if !_ddee {_ccgcd ,_ggga :=_bgg .GetInt (_dbgf .DW );if !_ggga {return _dad .CharMetrics {},false ;};_daed =int (*_ccgcd );};return _dad .CharMetrics {Wx :float64 (_daed )},true ;
};func (_dbbe *DSS )addOCSPs (_dfbdfc [][]byte )([]*_bgg .PdfObjectStream ,error ){return _dbbe .add (&_dbbe .OCSPs ,_dbbe ._cbeb ,_dfbdfc );};func (_bcbge *PdfReader )resolveReference (_abbda *_bgg .PdfObjectReference )(_bgg .PdfObject ,bool ,error ){_bdgfb ,_deecb :=_bcbge ._ebdgc .ObjCache [int (_abbda .ObjectNumber )];
if !_deecb {_dcf .Log .Trace ("R\u0065\u0061\u0064\u0065r \u004co\u006f\u006b\u0075\u0070\u0020r\u0065\u0066\u003a\u0020\u0025\u0073",_abbda );_dfefa ,_gafa :=_bcbge ._ebdgc .LookupByReference (*_abbda );if _gafa !=nil {return nil ,false ,_gafa ;};_bcbge ._ebdgc .ObjCache [int (_abbda .ObjectNumber )]=_dfefa ;
return _dfefa ,false ,nil ;};return _bdgfb ,true ,nil ;};func (_aefgf *PdfColorspaceCalRGB )String ()string {return "\u0043\u0061\u006c\u0052\u0047\u0042"};

// ToPdfObject returns the PDF representation of the function.
func (_fdacg *PdfFunctionType3 )ToPdfObject ()_bgg .PdfObject {_ffce :=_bgg .MakeDict ();_ffce .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bgg .MakeInteger (3));_ebdd :=&_bgg .PdfObjectArray {};for _ ,_caeg :=range _fdacg .Domain {_ebdd .Append (_bgg .MakeFloat (_caeg ));
};_ffce .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_ebdd );if _fdacg .Range !=nil {_ebgc :=&_bgg .PdfObjectArray {};for _ ,_acgag :=range _fdacg .Range {_ebgc .Append (_bgg .MakeFloat (_acgag ));};_ffce .Set ("\u0052\u0061\u006eg\u0065",_ebgc );};if _fdacg .Functions !=nil {_bgbaf :=&_bgg .PdfObjectArray {};
for _ ,_dagec :=range _fdacg .Functions {_bgbaf .Append (_dagec .ToPdfObject ());};_ffce .Set ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es",_bgbaf );};if _fdacg .Bounds !=nil {_geaeg :=&_bgg .PdfObjectArray {};for _ ,_gfeg :=range _fdacg .Bounds {_geaeg .Append (_bgg .MakeFloat (_gfeg ));
};_ffce .Set ("\u0042\u006f\u0075\u006e\u0064\u0073",_geaeg );};if _fdacg .Encode !=nil {_aafd :=&_bgg .PdfObjectArray {};for _ ,_eacf :=range _fdacg .Encode {_aafd .Append (_bgg .MakeFloat (_eacf ));};_ffce .Set ("\u0045\u006e\u0063\u006f\u0064\u0065",_aafd );
};if _fdacg ._cagde !=nil {_fdacg ._cagde .PdfObject =_ffce ;return _fdacg ._cagde ;};return _ffce ;};

// ImageHandler interface implements common image loading and processing tasks.
// Implementing as an interface allows for the possibility to use non-standard libraries for faster
// loading and processing of images.
type ImageHandler interface{

// Read any image type and load into a new Image object.
Read (_edbef _gb .Reader )(*Image ,error );

// NewImageFromGoImage loads a NRGBA32 unidoc Image from a standard Go image structure.
NewImageFromGoImage (_fgfc _dc .Image )(*Image ,error );

// NewGrayImageFromGoImage loads a grayscale unidoc Image from a standard Go image structure.
NewGrayImageFromGoImage (_dfabd _dc .Image )(*Image ,error );

// Compress an image.
Compress (_addaf *Image ,_begdb int64 )(*Image ,error );};

// CharcodesToUnicode converts the character codes `charcodes` to a slice of runes.
// How it works:
//  1) Use the ToUnicode CMap if there is one.
//  2) Use the underlying font's encoding.
func (_gfbg *PdfFont )CharcodesToUnicode (charcodes []_cc .CharCode )[]rune {_abaea ,_ ,_ :=_gfbg .CharcodesToUnicodeWithStats (charcodes );return _abaea ;};

// StandardValidator is the interface that is used for the PDF StandardImplementer validation for the PDF document.
// It is using a CompliancePdfReader which is expected to give more Metadata during reading process.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardValidator interface{

// ValidateStandard checks if the input reader
ValidateStandard (_cagdb *CompliancePdfReader )error ;};func (_ddfdd *Image )resampleLowBits (_cdeeab []uint32 ){_adcad :=_dcg .BytesPerLine (int (_ddfdd .Width ),int (_ddfdd .BitsPerComponent ),_ddfdd .ColorComponents );_dfacd :=make ([]byte ,_ddfdd .ColorComponents *_adcad *int (_ddfdd .Height ));
_ecffe :=int (_ddfdd .BitsPerComponent )*_ddfdd .ColorComponents *int (_ddfdd .Width );_cbbf :=uint8 (8);var (_cggga ,_eebba int ;_ccdbc uint32 ;);for _edadc :=0;_edadc < int (_ddfdd .Height );_edadc ++{_eebba =_edadc *_adcad ;for _beade :=0;_beade < _ecffe ;
_beade ++{_ccdbc =_cdeeab [_cggga ];_cbbf -=uint8 (_ddfdd .BitsPerComponent );_dfacd [_eebba ]|=byte (_ccdbc )<<_cbbf ;if _cbbf ==0{_cbbf =8;_eebba ++;};_cggga ++;};};_ddfdd .Data =_dfacd ;};

// R returns the value of the red component of the color.
func (_feba *PdfColorDeviceRGB )R ()float64 {return _feba [0]};func (_aefc *PdfReader )newPdfAnnotationSoundFromDict (_cbad *_bgg .PdfObjectDictionary )(*PdfAnnotationSound ,error ){_agbd :=PdfAnnotationSound {};_cfae ,_aeaef :=_aefc .newPdfAnnotationMarkupFromDict (_cbad );
if _aeaef !=nil {return nil ,_aeaef ;};_agbd .PdfAnnotationMarkup =_cfae ;_agbd .Name =_cbad .Get ("\u004e\u0061\u006d\u0065");_agbd .Sound =_cbad .Get ("\u0053\u006f\u0075n\u0064");return &_agbd ,nil ;};func (_baabd *PdfWriter )flushWriter ()error {if _baabd ._bbdfff ==nil {_baabd ._bbdfff =_baabd ._eggab .Flush ();
};return _baabd ._bbdfff ;};func (_cec *PdfReader )newPdfActionGoTo3DViewFromDict (_edb *_bgg .PdfObjectDictionary )(*PdfActionGoTo3DView ,error ){return &PdfActionGoTo3DView {TA :_edb .Get ("\u0054\u0041"),V :_edb .Get ("\u0056")},nil ;};

// PdfActionSetOCGState represents a SetOCGState action.
type PdfActionSetOCGState struct{*PdfAction ;State _bgg .PdfObject ;PreserveRB _bgg .PdfObject ;};

// PdfColorspaceICCBased format [/ICCBased stream]
//
// The stream shall contain the ICC profile.
// A conforming reader shall support ICC.1:2004:10 as required by PDF 1.7, which will enable it
// to properly render all embedded ICC profiles regardless of the PDF version
//
// In the current implementation, we rely on the alternative colormap provided.
type PdfColorspaceICCBased struct{N int ;Alternate PdfColorspace ;

// If omitted ICC not supported: then use DeviceGray,
// DeviceRGB or DeviceCMYK for N=1,3,4 respectively.
Range []float64 ;Metadata *_bgg .PdfObjectStream ;Data []byte ;_caad *_bgg .PdfIndirectObject ;_fdedb *_bgg .PdfObjectStream ;};

// GetPageLabels returns the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_efdcbg *PdfReader )GetPageLabels ()(_bgg .PdfObject ,error ){_daabg :=_bgg .ResolveReference (_efdcbg ._gaebb .Get ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073"));if _daabg ==nil {return nil ,nil ;};if !_efdcbg ._cdbfbb {_faba :=_efdcbg .traverseObjectData (_daabg );
if _faba !=nil {return nil ,_faba ;};};return _daabg ,nil ;};

// ToPdfObject returns a *PdfIndirectObject containing a *PdfObjectArray representation of the DeviceN colorspace.
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
func (_dadce *PdfColorspaceDeviceN )ToPdfObject ()_bgg .PdfObject {_edddf :=_bgg .MakeArray (_bgg .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u004e"));_edddf .Append (_dadce .ColorantNames );_edddf .Append (_dadce .AlternateSpace .ToPdfObject ());_edddf .Append (_dadce .TintTransform .ToPdfObject ());
if _dadce .Attributes !=nil {_edddf .Append (_dadce .Attributes .ToPdfObject ());};if _dadce ._gcbe !=nil {_dadce ._gcbe .PdfObject =_edddf ;return _dadce ._gcbe ;};return _edddf ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_adeb *PdfColorspaceICCBased )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _adeb .Alternate ==nil {if _adeb .N ==1{_cedb :=NewPdfColorspaceDeviceGray ();return _cedb .ColorFromFloats (vals );}else if _adeb .N ==3{_bddc :=NewPdfColorspaceDeviceRGB ();
return _bddc .ColorFromFloats (vals );}else if _adeb .N ==4{_eege :=NewPdfColorspaceDeviceCMYK ();return _eege .ColorFromFloats (vals );}else {return nil ,_ag .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _adeb .Alternate .ColorFromFloats (vals );};

// ToPdfObject converts PdfAcroForm to a PdfObject, i.e. an indirect object containing the
// AcroForm dictionary.
func (_begd *PdfAcroForm )ToPdfObject ()_bgg .PdfObject {_faab :=_begd ._gfffc ;_dbga :=_faab .PdfObject .(*_bgg .PdfObjectDictionary );if _begd .Fields !=nil {_gebfb :=_bgg .PdfObjectArray {};for _ ,_cbgd :=range *_begd .Fields {_begf :=_cbgd .GetContext ();
if _begf !=nil {_gebfb .Append (_begf .ToPdfObject ());}else {_gebfb .Append (_cbgd .ToPdfObject ());};};_dbga .Set ("\u0046\u0069\u0065\u006c\u0064\u0073",&_gebfb );};if _begd .NeedAppearances !=nil {_dbga .Set ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073",_begd .NeedAppearances );
};if _begd .SigFlags !=nil {_dbga .Set ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073",_begd .SigFlags );};if _begd .CO !=nil {_dbga .Set ("\u0043\u004f",_begd .CO );};if _begd .DR !=nil {_dbga .Set ("\u0044\u0052",_begd .DR .ToPdfObject ());};if _begd .DA !=nil {_dbga .Set ("\u0044\u0041",_begd .DA );
};if _begd .Q !=nil {_dbga .Set ("\u0051",_begd .Q );};if _begd .XFA !=nil {_dbga .Set ("\u0058\u0046\u0041",_begd .XFA );};return _faab ;};

// ToPdfObject implements interface PdfModel.
func (_ec *PdfActionURI )ToPdfObject ()_bgg .PdfObject {_ec .PdfAction .ToPdfObject ();_cbe :=_ec ._ddf ;_dbe :=_cbe .PdfObject .(*_bgg .PdfObjectDictionary );_dbe .SetIfNotNil ("\u0053",_bgg .MakeName (string (ActionTypeURI )));_dbe .SetIfNotNil ("\u0055\u0052\u0049",_ec .URI );
_dbe .SetIfNotNil ("\u0049\u0073\u004da\u0070",_ec .IsMap );return _cbe ;};

// Register registers (caches) a model to primitive object relationship.
func (_ebgged *modelManager )Register (primitive _bgg .PdfObject ,model PdfModel ){_ebgged ._ddfeg [model ]=primitive ;_ebgged ._effd [primitive ]=model ;};

// FullName returns the full name of the field as in rootname.parentname.partialname.
func (_acef *PdfField )FullName ()(string ,error ){var _beba _aa .Buffer ;_bcff :=[]string {};if _acef .T !=nil {_bcff =append (_bcff ,_acef .T .Decoded ());};_gfded :=map[*PdfField ]bool {};_gfded [_acef ]=true ;_efge :=_acef .Parent ;for _efge !=nil {if _ ,_geca :=_gfded [_efge ];
_geca {return _beba .String (),_ag .New ("\u0072\u0065\u0063\u0075rs\u0069\u0076\u0065\u0020\u0074\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c");};if _efge .T ==nil {return _beba .String (),_ag .New ("\u0066\u0069el\u0064\u0020\u0070a\u0072\u0074\u0069\u0061l n\u0061me\u0020\u0028\u0054\u0029\u0020\u006e\u006ft \u0073\u0070\u0065\u0063\u0069\u0066\u0069e\u0064");
};_bcff =append (_bcff ,_efge .T .Decoded ());_gfded [_efge ]=true ;_efge =_efge .Parent ;};for _ddbga :=len (_bcff )-1;_ddbga >=0;_ddbga --{_beba .WriteString (_bcff [_ddbga ]);if _ddbga > 0{_beba .WriteString ("\u002e");};};return _beba .String (),nil ;
};func _cdfg (_cbgcc *_bgg .PdfObjectStream )(*PdfFunctionType0 ,error ){_abfc :=&PdfFunctionType0 {};_abfc ._eada =_cbgcc ;_efdga :=_cbgcc .PdfObjectDictionary ;_fafea ,_edbbe :=_bgg .TraceToDirectObject (_efdga .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bgg .PdfObjectArray );
if !_edbbe {_dcf .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _fafea .Len ()< 0||_fafea .Len ()%2!=0{_dcf .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ag .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");
};_abfc .NumInputs =_fafea .Len ()/2;_bdec ,_eccbd :=_fafea .ToFloat64Array ();if _eccbd !=nil {return nil ,_eccbd ;};_abfc .Domain =_bdec ;_fafea ,_edbbe =_bgg .TraceToDirectObject (_efdga .Get ("\u0052\u0061\u006eg\u0065")).(*_bgg .PdfObjectArray );if !_edbbe {_dcf .Log .Error ("\u0052\u0061\u006e\u0067e \u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_ag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _fafea .Len ()< 0||_fafea .Len ()%2!=0{return nil ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_abfc .NumOutputs =_fafea .Len ()/2;_fbfa ,_eccbd :=_fafea .ToFloat64Array ();if _eccbd !=nil {return nil ,_eccbd ;};_abfc .Range =_fbfa ;_fafea ,_edbbe =_bgg .TraceToDirectObject (_efdga .Get ("\u0053\u0069\u007a\u0065")).(*_bgg .PdfObjectArray );if !_edbbe {_dcf .Log .Error ("\u0053i\u007ae\u0020\u006e\u006f\u0074\u0020s\u0070\u0065c\u0069\u0066\u0069\u0065\u0064");
return nil ,_ag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_efedb ,_eccbd :=_fafea .ToIntegerArray ();
if _eccbd !=nil {return nil ,_eccbd ;};if len (_efedb )!=_abfc .NumInputs {_dcf .Log .Error ("T\u0061\u0062\u006c\u0065\u0020\u0073\u0069\u007a\u0065\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063h\u0069\u006e\u0067\u0020\u006e\u0075\u006d\u0062\u0065\u0072 o\u0066\u0020\u0069n\u0070u\u0074\u0073");
return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abfc .Size =_efedb ;_bdbbb ,_edbbe :=_bgg .TraceToDirectObject (_efdga .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065")).(*_bgg .PdfObjectInteger );
if !_edbbe {_dcf .Log .Error ("B\u0069\u0074\u0073\u0050\u0065\u0072S\u0061\u006d\u0070\u006c\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");return nil ,_ag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if *_bdbbb !=1&&*_bdbbb !=2&&*_bdbbb !=4&&*_bdbbb !=8&&*_bdbbb !=12&&*_bdbbb !=16&&*_bdbbb !=24&&*_bdbbb !=32{_dcf .Log .Error ("\u0042\u0069\u0074s \u0070\u0065\u0072\u0020\u0073\u0061\u006d\u0070\u006ce\u0020o\u0075t\u0073i\u0064\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0028\u0025\u0064\u0029",*_bdbbb );
return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abfc .BitsPerSample =int (*_bdbbb );_abfc .Order =1;_ddgd ,_edbbe :=_bgg .TraceToDirectObject (_efdga .Get ("\u004f\u0072\u0064e\u0072")).(*_bgg .PdfObjectInteger );
if _edbbe {if *_ddgd !=1&&*_ddgd !=3{_dcf .Log .Error ("\u0049n\u0076a\u006c\u0069\u0064\u0020\u006fr\u0064\u0065r\u0020\u0028\u0025\u0064\u0029",*_ddgd );return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_abfc .Order =int (*_ddgd );
};_fafea ,_edbbe =_bgg .TraceToDirectObject (_efdga .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bgg .PdfObjectArray );if _edbbe {_bfaaa ,_ccfa :=_fafea .ToFloat64Array ();if _ccfa !=nil {return nil ,_ccfa ;};_abfc .Encode =_bfaaa ;};_fafea ,_edbbe =_bgg .TraceToDirectObject (_efdga .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")).(*_bgg .PdfObjectArray );
if _edbbe {_gded ,_edfc :=_fafea .ToFloat64Array ();if _edfc !=nil {return nil ,_edfc ;};_abfc .Decode =_gded ;};_fabbfc ,_eccbd :=_bgg .DecodeStream (_cbgcc );if _eccbd !=nil {return nil ,_eccbd ;};_abfc ._fdgca =_fabbfc ;return _abfc ,nil ;};

// NewStandardPdfOutputIntent creates a new standard PdfOutputIntent.
func NewStandardPdfOutputIntent (outputCondition ,outputConditionIdentifier ,registryName string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,RegistryName :registryName ,DestOutputProfile :destOutputProfile ,ColorComponents :colorComponents ,_faace :_bgg .MakeDict ()};
};

// NewPdfActionLaunch returns a new "launch" action.
func NewPdfActionLaunch ()*PdfActionLaunch {_dac :=NewPdfAction ();_daa :=&PdfActionLaunch {};_daa .PdfAction =_dac ;_dac .SetContext (_daa );return _daa ;};func (_gbgd *PdfReader )newPdfActionGotoEFromDict (_bcc *_bgg .PdfObjectDictionary )(*PdfActionGoToE ,error ){_bdc ,_dbf :=_cbd (_bcc .Get ("\u0046"));
if _dbf !=nil {return nil ,_dbf ;};return &PdfActionGoToE {D :_bcc .Get ("\u0044"),NewWindow :_bcc .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),T :_bcc .Get ("\u0054"),F :_bdc },nil ;};func (_ddecc *PdfWriter )adjustXRefAffectedVersion (_dcag bool ){if _dcag &&_ddecc ._ffgff .Major ==1&&_ddecc ._ffgff .Minor < 5{_ddecc ._ffgff .Minor =5;
};};

// PdfAnnotationCircle represents Circle annotations.
// (Section 12.5.6.8).
type PdfAnnotationCircle struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bgg .PdfObject ;IC _bgg .PdfObject ;BE _bgg .PdfObject ;RD _bgg .PdfObject ;};func _ccccg (_adfc _bgg .PdfObject )(*PdfBorderStyle ,error ){_dcgg :=&PdfBorderStyle {};_dcgg ._bcg =_adfc ;
var _bfafa *_bgg .PdfObjectDictionary ;_adfc =_bgg .TraceToDirectObject (_adfc );_bfafa ,_adg :=_adfc .(*_bgg .PdfObjectDictionary );if !_adg {return nil ,_ag .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};if _beg :=_bfafa .Get ("\u0054\u0079\u0070\u0065");
_beg !=nil {_cggg ,_fgb :=_beg .(*_bgg .PdfObjectName );if !_fgb {_dcf .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062i\u006c\u0069\u0074\u0079\u0020\u0077\u0069th\u0020\u0054\u0079\u0070e\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u006e\u0061me\u0020\u006fb\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0054",_beg );
}else {if *_cggg !="\u0042\u006f\u0072\u0064\u0065\u0072"{_dcf .Log .Debug ("W\u0061\u0072\u006e\u0069\u006e\u0067,\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020B\u006f\u0072\u0064e\u0072:\u0020\u0025\u0073",*_cggg );};};};if _fcea :=_bfafa .Get ("\u0057");
_fcea !=nil {_ddcc ,_ddde :=_bgg .GetNumberAsFloat (_fcea );if _ddde !=nil {_dcf .Log .Debug ("\u0045\u0072\u0072\u006fr \u0072\u0065\u0074\u0072\u0069\u0065\u0076\u0069\u006e\u0067\u0020\u0057\u003a\u0020%\u0076",_ddde );return nil ,_ddde ;};_dcgg .W =&_ddcc ;
};if _ffeb :=_bfafa .Get ("\u0053");_ffeb !=nil {_gag ,_dgae :=_ffeb .(*_bgg .PdfObjectName );if !_dgae {return nil ,_ag .New ("\u0062\u006f\u0072\u0064\u0065\u0072\u0020\u0053\u0020\u006e\u006ft\u0020\u0061\u0020\u006e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};var _ddea BorderStyle ;switch *_gag {case "\u0053":_ddea =BorderStyleSolid ;case "\u0044":_ddea =BorderStyleDashed ;case "\u0042":_ddea =BorderStyleBeveled ;case "\u0049":_ddea =BorderStyleInset ;case "\u0055":_ddea =BorderStyleUnderline ;default:_dcf .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020s\u0074\u0079\u006c\u0065\u0020n\u0061\u006d\u0065\u0020\u0025\u0073",*_gag );
return nil ,_ag .New ("\u0073\u0074\u0079\u006ce \u0074\u0079\u0070\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065c\u006b");};_dcgg .S =&_ddea ;};if _fcfc :=_bfafa .Get ("\u0044");_fcfc !=nil {_ada ,_gabb :=_fcfc .(*_bgg .PdfObjectArray );
if !_gabb {_dcf .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044\u0020\u0064a\u0073\u0068\u0020\u006e\u006f\u0074\u0020a\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0054",_fcfc );return nil ,_ag .New ("\u0062o\u0072\u0064\u0065\u0072 \u0044\u0020\u0074\u0079\u0070e\u0020c\u0068e\u0063\u006b\u0020\u0065\u0072\u0072\u006fr");
};_ebc ,_dcgf :=_ada .ToIntegerArray ();if _dcgf !=nil {_dcf .Log .Debug ("\u0042\u006f\u0072\u0064\u0065\u0072\u0020\u0044 \u0050\u0072\u006fbl\u0065\u006d\u0020\u0063\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0069\u006e\u0074\u0065\u0067e\u0072\u0020\u0061\u0072\u0072\u0061\u0079\u003a \u0025\u0076",_dcgf );
return nil ,_dcgf ;};_dcgg .D =&_ebc ;};return _dcgg ,nil ;};

// PdfShadingType6 is a Coons patch mesh.
type PdfShadingType6 struct{*PdfShading ;BitsPerCoordinate *_bgg .PdfObjectInteger ;BitsPerComponent *_bgg .PdfObjectInteger ;BitsPerFlag *_bgg .PdfObjectInteger ;Decode *_bgg .PdfObjectArray ;Function []PdfFunction ;};func (_ecg *PdfReader )newPdfActionGotoRFromDict (_bge *_bgg .PdfObjectDictionary )(*PdfActionGoToR ,error ){_dga ,_dfaba :=_cbd (_bge .Get ("\u0046"));
if _dfaba !=nil {return nil ,_dfaba ;};return &PdfActionGoToR {D :_bge .Get ("\u0044"),NewWindow :_bge .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_dga },nil ;};func _ggfce (_dgfc _dad .StdFont )pdfFontSimple {_cdcb :=_dgfc .Descriptor ();
return pdfFontSimple {fontCommon :fontCommon {_dadgd :"\u0054\u0079\u0070e\u0031",_dbbc :_dgfc .Name ()},_ebfec :_dgfc .GetMetricsTable (),_dcbg :&PdfFontDescriptor {FontName :_bgg .MakeName (string (_cdcb .Name )),FontFamily :_bgg .MakeName (_cdcb .Family ),FontWeight :_bgg .MakeFloat (float64 (_cdcb .Weight )),Flags :_bgg .MakeInteger (int64 (_cdcb .Flags )),FontBBox :_bgg .MakeArrayFromFloats (_cdcb .BBox [:]),ItalicAngle :_bgg .MakeFloat (_cdcb .ItalicAngle ),Ascent :_bgg .MakeFloat (_cdcb .Ascent ),Descent :_bgg .MakeFloat (_cdcb .Descent ),CapHeight :_bgg .MakeFloat (_cdcb .CapHeight ),XHeight :_bgg .MakeFloat (_cdcb .XHeight ),StemV :_bgg .MakeFloat (_cdcb .StemV ),StemH :_bgg .MakeFloat (_cdcb .StemH )},_aaef :_dgfc .Encoder ()};
};

// ButtonType represents the subtype of a button field, can be one of:
// - Checkbox (ButtonTypeCheckbox)
// - PushButton (ButtonTypePushButton)
// - RadioButton (ButtonTypeRadioButton)
type ButtonType int ;

// SetEncoder sets the encoding for the underlying font.
// TODO(peterwilliams97): Change function signature to SetEncoder(encoder *textencoding.simpleEncoder).
// TODO(gunnsth): Makes sense if SetEncoder is removed from the interface fonts.Font as proposed in PR #260.
func (_dgcb *pdfFontSimple )SetEncoder (encoder _cc .TextEncoder ){_dgcb ._bfced =encoder };

// SetType sets the field button's type.  Can be one of:
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
// This sets the field's flag appropriately.
func (_ecfdf *PdfFieldButton )SetType (btype ButtonType ){_egbb :=uint32 (0);if _ecfdf .Ff !=nil {_egbb =uint32 (*_ecfdf .Ff );};switch btype {case ButtonTypePush :_egbb |=FieldFlagPushbutton .Mask ();case ButtonTypeRadio :_egbb |=FieldFlagRadio .Mask ();
};_ecfdf .Ff =_bgg .MakeInteger (int64 (_egbb ));};func (_abag *PdfReader )newPdfAnnotationTrapNetFromDict (_ccac *_bgg .PdfObjectDictionary )(*PdfAnnotationTrapNet ,error ){_ged :=PdfAnnotationTrapNet {};return &_ged ,nil ;};

// GetContext returns the annotation context which contains the specific type-dependent context.
// The context represents the subannotation.
func (_ebd *PdfAnnotation )GetContext ()PdfModel {if _ebd ==nil {return nil ;};return _ebd ._afg ;};

// NewPdfDateFromTime will create a PdfDate based on the given time
func NewPdfDateFromTime (timeObj _g .Time )(PdfDate ,error ){_dbfbd :=timeObj .Format ("\u002d\u0030\u0037\u003a\u0030\u0030");_gaff ,_ :=_dgd .ParseInt (_dbfbd [1:3],10,32);_gfbb ,_ :=_dgd .ParseInt (_dbfbd [4:6],10,32);return PdfDate {_efgaf :int64 (timeObj .Year ()),_dbbdb :int64 (timeObj .Month ()),_aeafb :int64 (timeObj .Day ()),_bcfac :int64 (timeObj .Hour ()),_aacdg :int64 (timeObj .Minute ()),_ebbae :int64 (timeObj .Second ()),_eefc :_dbfbd [0],_geeab :_gaff ,_cegbf :_gfbb },nil ;
};func (_gdga *PdfReader )newPdfAnnotationRedactFromDict (_fca *_bgg .PdfObjectDictionary )(*PdfAnnotationRedact ,error ){_eed :=PdfAnnotationRedact {};_daba ,_feea :=_gdga .newPdfAnnotationMarkupFromDict (_fca );if _feea !=nil {return nil ,_feea ;};_eed .PdfAnnotationMarkup =_daba ;
_eed .QuadPoints =_fca .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_eed .IC =_fca .Get ("\u0049\u0043");_eed .RO =_fca .Get ("\u0052\u004f");_eed .OverlayText =_fca .Get ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074");
_eed .Repeat =_fca .Get ("\u0052\u0065\u0070\u0065\u0061\u0074");_eed .DA =_fca .Get ("\u0044\u0041");_eed .Q =_fca .Get ("\u0051");return &_eed ,nil ;};

// FieldImageProvider provides fields images for specified fields.
type FieldImageProvider interface{FieldImageValues ()(map[string ]*Image ,error );};

// PdfTilingPattern is a Tiling pattern that consists of repetitions of a pattern cell with defined intervals.
// It is a type 1 pattern. (PatternType = 1).
// A tiling pattern is represented by a stream object, where the stream content is
// a content stream that describes the pattern cell.
type PdfTilingPattern struct{*PdfPattern ;PaintType *_bgg .PdfObjectInteger ;TilingType *_bgg .PdfObjectInteger ;BBox *PdfRectangle ;XStep *_bgg .PdfObjectFloat ;YStep *_bgg .PdfObjectFloat ;Resources *PdfPageResources ;Matrix *_bgg .PdfObjectArray ;};
func (_dcbea *PdfReader )loadStructure ()error {if _dcbea ._ebdgc .GetCrypter ()!=nil &&!_dcbea ._ebdgc .IsAuthenticated (){return _e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_bbeg :=_dcbea ._ebdgc .GetTrailer ();if _bbeg ==nil {return _e .Errorf ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_eedea ,_cbdcb :=_bbeg .Get ("\u0052\u006f\u006f\u0074").(*_bgg .PdfObjectReference );if !_cbdcb {return _e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0052\u006f\u006ft\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u003a \u0025\u0073\u0029",_bbeg );
};_beee ,_becgg :=_dcbea ._ebdgc .LookupByReference (*_eedea );if _becgg !=nil {_dcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0072\u006f\u006f\u0074\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_becgg );
return _becgg ;};_ccgb ,_cbdcb :=_beee .(*_bgg .PdfIndirectObject );if !_cbdcb {_dcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_beee ,*_bbeg );
return _ag .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_efegg ,_cbdcb :=(*_ccgb ).PdfObject .(*_bgg .PdfObjectDictionary );if !_cbdcb {_dcf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020I\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0061t\u0061\u006c\u006fg\u0020(\u0025\u0073\u0029",_ccgb .PdfObject );
return _ag .New ("\u0069n\u0076a\u006c\u0069\u0064\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};_dcf .Log .Trace ("C\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0025\u0073",_efegg );_aaaef ,_cbdcb :=_efegg .Get ("\u0050\u0061\u0067e\u0073").(*_bgg .PdfObjectReference );
if !_cbdcb {return _ag .New ("\u0070\u0061\u0067\u0065\u0073\u0020\u0069\u006e\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0061\u0020\u0072e\u0066\u0065r\u0065\u006e\u0063\u0065");};_gabde ,_becgg :=_dcbea ._ebdgc .LookupByReference (*_aaaef );
if _becgg !=nil {_dcf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020F\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020r\u0065\u0061\u0064 \u0070a\u0067\u0065\u0073");return _becgg ;};_fcbgb ,_cbdcb :=_gabde .(*_bgg .PdfIndirectObject );if !_cbdcb {_dcf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020P\u0061\u0067\u0065\u0073\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u0069n\u0076a\u006c\u0069\u0064");
_dcf .Log .Debug ("\u006f\u0070\u003a\u0020\u0025\u0070",_fcbgb );return _ag .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_aacef ,_cbdcb :=_fcbgb .PdfObject .(*_bgg .PdfObjectDictionary );if !_cbdcb {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065c\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0073\u0029",_fcbgb );
return _ag .New ("p\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0069\u006e\u0076al\u0069\u0064");};_dbad ,_cbdcb :=_bgg .GetInt (_aacef .Get ("\u0043\u006f\u0075n\u0074"));if !_cbdcb {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0050\u0061\u0067\u0065\u0073\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return _ag .New ("\u0070\u0061\u0067\u0065s \u0063\u006f\u0075\u006e\u0074\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};if _ ,_cbdcb =_bgg .GetName (_aacef .Get ("\u0054\u0079\u0070\u0065"));!_cbdcb {_dcf .Log .Debug ("\u0050\u0061\u0067\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020T\u0079\u0070\u0065\u0020\u0066\u0069\u0065\u006cd\u0020n\u006f\u0074\u0020\u0073\u0065\u0074\u002e\u0020\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0054\u0079p\u0065\u0020\u0074\u006f\u0020\u0050\u0061\u0067\u0065\u0073\u002e");
_aacef .Set ("\u0054\u0079\u0070\u0065",_bgg .MakeName ("\u0050\u0061\u0067e\u0073"));};if _dccd ,_fafd :=_bgg .GetInt (_aacef .Get ("\u0052\u006f\u0074\u0061\u0074\u0065"));_fafd {_eeafe :=int64 (*_dccd );_dcbea .Rotate =&_eeafe ;};_dcbea ._cedg =_eedea ;
_dcbea ._gaebb =_efegg ;_dcbea ._aggd =_aacef ;_dcbea ._dbgd =_fcbgb ;_dcbea ._cbade =int (*_dbad );_dcbea ._ebbfg =[]*_bgg .PdfIndirectObject {};_afbgb :=map[_bgg .PdfObject ]struct{}{};_becgg =_dcbea .buildPageList (_fcbgb ,nil ,_afbgb );if _becgg !=nil {return _becgg ;
};_dcf .Log .Trace ("\u002d\u002d\u002d");_dcf .Log .Trace ("\u0054\u004f\u0043");_dcf .Log .Trace ("\u0050\u0061\u0067e\u0073");_dcf .Log .Trace ("\u0025\u0064\u003a\u0020\u0025\u0073",len (_dcbea ._ebbfg ),_dcbea ._ebbfg );_dcbea ._accd ,_becgg =_dcbea .loadOutlines ();
if _becgg !=nil {_dcf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075i\u006c\u0064\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065 t\u0072\u0065\u0065 \u0028%\u0073\u0029",_becgg );
return _becgg ;};_dcbea .AcroForm ,_becgg =_dcbea .loadForms ();if _becgg !=nil {return _becgg ;};_dcbea .DSS ,_becgg =_dcbea .loadDSS ();if _becgg !=nil {return _becgg ;};_dcbea ._dcbbe ,_becgg =_dcbea .loadPerms ();if _becgg !=nil {return _becgg ;};return nil ;
};

// GetParamsDict returns *core.PdfObjectDictionary with a set of basic image parameters.
func (_gdbef *Image )GetParamsDict ()*_bgg .PdfObjectDictionary {_gdab :=_bgg .MakeDict ();_gdab .Set ("\u0057\u0069\u0064t\u0068",_bgg .MakeInteger (_gdbef .Width ));_gdab .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bgg .MakeInteger (_gdbef .Height ));
_gdab .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bgg .MakeInteger (int64 (_gdbef .ColorComponents )));_gdab .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bgg .MakeInteger (_gdbef .BitsPerComponent ));
return _gdab ;};

// GetNumComponents returns the number of color components (3 for CalRGB).
func (_dbca *PdfColorCalRGB )GetNumComponents ()int {return 3};

// NewPdfAnnotationPrinterMark returns a new printermark annotation.
func NewPdfAnnotationPrinterMark ()*PdfAnnotationPrinterMark {_acf :=NewPdfAnnotation ();_fec :=&PdfAnnotationPrinterMark {};_fec .PdfAnnotation =_acf ;_acf .SetContext (_fec );return _fec ;};func (_dbbcb *pdfFontSimple )baseFields ()*fontCommon {return &_dbbcb .fontCommon };


// ToPdfObject returns the PDF representation of the colorspace.
func (_aaab *PdfColorspaceSpecialSeparation )ToPdfObject ()_bgg .PdfObject {_fge :=_bgg .MakeArray (_bgg .MakeName ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"));_fge .Append (_aaab .ColorantName );_fge .Append (_aaab .AlternateSpace .ToPdfObject ());
_fge .Append (_aaab .TintTransform .ToPdfObject ());if _aaab ._aabb !=nil {_aaab ._aabb .PdfObject =_fge ;return _aaab ._aabb ;};return _fge ;};

// PdfAnnotationLink represents Link annotations.
// (Section 12.5.6.5 p. 403).
type PdfAnnotationLink struct{*PdfAnnotation ;A _bgg .PdfObject ;Dest _bgg .PdfObject ;H _bgg .PdfObject ;PA _bgg .PdfObject ;QuadPoints _bgg .PdfObject ;BS _bgg .PdfObject ;_fce *PdfAction ;_fgff *PdfReader ;};func _bcbg (_gegae *PdfField ,_gbce _bgg .PdfObject ){for _ ,_dgcdb :=range _gegae .Annotations {_dgcdb .AS =_gbce ;
_dgcdb .ToPdfObject ();};};

// GetRevisionNumber returns the version of the current Pdf document
func (_cbefd *PdfReader )GetRevisionNumber ()int {return _cbefd ._ebdgc .GetRevisionNumber ()};

// Outline represents a PDF outline dictionary (Table 152 - p. 376).
// Currently, the Outline object can only be used to construct PDF outlines.
type Outline struct{Entries []*OutlineItem `json:"entries,omitempty"`;};

// SubsetRegistered subsets the font to only the glyphs that have been registered by the encoder.
// NOTE: This only works on fonts that support subsetting. For unsupported fonts this is a no-op, although a debug
//   message is emitted.  Currently supported fonts are embedded Truetype CID fonts (type 0).
// NOTE: Make sure to call this soon before writing (once all needed runes have been registered).
// If using package creator, use its EnableFontSubsetting method instead.
func (_gefe *PdfFont )SubsetRegistered ()error {switch _faedc :=_gefe ._efdec .(type ){case *pdfFontType0 :_fcgg :=_faedc .subsetRegistered ();if _fcgg !=nil {_dcf .Log .Debug ("\u0053\u0075b\u0073\u0065\u0074 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_fcgg );
return _fcgg ;};if _faedc ._ecea !=nil {if _faedc ._dfbdd !=nil {_faedc ._dfbdd .ToPdfObject ();};_faedc .ToPdfObject ();};default:_dcf .Log .Debug ("F\u006f\u006e\u0074\u0020\u0025\u0054 \u0064\u006f\u0065\u0073\u0020\u006eo\u0074\u0020\u0073\u0075\u0070\u0070\u006fr\u0074\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069n\u0067",_faedc );
};return nil ;};func _begfa (_edaga *_bgg .PdfObjectDictionary )(*PdfShadingPattern ,error ){_gfae :=&PdfShadingPattern {};_eabb :=_edaga .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");if _eabb ==nil {_dcf .Log .Debug ("\u0053h\u0061d\u0069\u006e\u0067\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_cfaba ,_beca :=_fabcg (_eabb );if _beca !=nil {_dcf .Log .Debug ("\u0045r\u0072\u006f\u0072\u0020l\u006f\u0061\u0064\u0069\u006eg\u0020s\u0068a\u0064\u0069\u006e\u0067\u003a\u0020\u0025v",_beca );return nil ,_beca ;
};_gfae .Shading =_cfaba ;if _bgdb :=_edaga .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_bgdb !=nil {_ddcfb ,_gdbfg :=_bgdb .(*_bgg .PdfObjectArray );if !_gdbfg {_dcf .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_bgdb );
return nil ,_bgg .ErrTypeError ;};_gfae .Matrix =_ddcfb ;};if _adfeg :=_edaga .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_adfeg !=nil {_gfae .ExtGState =_adfeg ;};return _gfae ,nil ;};func (_fadb *PdfReader )traverseObjectData (_dbbff _bgg .PdfObject )error {return _bgg .ResolveReferencesDeep (_dbbff ,_fadb ._ddcbee );
};

// ToImage converts an object to an Image which can be transformed or saved out.
// The image data is decoded and the Image returned.
func (_gbgdd *XObjectImage )ToImage ()(*Image ,error ){_geefc :=&Image {};if _gbgdd .Height ==nil {return nil ,_ag .New ("\u0068e\u0069\u0067\u0068\u0074\u0020\u0061\u0074\u0074\u0072\u0069\u0062u\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_geefc .Height =*_gbgdd .Height ;if _gbgdd .Width ==nil {return nil ,_ag .New ("\u0077\u0069\u0064th\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};_geefc .Width =*_gbgdd .Width ;if _gbgdd .BitsPerComponent ==nil {switch _gbgdd .Filter .(type ){case *_bgg .CCITTFaxEncoder ,*_bgg .JBIG2Encoder :_geefc .BitsPerComponent =1;
case *_bgg .LZWEncoder ,*_bgg .RunLengthEncoder :_geefc .BitsPerComponent =8;default:return nil ,_ag .New ("\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072\u0020\u0063\u006fm\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");
};}else {_geefc .BitsPerComponent =*_gbgdd .BitsPerComponent ;};_geefc .ColorComponents =_gbgdd .ColorSpace .GetNumComponents ();_gbgdd ._cfcfd .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bgg .MakeInteger (int64 (_geefc .ColorComponents )));
_fdceeg ,_edga :=_bgg .DecodeStream (_gbgdd ._cfcfd );if _edga !=nil {return nil ,_edga ;};_geefc .Data =_fdceeg ;if _gbgdd .Decode !=nil {_cgdae ,_cdef :=_gbgdd .Decode .(*_bgg .PdfObjectArray );if !_cdef {_dcf .Log .Debug ("I\u006e\u0076\u0061\u006cid\u0020D\u0065\u0063\u006f\u0064\u0065 \u006f\u0062\u006a\u0065\u0063\u0074");
return nil ,_ag .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065");};_cagef ,_begfb :=_cgdae .ToFloat64Array ();if _begfb !=nil {return nil ,_begfb ;};_geefc ._ddaa =_cagef ;};return _geefc ,nil ;};

// ToInteger convert to an integer format.
func (_dadf *PdfColorDeviceCMYK )ToInteger (bits int )[4]uint32 {_acac :=_db .Pow (2,float64 (bits ))-1;return [4]uint32 {uint32 (_acac *_dadf .C ()),uint32 (_acac *_dadf .M ()),uint32 (_acac *_dadf .Y ()),uint32 (_acac *_dadf .K ())};};

// PdfFunctionType2 defines an exponential interpolation of one input value and n
// output values:
//      f(x) = y_0, ..., y_(n-1)
// y_j = C0_j + x^N * (C1_j - C0_j); for 0 <= j < n
// When N=1 ; linear interpolation between C0 and C1.
type PdfFunctionType2 struct{Domain []float64 ;Range []float64 ;C0 []float64 ;C1 []float64 ;N float64 ;_ggdeb *_bgg .PdfIndirectObject ;};func _dgcfd (_ccfe _bgg .PdfObject ){_dcf .Log .Debug ("\u006f\u0062\u006a\u003a\u0020\u0025\u0054\u0020\u0025\u0073",_ccfe ,_ccfe .String ());
if _ecggc ,_cbcdf :=_ccfe .(*_bgg .PdfObjectStream );_cbcdf {_edbeb ,_cbdcc :=_bgg .DecodeStream (_ecggc );if _cbdcc !=nil {_dcf .Log .Debug ("\u0045r\u0072\u006f\u0072\u003a\u0020\u0025v",_cbdcc );return ;};_dcf .Log .Debug ("D\u0065\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0073",_edbeb );
}else if _gfda ,_ggdaf :=_ccfe .(*_bgg .PdfIndirectObject );_ggdaf {_dcf .Log .Debug ("\u0025\u0054\u0020%\u0076",_gfda .PdfObject ,_gfda .PdfObject );_dcf .Log .Debug ("\u0025\u0073",_gfda .PdfObject .String ());};};

// StringToCharcodeBytes maps the provided string runes to charcode bytes and
// it returns the resulting slice of bytes, along with the number of runes
// which could not be converted. If the number of misses is 0, all string runes
// were successfully converted.
func (_ebgg *PdfFont )StringToCharcodeBytes (str string )([]byte ,int ){return _ebgg .RunesToCharcodeBytes ([]rune (str ));};

// Width returns the width of `rect`.
func (_gfcf *PdfRectangle )Width ()float64 {return _db .Abs (_gfcf .Urx -_gfcf .Llx )};

// ToPdfObject returns the PDF representation of the page resources.
func (_aggff *PdfPageResources )ToPdfObject ()_bgg .PdfObject {_cdfed :=_aggff ._ddgdd ;_cdfed .SetIfNotNil ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_aggff .ExtGState );if _aggff ._adggf !=nil {_aggff .ColorSpace =_aggff ._adggf .ToPdfObject ();
};_cdfed .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_aggff .ColorSpace );_cdfed .SetIfNotNil ("\u0050a\u0074\u0074\u0065\u0072\u006e",_aggff .Pattern );_cdfed .SetIfNotNil ("\u0053h\u0061\u0064\u0069\u006e\u0067",_aggff .Shading );
_cdfed .SetIfNotNil ("\u0058O\u0062\u006a\u0065\u0063\u0074",_aggff .XObject );_cdfed .SetIfNotNil ("\u0046\u006f\u006e\u0074",_aggff .Font );_cdfed .SetIfNotNil ("\u0050r\u006f\u0063\u0053\u0065\u0074",_aggff .ProcSet );_cdfed .SetIfNotNil ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073",_aggff .Properties );
return _cdfed ;};

// NewPdfAnnotationTrapNet returns a new trapnet annotation.
func NewPdfAnnotationTrapNet ()*PdfAnnotationTrapNet {_ccb :=NewPdfAnnotation ();_eebe :=&PdfAnnotationTrapNet {};_eebe .PdfAnnotation =_ccb ;_ccb .SetContext (_eebe );return _eebe ;};

// ColorFromPdfObjects returns a new PdfColor based on input color components. The input PdfObjects should
// be numeric.
func (_edbed *PdfColorspaceDeviceN )ColorFromPdfObjects (objects []_bgg .PdfObject )(PdfColor ,error ){if len (objects )!=_edbed .GetNumComponents (){return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_gcaf ,_fcbfb :=_bgg .GetNumbersAsFloat (objects );
if _fcbfb !=nil {return nil ,_fcbfb ;};return _edbed .ColorFromFloats (_gcaf );};

// NewPdfTransformParamsDocMDP create a PdfTransformParamsDocMDP with the specific permissions.
func NewPdfTransformParamsDocMDP (permission _bg .DocMDPPermission )*PdfTransformParamsDocMDP {return &PdfTransformParamsDocMDP {Type :_bgg .MakeName ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"),P :_bgg .MakeInteger (int64 (permission )),V :_bgg .MakeName ("\u0031\u002e\u0032")};
};

// B returns the value of the B component of the color.
func (_gfbc *PdfColorLab )B ()float64 {return _gfbc [2]};func _baeaf (_dgdbe *_bgg .PdfObjectStream )(*PdfFunctionType4 ,error ){_fbfad :=&PdfFunctionType4 {};_fbfad ._dcegf =_dgdbe ;_gbbcc :=_dgdbe .PdfObjectDictionary ;_aeec ,_eegc :=_bgg .TraceToDirectObject (_gbbcc .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bgg .PdfObjectArray );
if !_eegc {_dcf .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};if _aeec .Len ()%2!=0{_dcf .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");return nil ,_ag .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_egdb ,_aaaegb :=_aeec .ToFloat64Array ();
if _aaaegb !=nil {return nil ,_aaaegb ;};_fbfad .Domain =_egdb ;_aeec ,_eegc =_bgg .TraceToDirectObject (_gbbcc .Get ("\u0052\u0061\u006eg\u0065")).(*_bgg .PdfObjectArray );if _eegc {if _aeec .Len ()< 0||_aeec .Len ()%2!=0{return nil ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");
};_dfbgfa ,_dgea :=_aeec .ToFloat64Array ();if _dgea !=nil {return nil ,_dgea ;};_fbfad .Range =_dfbgfa ;};_ggdb ,_aaaegb :=_bgg .DecodeStream (_dgdbe );if _aaaegb !=nil {return nil ,_aaaegb ;};_fbfad ._bgca =_ggdb ;_baafb :=_dgc .NewPSParser (_ggdb );
_dbgc ,_aaaegb :=_baafb .Parse ();if _aaaegb !=nil {return nil ,_aaaegb ;};_fbfad .Program =_dbgc ;return _fbfad ,nil ;};func (_gac *PdfReader )newPdfActionFromIndirectObject (_bae *_bgg .PdfIndirectObject )(*PdfAction ,error ){_bbd ,_ebe :=_bae .PdfObject .(*_bgg .PdfObjectDictionary );
if !_ebe {return nil ,_e .Errorf ("\u0061\u0063\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u006e\u006f\u0074 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_gac ._gabea .GetModelFromPrimitive (_bbd );model !=nil {_ecf ,_cea :=model .(*PdfAction );if !_cea {return nil ,_e .Errorf ("\u0063\u0061c\u0068\u0065\u0064\u0020\u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050\u0044\u0046\u0020\u0061\u0063ti\u006f\u006e");
};return _ecf ,nil ;};_cbeg :=&PdfAction {};_cbeg ._ddf =_bae ;_gac ._gabea .Register (_bbd ,_cbeg );if _gbg :=_bbd .Get ("\u0054\u0079\u0070\u0065");_gbg !=nil {_abd ,_dfc :=_gbg .(*_bgg .PdfObjectName );if !_dfc {_dcf .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gbg );
}else {if *_abd !="\u0041\u0063\u0074\u0069\u006f\u006e"{_dcf .Log .Trace ("\u0055\u006e\u0073u\u0073\u0070\u0065\u0063t\u0065\u0064\u0020\u0054\u0079\u0070\u0065 \u0021\u003d\u0020\u0041\u0063\u0074\u0069\u006f\u006e\u0020\u0028\u0025\u0073\u0029",*_abd );
};_cbeg .Type =_abd ;};};if _cdf :=_bbd .Get ("\u004e\u0065\u0078\u0074");_cdf !=nil {_cbeg .Next =_cdf ;};if _fdd :=_bbd .Get ("\u0053");_fdd !=nil {_cbeg .S =_fdd ;};_dfe ,_cde :=_cbeg .S .(*_bgg .PdfObjectName );if !_cde {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_cbeg .S );
return nil ,_e .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0053\u0020\u006f\u0062\u006a\u0065c\u0074 \u0074y\u0070e\u0020\u0021\u003d\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_cbeg .S );};_ebea :=PdfActionType (_dfe .String ());
switch _ebea {case ActionTypeGoTo :_gfd ,_gaa :=_gac .newPdfActionGotoFromDict (_bbd );if _gaa !=nil {return nil ,_gaa ;};_gfd .PdfAction =_cbeg ;_cbeg ._adc =_gfd ;return _cbeg ,nil ;case ActionTypeGoToR :_cda ,_fa :=_gac .newPdfActionGotoRFromDict (_bbd );
if _fa !=nil {return nil ,_fa ;};_cda .PdfAction =_cbeg ;_cbeg ._adc =_cda ;return _cbeg ,nil ;case ActionTypeGoToE :_bbag ,_ccc :=_gac .newPdfActionGotoEFromDict (_bbd );if _ccc !=nil {return nil ,_ccc ;};_bbag .PdfAction =_cbeg ;_cbeg ._adc =_bbag ;return _cbeg ,nil ;
case ActionTypeLaunch :_bbde ,_gd :=_gac .newPdfActionLaunchFromDict (_bbd );if _gd !=nil {return nil ,_gd ;};_bbde .PdfAction =_cbeg ;_cbeg ._adc =_bbde ;return _cbeg ,nil ;case ActionTypeThread :_dab ,_cada :=_gac .newPdfActionThreadFromDict (_bbd );
if _cada !=nil {return nil ,_cada ;};_dab .PdfAction =_cbeg ;_cbeg ._adc =_dab ;return _cbeg ,nil ;case ActionTypeURI :_fdf ,_fbg :=_gac .newPdfActionURIFromDict (_bbd );if _fbg !=nil {return nil ,_fbg ;};_fdf .PdfAction =_cbeg ;_cbeg ._adc =_fdf ;return _cbeg ,nil ;
case ActionTypeSound :_gebd ,_gdg :=_gac .newPdfActionSoundFromDict (_bbd );if _gdg !=nil {return nil ,_gdg ;};_gebd .PdfAction =_cbeg ;_cbeg ._adc =_gebd ;return _cbeg ,nil ;case ActionTypeMovie :_af ,_bgd :=_gac .newPdfActionMovieFromDict (_bbd );if _bgd !=nil {return nil ,_bgd ;
};_af .PdfAction =_cbeg ;_cbeg ._adc =_af ;return _cbeg ,nil ;case ActionTypeHide :_fee ,_gdf :=_gac .newPdfActionHideFromDict (_bbd );if _gdf !=nil {return nil ,_gdf ;};_fee .PdfAction =_cbeg ;_cbeg ._adc =_fee ;return _cbeg ,nil ;case ActionTypeNamed :_fae ,_bd :=_gac .newPdfActionNamedFromDict (_bbd );
if _bd !=nil {return nil ,_bd ;};_fae .PdfAction =_cbeg ;_cbeg ._adc =_fae ;return _cbeg ,nil ;case ActionTypeSubmitForm :_dcba ,_add :=_gac .newPdfActionSubmitFormFromDict (_bbd );if _add !=nil {return nil ,_add ;};_dcba .PdfAction =_cbeg ;_cbeg ._adc =_dcba ;
return _cbeg ,nil ;case ActionTypeResetForm :_eae ,_fba :=_gac .newPdfActionResetFormFromDict (_bbd );if _fba !=nil {return nil ,_fba ;};_eae .PdfAction =_cbeg ;_cbeg ._adc =_eae ;return _cbeg ,nil ;case ActionTypeImportData :_ded ,_ace :=_gac .newPdfActionImportDataFromDict (_bbd );
if _ace !=nil {return nil ,_ace ;};_ded .PdfAction =_cbeg ;_cbeg ._adc =_ded ;return _cbeg ,nil ;case ActionTypeSetOCGState :_fbag ,_cga :=_gac .newPdfActionSetOCGStateFromDict (_bbd );if _cga !=nil {return nil ,_cga ;};_fbag .PdfAction =_cbeg ;_cbeg ._adc =_fbag ;
return _cbeg ,nil ;case ActionTypeRendition :_effb ,_efg :=_gac .newPdfActionRenditionFromDict (_bbd );if _efg !=nil {return nil ,_efg ;};_effb .PdfAction =_cbeg ;_cbeg ._adc =_effb ;return _cbeg ,nil ;case ActionTypeTrans :_cae ,_cge :=_gac .newPdfActionTransFromDict (_bbd );
if _cge !=nil {return nil ,_cge ;};_cae .PdfAction =_cbeg ;_cbeg ._adc =_cae ;return _cbeg ,nil ;case ActionTypeGoTo3DView :_gacg ,_gdb :=_gac .newPdfActionGoTo3DViewFromDict (_bbd );if _gdb !=nil {return nil ,_gdb ;};_gacg .PdfAction =_cbeg ;_cbeg ._adc =_gacg ;
return _cbeg ,nil ;case ActionTypeJavaScript :_gdbd ,_dee :=_gac .newPdfActionJavaScriptFromDict (_bbd );if _dee !=nil {return nil ,_dee ;};_gdbd .PdfAction =_cbeg ;_cbeg ._adc =_gdbd ;return _cbeg ,nil ;};_dcf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006eg\u0020u\u006ek\u006eo\u0077\u006e\u0020\u0061\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073",_ebea );
return nil ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_aggac *PdfFilespec )ToPdfObject ()_bgg .PdfObject {_gaccg :=_aggac .getDict ();_gaccg .Clear ();_gaccg .Set ("\u0054\u0079\u0070\u0065",_bgg .MakeName ("\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"));_gaccg .SetIfNotNil ("\u0046\u0053",_aggac .FS );
_gaccg .SetIfNotNil ("\u0046",_aggac .F );_gaccg .SetIfNotNil ("\u0055\u0046",_aggac .UF );_gaccg .SetIfNotNil ("\u0044\u004f\u0053",_aggac .DOS );_gaccg .SetIfNotNil ("\u004d\u0061\u0063",_aggac .Mac );_gaccg .SetIfNotNil ("\u0055\u006e\u0069\u0078",_aggac .Unix );
_gaccg .SetIfNotNil ("\u0049\u0044",_aggac .ID );_gaccg .SetIfNotNil ("\u0056",_aggac .V );_gaccg .SetIfNotNil ("\u0045\u0046",_aggac .EF );_gaccg .SetIfNotNil ("\u0052\u0046",_aggac .RF );_gaccg .SetIfNotNil ("\u0044\u0065\u0073\u0063",_aggac .Desc );
_gaccg .SetIfNotNil ("\u0043\u0049",_aggac .CI );return _aggac ._efde ;};

// PdfColorspaceLab is a L*, a*, b* 3 component colorspace.
type PdfColorspaceLab struct{WhitePoint []float64 ;BlackPoint []float64 ;Range []float64 ;_gdeb *_bgg .PdfIndirectObject ;};

// NewPdfAnnotationLine returns a new line annotation.
func NewPdfAnnotationLine ()*PdfAnnotationLine {_eeag :=NewPdfAnnotation ();_gcb :=&PdfAnnotationLine {};_gcb .PdfAnnotation =_eeag ;_gcb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eeag .SetContext (_gcb );return _gcb ;};func (_fgdbe *pdfFontType3 )baseFields ()*fontCommon {return &_fgdbe .fontCommon };
func _fgbg (_efee *_bgg .PdfObjectDictionary )bool {for _ ,_gacgc :=range _efee .Keys (){if _ ,_beeaa :=_bbaee [_gacgc .String ()];_beeaa {return true ;};};return false ;};

// ImageToRGB converts image in CalGray color space to RGB (A, B, C -> X, Y, Z).
func (_fbcb *PdfColorspaceCalGray )ImageToRGB (img Image )(Image ,error ){_cfbd :=_ceg .NewReader (img .getBase ());_bcda :=_dcg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_acbd :=_ceg .NewWriter (_bcda );
_eccd :=_db .Pow (2,float64 (img .BitsPerComponent ))-1;_dgbd :=make ([]uint32 ,3);var (_fddfb uint32 ;ANorm ,X ,Y ,Z ,_dgeg ,_aggf ,_fadf float64 ;_bfbbd error ;);for {_fddfb ,_bfbbd =_cfbd .ReadSample ();if _bfbbd ==_gb .EOF {break ;}else if _bfbbd !=nil {return img ,_bfbbd ;
};ANorm =float64 (_fddfb )/_eccd ;X =_fbcb .WhitePoint [0]*_db .Pow (ANorm ,_fbcb .Gamma );Y =_fbcb .WhitePoint [1]*_db .Pow (ANorm ,_fbcb .Gamma );Z =_fbcb .WhitePoint [2]*_db .Pow (ANorm ,_fbcb .Gamma );_dgeg =3.240479*X +-1.537150*Y +-0.498535*Z ;_aggf =-0.969256*X +1.875992*Y +0.041556*Z ;
_fadf =0.055648*X +-0.204043*Y +1.057311*Z ;_dgeg =_db .Min (_db .Max (_dgeg ,0),1.0);_aggf =_db .Min (_db .Max (_aggf ,0),1.0);_fadf =_db .Min (_db .Max (_fadf ,0),1.0);_dgbd [0]=uint32 (_dgeg *_eccd );_dgbd [1]=uint32 (_aggf *_eccd );_dgbd [2]=uint32 (_fadf *_eccd );
if _bfbbd =_acbd .WriteSamples (_dgbd );_bfbbd !=nil {return img ,_bfbbd ;};};return _ddccc (&_bcda ),nil ;};

// ToPdfObject implements interface PdfModel.
func (_dbb *PdfActionGoToR )ToPdfObject ()_bgg .PdfObject {_dbb .PdfAction .ToPdfObject ();_cba :=_dbb ._ddf ;_eea :=_cba .PdfObject .(*_bgg .PdfObjectDictionary );_eea .SetIfNotNil ("\u0053",_bgg .MakeName (string (ActionTypeGoToR )));if _dbb .F !=nil {_eea .Set ("\u0046",_dbb .F .ToPdfObject ());
};_eea .SetIfNotNil ("\u0044",_dbb .D );_eea .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_dbb .NewWindow );return _cba ;};

// A returns the value of the A component of the color.
func (_aegf *PdfColorCalRGB )A ()float64 {return _aegf [0]};

// PdfActionGoTo represents a GoTo action.
type PdfActionGoTo struct{*PdfAction ;D _bgg .PdfObject ;};

// NewOutline returns a new outline instance.
func NewOutline ()*Outline {return &Outline {}};var (ErrRequiredAttributeMissing =_ag .New ("\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074t\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073s\u0069\u006e\u0067");ErrInvalidAttribute =_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065");
ErrTypeCheck =_ag .New ("\u0074\u0079\u0070\u0065\u0020\u0063\u0068\u0065\u0063\u006b");_ecaa =_ag .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");ErrEncrypted =_ag .New ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
ErrNoFont =_ag .New ("\u0066\u006fn\u0074\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");ErrFontNotSupported =_agf .Errorf ("u\u006e\u0073\u0075\u0070po\u0072t\u0065\u0064\u0020\u0066\u006fn\u0074\u0020\u0028\u0025\u0077\u0029",_bgg .ErrNotSupported );
ErrType1CFontNotSupported =_agf .Errorf ("\u0054y\u0070\u00651\u0043\u0020\u0066o\u006e\u0074\u0073\u0020\u0061\u0072\u0065 \u006e\u006f\u0074\u0020\u0063\u0075r\u0072\u0065\u006e\u0074\u006c\u0079\u0020\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_bgg .ErrNotSupported );
ErrType3FontNotSupported =_agf .Errorf ("\u0054y\u0070\u00653\u0020\u0066\u006f\u006et\u0073\u0020\u0061r\u0065\u0020\u006e\u006f\u0074\u0020\u0063\u0075\u0072re\u006e\u0074\u006cy\u0020\u0073u\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0028%\u0077\u0029",_bgg .ErrNotSupported );
ErrTTCmapNotSupported =_agf .Errorf ("\u0075\u006es\u0075\u0070\u0070\u006fr\u0074\u0065d\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070e\u0020\u0063\u006d\u0061\u0070\u0020\u0066\u006f\u0072\u006d\u0061\u0074 \u0028\u0025\u0077\u0029",_bgg .ErrNotSupported );
ErrSignNotEnoughSpace =_agf .Errorf ("\u0069\u006e\u0073\u0075\u0066\u0066\u0069c\u0069\u0065\u006et\u0020\u0073\u0070a\u0063\u0065 \u0061\u006c\u006c\u006f\u0063\u0061t\u0065d \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0073");
ErrSignNoCertificates =_agf .Errorf ("\u0063\u006ful\u0064\u0020\u006eo\u0074\u0020\u0072\u0065tri\u0065ve\u0020\u0063\u0065\u0072\u0074\u0069\u0066ic\u0061\u0074\u0065\u0020\u0063\u0068\u0061i\u006e"););

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_dfbff *PdfShadingType4 )ToPdfObject ()_bgg .PdfObject {_dfbff .PdfShading .ToPdfObject ();_afagg ,_ccgbf :=_dfbff .getShadingDict ();if _ccgbf !=nil {_dcf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _dfbff .BitsPerCoordinate !=nil {_afagg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_dfbff .BitsPerCoordinate );};if _dfbff .BitsPerComponent !=nil {_afagg .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_dfbff .BitsPerComponent );
};if _dfbff .BitsPerFlag !=nil {_afagg .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_dfbff .BitsPerFlag );};if _dfbff .Decode !=nil {_afagg .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_dfbff .Decode );};if _dfbff .Function !=nil {if len (_dfbff .Function )==1{_afagg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_dfbff .Function [0].ToPdfObject ());
}else {_bccab :=_bgg .MakeArray ();for _ ,_fbgdb :=range _dfbff .Function {_bccab .Append (_fbgdb .ToPdfObject ());};_afagg .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bccab );};};return _dfbff ._fcfbb ;};func (_gccbd *PdfColorspaceSpecialSeparation )String ()string {return "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e";
};

// PdfColorspaceDeviceN represents a DeviceN color space. DeviceN color spaces are similar to Separation color
// spaces, except they can contain an arbitrary number of color components.
//
// Format: [/DeviceN names alternateSpace tintTransform]
//     or: [/DeviceN names alternateSpace tintTransform attributes]
type PdfColorspaceDeviceN struct{ColorantNames *_bgg .PdfObjectArray ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;Attributes *PdfColorspaceDeviceNAttributes ;_gcbe *_bgg .PdfIndirectObject ;};func _dcbab (_gffaa *PdfAnnotation )(*XObjectForm ,*PdfRectangle ,error ){_dfcga ,_fgeb :=_bgg .GetDict (_gffaa .AP );
if !_fgeb {return nil ,nil ,_ag .New ("f\u0069\u0065\u006c\u0064\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u0020\u0041\u0050\u0020d\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079");};if _dfcga ==nil {return nil ,nil ,nil ;};_ddad ,_fgeb :=_bgg .GetArray (_gffaa .Rect );
if !_fgeb ||_ddad .Len ()!=4{return nil ,nil ,_ag .New ("\u0072\u0065\u0063t\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064");};_bacee ,_ffgda :=NewPdfRectangle (*_ddad );if _ffgda !=nil {return nil ,nil ,_ffgda ;};_ffea :=_bgg .TraceToDirectObject (_dfcga .Get ("\u004e"));
switch _cefag :=_ffea .(type ){case *_bgg .PdfObjectStream :_ffdca :=_cefag ;_bfccb ,_ceaed :=NewXObjectFormFromStream (_ffdca );return _bfccb ,_bacee ,_ceaed ;case *_bgg .PdfObjectDictionary :_bcbc :=_cefag ;_gdfag ,_bffa :=_bgg .GetName (_gffaa .AS );
if !_bffa {return nil ,nil ,nil ;};if _bcbc .Get (*_gdfag )==nil {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0041\u0053\u0020\u0073\u0074\u0061\u0074\u0065\u0020\u006e\u006f\u0074 \u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0069\u006e\u0020\u0041\u0050\u0020\u0064\u0069\u0063\u0074\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006eg");
return nil ,nil ,nil ;};_fdca ,_bffa :=_bgg .GetStream (_bcbc .Get (*_gdfag ));if !_bffa {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006ce \u0074\u006f\u0020\u0061\u0063\u0063e\u0073\u0073\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073t\u0072\u0065\u0061\u006d\u0020\u0066\u006f\u0072 \u0025\u0076",_gdfag );
return nil ,nil ,_ag .New ("\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");};_bebaa ,_dedg :=NewXObjectFormFromStream (_fdca );return _bebaa ,_bacee ,_dedg ;};_dcf .Log .Debug ("\u0049\u006e\u0076\u0061li\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u004e\u003a\u0020%\u0054",_ffea );
return nil ,nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};func (_ffeba *PdfWriter )checkCrossReferenceStream ()bool {_fffab :=_ffeba ._ffgff .Major > 1||(_ffeba ._ffgff .Major ==1&&_ffeba ._ffgff .Minor > 4);
if _ffeba ._ebec !=nil {_fffab =*_ffeba ._ebec ;};return _fffab ;};

// PdfShadingPattern is a Shading patterns that provide a smooth transition between colors across an area to be painted,
// i.e. color(x,y) = f(x,y) at each point.
// It is a type 2 pattern (PatternType = 2).
type PdfShadingPattern struct{*PdfPattern ;Shading *PdfShading ;Matrix *_bgg .PdfObjectArray ;ExtGState _bgg .PdfObject ;};

// DetermineColorspaceNameFromPdfObject determines PDF colorspace from a PdfObject.  Returns the colorspace name and
// an error on failure. If the colorspace was not found, will return an empty string.
func DetermineColorspaceNameFromPdfObject (obj _bgg .PdfObject )(_bgg .PdfObjectName ,error ){var _befb *_bgg .PdfObjectName ;var _bfce *_bgg .PdfObjectArray ;if _affa ,_gdfe :=obj .(*_bgg .PdfIndirectObject );_gdfe {if _aagb ,_abdda :=_affa .PdfObject .(*_bgg .PdfObjectArray );
_abdda {_bfce =_aagb ;}else if _fdcb ,_dbbd :=_affa .PdfObject .(*_bgg .PdfObjectName );_dbbd {_befb =_fdcb ;};}else if _bebg ,_gafg :=obj .(*_bgg .PdfObjectArray );_gafg {_bfce =_bebg ;}else if _def ,_bggfd :=obj .(*_bgg .PdfObjectName );_bggfd {_befb =_def ;
};if _befb !=nil {switch *_befb {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return *_befb ,nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return *_befb ,nil ;
};};if _bfce !=nil &&_bfce .Len ()> 0{if _cbb ,_gaba :=_bfce .Get (0).(*_bgg .PdfObjectName );_gaba {switch *_cbb {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079","\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B","\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _bfce .Len ()==1{return *_cbb ,nil ;
};case "\u0043a\u006c\u0047\u0072\u0061\u0079","\u0043\u0061\u006c\u0052\u0047\u0042","\u004c\u0061\u0062":return *_cbb ,nil ;case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064","\u0050a\u0074\u0074\u0065\u0072\u006e","\u0049n\u0064\u0065\u0078\u0065\u0064":return *_cbb ,nil ;
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e","\u0044e\u0076\u0069\u0063\u0065\u004e":return *_cbb ,nil ;};};};return "",nil ;};func (_geffd *PdfWriter )mapObjectStreams (_dcgbc bool )(map[_bgg .PdfObject ]bool ,bool ){_bgadg :=make (map[_bgg .PdfObject ]bool );
for _ ,_abgge :=range _geffd ._eddge {if _caeea ,_gbdgf :=_abgge .(*_bgg .PdfObjectStreams );_gbdgf {_dcgbc =true ;for _ ,_fccafd :=range _caeea .Elements (){_bgadg [_fccafd ]=true ;if _eeaeda ,_dafcd :=_fccafd .(*_bgg .PdfIndirectObject );_dafcd {_bgadg [_eeaeda .PdfObject ]=true ;
};};};};return _bgadg ,_dcgbc ;};

// GetCharMetrics returns the character metrics for the specified character code.  A bool flag is
// returned to indicate whether or not the entry was found in the glyph to charcode mapping.
// How it works:
//  1) Return a value the /Widths array (charWidths) if there is one.
//  2) If the font has the same name as a standard 14 font then return width=250.
//  3) Otherwise return no match and let the caller substitute a default.
func (_dgec pdfFontSimple )GetCharMetrics (code _cc .CharCode )(_dad .CharMetrics ,bool ){if _efga ,_baba :=_dgec ._dcbe [code ];_baba {return _dad .CharMetrics {Wx :_efga },true ;};if _dad .IsStdFont (_dad .StdFontName (_dgec ._dbbc )){return _dad .CharMetrics {Wx :250},true ;
};return _dad .CharMetrics {},false ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (3 for rgb).
func (_agcea *PdfColorspaceDeviceRGB )ColorFromPdfObjects (objects []_bgg .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bceg ,_geef :=_bgg .GetNumbersAsFloat (objects );
if _geef !=nil {return nil ,_geef ;};return _agcea .ColorFromFloats (_bceg );};

// NewPdfPageResourcesFromDict creates and returns a new PdfPageResources object
// from the input dictionary.
func NewPdfPageResourcesFromDict (dict *_bgg .PdfObjectDictionary )(*PdfPageResources ,error ){_ffdf :=NewPdfPageResources ();if _fcaga :=dict .Get ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e");_fcaga !=nil {_ffdf .ExtGState =_fcaga ;};if _ccbee :=dict .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");
_ccbee !=nil &&!_bgg .IsNullObject (_ccbee ){_ffdf .ColorSpace =_ccbee ;};if _bfcfc :=dict .Get ("\u0050a\u0074\u0074\u0065\u0072\u006e");_bfcfc !=nil {_ffdf .Pattern =_bfcfc ;};if _cdcff :=dict .Get ("\u0053h\u0061\u0064\u0069\u006e\u0067");_cdcff !=nil {_ffdf .Shading =_cdcff ;
};if _cgagbe :=dict .Get ("\u0058O\u0062\u006a\u0065\u0063\u0074");_cgagbe !=nil {_ffdf .XObject =_cgagbe ;};if _fdegf :=_bgg .ResolveReference (dict .Get ("\u0046\u006f\u006e\u0074"));_fdegf !=nil {_ffdf .Font =_fdegf ;};if _cgec :=dict .Get ("\u0050r\u006f\u0063\u0053\u0065\u0074");
_cgec !=nil {_ffdf .ProcSet =_cgec ;};if _bfggg :=dict .Get ("\u0050\u0072\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_bfggg !=nil {_ffdf .Properties =_bfggg ;};return _ffdf ,nil ;};func (_adcb *PdfAnnotation )String ()string {_bec :="";_fdb ,_bbf :=_adcb .ToPdfObject ().(*_bgg .PdfIndirectObject );
if _bbf {_bec =_e .Sprintf ("\u0025\u0054\u003a\u0020\u0025\u0073",_adcb ._afg ,_fdb .PdfObject .String ());};return _bec ;};

// SetPdfKeywords sets the Keywords attribute of the output PDF.
func SetPdfKeywords (keywords string ){_abfga .Lock ();defer _abfga .Unlock ();_fggff =keywords };func _dcbbb (_aabbc _bgg .PdfObject )(*PdfColorspaceDeviceN ,error ){_agcc :=NewPdfColorspaceDeviceN ();if _ecfg ,_afdbb :=_aabbc .(*_bgg .PdfIndirectObject );
_afdbb {_agcc ._gcbe =_ecfg ;};_aabbc =_bgg .TraceToDirectObject (_aabbc );_gdbfa ,_afae :=_aabbc .(*_bgg .PdfObjectArray );if !_afae {return nil ,_e .Errorf ("\u0064\u0065\u0076\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063\u0074");
};if _gdbfa .Len ()!=4&&_gdbfa .Len ()!=5{return nil ,_e .Errorf ("\u0064\u0065\u0076ic\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0049\u006ec\u006fr\u0072e\u0063t\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");};_aabbc =_gdbfa .Get (0);
_ddbae ,_afae :=_aabbc .(*_bgg .PdfObjectName );if !_afae {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_ddbae !="\u0044e\u0076\u0069\u0063\u0065\u004e"{return nil ,_e .Errorf ("\u0064\u0065v\u0069\u0063\u0065\u004e\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020na\u006d\u0065");};_aabbc =_gdbfa .Get (1);
_aabbc =_bgg .TraceToDirectObject (_aabbc );_adgga ,_afae :=_aabbc .(*_bgg .PdfObjectArray );if !_afae {return nil ,_e .Errorf ("\u0064\u0065\u0076i\u0063\u0065\u004e\u0020C\u0053\u003a\u0020\u0049\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0061\u0072\u0072\u0061\u0079");
};_agcc .ColorantNames =_adgga ;_aabbc =_gdbfa .Get (2);_adgbc ,_debg :=NewPdfColorspaceFromPdfObject (_aabbc );if _debg !=nil {return nil ,_debg ;};_agcc .AlternateSpace =_adgbc ;_efdg ,_debg :=_aefac (_gdbfa .Get (3));if _debg !=nil {return nil ,_debg ;
};_agcc .TintTransform =_efdg ;if _gdbfa .Len ()==5{_acga ,_dccbb :=_debb (_gdbfa .Get (4));if _dccbb !=nil {return nil ,_dccbb ;};_agcc .Attributes =_acga ;};return _agcc ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 4 for a CMYK32 device.
func (_eadb *PdfColorspaceDeviceCMYK )GetNumComponents ()int {return 4};

// ColorToRGB converts gray -> rgb for a single color component.
func (_cbaa *PdfColorspaceDeviceGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_gfdbb ,_bdgfe :=color .(*PdfColorDeviceGray );if !_bdgfe {_dcf .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006fr\u0020\u006e\u006f\u0074\u0020\u0064\u0065v\u0069\u0063\u0065\u0020\u0067\u0072\u0061\u0079\u0020\u0025\u0054",color );
return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return NewPdfColorDeviceRGB (float64 (*_gfdbb ),float64 (*_gfdbb ),float64 (*_gfdbb )),nil ;};func (_dffd *pdfCIDFontType0 )getFontDescriptor ()*PdfFontDescriptor {return _dffd ._abdg };


// PdfColorspaceDeviceGray represents a grayscale colorspace.
type PdfColorspaceDeviceGray struct{};

// AddOutlineTree adds outlines to a PDF file.
func (_cebfa *PdfWriter )AddOutlineTree (outlineTree *PdfOutlineTreeNode ){_cebfa ._fbbc =outlineTree };var _bbaee =map[string ]struct{}{"\u0046\u0054":{},"\u004b\u0069\u0064\u0073":{},"\u0054":{},"\u0054\u0055":{},"\u0054\u004d":{},"\u0046\u0066":{},"\u0056":{},"\u0044\u0056":{},"\u0041\u0041":{},"\u0044\u0041":{},"\u0051":{},"\u0044\u0053":{},"\u0052\u0056":{}};


// GetNumComponents returns the number of color components (1 for Indexed).
func (_ebgf *PdfColorspaceSpecialIndexed )GetNumComponents ()int {return 1};func (_dbcg *PdfReader )newPdfAnnotationWidgetFromDict (_ffgd *_bgg .PdfObjectDictionary )(*PdfAnnotationWidget ,error ){_edce :=PdfAnnotationWidget {};_edce .H =_ffgd .Get ("\u0048");
_edce .MK =_ffgd .Get ("\u004d\u004b");_edce .A =_ffgd .Get ("\u0041");_edce .AA =_ffgd .Get ("\u0041\u0041");_edce .BS =_ffgd .Get ("\u0042\u0053");_edce .Parent =_ffgd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");return &_edce ,nil ;};

// SignatureHandler interface defines the common functionality for PDF signature handlers, which
// need to be capable of validating digital signatures and signing PDF documents.
type SignatureHandler interface{

// IsApplicable checks if a given signature dictionary `sig` is applicable for the signature handler.
// For example a signature of type `adbe.pkcs7.detached` might not fit for a rsa.sha1 handler.
IsApplicable (_fdgdf *PdfSignature )bool ;

// Validate validates a PDF signature against a given digest (hash) such as that determined
// for an input file. Returns validation results.
Validate (_bgacb *PdfSignature ,_bgadac Hasher )(SignatureValidationResult ,error );

// InitSignature prepares the signature dictionary for signing. This involves setting all
// necessary fields, and also allocating sufficient space to the Contents so that the
// finalized signature can be inserted once the hash is calculated.
InitSignature (_bcdfe *PdfSignature )error ;

// NewDigest creates a new digest/hasher based on the signature dictionary and handler.
NewDigest (_eeaed *PdfSignature )(Hasher ,error );

// Sign receives the hash `digest` (for example hash of an input file), and signs based
// on the signature dictionary `sig` and applies the signature data to the signature
// dictionary Contents field.
Sign (_bddab *PdfSignature ,_agddb Hasher )error ;};

// ToJBIG2Image converts current image to the core.JBIG2Image.
func (_cbefe *Image )ToJBIG2Image ()(*_bgg .JBIG2Image ,error ){_bffec ,_cgebc :=_cbefe .ToGoImage ();if _cgebc !=nil {return nil ,_cgebc ;};return _bgg .GoImageToJBIG2 (_bffec ,_bgg .JB2ImageAutoThreshold );};

// ToInteger convert to an integer format.
func (_aeac *PdfColorDeviceRGB )ToInteger (bits int )[3]uint32 {_dcdec :=_db .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_dcdec *_aeac .R ()),uint32 (_dcdec *_aeac .G ()),uint32 (_dcdec *_aeac .B ())};};

// ToPdfObject implements interface PdfModel.
func (_cff *PdfAnnotationLine )ToPdfObject ()_bgg .PdfObject {_cff .PdfAnnotation .ToPdfObject ();_acb :=_cff ._gec ;_dde :=_acb .PdfObject .(*_bgg .PdfObjectDictionary );_cff .PdfAnnotationMarkup .appendToPdfDictionary (_dde );_dde .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u004c\u0069\u006e\u0065"));
_dde .SetIfNotNil ("\u004c",_cff .L );_dde .SetIfNotNil ("\u0042\u0053",_cff .BS );_dde .SetIfNotNil ("\u004c\u0045",_cff .LE );_dde .SetIfNotNil ("\u0049\u0043",_cff .IC );_dde .SetIfNotNil ("\u004c\u004c",_cff .LL );_dde .SetIfNotNil ("\u004c\u004c\u0045",_cff .LLE );
_dde .SetIfNotNil ("\u0043\u0061\u0070",_cff .Cap );_dde .SetIfNotNil ("\u0049\u0054",_cff .IT );_dde .SetIfNotNil ("\u004c\u004c\u004f",_cff .LLO );_dde .SetIfNotNil ("\u0043\u0050",_cff .CP );_dde .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_cff .Measure );
_dde .SetIfNotNil ("\u0043\u004f",_cff .CO );return _acb ;};func _cdffe (_bggbe _gb .ReadSeeker ,_fgaa *ReaderOpts ,_agace bool ,_agecg string )(*PdfReader ,error ){if _fgaa ==nil {_fgaa =NewReaderOpts ();};_eebd :=*_fgaa ;_fgce :=&PdfReader {_aeacdd :_bggbe ,_ddcbee :map[_bgg .PdfObject ]struct{}{},_gabea :_bfgb (),_cdbfbb :_fgaa .LazyLoad ,_cddc :_fgaa .ComplianceMode ,_ceea :_agace ,_fdbbf :&_eebd };
_abedc ,_bfgg :=_fdbe ("\u0072");if _bfgg !=nil {return nil ,_bfgg ;};_bfgg =_dba .Track (_abedc ,_agecg );if _bfgg !=nil {return nil ,_bfgg ;};_fgce ._eegac =_abedc ;var _cfaa *_bgg .PdfParser ;if !_fgce ._cddc {_cfaa ,_bfgg =_bgg .NewParser (_bggbe );
}else {_cfaa ,_bfgg =_bgg .NewCompliancePdfParser (_bggbe );};if _bfgg !=nil {return nil ,_bfgg ;};_fgce ._ebdgc =_cfaa ;_ebacg ,_bfgg :=_fgce .IsEncrypted ();if _bfgg !=nil {return nil ,_bfgg ;};if !_ebacg {_bfgg =_fgce .loadStructure ();if _bfgg !=nil {return nil ,_bfgg ;
};}else if _agace {_aaec ,_bbad :=_fgce .Decrypt ([]byte (_fgaa .Password ));if _bbad !=nil {return nil ,_bbad ;};if !_aaec {return nil ,_ag .New ("\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f \u0064\u0065c\u0072\u0079\u0070\u0074\u0020\u0070\u0061\u0073\u0073w\u006f\u0072\u0064\u0020p\u0072\u006f\u0074\u0065\u0063\u0074\u0065\u0064\u0020\u0066\u0069\u006c\u0065\u0020\u002d\u0020\u006e\u0065\u0065\u0064\u0020\u0074\u006f\u0020\u0073\u0070\u0065\u0063\u0069\u0066y\u0020\u0070\u0061s\u0073\u0020\u0074\u006f\u0020\u0044\u0065\u0063\u0072\u0079\u0070\u0074");
};};_fgce ._gdfc =make (map[*PdfReader ]*PdfReader );_fgce ._bdegd =make ([]*PdfReader ,_cfaa .GetRevisionNumber ());return _fgce ,nil ;};

// Subtype returns the font's "Subtype" field.
func (_gafe *PdfFont )Subtype ()string {_agag :=_gafe .baseFields ()._dadgd ;if _fdcbe ,_egdd :=_gafe ._efdec .(*pdfFontType0 );_egdd {_agag =_agag +"\u003a"+_fdcbe .DescendantFont .Subtype ();};return _agag ;};

// SetOptimizer sets the optimizer to optimize PDF before writing.
func (_eggb *PdfWriter )SetOptimizer (optimizer Optimizer ){_eggb ._ebdfc =optimizer };

// GetContainingPdfObject returns the container of the outline item (indirect object).
func (_dccba *PdfOutlineItem )GetContainingPdfObject ()_bgg .PdfObject {return _dccba ._gcec };func _cfadb (_dacdc _bgg .PdfObject )(*_bgg .PdfObjectDictionary ,*fontCommon ,error ){_fgee :=&fontCommon {};if _dffef ,_ecfa :=_dacdc .(*_bgg .PdfIndirectObject );
_ecfa {_fgee ._dggfe =_dffef .ObjectNumber ;};_cfgec ,_fdbge :=_bgg .GetDict (_dacdc );if !_fdbge {_dcf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_dacdc );
return nil ,nil ,ErrFontNotSupported ;};_gfbfbf ,_fdbge :=_bgg .GetNameVal (_cfgec .Get ("\u0054\u0079\u0070\u0065"));if !_fdbge {_dcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};if _gfbfbf !="\u0046\u006f\u006e\u0074"{_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u0020\u0049\u006e\u0063\u006f\u006d\u0070\u0061t\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u002e\u0020\u0054\u0079\u0070\u0065\u003d\u0025\u0071\u002e\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0025\u0071.",_gfbfbf ,"\u0046\u006f\u006e\u0074");
return nil ,nil ,_bgg .ErrTypeError ;};_faff ,_fdbge :=_bgg .GetNameVal (_cfgec .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065"));if !_fdbge {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020F\u006f\u006e\u0074 \u0049\u006e\u0063o\u006d\u0070a\u0074\u0069\u0062\u0069\u006c\u0069t\u0079. \u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,nil ,ErrRequiredAttributeMissing ;};_fgee ._dadgd =_faff ;_cgac ,_fdbge :=_bgg .GetNameVal (_cfgec .Get ("\u004e\u0061\u006d\u0065"));if _fdbge {_fgee ._afge =_cgac ;};_ffgeg :=_cfgec .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _ffgeg !=nil {_fgee ._fdded =_bgg .TraceToDirectObject (_ffgeg );
_cgfcg ,_cddac :=_efef (_fgee ._fdded ,_fgee );if _cddac !=nil {return _cfgec ,_fgee ,_cddac ;};_fgee ._ffed =_cgfcg ;}else if _faff =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"||_faff =="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_babd ,_bddda :=_fbb .NewCIDSystemInfo (_cfgec .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));
if _bddda !=nil {return _cfgec ,_fgee ,_bddda ;};_ggcfa :=_e .Sprintf ("\u0025\u0073\u002d\u0025\u0073\u002d\u0055\u0043\u0053\u0032",_babd .Registry ,_babd .Ordering );if _fbb .IsPredefinedCMap (_ggcfa ){_fgee ._ffed ,_bddda =_fbb .LoadPredefinedCMap (_ggcfa );
if _bddda !=nil {_dcf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_ggcfa ,_bddda );
};};};_gccfe :=_cfgec .Get ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072");if _gccfe !=nil {_gbee ,_aeacd :=_caab (_gccfe );if _aeacd !=nil {_dcf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0042\u0061\u0064\u0020\u0066\u006f\u006et\u0020d\u0065s\u0063r\u0069\u0070\u0074\u006f\u0072\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_aeacd );
return _cfgec ,_fgee ,_aeacd ;};_fgee ._abdg =_gbee ;};if _faff !="\u0054\u0079\u0070e\u0033"{_gcbb ,_fgfae :=_bgg .GetNameVal (_cfgec .Get ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074"));if !_fgfae {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u006f\u006et\u0020\u0049\u006ec\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069t\u0079\u002e\u0020\u0042\u0061se\u0046\u006f\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
return _cfgec ,_fgee ,ErrRequiredAttributeMissing ;};_fgee ._dbbc =_gcbb ;};return _cfgec ,_fgee ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gbcc *PdfAnnotationPopup )ToPdfObject ()_bgg .PdfObject {_gbcc .PdfAnnotation .ToPdfObject ();_bafcc :=_gbcc ._gec ;_fadc :=_bafcc .PdfObject .(*_bgg .PdfObjectDictionary );_fadc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0050\u006f\u0070u\u0070"));
_fadc .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_gbcc .Parent );_fadc .SetIfNotNil ("\u004f\u0070\u0065\u006e",_gbcc .Open );return _bafcc ;};

// Resample resamples the image data converting from current BitsPerComponent to a target BitsPerComponent
// value.  Sets the image's BitsPerComponent to the target value following resampling.
//
// For example, converting an 8-bit RGB image to 1-bit grayscale (common for scanned images):
//   // Convert RGB image to grayscale.
//   rgbColorSpace := pdf.NewPdfColorspaceDeviceRGB()
//   grayImage, err := rgbColorSpace.ImageToGray(rgbImage)
//   if err != nil {
//     return err
//   }
//   // Resample as 1 bit.
//   grayImage.Resample(1)
func (_acba *Image )Resample (targetBitsPerComponent int64 ){if _acba .BitsPerComponent ==targetBitsPerComponent {return ;};_efbeb :=_acba .GetSamples ();if targetBitsPerComponent < _acba .BitsPerComponent {_feee :=_acba .BitsPerComponent -targetBitsPerComponent ;
for _aeedc :=range _efbeb {_efbeb [_aeedc ]>>=uint (_feee );};}else if targetBitsPerComponent > _acba .BitsPerComponent {_aaaca :=targetBitsPerComponent -_acba .BitsPerComponent ;for _feadee :=range _efbeb {_efbeb [_feadee ]<<=uint (_aaaca );};};_acba .BitsPerComponent =targetBitsPerComponent ;
if _acba .BitsPerComponent < 8{_acba .resampleLowBits (_efbeb );return ;};_edfbb :=_dcg .BytesPerLine (int (_acba .Width ),int (_acba .BitsPerComponent ),_acba .ColorComponents );_bacg :=make ([]byte ,_edfbb *int (_acba .Height ));var (_babf ,_fdga ,_dafgg ,_faabg int ;
_dfde uint32 ;);for _dafgg =0;_dafgg < int (_acba .Height );_dafgg ++{_babf =_dafgg *_edfbb ;_fdga =(_dafgg +1)*_edfbb -1;_dgefe :=_ceg .ResampleUint32 (_efbeb [_babf :_fdga ],int (targetBitsPerComponent ),8);for _faabg ,_dfde =range _dgefe {_bacg [_faabg +_babf ]=byte (_dfde );
};};_acba .Data =_bacg ;};

// PdfColorspaceDeviceRGB represents an RGB colorspace.
type PdfColorspaceDeviceRGB struct{};

// NewPdfColorspaceCalRGB returns a new CalRGB colorspace object.
func NewPdfColorspaceCalRGB ()*PdfColorspaceCalRGB {_bffdg :=&PdfColorspaceCalRGB {};_bffdg .BlackPoint =[]float64 {0.0,0.0,0.0};_bffdg .Gamma =[]float64 {1.0,1.0,1.0};_bffdg .Matrix =[]float64 {1,0,0,0,1,0,0,0,1};return _bffdg ;};

// WriteString outputs the object as it is to be written to file.
func (_eegdb *PdfTransformParamsDocMDP )WriteString ()string {return _eegdb .ToPdfObject ().WriteString ();};

// NewPdfField returns an initialized PdfField.
func NewPdfField ()*PdfField {return &PdfField {_fagb :_bgg .MakeIndirectObject (_bgg .MakeDict ())}};

// DecodeArray returns the range of color component values in CalRGB colorspace.
func (_dfcb *PdfColorspaceCalRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// String returns the name of the colorspace (DeviceN).
func (_efaf *PdfColorspaceDeviceN )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u004e"};

// PdfFontDescriptor specifies metrics and other attributes of a font and can refer to a FontFile
// for embedded fonts.
// 9.8 Font Descriptors (page 281)
type PdfFontDescriptor struct{FontName _bgg .PdfObject ;FontFamily _bgg .PdfObject ;FontStretch _bgg .PdfObject ;FontWeight _bgg .PdfObject ;Flags _bgg .PdfObject ;FontBBox _bgg .PdfObject ;ItalicAngle _bgg .PdfObject ;Ascent _bgg .PdfObject ;Descent _bgg .PdfObject ;
Leading _bgg .PdfObject ;CapHeight _bgg .PdfObject ;XHeight _bgg .PdfObject ;StemV _bgg .PdfObject ;StemH _bgg .PdfObject ;AvgWidth _bgg .PdfObject ;MaxWidth _bgg .PdfObject ;MissingWidth _bgg .PdfObject ;FontFile _bgg .PdfObject ;FontFile2 _bgg .PdfObject ;
FontFile3 _bgg .PdfObject ;CharSet _bgg .PdfObject ;_gdfdf int ;_dgac float64 ;*fontFile ;_bgfg *_dad .TtfType ;

// Additional entries for CIDFonts
Style _bgg .PdfObject ;Lang _bgg .PdfObject ;FD _bgg .PdfObject ;CIDSet _bgg .PdfObject ;_afce *_bgg .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_fbge *Permissions )ToPdfObject ()_bgg .PdfObject {return _fbge ._ffcaa };func (_edea *pdfFontType0 )baseFields ()*fontCommon {return &_edea .fontCommon };

// ToPdfObject implements interface PdfModel.
func (_cgdd *PdfAnnotationScreen )ToPdfObject ()_bgg .PdfObject {_cgdd .PdfAnnotation .ToPdfObject ();_gfgb :=_cgdd ._gec ;_dgba :=_gfgb .PdfObject .(*_bgg .PdfObjectDictionary );_dgba .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0053\u0063\u0072\u0065\u0065\u006e"));
_dgba .SetIfNotNil ("\u0054",_cgdd .T );_dgba .SetIfNotNil ("\u004d\u004b",_cgdd .MK );_dgba .SetIfNotNil ("\u0041",_cgdd .A );_dgba .SetIfNotNil ("\u0041\u0041",_cgdd .AA );return _gfgb ;};

// ToPdfObject implements interface PdfModel.
func (_dedc *PdfAnnotationRedact )ToPdfObject ()_bgg .PdfObject {_dedc .PdfAnnotation .ToPdfObject ();_dfcgb :=_dedc ._gec ;_aefe :=_dfcgb .PdfObject .(*_bgg .PdfObjectDictionary );_dedc .PdfAnnotationMarkup .appendToPdfDictionary (_aefe );_aefe .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0052\u0065\u0064\u0061\u0063\u0074"));
_aefe .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dedc .QuadPoints );_aefe .SetIfNotNil ("\u0049\u0043",_dedc .IC );_aefe .SetIfNotNil ("\u0052\u004f",_dedc .RO );_aefe .SetIfNotNil ("O\u0076\u0065\u0072\u006c\u0061\u0079\u0054\u0065\u0078\u0074",_dedc .OverlayText );
_aefe .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_dedc .Repeat );_aefe .SetIfNotNil ("\u0044\u0041",_dedc .DA );_aefe .SetIfNotNil ("\u0051",_dedc .Q );return _dfcgb ;};

// ToPdfObject returns an indirect object containing the signature field dictionary.
func (_aggfgb *PdfFieldSignature )ToPdfObject ()_bgg .PdfObject {if _aggfgb .PdfAnnotationWidget !=nil {_aggfgb .PdfAnnotationWidget .ToPdfObject ();};_aggfgb .PdfField .ToPdfObject ();_cccf :=_aggfgb ._fagb ;_dbcb :=_cccf .PdfObject .(*_bgg .PdfObjectDictionary );
_dbcb .SetIfNotNil ("\u0046\u0054",_bgg .MakeName ("\u0053\u0069\u0067"));_dbcb .SetIfNotNil ("\u004c\u006f\u0063\u006b",_aggfgb .Lock );_dbcb .SetIfNotNil ("\u0053\u0056",_aggfgb .SV );if _aggfgb .V !=nil {_dbcb .SetIfNotNil ("\u0056",_aggfgb .V .ToPdfObject ());
};return _cccf ;};

// PdfAnnotationPolyLine represents PolyLine annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolyLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bgg .PdfObject ;LE _bgg .PdfObject ;BS _bgg .PdfObject ;IC _bgg .PdfObject ;BE _bgg .PdfObject ;IT _bgg .PdfObject ;Measure _bgg .PdfObject ;};

// ToInteger convert to an integer format.
func (_defc *PdfColorLab )ToInteger (bits int )[3]uint32 {_ddged :=_db .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_ddged *_defc .L ()),uint32 (_ddged *_defc .A ()),uint32 (_ddged *_defc .B ())};};

// GetContainingPdfObject implements interface PdfModel.
func (_abcbb *PdfSignatureReference )GetContainingPdfObject ()_bgg .PdfObject {return _abcbb ._fcggb };func (_fag *PdfReader )newPdfAnnotationPopupFromDict (_fcdb *_bgg .PdfObjectDictionary )(*PdfAnnotationPopup ,error ){_aed :=PdfAnnotationPopup {};_aed .Parent =_fcdb .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_aed .Open =_fcdb .Get ("\u004f\u0070\u0065\u006e");return &_aed ,nil ;};

// PdfShadingType2 is an Axial shading.
type PdfShadingType2 struct{*PdfShading ;Coords *_bgg .PdfObjectArray ;Domain *_bgg .PdfObjectArray ;Function []PdfFunction ;Extend *_bgg .PdfObjectArray ;};

// GetNumComponents returns the number of color components.
func (_fdge *PdfColorspaceICCBased )GetNumComponents ()int {return _fdge .N };

// GetContext returns a reference to the subpattern entry: either PdfTilingPattern or PdfShadingPattern.
func (_cgffa *PdfPattern )GetContext ()PdfModel {return _cgffa ._dcdgae };func _aeaf (_ffaa *_bgg .PdfObjectDictionary ,_gcce *fontCommon )(*pdfCIDFontType0 ,error ){if _gcce ._dadgd !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030"{_dcf .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0030\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_gcce );
return nil ,_bgg .ErrRangeError ;};_ddda :=_gegd (_gcce );_aggacf ,_ffbd :=_bgg .GetDict (_ffaa .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_ffbd {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_gcce );
return nil ,ErrRequiredAttributeMissing ;};_ddda .CIDSystemInfo =_aggacf ;_ddda .DW =_ffaa .Get ("\u0044\u0057");_ddda .W =_ffaa .Get ("\u0057");_ddda .DW2 =_ffaa .Get ("\u0044\u0057\u0032");_ddda .W2 =_ffaa .Get ("\u0057\u0032");_ddda ._ceceg =1000.0;
if _ddagg ,_dbabd :=_bgg .GetNumberAsFloat (_ddda .DW );_dbabd ==nil {_ddda ._ceceg =_ddagg ;};_cefae ,_cdec :=_acgfb (_ddda .W );if _cdec !=nil {return nil ,_cdec ;};if _cefae ==nil {_cefae =map[_cc .CharCode ]float64 {};};_ddda ._debd =_cefae ;return _ddda ,nil ;
};

// GetContainingPdfObject returns the XObject Form's containing object (indirect object).
func (_cdcca *XObjectForm )GetContainingPdfObject ()_bgg .PdfObject {return _cdcca ._eaeegc };

// PdfColorDeviceCMYK is a CMYK32 color, where each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceCMYK [4]float64 ;

// NewPdfFontFromTTF loads a TTF font and returns a PdfFont type that can be
// used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTF.
func NewPdfFontFromTTF (r _gb .ReadSeeker )(*PdfFont ,error ){const _fbddd =_cc .CharCode (32);const _fcede =_cc .CharCode (255);_eaagb ,_ebaff :=_ge .ReadAll (r );if _ebaff !=nil {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_ebaff );
return nil ,_ebaff ;};_bbcf ,_ebaff :=_dad .TtfParse (_aa .NewReader (_eaagb ));if _ebaff !=nil {_dcf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0054\u0054F\u0020\u0066\u006fn\u0074:\u0020\u0025\u0076",_ebaff );
return nil ,_ebaff ;};_acca :=&pdfFontSimple {_dcbe :make (map[_cc .CharCode ]float64 ),fontCommon :fontCommon {_dadgd :"\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"}};_acca ._bfced =_cc .NewWinAnsiEncoder ();_acca ._dbbc =_bbcf .PostScriptName ;_acca .FirstChar =_bgg .MakeInteger (int64 (_fbddd ));
_acca .LastChar =_bgg .MakeInteger (int64 (_fcede ));_debbg :=1000.0/float64 (_bbcf .UnitsPerEm );if len (_bbcf .Widths )<=0{return nil ,_ag .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_efae :=_debbg *float64 (_bbcf .Widths [0]);_cecfb :=make ([]float64 ,0,_fcede -_fbddd +1);for _ggfeg :=_fbddd ;_ggfeg <=_fcede ;_ggfeg ++{_gdcde ,_faee :=_acca .Encoder ().CharcodeToRune (_ggfeg );if !_faee {_dcf .Log .Debug ("\u0052u\u006e\u0065\u0020\u006eo\u0074\u0020\u0066\u006f\u0075n\u0064 \u0028c\u006f\u0064\u0065\u003a\u0020\u0025\u0064)",_ggfeg );
_cecfb =append (_cecfb ,_efae );continue ;};_fabbf ,_edbc :=_bbcf .Chars [_gdcde ];if !_edbc {_dcf .Log .Debug ("R\u0075\u006e\u0065\u0020no\u0074 \u0069\u006e\u0020\u0054\u0054F\u0020\u0043\u0068\u0061\u0072\u0073");_cecfb =append (_cecfb ,_efae );continue ;
};_gacfde :=_debbg *float64 (_bbcf .Widths [_fabbf ]);_cecfb =append (_cecfb ,_gacfde );};_acca .Widths =_bgg .MakeIndirectObject (_bgg .MakeArrayFromFloats (_cecfb ));if len (_cecfb )< int (_fcede -_fbddd +1){_dcf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0065\u006e\u0067t\u0068\u0020\u006f\u0066\u0020\u0077\u0069\u0064\u0074\u0068s,\u0020\u0025\u0064 \u003c \u0025\u0064",len (_cecfb ),255-32+1);
return nil ,_bgg .ErrRangeError ;};for _deaea :=_fbddd ;_deaea <=_fcede ;_deaea ++{_acca ._dcbe [_deaea ]=_cecfb [_deaea -_fbddd ];};_acca .Encoding =_bgg .MakeName ("\u0057i\u006eA\u006e\u0073\u0069\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067");_dgcbe :=&PdfFontDescriptor {};
_dgcbe .FontName =_bgg .MakeName (_bbcf .PostScriptName );_dgcbe .Ascent =_bgg .MakeFloat (_debbg *float64 (_bbcf .TypoAscender ));_dgcbe .Descent =_bgg .MakeFloat (_debbg *float64 (_bbcf .TypoDescender ));_dgcbe .CapHeight =_bgg .MakeFloat (_debbg *float64 (_bbcf .CapHeight ));
_dgcbe .FontBBox =_bgg .MakeArrayFromFloats ([]float64 {_debbg *float64 (_bbcf .Xmin ),_debbg *float64 (_bbcf .Ymin ),_debbg *float64 (_bbcf .Xmax ),_debbg *float64 (_bbcf .Ymax )});_dgcbe .ItalicAngle =_bgg .MakeFloat (_bbcf .ItalicAngle );_dgcbe .MissingWidth =_bgg .MakeFloat (_debbg *float64 (_bbcf .Widths [0]));
_gccd ,_ebaff :=_bgg .MakeStream (_eaagb ,_bgg .NewFlateEncoder ());if _ebaff !=nil {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_ebaff );
return nil ,_ebaff ;};_gccd .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bgg .MakeInteger (int64 (len (_eaagb ))));_dgcbe .FontFile2 =_gccd ;if _bbcf .Bold {_dgcbe .StemV =_bgg .MakeInteger (120);}else {_dgcbe .StemV =_bgg .MakeInteger (70);
};_fbdbc :=_cbfbd ;if _bbcf .IsFixedPitch {_fbdbc |=_dfcfa ;};if _bbcf .ItalicAngle !=0{_fbdbc |=_ebdcf ;};_dgcbe .Flags =_bgg .MakeInteger (int64 (_fbdbc ));_acca ._abdg =_dgcbe ;_bbbaf :=&PdfFont {_efdec :_acca };return _bbbaf ,nil ;};

// WatermarkImageOptions contains options for configuring the watermark process.
type WatermarkImageOptions struct{Alpha float64 ;FitToWidth bool ;PreserveAspectRatio bool ;};

// PdfColorDeviceGray represents a grayscale color value that shall be represented by a single number in the
// range 0.0 to 1.0 where 0.0 corresponds to black and 1.0 to white.
type PdfColorDeviceGray float64 ;

// NewPdfReaderFromFile creates a new PdfReader from the speficied PDF file.
// If ReaderOpts is nil it will be set to default value from NewReaderOpts.
func NewPdfReaderFromFile (pdfFile string ,opts *ReaderOpts )(*PdfReader ,*_eg .File ,error ){const _dbbf ="\u006d\u006f\u0064\u0065\u006c\u003a\u004e\u0065\u0077\u0050\u0064f\u0052\u0065\u0061\u0064\u0065\u0072\u0046\u0072\u006f\u006dF\u0069\u006c\u0065";
_cfdcd ,_facfc :=_eg .Open (pdfFile );if _facfc !=nil {return nil ,nil ,_facfc ;};_abeb ,_facfc :=_cdffe (_cfdcd ,opts ,true ,_dbbf );if _facfc !=nil {_cfdcd .Close ();return nil ,nil ,_facfc ;};return _abeb ,_cfdcd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_dabaf *PdfAnnotationSound )ToPdfObject ()_bgg .PdfObject {_dabaf .PdfAnnotation .ToPdfObject ();_cccc :=_dabaf ._gec ;_cecg :=_cccc .PdfObject .(*_bgg .PdfObjectDictionary );_dabaf .PdfAnnotationMarkup .appendToPdfDictionary (_cecg );_cecg .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0053\u006f\u0075n\u0064"));
_cecg .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_dabaf .Sound );_cecg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_dabaf .Name );return _cccc ;};func _bdff (_cccef _bgg .PdfObject )(*PdfFunctionType2 ,error ){_baefb :=&PdfFunctionType2 {};var _bcfde *_bgg .PdfObjectDictionary ;
if _edec ,_febdd :=_cccef .(*_bgg .PdfIndirectObject );_febdd {_ffac ,_fccaf :=_edec .PdfObject .(*_bgg .PdfObjectDictionary );if !_fccaf {return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};
_baefb ._ggdeb =_edec ;_bcfde =_ffac ;}else if _bfcba ,_ecde :=_cccef .(*_bgg .PdfObjectDictionary );_ecde {_bcfde =_bfcba ;}else {return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dcf .Log .Trace ("\u0046U\u004e\u0043\u0032\u003a\u0020\u0025s",_bcfde .String ());
_beegd ,_bbcfe :=_bgg .TraceToDirectObject (_bcfde .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bgg .PdfObjectArray );if !_bbcfe {_dcf .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _beegd .Len ()< 0||_beegd .Len ()%2!=0{_dcf .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u0072\u0061\u006e\u0067e\u0020\u0069\u006e\u0076al\u0069\u0064");
return nil ,_ag .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_cggfac ,_gbae :=_beegd .ToFloat64Array ();if _gbae !=nil {return nil ,_gbae ;};_baefb .Domain =_cggfac ;_beegd ,_bbcfe =_bgg .TraceToDirectObject (_bcfde .Get ("\u0052\u0061\u006eg\u0065")).(*_bgg .PdfObjectArray );
if _bbcfe {if _beegd .Len ()< 0||_beegd .Len ()%2!=0{return nil ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_debeea ,_ebfdab :=_beegd .ToFloat64Array ();if _ebfdab !=nil {return nil ,_ebfdab ;};_baefb .Range =_debeea ;
};_beegd ,_bbcfe =_bgg .TraceToDirectObject (_bcfde .Get ("\u0043\u0030")).(*_bgg .PdfObjectArray );if _bbcfe {_decgc ,_eddb :=_beegd .ToFloat64Array ();if _eddb !=nil {return nil ,_eddb ;};_baefb .C0 =_decgc ;};_beegd ,_bbcfe =_bgg .TraceToDirectObject (_bcfde .Get ("\u0043\u0031")).(*_bgg .PdfObjectArray );
if _bbcfe {_caaf ,_gcfbf :=_beegd .ToFloat64Array ();if _gcfbf !=nil {return nil ,_gcfbf ;};_baefb .C1 =_caaf ;};if len (_baefb .C0 )!=len (_baefb .C1 ){_dcf .Log .Error ("\u0043\u0030\u0020\u0061nd\u0020\u0043\u0031\u0020\u006e\u006f\u0074\u0020\u006d\u0061\u0074\u0063\u0068\u0069n\u0067");
return nil ,_bgg .ErrRangeError ;};N ,_gbae :=_bgg .GetNumberAsFloat (_bgg .TraceToDirectObject (_bcfde .Get ("\u004e")));if _gbae !=nil {_dcf .Log .Error ("\u004e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020o\u0072\u0020\u0069\u006e\u0076\u0061\u006ci\u0064\u002c\u0020\u0064\u0069\u0063\u0074\u003a\u0020\u0025\u0073",_bcfde .String ());
return nil ,_gbae ;};_baefb .N =N ;return _baefb ,nil ;};

// GetContentStreams returns the content stream as an array of strings.
func (_ffebf *PdfPage )GetContentStreams ()([]string ,error ){_acdac :=_ffebf .GetContentStreamObjs ();var _dacbe []string ;for _ ,_fcff :=range _acdac {_fegce ,_cccbf :=_egcfe (_fcff );if _cccbf !=nil {return nil ,_cccbf ;};_dacbe =append (_dacbe ,_fegce );
};return _dacbe ,nil ;};

// PdfActionHide represents a hide action.
type PdfActionHide struct{*PdfAction ;T _bgg .PdfObject ;H _bgg .PdfObject ;};func (_dbeb *PdfWriter )writeObjects (){_dcf .Log .Trace ("\u0057\u0072\u0069\u0074\u0069\u006e\u0067\u0020\u0025d\u0020\u006f\u0062\u006a",len (_dbeb ._eddge ));_dbeb ._decfgb =make (map[int ]crossReference );
_dbeb ._decfgb [0]=crossReference {Type :0,ObjectNumber :0,Generation :0xFFFF};if _dbeb ._bacdb .ObjectMap !=nil {for _abdgd ,_afecg :=range _dbeb ._bacdb .ObjectMap {if _abdgd ==0{continue ;};if _afecg .XType ==_bgg .XrefTypeObjectStream {_abaad :=crossReference {Type :2,ObjectNumber :_afecg .OsObjNumber ,Index :_afecg .OsObjIndex };
_dbeb ._decfgb [_abdgd ]=_abaad ;};if _afecg .XType ==_bgg .XrefTypeTableEntry {_beda :=crossReference {Type :1,ObjectNumber :_afecg .ObjectNumber ,Offset :_afecg .Offset };_dbeb ._decfgb [_abdgd ]=_beda ;};};};};func (_baedd SignatureValidationResult )String ()string {var _afaef _aa .Buffer ;
_afaef .WriteString (_e .Sprintf ("\u004ea\u006d\u0065\u003a\u0020\u0025\u0073\n",_baedd .Name ));if _baedd .Date ._efgaf > 0{_afaef .WriteString (_e .Sprintf ("\u0044a\u0074\u0065\u003a\u0020\u0025\u0073\n",_baedd .Date .ToGoTime ().String ()));}else {_afaef .WriteString ("\u0044\u0061\u0074\u0065 n\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_baedd .Reason )> 0{_afaef .WriteString (_e .Sprintf ("R\u0065\u0061\u0073\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_baedd .Reason ));}else {_afaef .WriteString ("N\u006f \u0072\u0065\u0061\u0073\u006f\u006e\u0020\u0073p\u0065\u0063\u0069\u0066ie\u0064\u000a");
};if len (_baedd .Location )> 0{_afaef .WriteString (_e .Sprintf ("\u004c\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0073\u000a",_baedd .Location ));}else {_afaef .WriteString ("\u004c\u006f\u0063at\u0069\u006f\u006e\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u000a");
};if len (_baedd .ContactInfo )> 0{_afaef .WriteString (_e .Sprintf ("\u0043\u006f\u006e\u0074\u0061\u0063\u0074\u0020\u0049\u006e\u0066\u006f:\u0020\u0025\u0073\u000a",_baedd .ContactInfo ));}else {_afaef .WriteString ("C\u006f\u006e\u0074\u0061\u0063\u0074 \u0069\u006e\u0066\u006f\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063i\u0066i\u0065\u0064\u000a");
};_afaef .WriteString (_e .Sprintf ("F\u0069\u0065\u006c\u0064\u0073\u003a\u0020\u0025\u0064\u000a",len (_baedd .Fields )));if _baedd .IsSigned {_afaef .WriteString ("S\u0069\u0067\u006e\u0065\u0064\u003a \u0044\u006f\u0063\u0075\u006d\u0065\u006e\u0074\u0020i\u0073\u0020\u0073i\u0067n\u0065\u0064\u000a");
}else {_afaef .WriteString ("\u0053\u0069\u0067\u006eed\u003a\u0020\u004e\u006f\u0074\u0020\u0073\u0069\u0067\u006e\u0065\u0064\u000a");};if _baedd .IsVerified {_afaef .WriteString ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0076\u0061\u006c\u0069\u0064\u0061t\u0069\u006f\u006e\u003a\u0020\u0049\u0073\u0020\u0076\u0061\u006c\u0069\u0064\u000a");
}else {_afaef .WriteString ("\u0053\u0069\u0067\u006e\u0061\u0074u\u0072\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074\u0069\u006f\u006e:\u0020\u0049\u0073\u0020\u0069\u006e\u0076a\u006c\u0069\u0064\u000a");};if _baedd .IsTrusted {_afaef .WriteString ("\u0054\u0072\u0075\u0073\u0074\u0065\u0064\u003a\u0020\u0043\u0065\u0072\u0074\u0069\u0066i\u0063a\u0074\u0065\u0020\u0069\u0073\u0020\u0074\u0072\u0075\u0073\u0074\u0065\u0064\u000a");
}else {_afaef .WriteString ("\u0054\u0072\u0075s\u0074\u0065\u0064\u003a \u0055\u006e\u0074\u0072\u0075\u0073\u0074e\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u000a");};if !_baedd .GeneralizedTime .IsZero (){_afaef .WriteString (_e .Sprintf ("G\u0065n\u0065\u0072\u0061\u006c\u0069\u007a\u0065\u0064T\u0069\u006d\u0065\u003a %\u0073\u000a",_baedd .GeneralizedTime .String ()));
};if _baedd .DiffResults !=nil {_afaef .WriteString (_e .Sprintf ("\u0064\u0069\u0066\u0066 i\u0073\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074\u0065\u0064\u003a\u0020\u0025v\u000a",_baedd .DiffResults .IsPermitted ()));if len (_baedd .DiffResults .Warnings )> 0{_afaef .WriteString ("\u004d\u0044\u0050\u0020\u0077\u0061\u0072\u006e\u0069n\u0067\u0073\u003a\u000a");
for _ ,_babdc :=range _baedd .DiffResults .Warnings {_afaef .WriteString (_e .Sprintf ("\u0009\u0025\u0073\u000a",_babdc ));};};if len (_baedd .DiffResults .Errors )> 0{_afaef .WriteString ("\u004d\u0044\u0050 \u0065\u0072\u0072\u006f\u0072\u0073\u003a\u000a");
for _ ,_babde :=range _baedd .DiffResults .Errors {_afaef .WriteString (_e .Sprintf ("\u0009\u0025\u0073\u000a",_babde ));};};};return _afaef .String ();};

// PdfActionJavaScript represents a javaScript action.
type PdfActionJavaScript struct{*PdfAction ;JS _bgg .PdfObject ;};

// ToGoTime returns the date in time.Time format.
func (_aaga PdfDate )ToGoTime ()_g .Time {_ccbbf :=int (_aaga ._geeab *60*60+_aaga ._cegbf *60);switch _aaga ._eefc {case '-':_ccbbf =-_ccbbf ;case 'Z':_ccbbf =0;};_gbdea :=_e .Sprintf ("\u0055\u0054\u0043\u0025\u0063\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064",_aaga ._eefc ,_aaga ._geeab ,_aaga ._cegbf );
_dfabac :=_g .FixedZone (_gbdea ,_ccbbf );return _g .Date (int (_aaga ._efgaf ),_g .Month (_aaga ._dbbdb ),int (_aaga ._aeafb ),int (_aaga ._bcfac ),int (_aaga ._aacdg ),int (_aaga ._ebbae ),0,_dfabac );};

// PdfAnnotationSquiggly represents Squiggly annotations.
// (Section 12.5.6.10).
type PdfAnnotationSquiggly struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bgg .PdfObject ;};func (_dabd *PdfReader )newPdfAcroFormFromDict (_bdfg *_bgg .PdfIndirectObject ,_fddc *_bgg .PdfObjectDictionary )(*PdfAcroForm ,error ){_fbdaf :=NewPdfAcroForm ();
if _bdfg !=nil {_fbdaf ._gfffc =_bdfg ;_bdfg .PdfObject =_bgg .MakeDict ();};if _fedd :=_fddc .Get ("\u0046\u0069\u0065\u006c\u0064\u0073");_fedd !=nil &&!_bgg .IsNullObject (_fedd ){_cbfca ,_baadba :=_bgg .GetArray (_fedd );if !_baadba {return nil ,_e .Errorf ("\u0066i\u0065\u006c\u0064\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e \u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_fedd );
};var _gcfcg []*PdfField ;for _ ,_cafbd :=range _cbfca .Elements (){_fafa ,_gfbe :=_bgg .GetIndirect (_cafbd );if !_gfbe {if _ ,_edcgf :=_cafbd .(*_bgg .PdfObjectNull );_edcgf {_dcf .Log .Trace ("\u0053k\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u006f\u0076\u0065\u0072 \u006e\u0075\u006c\u006c\u0020\u0066\u0069\u0065\u006c\u0064");
continue ;};_dcf .Log .Debug ("\u0046\u0069\u0065\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0064 \u0069\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0054",_cafbd );
return nil ,_e .Errorf ("\u0066\u0069\u0065l\u0064\u0020\u006e\u006ft\u0020\u0069\u006e\u0020\u0061\u006e\u0020i\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_fdcd ,_dbeda :=_dabd .newPdfFieldFromIndirectObject (_fafa ,nil );
if _dbeda !=nil {return nil ,_dbeda ;};_dcf .Log .Trace ("\u0041\u0063\u0072\u006fFo\u0072\u006d\u0020\u0046\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u002b\u0076",*_fdcd );_gcfcg =append (_gcfcg ,_fdcd );};_fbdaf .Fields =&_gcfcg ;};if _dfdce :=_fddc .Get ("\u004ee\u0065d\u0041\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0073");
_dfdce !=nil {_accaf ,_bfeag :=_bgg .GetBool (_dfdce );if _bfeag {_fbdaf .NeedAppearances =_accaf ;}else {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u0065\u0065\u0064\u0041\u0070p\u0065\u0061\u0072\u0061\u006e\u0063e\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_dfdce );
};};if _cebb :=_fddc .Get ("\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073");_cebb !=nil {_bebcd ,_ggfdd :=_bgg .GetInt (_cebb );if _ggfdd {_fbdaf .SigFlags =_bebcd ;}else {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069\u0067\u0046\u006c\u0061\u0067\u0073 \u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cebb );
};};if _bccd :=_fddc .Get ("\u0043\u004f");_bccd !=nil {_cadfe ,_fefe :=_bgg .GetArray (_bccd );if _fefe {_fbdaf .CO =_cadfe ;}else {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u004f\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_bccd );
};};if _bbge :=_fddc .Get ("\u0044\u0052");_bbge !=nil {if _fabg ,_bead :=_bgg .GetDict (_bbge );_bead {_bced ,_dcefg :=NewPdfPageResourcesFromDict (_fabg );if _dcefg !=nil {_dcf .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0044R\u003a\u0020\u0025\u0076",_dcefg );
return nil ,_dcefg ;};_fbdaf .DR =_bced ;}else {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0052\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_bbge );};};if _cabe :=_fddc .Get ("\u0044\u0041");
_cabe !=nil {_bbdff ,_ddcbe :=_bgg .GetString (_cabe );if _ddcbe {_fbdaf .DA =_bbdff ;}else {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0044\u0041\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0067\u006f\u0074 \u0025\u0054\u0029",_cabe );
};};if _bedb :=_fddc .Get ("\u0051");_bedb !=nil {_edaa ,_dgdef :=_bgg .GetInt (_bedb );if _dgdef {_fbdaf .Q =_edaa ;}else {_dcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u0051\u0020\u0069\u006e\u0076a\u006ci\u0064 \u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_bedb );
};};if _befec :=_fddc .Get ("\u0058\u0046\u0041");_befec !=nil {_fbdaf .XFA =_befec ;};_fbdaf .ToPdfObject ();return _fbdaf ,nil ;};func (_gbaff *PdfWriter )writeXRefStreams (_fgcgb int ,_fbfc int64 )error {_cdgg :=_fgcgb +1;_gbaff ._decfgb [_cdgg ]=crossReference {Type :1,ObjectNumber :_cdgg ,Offset :_fbfc };
_bgfdd :=_aa .NewBuffer (nil );_dcee :=_bgg .MakeArray ();for _deeea :=0;_deeea <=_fgcgb ;{for ;_deeea <=_fgcgb ;_deeea ++{_gedea ,_aeabc :=_gbaff ._decfgb [_deeea ];if _aeabc &&(!_gbaff ._deagf ||_gbaff ._deagf &&(_gedea .Type ==1&&_gedea .Offset >=_gbaff ._cfbdc ||_gedea .Type ==0)){break ;
};};var _fcbbb int ;for _fcbbb =_deeea +1;_fcbbb <=_fgcgb ;_fcbbb ++{_beabd ,_fcdaf :=_gbaff ._decfgb [_fcbbb ];if _fcdaf &&(!_gbaff ._deagf ||_gbaff ._deagf &&(_beabd .Type ==1&&_beabd .Offset > _gbaff ._cfbdc )){continue ;};break ;};_dcee .Append (_bgg .MakeInteger (int64 (_deeea )),_bgg .MakeInteger (int64 (_fcbbb -_deeea )));
for _deccd :=_deeea ;_deccd < _fcbbb ;_deccd ++{_cfefe :=_gbaff ._decfgb [_deccd ];switch _cfefe .Type {case 0:_f .Write (_bgfdd ,_f .BigEndian ,byte (0));_f .Write (_bgfdd ,_f .BigEndian ,uint32 (0));_f .Write (_bgfdd ,_f .BigEndian ,uint16 (0xFFFF));
case 1:_f .Write (_bgfdd ,_f .BigEndian ,byte (1));_f .Write (_bgfdd ,_f .BigEndian ,uint32 (_cfefe .Offset ));_f .Write (_bgfdd ,_f .BigEndian ,uint16 (_cfefe .Generation ));case 2:_f .Write (_bgfdd ,_f .BigEndian ,byte (2));_f .Write (_bgfdd ,_f .BigEndian ,uint32 (_cfefe .ObjectNumber ));
_f .Write (_bgfdd ,_f .BigEndian ,uint16 (_cfefe .Index ));};};_deeea =_fcbbb +1;};_ggage ,_daefe :=_bgg .MakeStream (_bgfdd .Bytes (),_bgg .NewFlateEncoder ());if _daefe !=nil {return _daefe ;};_ggage .ObjectNumber =int64 (_cdgg );_ggage .PdfObjectDictionary .Set ("\u0054\u0079\u0070\u0065",_bgg .MakeName ("\u0058\u0052\u0065\u0066"));
_ggage .PdfObjectDictionary .Set ("\u0057",_bgg .MakeArray (_bgg .MakeInteger (1),_bgg .MakeInteger (4),_bgg .MakeInteger (2)));_ggage .PdfObjectDictionary .Set ("\u0049\u006e\u0064e\u0078",_dcee );_ggage .PdfObjectDictionary .Set ("\u0053\u0069\u007a\u0065",_bgg .MakeInteger (int64 (_cdgg +1)));
_ggage .PdfObjectDictionary .Set ("\u0049\u006e\u0066\u006f",_gbaff ._eeged );_ggage .PdfObjectDictionary .Set ("\u0052\u006f\u006f\u0074",_gbaff ._bceaa );if _gbaff ._deagf &&_gbaff ._ccbec > 0{_ggage .PdfObjectDictionary .Set ("\u0050\u0072\u0065\u0076",_bgg .MakeInteger (_gbaff ._ccbec ));
};if _gbaff ._dfade !=nil {_ggage .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_gbaff ._baefd );};if _gbaff ._agfdf ==nil &&_gbaff ._gcege !=""&&_gbaff ._dafd !=""{_gbaff ._agfdf =_bgg .MakeArray (_bgg .MakeHexString (_gbaff ._gcege ),_bgg .MakeHexString (_gbaff ._dafd ));
};if _gbaff ._agfdf !=nil {_dcf .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_gbaff ._agfdf );_ggage .Set ("\u0049\u0044",_gbaff ._agfdf );};_gbaff .writeObject (int (_ggage .ObjectNumber ),_ggage );return nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// A, B and C components of the color. The values of the elements should be
// between 0 and 1.
func (_ageb *PdfColorspaceCalRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_baga :=vals [0];if _baga < 0.0||_baga > 1.0{_dcf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_baga );
return nil ,ErrColorOutOfRange ;};_gegb :=vals [1];if _gegb < 0.0||_gegb > 1.0{_dcf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_gegb );return nil ,ErrColorOutOfRange ;
};_dgded :=vals [2];if _dgded < 0.0||_dgded > 1.0{_dcf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_dgded );return nil ,ErrColorOutOfRange ;};_gddd :=NewPdfColorCalRGB (_baga ,_gegb ,_dgded );
return _gddd ,nil ;};func (_fefc *PdfWriter )writeString (_afcfa string ){if _fefc ._bbdfff !=nil {return ;};_cfgdf ,_ddabb :=_fefc ._eggab .WriteString (_afcfa );_fefc ._ebdcg +=int64 (_cfgdf );_fefc ._bbdfff =_ddabb ;};func (_deabe *PdfWriter )writeTrailer (_ecbbf int ){_deabe .writeString ("\u0078\u0072\u0065\u0066\u000d\u000a");
for _cddae :=0;_cddae <=_ecbbf ;{for ;_cddae <=_ecbbf ;_cddae ++{_bddb ,_fdgga :=_deabe ._decfgb [_cddae ];if _fdgga &&(!_deabe ._deagf ||_deabe ._deagf &&(_bddb .Type ==1&&_bddb .Offset >=_deabe ._cfbdc ||_bddb .Type ==0)){break ;};};var _fdgea int ;for _fdgea =_cddae +1;
_fdgea <=_ecbbf ;_fdgea ++{_cbddb ,_cfbbf :=_deabe ._decfgb [_fdgea ];if _cfbbf &&(!_deabe ._deagf ||_deabe ._deagf &&(_cbddb .Type ==1&&_cbddb .Offset > _deabe ._cfbdc )){continue ;};break ;};_cdcgc :=_e .Sprintf ("\u0025d\u0020\u0025\u0064\u000d\u000a",_cddae ,_fdgea -_cddae );
_deabe .writeString (_cdcgc );for _ecaac :=_cddae ;_ecaac < _fdgea ;_ecaac ++{_gafgb :=_deabe ._decfgb [_ecaac ];switch _gafgb .Type {case 0:_cdcgc =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u0066\u000d\u000a",0,65535);
_deabe .writeString (_cdcgc );case 1:_cdcgc =_e .Sprintf ("\u0025\u002e\u0031\u0030\u0064\u0020\u0025\u002e\u0035d\u0020\u006e\u000d\u000a",_gafgb .Offset ,0);_deabe .writeString (_cdcgc );};};_cddae =_fdgea +1;};_bbcbe :=_bgg .MakeDict ();_bbcbe .Set ("\u0049\u006e\u0066\u006f",_deabe ._eeged );
_bbcbe .Set ("\u0052\u006f\u006f\u0074",_deabe ._bceaa );_bbcbe .Set ("\u0053\u0069\u007a\u0065",_bgg .MakeInteger (int64 (_ecbbf +1)));if _deabe ._deagf &&_deabe ._ccbec > 0{_bbcbe .Set ("\u0050\u0072\u0065\u0076",_bgg .MakeInteger (_deabe ._ccbec ));
};if _deabe ._dfade !=nil {_bbcbe .Set ("\u0045n\u0063\u0072\u0079\u0070\u0074",_deabe ._baefd );};if _deabe ._agfdf ==nil &&_deabe ._gcege !=""&&_deabe ._dafd !=""{_deabe ._agfdf =_bgg .MakeArray (_bgg .MakeHexString (_deabe ._gcege ),_bgg .MakeHexString (_deabe ._dafd ));
};if _deabe ._agfdf !=nil {_bbcbe .Set ("\u0049\u0044",_deabe ._agfdf );_dcf .Log .Trace ("\u0049d\u0073\u003a\u0020\u0025\u0073",_deabe ._agfdf );};_deabe .writeString ("\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u000a");_deabe .writeString (_bbcbe .WriteString ());
_deabe .writeString ("\u000a");};

// ToPdfObject implements interface PdfModel.
// Note: Call the sub-annotation's ToPdfObject to set both the generic and non-generic information.
func (_cag *PdfAnnotation )ToPdfObject ()_bgg .PdfObject {_fcg :=_cag ._gec ;_fcaf :=_fcg .PdfObject .(*_bgg .PdfObjectDictionary );_fcaf .Clear ();_fcaf .Set ("\u0054\u0079\u0070\u0065",_bgg .MakeName ("\u0041\u006e\u006eo\u0074"));_fcaf .SetIfNotNil ("\u0052\u0065\u0063\u0074",_cag .Rect );
_fcaf .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_cag .Contents );_fcaf .SetIfNotNil ("\u0050",_cag .P );_fcaf .SetIfNotNil ("\u004e\u004d",_cag .NM );_fcaf .SetIfNotNil ("\u004d",_cag .M );_fcaf .SetIfNotNil ("\u0046",_cag .F );_fcaf .SetIfNotNil ("\u0041\u0050",_cag .AP );
_fcaf .SetIfNotNil ("\u0041\u0053",_cag .AS );_fcaf .SetIfNotNil ("\u0042\u006f\u0072\u0064\u0065\u0072",_cag .Border );_fcaf .SetIfNotNil ("\u0043",_cag .C );_fcaf .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_cag .StructParent );
_fcaf .SetIfNotNil ("\u004f\u0043",_cag .OC );return _fcg ;};func (_ecdf *PdfReader )loadAction (_ddd _bgg .PdfObject )(*PdfAction ,error ){if _adb ,_ecec :=_bgg .GetIndirect (_ddd );_ecec {_dfg ,_eaca :=_ecdf .newPdfActionFromIndirectObject (_adb );if _eaca !=nil {return nil ,_eaca ;
};return _dfg ,nil ;}else if !_bgg .IsNullObject (_ddd ){return nil ,_ag .New ("\u0061\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0070\u006f\u0069\u006e\u0074 \u0074\u006f\u0020\u0061\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};return nil ,nil ;};func (_gggd *PdfReader )newPdfAnnotationSquigglyFromDict (_gda *_bgg .PdfObjectDictionary )(*PdfAnnotationSquiggly ,error ){_baed :=PdfAnnotationSquiggly {};_beff ,_acfb :=_gggd .newPdfAnnotationMarkupFromDict (_gda );if _acfb !=nil {return nil ,_acfb ;
};_baed .PdfAnnotationMarkup =_beff ;_baed .QuadPoints =_gda .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");return &_baed ,nil ;};func (_bebb *PdfReader )newPdfFieldSignatureFromDict (_bacfe *_bgg .PdfObjectDictionary )(*PdfFieldSignature ,error ){_cgda :=&PdfFieldSignature {};
_aceef ,_ebff :=_bgg .GetIndirect (_bacfe .Get ("\u0056"));if _ebff {var _bfcc error ;_cgda .V ,_bfcc =_bebb .newPdfSignatureFromIndirect (_aceef );if _bfcc !=nil {return nil ,_bfcc ;};};_cgda .Lock ,_ =_bgg .GetIndirect (_bacfe .Get ("\u004c\u006f\u0063\u006b"));
_cgda .SV ,_ =_bgg .GetIndirect (_bacfe .Get ("\u0053\u0056"));return _cgda ,nil ;};

// DecodeArray returns the component range values for the Separation colorspace.
func (_ggab *PdfColorspaceSpecialSeparation )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// NewPdfAnnotationCaret returns a new caret annotation.
func NewPdfAnnotationCaret ()*PdfAnnotationCaret {_abgd :=NewPdfAnnotation ();_dacd :=&PdfAnnotationCaret {};_dacd .PdfAnnotation =_abgd ;_dacd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_abgd .SetContext (_dacd );return _dacd ;};

// GetContainingPdfObject gets the primitive used to parse the color space.
func (_bfbc *PdfColorspaceICCBased )GetContainingPdfObject ()_bgg .PdfObject {return _bfbc ._fdedb };

// NewPdfColorspaceDeviceRGB returns a new RGB colorspace object.
func NewPdfColorspaceDeviceRGB ()*PdfColorspaceDeviceRGB {return &PdfColorspaceDeviceRGB {}};func (_adcbd *pdfFontType0 )getFontDescriptor ()*PdfFontDescriptor {if _adcbd ._abdg ==nil &&_adcbd .DescendantFont !=nil {return _adcbd .DescendantFont .FontDescriptor ();
};return _adcbd ._abdg ;};

// Evaluate runs the function. Input is [x1 x2 x3].
func (_dedd *PdfFunctionType4 )Evaluate (xVec []float64 )([]float64 ,error ){if _dedd ._gffdf ==nil {_dedd ._gffdf =_dgc .NewPSExecutor (_dedd .Program );};var _fadd []_dgc .PSObject ;for _ ,_gagfg :=range xVec {_fadd =append (_fadd ,_dgc .MakeReal (_gagfg ));
};_ceafb ,_egbe :=_dedd ._gffdf .Execute (_fadd );if _egbe !=nil {return nil ,_egbe ;};_cgga ,_egbe :=_dgc .PSObjectArrayToFloat64Array (_ceafb );if _egbe !=nil {return nil ,_egbe ;};return _cgga ,nil ;};

// ToWriter creates a new writer from the current reader, based on the specified options.
// If no options are provided, all reader properties are copied to the writer.
func (_cafc *PdfReader )ToWriter (opts *ReaderToWriterOpts )(*PdfWriter ,error ){_aaefa :=NewPdfWriter ();if opts ==nil {opts =&ReaderToWriterOpts {};};_cgfbd ,_dagga :=_cafc .GetNumPages ();if _dagga !=nil {_dcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dagga );
return nil ,_dagga ;};for _fgef :=1;_fgef <=_cgfbd ;_fgef ++{_cfgdb ,_faedee :=_cafc .GetPage (_fgef );if _faedee !=nil {_dcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_faedee );return nil ,_faedee ;};if opts .PageProcessCallback !=nil {_faedee =opts .PageProcessCallback (_fgef ,_cfgdb );
if _faedee !=nil {_dcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_faedee );return nil ,_faedee ;};}else if opts .PageCallback !=nil {opts .PageCallback (_fgef ,_cfgdb );};_faedee =_aaefa .AddPage (_cfgdb );if _faedee !=nil {_dcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_faedee );
return nil ,_faedee ;};};_aaefa ._ffgff =_cafc .PdfVersion ();if !opts .SkipInfo {_eebcg ,_dcfgd :=_cafc .GetPdfInfo ();if _dcfgd !=nil {_dcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dcfgd );}else {_aaefa ._eeged .PdfObject =_eebcg .ToPdfObject ();
};};if !opts .SkipMetadata {if _bafcg :=_cafc ._gaebb .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_bafcg !=nil {if _abdgc :=_aaefa .SetCatalogMetadata (_bafcg );_abdgc !=nil {return nil ,_abdgc ;};};};if !opts .SkipAcroForm {_gbfg :=_aaefa .SetForms (_cafc .AcroForm );
if _gbfg !=nil {_dcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gbfg );return nil ,_gbfg ;};};if !opts .SkipOutlines {_aaefa .AddOutlineTree (_cafc .GetOutlineTree ());};if !opts .SkipOCProperties {_faged ,_cded :=_cafc .GetOCProperties ();
if _cded !=nil {_dcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cded );}else {_cded =_aaefa .SetOCProperties (_faged );if _cded !=nil {_dcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_cded );};};};if !opts .SkipPageLabels {_afab ,_gaagd :=_cafc .GetPageLabels ();
if _gaagd !=nil {_dcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gaagd );}else {_gaagd =_aaefa .SetPageLabels (_afab );if _gaagd !=nil {_dcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gaagd );};};};if !opts .SkipNamedDests {_addcd ,_fbegcc :=_cafc .GetNamedDestinations ();
if _fbegcc !=nil {_dcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbegcc );}else {_fbegcc =_aaefa .SetNamedDestinations (_addcd );if _fbegcc !=nil {_dcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fbegcc );};};};if !opts .SkipNameDictionary {_cfcbe ,_fcbfg :=_cafc .GetNameDictionary ();
if _fcbfg !=nil {_dcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcbfg );}else {_fcbfg =_aaefa .SetNameDictionary (_cfcbe );if _fcbfg !=nil {_dcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_fcbfg );};};};if !opts .SkipRotation &&_cafc .Rotate !=nil {if _gbbec :=_aaefa .SetRotation (*_cafc .Rotate );
_gbbec !=nil {_dcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gbbec );};};return &_aaefa ,nil ;};

// DefaultImageHandler is the default implementation of the ImageHandler using the standard go library.
type DefaultImageHandler struct{};

// ColorAt returns the color of the image pixel specified by the x and y coordinates.
func (_addfb *Image )ColorAt (x ,y int )(_aea .Color ,error ){_dacab :=_dcg .BytesPerLine (int (_addfb .Width ),int (_addfb .BitsPerComponent ),_addfb .ColorComponents );switch _addfb .ColorComponents {case 1:return _dcg .ColorAtGrayscale (x ,y ,int (_addfb .BitsPerComponent ),_dacab ,_addfb .Data ,_addfb ._ddaa );
case 3:return _dcg .ColorAtNRGBA (x ,y ,int (_addfb .Width ),_dacab ,int (_addfb .BitsPerComponent ),_addfb .Data ,_addfb ._bfcec ,_addfb ._ddaa );case 4:return _dcg .ColorAtCMYK (x ,y ,int (_addfb .Width ),_addfb .Data ,_addfb ._ddaa );};_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064 i\u006da\u0067\u0065\u002e\u0020\u0025\u0064\u0020\u0063\u006f\u006d\u0070\u006fn\u0065\u006e\u0074\u0073\u002c\u0020\u0025\u0064\u0020\u0062\u0069\u0074\u0073\u0020\u0070\u0065\u0072 \u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_addfb .ColorComponents ,_addfb .BitsPerComponent );
return nil ,_ag .New ("\u0075\u006e\u0073\u0075p\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0069\u006d\u0061g\u0065 \u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065");};func (_geea *PdfReader )lookupPageByObject (_fgbgc _bgg .PdfObject )(*PdfPage ,error ){return nil ,_ag .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");
};func (_cgdf *PdfWriter )hasObject (_dfdde _bgg .PdfObject )bool {_ ,_dfeg :=_cgdf ._gbfd [_dfdde ];return _dfeg ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_cfbg *PdfFunctionType2 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_dcf .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};_dcbba :=[]float64 {0.0};if _cfbg .C0 !=nil {_dcbba =_cfbg .C0 ;};_eccgd :=[]float64 {1.0};if _cfbg .C1 !=nil {_eccgd =_cfbg .C1 ;};var _abbg []float64 ;for _ecdab :=0;_ecdab < len (_dcbba );_ecdab ++{_afff :=_dcbba [_ecdab ]+_db .Pow (x [0],_cfbg .N )*(_eccgd [_ecdab ]-_dcbba [_ecdab ]);
_abbg =append (_abbg ,_afff );};return _abbg ,nil ;};

// ContentStreamWrapper wraps the Page's contentstream into q ... Q blocks.
type ContentStreamWrapper interface{WrapContentStream (_gabf *PdfPage )error ;};

// PdfAnnotationPolygon represents Polygon annotations.
// (Section 12.5.6.9).
type PdfAnnotationPolygon struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Vertices _bgg .PdfObject ;LE _bgg .PdfObject ;BS _bgg .PdfObject ;IC _bgg .PdfObject ;BE _bgg .PdfObject ;IT _bgg .PdfObject ;Measure _bgg .PdfObject ;};func (_bdab *PdfReader )newPdfAnnotationFileAttachmentFromDict (_bbe *_bgg .PdfObjectDictionary )(*PdfAnnotationFileAttachment ,error ){_bfe :=PdfAnnotationFileAttachment {};
_fgcd ,_aeeb :=_bdab .newPdfAnnotationMarkupFromDict (_bbe );if _aeeb !=nil {return nil ,_aeeb ;};_bfe .PdfAnnotationMarkup =_fgcd ;_bfe .FS =_bbe .Get ("\u0046\u0053");_bfe .Name =_bbe .Get ("\u004e\u0061\u006d\u0065");return &_bfe ,nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_acedb *PdfShading )ToPdfObject ()_bgg .PdfObject {_dgfcd :=_acedb ._fcfbb ;_bcdgd ,_bbcg :=_acedb .getShadingDict ();if _bbcg !=nil {_dcf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _acedb .ShadingType !=nil {_bcdgd .Set ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_acedb .ShadingType );};if _acedb .ColorSpace !=nil {_bcdgd .Set ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_acedb .ColorSpace .ToPdfObject ());
};if _acedb .Background !=nil {_bcdgd .Set ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064",_acedb .Background );};if _acedb .BBox !=nil {_bcdgd .Set ("\u0042\u0042\u006f\u0078",_acedb .BBox .ToPdfObject ());};if _acedb .AntiAlias !=nil {_bcdgd .Set ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s",_acedb .AntiAlias );
};return _dgfcd ;};

// ToPdfObject implements interface PdfModel.
func (_gaccgb *PdfSignatureReference )ToPdfObject ()_bgg .PdfObject {_cdfab :=_bgg .MakeDict ();_cdfab .SetIfNotNil ("\u0054\u0079\u0070\u0065",_gaccgb .Type );_cdfab .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064",_gaccgb .TransformMethod );
_cdfab .SetIfNotNil ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073",_gaccgb .TransformParams );_cdfab .SetIfNotNil ("\u0044\u0061\u0074\u0061",_gaccgb .Data );_cdfab .SetIfNotNil ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064",_gaccgb .DigestMethod );
return _cdfab ;};

// GetContainingPdfObject implements interface PdfModel.
func (_gfabg *Permissions )GetContainingPdfObject ()_bgg .PdfObject {return _gfabg ._ffcaa };

// NewPdfAnnotationUnderline returns a new text underline annotation.
func NewPdfAnnotationUnderline ()*PdfAnnotationUnderline {_edf :=NewPdfAnnotation ();_gbf :=&PdfAnnotationUnderline {};_gbf .PdfAnnotation =_edf ;_gbf .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_edf .SetContext (_gbf );return _gbf ;};

// GetPerms returns the Permissions dictionary
func (_befef *PdfReader )GetPerms ()*Permissions {return _befef ._dcbbe };

// GetBorderWidth returns the border style's width.
func (_ebee *PdfBorderStyle )GetBorderWidth ()float64 {if _ebee .W ==nil {return 1;};return *_ebee .W ;};

// AlphaMap performs mapping of alpha data for transformations. Allows custom filtering of alpha data etc.
func (_fgfaf *Image )AlphaMap (mapFunc AlphaMapFunc ){for _eagef ,_cegdf :=range _fgfaf ._bfcec {_fgfaf ._bfcec [_eagef ]=mapFunc (_cegdf );};};

// SetCatalogMetadata sets the catalog metadata (XMP) stream object.
func (_ageag *PdfWriter )SetCatalogMetadata (meta _bgg .PdfObject )error {if meta ==nil {_ageag ._ffbb .Remove ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return nil ;};_deecg ,_cbedc :=_bgg .GetStream (meta );if !_cbedc {return _ag .New ("\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u006d\u0065\u0074\u0061\u0064a\u0074\u0061\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0061\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0073t\u0072\u0065\u0061\u006d");
};_ageag .addObject (_deecg );_ageag ._ffbb .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_deecg );return nil ;};var _ pdfFont =(*pdfFontType3 )(nil );

// GetCharMetrics returns the char metrics for character code `code`.
// How it works:
//  1) It calls the GetCharMetrics function for the underlying font, either a simple font or
//     a Type0 font. The underlying font GetCharMetrics() functions do direct charcode ➞  metrics
//     mappings.
//  2) If the underlying font's GetCharMetrics() doesn't have a CharMetrics for `code` then a
//     a CharMetrics with the FontDescriptor's /MissingWidth is returned.
//  3) If there is no /MissingWidth then a failure is returned.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
// TODO(gunnsth): Reconsider whether needed or if can map via GlyphName.
func (_fbegc *PdfFont )GetCharMetrics (code _cc .CharCode )(CharMetrics ,bool ){var _edgde _dad .CharMetrics ;switch _acefg :=_fbegc ._efdec .(type ){case *pdfFontSimple :if _deabc ,_deaeg :=_acefg .GetCharMetrics (code );_deaeg {return _deabc ,_deaeg ;
};case *pdfFontType0 :if _bfbg ,_cfac :=_acefg .GetCharMetrics (code );_cfac {return _bfbg ,_cfac ;};case *pdfCIDFontType0 :if _egdf ,_edcf :=_acefg .GetCharMetrics (code );_edcf {return _egdf ,_edcf ;};case *pdfCIDFontType2 :if _degd ,_adff :=_acefg .GetCharMetrics (code );
_adff {return _degd ,_adff ;};case *pdfFontType3 :if _aded ,_abab :=_acefg .GetCharMetrics (code );_abab {return _aded ,_abab ;};default:_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020G\u0065\u0074\u0043h\u0061\u0072\u004de\u0074\u0072i\u0063\u0073\u0020\u006e\u006f\u0074 \u0069mp\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d\u0025\u0054\u002e",_fbegc ._efdec );
return _edgde ,false ;};if _eggd ,_baac :=_fbegc .GetFontDescriptor ();_baac ==nil &&_eggd !=nil {return _dad .CharMetrics {Wx :_eggd ._dgac },true ;};_dcf .Log .Debug ("\u0047\u0065\u0074\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069c\u0073\u0020\u0066\u006f\u0072 \u0066\u006fn\u0074\u003d\u0025\u0073",_fbegc );
return _edgde ,false ;};func _fefa (_edcee *_bgg .PdfObjectDictionary ,_fafeb *fontCommon )(*pdfCIDFontType2 ,error ){if _fafeb ._dadgd !="\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"{_dcf .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0046\u006fn\u0074\u0020\u0053u\u0062\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020CI\u0044\u0046\u006fn\u0074\u0054y\u0070\u0065\u0032\u002e\u0020\u0066o\u006e\u0074=\u0025\u0073",_fafeb );
return nil ,_bgg .ErrRangeError ;};_dcbf :=_gbeg (_fafeb );_ebaee ,_geac :=_bgg .GetDict (_edcee .Get ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f"));if !_geac {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043I\u0044\u0053\u0079st\u0065\u006d\u0049\u006e\u0066\u006f \u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074=\u0025\u0073",_fafeb );
return nil ,ErrRequiredAttributeMissing ;};_dcbf .CIDSystemInfo =_ebaee ;_dcbf .DW =_edcee .Get ("\u0044\u0057");_dcbf .W =_edcee .Get ("\u0057");_dcbf .DW2 =_edcee .Get ("\u0044\u0057\u0032");_dcbf .W2 =_edcee .Get ("\u0057\u0032");_dcbf .CIDToGIDMap =_edcee .Get ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070");
_dcbf ._bgcc =1000.0;if _ecage ,_bfedf :=_bgg .GetNumberAsFloat (_dcbf .DW );_bfedf ==nil {_dcbf ._bgcc =_ecage ;};_ecac ,_cgaa :=_acgfb (_dcbf .W );if _cgaa !=nil {return nil ,_cgaa ;};if _ecac ==nil {_ecac =map[_cc .CharCode ]float64 {};};_dcbf ._gbbe =_ecac ;
return _dcbf ,nil ;};

// GetPdfInfo returns the PDF info dictionary.
func (_eceec *PdfReader )GetPdfInfo ()(*PdfInfo ,error ){_aagce ,_cbfbb :=_eceec .GetTrailer ();if _cbfbb !=nil {return nil ,_cbfbb ;};var _gege *_bgg .PdfObjectDictionary ;_abfdb :=_aagce .Get ("\u0049\u006e\u0066\u006f");switch _eegf :=_abfdb .(type ){case *_bgg .PdfObjectReference :_agecgb :=_eegf ;
_abfdb ,_cbfbb =_eceec .GetIndirectObjectByNumber (int (_agecgb .ObjectNumber ));_abfdb =_bgg .TraceToDirectObject (_abfdb );if _cbfbb !=nil {return nil ,_cbfbb ;};_gege ,_ =_abfdb .(*_bgg .PdfObjectDictionary );case *_bgg .PdfObjectDictionary :_gege =_eegf ;
};if _gege ==nil {return nil ,_ag .New ("I\u006e\u0066\u006f\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006eo\u0074\u0020\u0070r\u0065s\u0065\u006e\u0074");};_cfeff ,_cbfbb :=NewPdfInfoFromObject (_gege );if _cbfbb !=nil {return nil ,_cbfbb ;
};return _cfeff ,nil ;};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_ffff *PdfColorspaceCalGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_fbeg :=vals [0];if _fbeg < 0.0||_fbeg > 1.0{_dcf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_fbeg );
return nil ,ErrColorOutOfRange ;};_efade :=NewPdfColorCalGray (_fbeg );return _efade ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_ffb *PdfActionGoToE )ToPdfObject ()_bgg .PdfObject {_ffb .PdfAction .ToPdfObject ();_eaf :=_ffb ._ddf ;_daae :=_eaf .PdfObject .(*_bgg .PdfObjectDictionary );_daae .SetIfNotNil ("\u0053",_bgg .MakeName (string (ActionTypeGoToE )));if _ffb .F !=nil {_daae .Set ("\u0046",_ffb .F .ToPdfObject ());
};_daae .SetIfNotNil ("\u0044",_ffb .D );_daae .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ffb .NewWindow );_daae .SetIfNotNil ("\u0054",_ffb .T );return _eaf ;};

// ToInteger convert to an integer format.
func (_aaeg *PdfColorCalRGB )ToInteger (bits int )[3]uint32 {_afbd :=_db .Pow (2,float64 (bits ))-1;return [3]uint32 {uint32 (_afbd *_aaeg .A ()),uint32 (_afbd *_aaeg .B ()),uint32 (_afbd *_aaeg .C ())};};func (_dafde *PdfWriter )writeObject (_gacbc int ,_dgcbc _bgg .PdfObject ){_dcf .Log .Trace ("\u0057\u0072\u0069\u0074\u0065\u0020\u006f\u0062\u006a \u0023\u0025\u0064\u000a",_gacbc );
if _gbcgg ,_edfcc :=_dgcbc .(*_bgg .PdfIndirectObject );_edfcc {_dafde ._decfgb [_gacbc ]=crossReference {Type :1,Offset :_dafde ._ebdcg ,Generation :_gbcgg .GenerationNumber };_eegcb :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gacbc );
if _cedee ,_cdaea :=_gbcgg .PdfObject .(*pdfSignDictionary );_cdaea {_cedee ._fcgcb =_dafde ._ebdcg +int64 (len (_eegcb ));};if _gbcgg .PdfObject ==nil {_dcf .Log .Debug ("E\u0072\u0072\u006fr\u003a\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0027\u0073\u0020\u0050\u0064\u0066\u004f\u0062j\u0065\u0063\u0074 \u0073\u0068\u006f\u0075\u006c\u0064\u0020\u006e\u0065\u0076\u0065\u0072\u0020b\u0065\u0020\u006e\u0069l\u0020\u002d\u0020\u0073e\u0074\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063t\u004e\u0075\u006c\u006c");
_gbcgg .PdfObject =_bgg .MakeNull ();};_eegcb +=_gbcgg .PdfObject .WriteString ();_eegcb +="\u000a\u0065\u006e\u0064\u006f\u0062\u006a\u000a";_dafde .writeString (_eegcb );return ;};if _acege ,_gffdd :=_dgcbc .(*_bgg .PdfObjectStream );_gffdd {_dafde ._decfgb [_gacbc ]=crossReference {Type :1,Offset :_dafde ._ebdcg ,Generation :_acege .GenerationNumber };
_bacfb :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gacbc );_bacfb +=_acege .PdfObjectDictionary .WriteString ();_bacfb +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_dafde .writeString (_bacfb );_dafde .writeBytes (_acege .Stream );
_dafde .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};if _fbaga ,_cfff :=_dgcbc .(*_bgg .PdfObjectStreams );_cfff {_dafde ._decfgb [_gacbc ]=crossReference {Type :1,Offset :_dafde ._ebdcg ,Generation :_fbaga .GenerationNumber };
_eddga :=_e .Sprintf ("\u0025d\u0020\u0030\u0020\u006f\u0062\u006a\n",_gacbc );var _bgef []string ;var _gcgf string ;var _abge int64 ;for _cdfda ,_egfdd :=range _fbaga .Elements (){_eedf ,_eabfd :=_egfdd .(*_bgg .PdfIndirectObject );if !_eabfd {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0074\u0072\u0065am\u0073 \u004e\u0020\u0025\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006es\u0020\u006e\u006f\u006e\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020\u0070\u0064\u0066 \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0025\u0076",_gacbc ,_egfdd );
continue ;};_dgfb :=_eedf .PdfObject .WriteString ()+"\u0020";_gcgf =_gcgf +_dgfb ;_bgef =append (_bgef ,_e .Sprintf ("\u0025\u0064\u0020%\u0064",_eedf .ObjectNumber ,_abge ));_dafde ._decfgb [int (_eedf .ObjectNumber )]=crossReference {Type :2,ObjectNumber :_gacbc ,Index :_cdfda };
_abge =_abge +int64 (len ([]byte (_dgfb )));};_geeec :=_ba .Join (_bgef ,"\u0020")+"\u0020";_dedec :=_bgg .NewFlateEncoder ();_agdfa :=_dedec .MakeStreamDict ();_agdfa .Set (_bgg .PdfObjectName ("\u0054\u0079\u0070\u0065"),_bgg .MakeName ("\u004f\u0062\u006a\u0053\u0074\u006d"));
_bddde :=int64 (_fbaga .Len ());_agdfa .Set (_bgg .PdfObjectName ("\u004e"),_bgg .MakeInteger (_bddde ));_feafag :=int64 (len (_geeec ));_agdfa .Set (_bgg .PdfObjectName ("\u0046\u0069\u0072s\u0074"),_bgg .MakeInteger (_feafag ));_fdaba ,_ :=_dedec .EncodeBytes ([]byte (_geeec +_gcgf ));
_cgeg :=int64 (len (_fdaba ));_agdfa .Set (_bgg .PdfObjectName ("\u004c\u0065\u006e\u0067\u0074\u0068"),_bgg .MakeInteger (_cgeg ));_eddga +=_agdfa .WriteString ();_eddga +="\u000a\u0073\u0074\u0072\u0065\u0061\u006d\u000a";_dafde .writeString (_eddga );
_dafde .writeBytes (_fdaba );_dafde .writeString ("\u000ae\u006ed\u0073\u0074\u0072\u0065\u0061m\u000a\u0065n\u0064\u006f\u0062\u006a\u000a");return ;};_dafde .writeString (_dgcbc .WriteString ());};

// GetContainingPdfObject returns the container of the image object (indirect object).
func (_aecbf *XObjectImage )GetContainingPdfObject ()_bgg .PdfObject {return _aecbf ._cfcfd };

// OutlineItem represents a PDF outline item dictionary (Table 153 - pp. 376 - 377).
type OutlineItem struct{Title string `json:"title"`;Dest OutlineDest `json:"dest"`;Entries []*OutlineItem `json:"entries,omitempty"`;};

// PdfColorCalRGB represents a color in the Colorimetric CIE RGB colorspace.
// A, B, C components
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorCalRGB [3]float64 ;

// ToPdfObject converts the PdfPage to a dictionary within an indirect object container.
func (_dcfdb *PdfPage )ToPdfObject ()_bgg .PdfObject {_gdeg :=_dcfdb ._bcdg ;_dcfdb .GetPageDict ();return _gdeg ;};func (_bege *PdfFilespec )getDict ()*_bgg .PdfObjectDictionary {if _bdeee ,_acag :=_bege ._efde .(*_bgg .PdfIndirectObject );_acag {_efabc ,_deefa :=_bdeee .PdfObject .(*_bgg .PdfObjectDictionary );
if !_deefa {return nil ;};return _efabc ;}else if _aggg ,_bafeg :=_bege ._efde .(*_bgg .PdfObjectDictionary );_bafeg {return _aggg ;}else {_dcf .Log .Debug ("\u0054\u0072\u0079\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u006f\u0062\u006a\u0065\u0063\u0074 \u0074\u0079p\u0065\u0020(\u0025T\u0029",_bege ._efde );
return nil ;};};

// Encoder returns the font's text encoder.
func (_dgacd pdfCIDFontType0 )Encoder ()_cc .TextEncoder {return _dgacd ._cggfa };

// NewXObjectImageFromImage creates a new XObject Image from an image object
// with default options. If encoder is nil, uses raw encoding (none).
func NewXObjectImageFromImage (img *Image ,cs PdfColorspace ,encoder _bgg .StreamEncoder )(*XObjectImage ,error ){_fcgb :=NewXObjectImage ();return UpdateXObjectImageFromImage (_fcgb ,img ,cs ,encoder );};

// ToPdfObject implements interface PdfModel.
func (_be *PdfActionResetForm )ToPdfObject ()_bgg .PdfObject {_be .PdfAction .ToPdfObject ();_cac :=_be ._ddf ;_dfdf :=_cac .PdfObject .(*_bgg .PdfObjectDictionary );_dfdf .SetIfNotNil ("\u0053",_bgg .MakeName (string (ActionTypeResetForm )));_dfdf .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_be .Fields );
_dfdf .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_be .Flags );return _cac ;};

// EnableByName LTV enables the signature dictionary of the PDF AcroForm
// field identified the specified name. The signing certificate chain is
// extracted from the signature dictionary. Optionally, additional certificates
// can be specified through the `extraCerts` parameter. The LTV client attempts
// to build the certificate chain up to a trusted root by downloading any
// missing certificates.
func (_gcbfa *LTV )EnableByName (name string ,extraCerts []*_dd .Certificate )error {_bgfgf :=_gcbfa ._gafcc ._bded .AcroForm ;for _ ,_beddc :=range _bgfgf .AllFields (){_degfa ,_ :=_beddc .GetContext ().(*PdfFieldSignature );if _degfa ==nil {continue ;
};if _gabcc :=_degfa .PartialName ();_gabcc !=name {continue ;};return _gcbfa .Enable (_degfa .V ,extraCerts );};return nil ;};func (_bddcd *LTV )getOCSPs (_abcfg []*_dd .Certificate ,_bgeaa map[string ]*_dd .Certificate )([][]byte ,error ){_bbed :=make ([][]byte ,0,len (_abcfg ));
for _ ,_cecgc :=range _abcfg {for _ ,_bbcec :=range _cecgc .OCSPServer {if _bddcd .CertClient .IsCA (_cecgc ){continue ;};_eedde ,_aggbe :=_bgeaa [_cecgc .Issuer .CommonName ];if !_aggbe {_dcf .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075\u0065\u0073\u0074\u003a\u0020\u0069\u0073\u0073\u0075e\u0072\u0020\u0063\u0065\u0072t\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");
continue ;};_ ,_adfde ,_edead :=_bddcd .OCSPClient .MakeRequest (_bbcec ,_cecgc ,_eedde );if _edead !=nil {_dcf .Log .Debug ("\u0057\u0041\u0052\u004e:\u0020\u004f\u0043\u0053\u0050\u0020\u0072\u0065\u0071\u0075e\u0073t\u0020\u0065\u0072\u0072\u006f\u0072\u003a \u0025\u0076",_edead );
continue ;};_bbed =append (_bbed ,_adfde );};};return _bbed ,nil ;};

// Normalize swaps (Llx,Urx) if Urx < Llx, and (Lly,Ury) if Ury < Lly.
func (_afaa *PdfRectangle )Normalize (){if _afaa .Llx > _afaa .Urx {_afaa .Llx ,_afaa .Urx =_afaa .Urx ,_afaa .Llx ;};if _afaa .Lly > _afaa .Ury {_afaa .Lly ,_afaa .Ury =_afaa .Ury ,_afaa .Lly ;};};

// ToPdfObject returns the PDF representation of the colorspace.
func (_cecb *PdfColorspaceSpecialPattern )ToPdfObject ()_bgg .PdfObject {if _cecb .UnderlyingCS ==nil {return _bgg .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e");};_faeb :=_bgg .MakeArray (_bgg .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));
_faeb .Append (_cecb .UnderlyingCS .ToPdfObject ());if _cecb ._gfdg !=nil {_cecb ._gfdg .PdfObject =_faeb ;return _cecb ._gfdg ;};return _faeb ;};var (_abfga _b .Mutex ;_fedg ="";_gcdbd _g .Time ;_aecbg ="";_fggff ="";_bgebb _g .Time ;_abebe ="";_edafc ="";
_ggce ="";);

// NewPdfAppenderWithOpts creates a new Pdf appender from a Pdf reader with options.
func NewPdfAppenderWithOpts (reader *PdfReader ,opts *ReaderOpts ,encryptOptions *EncryptOptions )(*PdfAppender ,error ){_aefef :=&PdfAppender {_ddbge :reader ._aeacdd ,Reader :reader ,_ega :reader ._ebdgc ,_efaa :reader ._ddcbee };_bgcg ,_efed :=_aefef ._ddbge .Seek (0,_gb .SeekEnd );
if _efed !=nil {return nil ,_efed ;};_aefef ._dge =_bgcg ;if _ ,_efed =_aefef ._ddbge .Seek (0,_gb .SeekStart );_efed !=nil {return nil ,_efed ;};_aefef ._bded ,_efed =NewPdfReaderWithOpts (_aefef ._ddbge ,opts );if _efed !=nil {return nil ,_efed ;};for _ ,_ddeac :=range _aefef .Reader .GetObjectNums (){if _aefef ._adab < _ddeac {_aefef ._adab =_ddeac ;
};};_aefef ._ccee =_aefef ._ega .GetXrefTable ();_aefef ._bcgb =_aefef ._ega .GetXrefOffset ();_aefef ._daab =append (_aefef ._daab ,_aefef ._bded .PageList ...);_aefef ._eccg =make (map[_bgg .PdfObject ]struct{});_aefef ._fbdg =make (map[_bgg .PdfObject ]int64 );
_aefef ._faf =make (map[_bgg .PdfObject ]struct{});_aefef ._fgbb =_aefef ._bded .AcroForm ;_aefef ._ebdc =_aefef ._bded .DSS ;if opts !=nil {_aefef ._bdgg =opts .Password ;};if encryptOptions !=nil {_aefef ._gacd =encryptOptions ;};return _aefef ,nil ;
};func (_aaeab *PdfReader )loadForms ()(*PdfAcroForm ,error ){if _aaeab ._ebdgc .GetCrypter ()!=nil &&!_aaeab ._ebdgc .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_eebfg :=_aaeab ._gaebb ;_defe :=_eebfg .Get ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d");if _defe ==nil {return nil ,nil ;};_gcac ,_ :=_bgg .GetIndirect (_defe );_defe =_bgg .TraceToDirectObject (_defe );if _bgg .IsNullObject (_defe ){_dcf .Log .Trace ("\u0041\u0063\u0072of\u006f\u0072\u006d\u0020\u0069\u0073\u0020\u0061\u0020n\u0075l\u006c \u006fb\u006a\u0065\u0063\u0074\u0020\u0028\u0065\u006d\u0070\u0074\u0079\u0029\u000a");
return nil ,nil ;};_ggbfb ,_bgagg :=_bgg .GetDict (_defe );if !_bgagg {_dcf .Log .Debug ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u0041\u0063\u0072\u006fF\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_defe );_dcf .Log .Debug ("\u0044\u006f\u0065\u0073 n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0066\u006f\u0072\u006d\u0073");
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0061\u0063\u0072\u006ff\u006fr\u006d \u0065\u006e\u0074\u0072\u0079\u0020\u0025T",_defe );};_dcf .Log .Trace ("\u0048\u0061\u0073\u0020\u0041\u0063\u0072\u006f\u0020f\u006f\u0072\u006d\u0073");
_dcf .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0065\u0020\u0074\u0068\u0065\u0020\u0041\u0063r\u006ff\u006f\u0072\u006d\u0073\u0020\u0073\u0074\u0072\u0075\u0063\u0074\u0075\u0072\u0065");if !_aaeab ._cdbfbb {_cgfac :=_aaeab .traverseObjectData (_ggbfb );
if _cgfac !=nil {_dcf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0074\u0072a\u0076\u0065\u0072\u0073\u0065\u0020\u0041\u0063\u0072\u006fFo\u0072\u006d\u0073 \u0028%\u0073\u0029",_cgfac );
return nil ,_cgfac ;};};_dcbae ,_ffgab :=_aaeab .newPdfAcroFormFromDict (_gcac ,_ggbfb );if _ffgab !=nil {return nil ,_ffgab ;};return _dcbae ,nil ;};

// PdfPage represents a page in a PDF document. (7.7.3.3 - Table 30).
type PdfPage struct{Parent _bgg .PdfObject ;LastModified *PdfDate ;Resources *PdfPageResources ;CropBox *PdfRectangle ;MediaBox *PdfRectangle ;BleedBox *PdfRectangle ;TrimBox *PdfRectangle ;ArtBox *PdfRectangle ;BoxColorInfo _bgg .PdfObject ;Contents _bgg .PdfObject ;
Rotate *int64 ;Group _bgg .PdfObject ;Thumb _bgg .PdfObject ;B _bgg .PdfObject ;Dur _bgg .PdfObject ;Trans _bgg .PdfObject ;AA _bgg .PdfObject ;Metadata _bgg .PdfObject ;PieceInfo _bgg .PdfObject ;StructParents _bgg .PdfObject ;ID _bgg .PdfObject ;PZ _bgg .PdfObject ;
SeparationInfo _bgg .PdfObject ;Tabs _bgg .PdfObject ;TemplateInstantiated _bgg .PdfObject ;PresSteps _bgg .PdfObject ;UserUnit _bgg .PdfObject ;VP _bgg .PdfObject ;Annots _bgg .PdfObject ;_dedeg []*PdfAnnotation ;_gdbeb *_bgg .PdfObjectDictionary ;_bcdg *_bgg .PdfIndirectObject ;
_afbaa *PdfReader ;};type pdfFontType3 struct{fontCommon ;_dggg *_bgg .PdfIndirectObject ;

// These fields are specific to Type 3 fonts.
CharProcs _bgg .PdfObject ;Encoding _bgg .PdfObject ;FontBBox _bgg .PdfObject ;FontMatrix _bgg .PdfObject ;FirstChar _bgg .PdfObject ;LastChar _bgg .PdfObject ;Widths _bgg .PdfObject ;Resources _bgg .PdfObject ;_ggbd map[_cc .CharCode ]float64 ;_bcddf _cc .TextEncoder ;
};

// ToPdfObject converts the pdfCIDFontType0 to a PDF representation.
func (_gfdgf *pdfCIDFontType0 )ToPdfObject ()_bgg .PdfObject {return _bgg .MakeNull ()};func _ebcf (_gcafb string )map[string ]string {_egcfc :=_fggd .Split (_gcafb ,-1);_efcb :=map[string ]string {};for _ ,_dgdb :=range _egcfc {_gagf :=_aegd .FindStringSubmatch (_dgdb );
if _gagf ==nil {continue ;};_dgcca ,_gedf :=_gagf [1],_gagf [2];_efcb [_dgcca ]=_gedf ;};return _efcb ;};

// HasFontByName checks if has font resource by name.
func (_fedfg *PdfPage )HasFontByName (name _bgg .PdfObjectName )bool {_befbc ,_afdeg :=_fedfg .Resources .Font .(*_bgg .PdfObjectDictionary );if !_afdeg {return false ;};if _cefed :=_befbc .Get (name );_cefed !=nil {return true ;};return false ;};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_bbdbd *PdfColorspaceCalRGB )ToPdfObject ()_bgg .PdfObject {_fafg :=&_bgg .PdfObjectArray {};_fafg .Append (_bgg .MakeName ("\u0043\u0061\u006c\u0052\u0047\u0042"));_dcdf :=_bgg .MakeDict ();if _bbdbd .WhitePoint !=nil {_bfdgg :=_bgg .MakeArray (_bgg .MakeFloat (_bbdbd .WhitePoint [0]),_bgg .MakeFloat (_bbdbd .WhitePoint [1]),_bgg .MakeFloat (_bbdbd .WhitePoint [2]));
_dcdf .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bfdgg );}else {_dcf .Log .Error ("\u0043\u0061l\u0052\u0047\u0042\u003a \u004d\u0069s\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075i\u0072\u0065\u0064\u0029");
};if _bbdbd .BlackPoint !=nil {_gde :=_bgg .MakeArray (_bgg .MakeFloat (_bbdbd .BlackPoint [0]),_bgg .MakeFloat (_bbdbd .BlackPoint [1]),_bgg .MakeFloat (_bbdbd .BlackPoint [2]));_dcdf .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_gde );
};if _bbdbd .Gamma !=nil {_gcdd :=_bgg .MakeArray (_bgg .MakeFloat (_bbdbd .Gamma [0]),_bgg .MakeFloat (_bbdbd .Gamma [1]),_bgg .MakeFloat (_bbdbd .Gamma [2]));_dcdf .Set ("\u0047\u0061\u006dm\u0061",_gcdd );};if _bbdbd .Matrix !=nil {_bcaa :=_bgg .MakeArray (_bgg .MakeFloat (_bbdbd .Matrix [0]),_bgg .MakeFloat (_bbdbd .Matrix [1]),_bgg .MakeFloat (_bbdbd .Matrix [2]),_bgg .MakeFloat (_bbdbd .Matrix [3]),_bgg .MakeFloat (_bbdbd .Matrix [4]),_bgg .MakeFloat (_bbdbd .Matrix [5]),_bgg .MakeFloat (_bbdbd .Matrix [6]),_bgg .MakeFloat (_bbdbd .Matrix [7]),_bgg .MakeFloat (_bbdbd .Matrix [8]));
_dcdf .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bcaa );};_fafg .Append (_dcdf );if _bbdbd ._ffafg !=nil {_bbdbd ._ffafg .PdfObject =_fafg ;return _bbdbd ._ffafg ;};return _fafg ;};

// ToPdfObject implements model.PdfModel interface.
func (_gbdc *PdfOutputIntent )ToPdfObject ()_bgg .PdfObject {if _gbdc ._faace ==nil {_gbdc ._faace =_bgg .MakeDict ();};_faaa :=_gbdc ._faace ;if _gbdc .Type !=""{_faaa .Set ("\u0054\u0079\u0070\u0065",_bgg .MakeName (_gbdc .Type ));};_faaa .Set ("\u0053",_bgg .MakeName (_gbdc .S .String ()));
if _gbdc .OutputCondition !=""{_faaa .Set ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e",_bgg .MakeString (_gbdc .OutputCondition ));};_faaa .Set ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r",_bgg .MakeString (_gbdc .OutputConditionIdentifier ));
_faaa .Set ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065",_bgg .MakeString (_gbdc .RegistryName ));if _gbdc .Info !=""{_faaa .Set ("\u0049\u006e\u0066\u006f",_bgg .MakeString (_gbdc .Info ));};if len (_gbdc .DestOutputProfile )!=0{_aadeg ,_acaa :=_bgg .MakeStream (_gbdc .DestOutputProfile ,_bgg .NewFlateEncoder ());
if _acaa !=nil {_dcf .Log .Error ("\u004d\u0061\u006b\u0065\u0053\u0074\u0072\u0065\u0061\u006d\u0020\u0044\u0065s\u0074\u004f\u0075\u0074\u0070\u0075t\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_acaa );
};_aadeg .PdfObjectDictionary .Set ("\u004e",_bgg .MakeInteger (int64 (_gbdc .ColorComponents )));_bbgeg :=make ([]float64 ,_gbdc .ColorComponents *2);for _bcffd :=0;_bcffd < _gbdc .ColorComponents *2;_bcffd ++{_accg :=0.0;if _bcffd %2!=0{_accg =1.0;};
_bbgeg [_bcffd ]=_accg ;};_aadeg .PdfObjectDictionary .Set ("\u0052\u0061\u006eg\u0065",_bgg .MakeArrayFromFloats (_bbgeg ));_faaa .Set ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065",_aadeg );};return _faaa ;
};

// PdfFieldText represents a text field where user can enter text.
type PdfFieldText struct{*PdfField ;DA *_bgg .PdfObjectString ;Q *_bgg .PdfObjectInteger ;DS *_bgg .PdfObjectString ;RV _bgg .PdfObject ;MaxLen *_bgg .PdfObjectInteger ;};var _baaf =map[string ]struct{}{"\u0054\u0069\u0074l\u0065":{},"\u0041\u0075\u0074\u0068\u006f\u0072":{},"\u0053u\u0062\u006a\u0065\u0063\u0074":{},"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":{},"\u0043r\u0065\u0061\u0074\u006f\u0072":{},"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":{},"\u0054r\u0061\u0070\u0070\u0065\u0064":{},"\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":{},"\u004do\u0064\u0044\u0061\u0074\u0065":{}};


// GetOptimizer returns current PDF optimizer.
func (_adeee *PdfWriter )GetOptimizer ()Optimizer {return _adeee ._ebdfc };

// ToPdfObject converts colorspace to a PDF object. [/Indexed base hival lookup]
func (_abac *PdfColorspaceSpecialIndexed )ToPdfObject ()_bgg .PdfObject {_cfgc :=_bgg .MakeArray (_bgg .MakeName ("\u0049n\u0064\u0065\u0078\u0065\u0064"));_cfgc .Append (_abac .Base .ToPdfObject ());_cfgc .Append (_bgg .MakeInteger (int64 (_abac .HiVal )));
_cfgc .Append (_abac .Lookup );if _abac ._addbe !=nil {_abac ._addbe .PdfObject =_cfgc ;return _abac ._addbe ;};return _cfgc ;};

// PdfColorLab represents a color in the L*, a*, b* 3 component colorspace.
// Each component is defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorLab [3]float64 ;

// RunesToCharcodeBytes maps the provided runes to charcode bytes and it
// returns the resulting slice of bytes, along with the number of runes which
// could not be converted. If the number of misses is 0, all runes were
// successfully converted.
func (_gede *PdfFont )RunesToCharcodeBytes (data []rune )([]byte ,int ){var _fcbba []_cc .TextEncoder ;var _adea _cc .CMapEncoder ;if _cbcb :=_gede .baseFields ()._ffed ;_cbcb !=nil {_adea =_cc .NewCMapEncoder ("",nil ,_cbcb );};_fcdbb :=_gede .Encoder ();
if _fcdbb !=nil {switch _ddbbd :=_fcdbb .(type ){case _cc .SimpleEncoder :_bcgc :=_ddbbd .BaseName ();if _ ,_dccbg :=_adce [_bcgc ];_dccbg {_fcbba =append (_fcbba ,_fcdbb );};};};if len (_fcbba )==0{if _gede .baseFields ()._ffed !=nil {_fcbba =append (_fcbba ,_adea );
};if _fcdbb !=nil {_fcbba =append (_fcbba ,_fcdbb );};};var _bacef _aa .Buffer ;var _egaaf int ;for _ ,_fegcd :=range data {var _bgcbd bool ;for _ ,_cacbe :=range _fcbba {if _dfca :=_cacbe .Encode (string (_fegcd ));len (_dfca )> 0{_bacef .Write (_dfca );
_bgcbd =true ;break ;};};if !_bgcbd {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020f\u0061\u0069\u006ce\u0064\u0020\u0074\u006f \u006d\u0061\u0070\u0020\u0072\u0075\u006e\u0065\u0020\u0060\u0025\u002b\u0071\u0060\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065",_fegcd );
_egaaf ++;};};if _egaaf !=0{_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0061\u006cl\u0020\u0072\u0075\u006e\u0065\u0073\u0020\u0074\u006f\u0020\u0063\u0068\u0061\u0072c\u006fd\u0065\u0073\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0052\u0075\u006e\u0065\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073 \u0065\u006e\u0063\u006f\u0064e\u0072\u0073\u003d\u0025\u002b\u0076",len (data ),_egaaf ,_gede ,_fcbba );
};return _bacef .Bytes (),_egaaf ;};

// AddImageResource adds an image to the XObject resources.
func (_adaa *PdfPage )AddImageResource (name _bgg .PdfObjectName ,ximg *XObjectImage )error {var _fbffg *_bgg .PdfObjectDictionary ;if _adaa .Resources .XObject ==nil {_fbffg =_bgg .MakeDict ();_adaa .Resources .XObject =_fbffg ;}else {var _cddd bool ;
_fbffg ,_cddd =(_adaa .Resources .XObject ).(*_bgg .PdfObjectDictionary );if !_cddd {return _ag .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0078\u0072\u0065\u0073\u0020\u0064\u0069\u0063\u0074\u0020\u0074\u0079p\u0065");};};_fbffg .Set (name ,ximg .ToPdfObject ());
return nil ;};

// DecodeArray returns the range of color component values in CalGray colorspace.
func (_feef *PdfColorspaceCalGray )DecodeArray ()[]float64 {return []float64 {0.0,1.0}};func (_gba *PdfColorspaceDeviceCMYK )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b";};

// DecodeArray returns the component range values for the DeviceN colorspace.
// [0 1.0 0 1.0 ...] for each color component.
func (_geab *PdfColorspaceDeviceN )DecodeArray ()[]float64 {var _dgce []float64 ;for _dcfc :=0;_dcfc < _geab .GetNumComponents ();_dcfc ++{_dgce =append (_dgce ,0.0,1.0);};return _dgce ;};func _cab (_gbbf *_bgg .PdfObjectDictionary )(*PdfFieldChoice ,error ){_fdfa :=&PdfFieldChoice {};
_fdfa .Opt ,_ =_bgg .GetArray (_gbbf .Get ("\u004f\u0070\u0074"));_fdfa .TI ,_ =_bgg .GetInt (_gbbf .Get ("\u0054\u0049"));_fdfa .I ,_ =_bgg .GetArray (_gbbf .Get ("\u0049"));return _fdfa ,nil ;};func (_cgea *DSS )generateHashMap (_cfaee []*_bgg .PdfObjectStream )(map[string ]*_bgg .PdfObjectStream ,error ){_daabd :=map[string ]*_bgg .PdfObjectStream {};
for _ ,_ggad :=range _cfaee {_abea ,_adcgf :=_bgg .DecodeStream (_ggad );if _adcgf !=nil {return nil ,_adcgf ;};_ebaeg ,_adcgf :=_dagdc (_abea );if _adcgf !=nil {return nil ,_adcgf ;};_daabd [string (_ebaeg )]=_ggad ;};return _daabd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_bcba *PdfAnnotationRichMedia )ToPdfObject ()_bgg .PdfObject {_bcba .PdfAnnotation .ToPdfObject ();_fdab :=_bcba ._gec ;_eab :=_fdab .PdfObject .(*_bgg .PdfObjectDictionary );_eab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a"));
_eab .SetIfNotNil ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073",_bcba .RichMediaSettings );_eab .SetIfNotNil ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074",_bcba .RichMediaContent );
return _fdab ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element.
func (_geec *PdfColorspaceSpecialSeparation )ColorFromPdfObjects (objects []_bgg .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgcf ,_fgag :=_bgg .GetNumbersAsFloat (objects );
if _fgag !=nil {return nil ,_fgag ;};return _geec .ColorFromFloats (_bgcf );};

// AddAnnotation appends `annot` to the list of page annotations.
func (_cdgad *PdfPage )AddAnnotation (annot *PdfAnnotation ){if _cdgad ._dedeg ==nil {_cdgad .GetAnnotations ();};_cdgad ._dedeg =append (_cdgad ._dedeg ,annot );};

// ReplaceAcroForm replaces the acrobat form. It appends a new form to the Pdf which
// replaces the original AcroForm.
func (_aacf *PdfAppender )ReplaceAcroForm (acroForm *PdfAcroForm ){if acroForm !=nil {_aacf .updateObjectsDeep (acroForm .ToPdfObject (),nil );};_aacf ._fgbb =acroForm ;};

// PdfActionTrans represents a trans action.
type PdfActionTrans struct{*PdfAction ;Trans _bgg .PdfObject ;};

// PdfAnnotationHighlight represents Highlight annotations.
// (Section 12.5.6.10).
type PdfAnnotationHighlight struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bgg .PdfObject ;};func (_dfefc *PdfSignature )extractChainFromPKCS7 ()([]*_dd .Certificate ,error ){_cddaf ,_agbae :=_dcfa .Parse (_dfefc .Contents .Bytes ());if _agbae !=nil {return nil ,_agbae ;
};return _cddaf .Certificates ,nil ;};

// PartialName returns the partial name of the field.
func (_bfda *PdfField )PartialName ()string {_feeba :="";if _bfda .T !=nil {_feeba =_bfda .T .Decoded ();}else {_dcf .Log .Debug ("\u0046\u0069el\u0064\u0020\u006di\u0073\u0073\u0069\u006eg T\u0020fi\u0065\u006c\u0064\u0020\u0028\u0069\u006eco\u006d\u0070\u0061\u0074\u0069\u0062\u006ce\u0029");
};return _feeba ;};

// ColorToRGB converts a DeviceN color to an RGB color.
func (_efgbc *PdfColorspaceDeviceN )ColorToRGB (color PdfColor )(PdfColor ,error ){if _efgbc .AlternateSpace ==nil {return nil ,_ag .New ("\u0044\u0065\u0076\u0069\u0063\u0065N\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020\u0073\u0070a\u0063\u0065\u0020\u0075\u006e\u0064\u0065f\u0069\u006e\u0065\u0064");
};return _efgbc .AlternateSpace .ColorToRGB (color );};func (_fad *PdfReader )newPdfAnnotationFreeTextFromDict (_ced *_bgg .PdfObjectDictionary )(*PdfAnnotationFreeText ,error ){_fcbg :=PdfAnnotationFreeText {};_acd ,_dcdg :=_fad .newPdfAnnotationMarkupFromDict (_ced );
if _dcdg !=nil {return nil ,_dcdg ;};_fcbg .PdfAnnotationMarkup =_acd ;_fcbg .DA =_ced .Get ("\u0044\u0041");_fcbg .Q =_ced .Get ("\u0051");_fcbg .RC =_ced .Get ("\u0052\u0043");_fcbg .DS =_ced .Get ("\u0044\u0053");_fcbg .CL =_ced .Get ("\u0043\u004c");
_fcbg .IT =_ced .Get ("\u0049\u0054");_fcbg .BE =_ced .Get ("\u0042\u0045");_fcbg .RD =_ced .Get ("\u0052\u0044");_fcbg .BS =_ced .Get ("\u0042\u0053");_fcbg .LE =_ced .Get ("\u004c\u0045");return &_fcbg ,nil ;};

// NewPdfAnnotationCircle returns a new circle annotation.
func NewPdfAnnotationCircle ()*PdfAnnotationCircle {_cacb :=NewPdfAnnotation ();_eag :=&PdfAnnotationCircle {};_eag .PdfAnnotation =_cacb ;_eag .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cacb .SetContext (_eag );return _eag ;};

// NewPdfAnnotationFreeText returns a new free text annotation.
func NewPdfAnnotationFreeText ()*PdfAnnotationFreeText {_fcbe :=NewPdfAnnotation ();_bef :=&PdfAnnotationFreeText {};_bef .PdfAnnotation =_fcbe ;_bef .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_fcbe .SetContext (_bef );return _bef ;};

// String returns a human readable description of `fontfile`.
func (_fffcg *fontFile )String ()string {_debf :="\u005b\u004e\u006f\u006e\u0065\u005d";if _fffcg ._eeabg !=nil {_debf =_fffcg ._eeabg .String ();};return _e .Sprintf ("\u0046O\u004e\u0054\u0046\u0049\u004c\u0045\u007b\u0025\u0023\u0071\u0020e\u006e\u0063\u006f\u0064\u0065\u0072\u003d\u0025\u0073\u007d",_fffcg ._ddecf ,_debf );
};

// SetAnnotations sets the annotations list.
func (_agdb *PdfPage )SetAnnotations (annotations []*PdfAnnotation ){_agdb ._dedeg =annotations };

// GetContainingPdfObject returns the containing object for the PdfField, i.e. an indirect object
// containing the field dictionary.
func (_gbgb *PdfField )GetContainingPdfObject ()_bgg .PdfObject {return _gbgb ._fagb };

// PdfAnnotationInk represents Ink annotations.
// (Section 12.5.6.13).
type PdfAnnotationInk struct{*PdfAnnotation ;*PdfAnnotationMarkup ;InkList _bgg .PdfObject ;BS _bgg .PdfObject ;};

// GetContentStreamWithEncoder returns the pattern cell's content stream and its encoder
func (_bcbafa *PdfTilingPattern )GetContentStreamWithEncoder ()([]byte ,_bgg .StreamEncoder ,error ){_bfeagd ,_acadg :=_bcbafa ._aebfe .(*_bgg .PdfObjectStream );if !_acadg {_dcf .Log .Debug ("\u0054\u0069l\u0069\u006e\u0067\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bcbafa ._aebfe );
return nil ,nil ,_bgg .ErrTypeError ;};_dggec ,_gbded :=_bgg .DecodeStream (_bfeagd );if _gbded !=nil {_dcf .Log .Debug ("\u0046\u0061\u0069l\u0065\u0064\u0020\u0064e\u0063\u006f\u0064\u0069\u006e\u0067\u0020s\u0074\u0072\u0065\u0061\u006d\u002c\u0020\u0065\u0072\u0072\u003a\u0020\u0025\u0076",_gbded );
return nil ,nil ,_gbded ;};_dcbca ,_gbded :=_bgg .NewEncoderFromStream (_bfeagd );if _gbded !=nil {_dcf .Log .Debug ("F\u0061\u0069\u006c\u0065\u0064\u0020f\u0069\u006e\u0064\u0069\u006e\u0067 \u0064\u0065\u0063\u006f\u0064\u0069\u006eg\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u003a\u0020%\u0076",_gbded );
return nil ,nil ,_gbded ;};return _dggec ,_dcbca ,nil ;};

// DSS represents a Document Security Store dictionary.
// The DSS dictionary contains both global and signature specific validation
// information. The certificates and revocation data in the `Certs`, `OCSPs`,
// and `CRLs` fields can be used to validate any signature in the document.
// Additionally, the VRI entry contains validation data per signature.
// The keys in the VRI entry are calculated as upper(hex(sha1(sig.Contents))).
// The values are VRI dictionaries containing certificates and revocation
// information used for validating a single signature.
// See ETSI TS 102 778-4 V1.1.1 for more information.
type DSS struct{_cegfd *_bgg .PdfIndirectObject ;Certs []*_bgg .PdfObjectStream ;OCSPs []*_bgg .PdfObjectStream ;CRLs []*_bgg .PdfObjectStream ;VRI map[string ]*VRI ;_dbfe map[string ]*_bgg .PdfObjectStream ;_cbeb map[string ]*_bgg .PdfObjectStream ;_dcgge map[string ]*_bgg .PdfObjectStream ;
};

// GetNumComponents returns the number of color components (1 for grayscale).
func (_bbcc *PdfColorDeviceGray )GetNumComponents ()int {return 1};

// ColorToRGB verifies that the input color is an RGB color. Method exists in
// order to satisfy the PdfColorspace interface.
func (_edcag *PdfColorspaceDeviceRGB )ColorToRGB (color PdfColor )(PdfColor ,error ){_bbab ,_fbad :=color .(*PdfColorDeviceRGB );if !_fbad {_dcf .Log .Debug ("\u0049\u006e\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072 \u006e\u006f\u0074\u0020\u0064\u0065\u0076\u0069\u0063\u0065 \u0052\u0047\u0042");
return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};return _bbab ,nil ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_bcec *PdfColorspaceDeviceRGB )ToPdfObject ()_bgg .PdfObject {return _bgg .MakeName ("\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B");};

// PdfActionGoToR represents a GoToR action.
type PdfActionGoToR struct{*PdfAction ;F *PdfFilespec ;D _bgg .PdfObject ;NewWindow _bgg .PdfObject ;};func _dagdc (_afebb []byte )([]byte ,error ){_bdcc :=_fe .New ();if _ ,_cgfda :=_gb .Copy (_bdcc ,_aa .NewReader (_afebb ));_cgfda !=nil {return nil ,_cgfda ;
};return _bdcc .Sum (nil ),nil ;};func _geegg (_fffdf *_bgg .PdfObjectDictionary )(*PdfShadingType1 ,error ){_bceea :=PdfShadingType1 {};if _afda :=_fffdf .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_afda !=nil {_afda =_bgg .TraceToDirectObject (_afda );
_dbbg ,_cdgbg :=_afda .(*_bgg .PdfObjectArray );if !_cdgbg {_dcf .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_afda );return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_bceea .Domain =_dbbg ;};if _fbdfa :=_fffdf .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_fbdfa !=nil {_fbdfa =_bgg .TraceToDirectObject (_fbdfa );_addge ,_bebge :=_fbdfa .(*_bgg .PdfObjectArray );if !_bebge {_dcf .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fbdfa );
return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_bceea .Matrix =_addge ;};_dfdgc :=_fffdf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _dfdgc ==nil {_dcf .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_bceea .Function =[]PdfFunction {};if _cffg ,_cbcd :=_dfdgc .(*_bgg .PdfObjectArray );_cbcd {for _ ,_cggdd :=range _cffg .Elements (){_gebdf ,_adcfc :=_aefac (_cggdd );if _adcfc !=nil {_dcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_adcfc );
return nil ,_adcfc ;};_bceea .Function =append (_bceea .Function ,_gebdf );};}else {_fefad ,_gagdf :=_aefac (_dfdgc );if _gagdf !=nil {_dcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gagdf );
return nil ,_gagdf ;};_bceea .Function =append (_bceea .Function ,_fefad );};return &_bceea ,nil ;};

// NewPdfAnnotationHighlight returns a new text highlight annotation.
func NewPdfAnnotationHighlight ()*PdfAnnotationHighlight {_ffde :=NewPdfAnnotation ();_ggg :=&PdfAnnotationHighlight {};_ggg .PdfAnnotation =_ffde ;_ggg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ffde .SetContext (_ggg );return _ggg ;};func _effca (_fgab *_bgg .PdfObjectDictionary )(*PdfShadingType3 ,error ){_cbaaf :=PdfShadingType3 {};
_fcfcc :=_fgab .Get ("\u0043\u006f\u006f\u0072\u0064\u0073");if _fcfcc ==nil {_dcf .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0043\u006f\u006f\u0072\u0064\u0073");
return nil ,ErrRequiredAttributeMissing ;};_bafbc ,_gfdbd :=_fcfcc .(*_bgg .PdfObjectArray );if !_gfdbd {_dcf .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fcfcc );
return nil ,_bgg .ErrTypeError ;};if _bafbc .Len ()!=6{_dcf .Log .Debug ("\u0043\u006f\u006f\u0072d\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0036\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_bafbc .Len ());return nil ,ErrInvalidAttribute ;
};_cbaaf .Coords =_bafbc ;if _adadg :=_fgab .Get ("\u0044\u006f\u006d\u0061\u0069\u006e");_adadg !=nil {_adadg =_bgg .TraceToDirectObject (_adadg );_cdbeb ,_ecegdg :=_adadg .(*_bgg .PdfObjectArray );if !_ecegdg {_dcf .Log .Debug ("\u0044\u006f\u006d\u0061i\u006e\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_adadg );
return nil ,_bgg .ErrTypeError ;};_cbaaf .Domain =_cdbeb ;};_fcfcc =_fgab .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _fcfcc ==nil {_dcf .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_cbaaf .Function =[]PdfFunction {};if _gdcc ,_fbbdf :=_fcfcc .(*_bgg .PdfObjectArray );_fbbdf {for _ ,_fceff :=range _gdcc .Elements (){_aaegec ,_fbegf :=_aefac (_fceff );if _fbegf !=nil {_dcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_fbegf );
return nil ,_fbegf ;};_cbaaf .Function =append (_cbaaf .Function ,_aaegec );};}else {_deaf ,_cebdf :=_aefac (_fcfcc );if _cebdf !=nil {_dcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cebdf );
return nil ,_cebdf ;};_cbaaf .Function =append (_cbaaf .Function ,_deaf );};if _aebb :=_fgab .Get ("\u0045\u0078\u0074\u0065\u006e\u0064");_aebb !=nil {_aebb =_bgg .TraceToDirectObject (_aebb );_aefce ,_bdefa :=_aebb .(*_bgg .PdfObjectArray );if !_bdefa {_dcf .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aebb );
return nil ,_bgg .ErrTypeError ;};if _aefce .Len ()!=2{_dcf .Log .Debug ("\u0045\u0078\u0074\u0065n\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u006eo\u0074 \u0032\u0020\u0028\u0067\u006f\u0074\u0020%\u0064\u0029",_aefce .Len ());return nil ,ErrInvalidAttribute ;
};_cbaaf .Extend =_aefce ;};return &_cbaaf ,nil ;};func (_aab *PdfReader )newPdfActionGotoFromDict (_dfec *_bgg .PdfObjectDictionary )(*PdfActionGoTo ,error ){return &PdfActionGoTo {D :_dfec .Get ("\u0044")},nil ;};func _bfac (_febe _bgg .PdfObject ,_ecag bool )(*PdfFont ,error ){_afga ,_dcaedc ,_dabga :=_cfadb (_febe );
if _afga !=nil {_ccea (_afga );};if _dabga !=nil {if _dabga ==ErrType1CFontNotSupported {_fbcgd ,_aafg :=_bcbaf (_afga ,_dcaedc ,nil );if _aafg !=nil {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_dcaedc ,_aafg );
return nil ,_dabga ;};return &PdfFont {_efdec :_fbcgd },_dabga ;};return nil ,_dabga ;};_dfecc :=&PdfFont {};switch _dcaedc ._dadgd {case "\u0054\u0079\u0070e\u0030":if !_ecag {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u004c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u00650\u0020\u006e\u006f\u0074\u0020\u0061\u006c\u006c\u006f\u0077\u0065\u0064\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dcaedc );
return nil ,_ag .New ("\u0063\u0079\u0063\u006cic\u0061\u006c\u0020\u0074\u0079\u0070\u0065\u0030\u0020\u006c\u006f\u0061\u0064\u0069n\u0067");};_gdbg ,_bgcb :=_ecgf (_afga ,_dcaedc );if _bgcb !=nil {_dcf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0057\u0068\u0069l\u0065\u0020\u006c\u006f\u0061\u0064\u0069ng\u0020\u0054\u0079\u0070e\u0030\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066on\u0074\u003d%\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dcaedc ,_bgcb );
return nil ,_bgcb ;};_dfecc ._efdec =_gdbg ;case "\u0054\u0079\u0070e\u0031","\u004dM\u0054\u0079\u0070\u0065\u0031","\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065":var _dfdd *pdfFontSimple ;_bedd ,_aeceb :=_dad .NewStdFontByName (_dad .StdFontName (_dcaedc ._dbbc ));
if _aeceb {_eabe :=_ggfce (_bedd );_dfecc ._efdec =&_eabe ;_gedd :=_bgg .TraceToDirectObject (_eabe .ToPdfObject ());_gbec ,_gbcd ,_caba :=_cfadb (_gedd );if _caba !=nil {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_dcaedc ,_eabe );
return nil ,_caba ;};for _ ,_addgg :=range _afga .Keys (){_gbec .Set (_addgg ,_afga .Get (_addgg ));};_dfdd ,_caba =_bcbaf (_gbec ,_gbcd ,_eabe ._aaef );if _caba !=nil {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0042\u0061\u0064\u0020\u0053\u0074a\u006e\u0064\u0061\u0072\u0064\u00314\u000a\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u000a\u0009\u0073\u0074d\u003d\u0025\u002b\u0076",_dcaedc ,_eabe );
return nil ,_caba ;};_dfdd ._dcbe =_eabe ._dcbe ;_dfdd ._ebfec =_eabe ._ebfec ;if _dfdd ._dcbg ==nil {_dfdd ._dcbg =_eabe ._dcbg ;};}else {_dfdd ,_dabga =_bcbaf (_afga ,_dcaedc ,nil );if _dabga !=nil {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0057h\u0069\u006c\u0065 l\u006f\u0061\u0064\u0069\u006e\u0067 \u0073\u0069\u006d\u0070\u006c\u0065\u0020\u0066\u006f\u006e\u0074\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072=\u0025\u0076",_dcaedc ,_dabga );
return nil ,_dabga ;};};_dabga =_dfdd .addEncoding ();if _dabga !=nil {return nil ,_dabga ;};if _aeceb {_dfdd .updateStandard14Font ();};if _aeceb &&_dfdd ._bfced ==nil &&_dfdd ._aaef ==nil {_dcf .Log .Error ("\u0073\u0069\u006d\u0070\u006c\u0065\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dfdd );
_dcf .Log .Error ("\u0066n\u0074\u003d\u0025\u002b\u0076",_bedd );};if len (_dfdd ._dcbe )==0{_dcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a \u004e\u006f\u0020\u0077\u0069d\u0074h\u0073.\u0020\u0066\u006f\u006e\u0074\u003d\u0025s",_dfdd );};_dfecc ._efdec =_dfdd ;
case "\u0054\u0079\u0070e\u0033":_bceb ,_fadfg :=_gebf (_afga ,_dcaedc );if _fadfg !=nil {_dcf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020W\u0068\u0069\u006c\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0074y\u0070\u0065\u0033\u0020\u0066\u006f\u006e\u0074\u003a\u0020%\u0076",_fadfg );
return nil ,_fadfg ;};_dfecc ._efdec =_bceb ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030":_aegc ,_bddd :=_aeaf (_afga ,_dcaedc );if _bddd !=nil {_dcf .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0057\u0068i\u006c\u0065\u0020l\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069d \u0066\u006f\u006et\u0020\u0074y\u0070\u0065\u0030\u0020\u0066\u006fn\u0074\u003a \u0025\u0076",_bddd );
return nil ,_bddd ;};_dfecc ._efdec =_aegc ;case "\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_egcb ,_bcgd :=_fefa (_afga ,_dcaedc );if _bcgd !=nil {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0057\u0068\u0069l\u0065\u0020\u006co\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u0069\u0064\u0020f\u006f\u006e\u0074\u0020\u0074yp\u0065\u0032\u0020\u0066\u006f\u006e\u0074\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_dcaedc ,_bcgd );
return nil ,_bcgd ;};_dfecc ._efdec =_egcb ;default:_dcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020U\u006e\u0073u\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020f\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0066\u006fn\u0074\u003d\u0025\u0073",_dcaedc );
return nil ,_e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0066\u006f\u006e\u0074\u0020\u0074y\u0070\u0065\u003a\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dcaedc );};return _dfecc ,nil ;};

// GetModelFromPrimitive returns the model corresponding to the `primitive` PdfObject.
func (_cgdg *modelManager )GetModelFromPrimitive (primitive _bgg .PdfObject )PdfModel {model ,_fdfef :=_cgdg ._effd [primitive ];if !_fdfef {return nil ;};return model ;};

// String returns a string that describes `base`.
func (_dedcg fontCommon )String ()string {return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0073\u007d",_dedcg .coreString ());};

// PdfActionRendition represents a Rendition action.
type PdfActionRendition struct{*PdfAction ;R _bgg .PdfObject ;AN _bgg .PdfObject ;OP _bgg .PdfObject ;JS _bgg .PdfObject ;};

// Val returns the color value.
func (_gecd *PdfColorDeviceGray )Val ()float64 {return float64 (*_gecd )};

// SetSubtype sets the Subtype S for given PdfOutputIntent.
func (_gaga *PdfOutputIntent )SetSubtype (subtype PdfOutputIntentType )error {if !subtype .IsValid (){return _ag .New ("\u0070\u0072o\u0076\u0069\u0064\u0065d\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u004f\u0075t\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0020\u0053\u0075b\u0054\u0079\u0070\u0065");
};_gaga .S =subtype ;return nil ;};

// GetContainingPdfObject returns the container of the pattern object (indirect object).
func (_fagcf *PdfPattern )GetContainingPdfObject ()_bgg .PdfObject {return _fagcf ._aebfe };

// B returns the value of the blue component of the color.
func (_abec *PdfColorDeviceRGB )B ()float64 {return _abec [2]};func _caab (_efcae _bgg .PdfObject )(*PdfFontDescriptor ,error ){_adaf :=&PdfFontDescriptor {};_efcae =_bgg .ResolveReference (_efcae );if _dcced ,_bfea :=_efcae .(*_bgg .PdfIndirectObject );
_bfea {_adaf ._afce =_dcced ;_efcae =_dcced .PdfObject ;};_ebca ,_fcfea :=_bgg .GetDict (_efcae );if !_fcfea {_dcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046o\u006e\u0074\u0044\u0065\u0073c\u0072\u0069\u0070\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0067\u0069\u0076\u0065\u006e\u0020\u0062\u0079\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_efcae );
return nil ,_bgg .ErrTypeError ;};if _bfbcg :=_ebca .Get ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065");_bfbcg !=nil {_adaf .FontName =_bfbcg ;}else {_dcf .Log .Debug ("\u0049n\u0063\u006fm\u0070\u0061\u0074\u0069b\u0069\u006c\u0069t\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u004e\u0061me\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029\u0020\u006di\u0073\u0073i\u006e\u0067");
};_gbcge ,_ :=_bgg .GetName (_adaf .FontName );if _eagd :=_ebca .Get ("\u0054\u0079\u0070\u0065");_eagd !=nil {_abce ,_aage :=_eagd .(*_bgg .PdfObjectName );if !_aage ||string (*_abce )!="\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"{_dcf .Log .Debug ("I\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072i\u0070t\u006f\u0072\u0020\u0054y\u0070\u0065 \u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0028\u0025\u0054\u0029\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_eagd ,_gbcge ,_adaf .FontName );
};}else {_dcf .Log .Trace ("\u0049\u006ec\u006f\u006d\u0070\u0061\u0074i\u0062\u0069\u006c\u0069\u0074y\u003a\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0071\u0020\u0025\u0054",_gbcge ,_adaf .FontName );
};_adaf .FontFamily =_ebca .Get ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079");_adaf .FontStretch =_ebca .Get ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068");_adaf .FontWeight =_ebca .Get ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074");
_adaf .Flags =_ebca .Get ("\u0046\u006c\u0061g\u0073");_adaf .FontBBox =_ebca .Get ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078");_adaf .ItalicAngle =_ebca .Get ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065");_adaf .Ascent =_ebca .Get ("\u0041\u0073\u0063\u0065\u006e\u0074");
_adaf .Descent =_ebca .Get ("\u0044e\u0073\u0063\u0065\u006e\u0074");_adaf .Leading =_ebca .Get ("\u004ce\u0061\u0064\u0069\u006e\u0067");_adaf .CapHeight =_ebca .Get ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t");_adaf .XHeight =_ebca .Get ("\u0058H\u0065\u0069\u0067\u0068\u0074");
_adaf .StemV =_ebca .Get ("\u0053\u0074\u0065m\u0056");_adaf .StemH =_ebca .Get ("\u0053\u0074\u0065m\u0048");_adaf .AvgWidth =_ebca .Get ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068");_adaf .MaxWidth =_ebca .Get ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068");
_adaf .MissingWidth =_ebca .Get ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068");_adaf .FontFile =_ebca .Get ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065");_adaf .FontFile2 =_ebca .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652");
_adaf .FontFile3 =_ebca .Get ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653");_adaf .CharSet =_ebca .Get ("\u0043h\u0061\u0072\u0053\u0065\u0074");_adaf .Style =_ebca .Get ("\u0053\u0074\u0079l\u0065");_adaf .Lang =_ebca .Get ("\u004c\u0061\u006e\u0067");
_adaf .FD =_ebca .Get ("\u0046\u0044");_adaf .CIDSet =_ebca .Get ("\u0043\u0049\u0044\u0053\u0065\u0074");if _adaf .Flags !=nil {if _gccfc ,_acgad :=_bgg .GetIntVal (_adaf .Flags );_acgad {_adaf ._gdfdf =_gccfc ;};};if _adaf .MissingWidth !=nil {if _bgdeg ,_ababd :=_bgg .GetNumberAsFloat (_adaf .MissingWidth );
_ababd ==nil {_adaf ._dgac =_bgdeg ;};};if _adaf .FontFile !=nil {_abcb ,_fbed :=_dadbb (_adaf .FontFile );if _fbed !=nil {return _adaf ,_fbed ;};_dcf .Log .Trace ("f\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u003d\u0025\u0073",_abcb );_adaf .fontFile =_abcb ;
};if _adaf .FontFile2 !=nil {_dbeag ,_beffg :=_dad .NewFontFile2FromPdfObject (_adaf .FontFile2 );if _beffg !=nil {return _adaf ,_beffg ;};_dcf .Log .Trace ("\u0066\u006f\u006et\u0046\u0069\u006c\u0065\u0032\u003d\u0025\u0073",_dbeag .String ());_adaf ._bgfg =&_dbeag ;
};return _adaf ,nil ;};

// GetNumComponents returns the number of color components of the underlying
// colorspace device.
func (_feegb *PdfColorspaceSpecialPattern )GetNumComponents ()int {return _feegb .UnderlyingCS .GetNumComponents ();};func _ccea (_efdad *_bgg .PdfObjectDictionary ){_abcgcb ,_efaag :=_bgg .GetArray (_efdad .Get ("\u0057\u0069\u0064\u0074\u0068\u0073"));
_cagfa ,_efdadg :=_bgg .GetIntVal (_efdad .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r"));_adbaf ,_eegba :=_bgg .GetIntVal (_efdad .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072"));if _efaag &&_efdadg &&_eegba {_cfabb :=_abcgcb .Len ();
if _cfabb !=_adbaf -_cagfa +1{_dcf .Log .Debug ("\u0055\u006e\u0065x\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0057\u0069\u0064\u0074\u0068\u0073\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003a\u0020\u0025\u0076\u002c\u0020\u004c\u0061\u0073t\u0043\u0068\u0061\u0072\u003a\u0020\u0025\u0076",_cfabb ,_adbaf );
_ccgg :=_bgg .PdfObjectInteger (_cagfa +_cfabb -1);_efdad .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",&_ccgg );};};};

// PdfFieldButton represents a button field which includes push buttons, checkboxes, and radio buttons.
type PdfFieldButton struct{*PdfField ;Opt *_bgg .PdfObjectArray ;_bgfd *Image ;};

// DecodeArray returns an empty slice as there are no components associated with pattern colorspace.
func (_bdgd *PdfColorspaceSpecialPattern )DecodeArray ()[]float64 {return []float64 {}};func (_bbg *PdfReader )newPdfActionLaunchFromDict (_fgcb *_bgg .PdfObjectDictionary )(*PdfActionLaunch ,error ){_dbc ,_acc :=_cbd (_fgcb .Get ("\u0046"));if _acc !=nil {return nil ,_acc ;
};return &PdfActionLaunch {Win :_fgcb .Get ("\u0057\u0069\u006e"),Mac :_fgcb .Get ("\u004d\u0061\u0063"),Unix :_fgcb .Get ("\u0055\u006e\u0069\u0078"),NewWindow :_fgcb .Get ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw"),F :_dbc },nil ;};func (_gfaeb *PdfWriter )setDocInfo (_fgagf _bgg .PdfObject ){if _gfaeb .hasObject (_gfaeb ._eeged ){delete (_gfaeb ._gbfd ,_gfaeb ._eeged );
delete (_gfaeb ._bgfcc ,_gfaeb ._eeged );for _aefdf ,_dadec :=range _gfaeb ._eddge {if _dadec ==_gfaeb ._eeged {copy (_gfaeb ._eddge [_aefdf :],_gfaeb ._eddge [_aefdf +1:]);_gfaeb ._eddge [len (_gfaeb ._eddge )-1]=nil ;_gfaeb ._eddge =_gfaeb ._eddge [:len (_gfaeb ._eddge )-1];
break ;};};};_bbdcca :=_bgg .PdfIndirectObject {};_bbdcca .PdfObject =_fgagf ;_gfaeb ._eeged =&_bbdcca ;_gfaeb .addObject (&_bbdcca );};

// ToPdfObject implements interface PdfModel.
func (_agce *PdfAnnotationWatermark )ToPdfObject ()_bgg .PdfObject {_agce .PdfAnnotation .ToPdfObject ();_bgde :=_agce ._gec ;_bafb :=_bgde .PdfObject .(*_bgg .PdfObjectDictionary );_bafb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k"));
_bafb .SetIfNotNil ("\u0046\u0069\u0078\u0065\u0064\u0050\u0072\u0069\u006e\u0074",_agce .FixedPrint );return _bgde ;};

// ToGray returns a PdfColorDeviceGray color based on the current RGB color.
func (_gfgba *PdfColorDeviceRGB )ToGray ()*PdfColorDeviceGray {_dbdb :=0.3*_gfgba .R ()+0.59*_gfgba .G ()+0.11*_gfgba .B ();_dbdb =_db .Min (_db .Max (_dbdb ,0.0),1.0);return NewPdfColorDeviceGray (_dbdb );};

// PdfFunctionType3 defines stitching of the subdomains of several 1-input functions to produce
// a single new 1-input function.
type PdfFunctionType3 struct{Domain []float64 ;Range []float64 ;Functions []PdfFunction ;Bounds []float64 ;Encode []float64 ;_cagde *_bgg .PdfIndirectObject ;};

// NewPdfOutlineItem returns an initialized PdfOutlineItem.
func NewPdfOutlineItem ()*PdfOutlineItem {_ffacb :=&PdfOutlineItem {_gcec :_bgg .MakeIndirectObject (_bgg .MakeDict ())};_ffacb ._ebbf =_ffacb ;return _ffacb ;};

// NewDSS returns a new DSS dictionary.
func NewDSS ()*DSS {return &DSS {_cegfd :_bgg .MakeIndirectObject (_bgg .MakeDict ()),VRI :map[string ]*VRI {}};};

// SetFontByName sets the font specified by keyName to the given object.
func (_fadff *PdfPageResources )SetFontByName (keyName _bgg .PdfObjectName ,obj _bgg .PdfObject )error {if _fadff .Font ==nil {_fadff .Font =_bgg .MakeDict ();};_bdfef ,_ccgdc :=_bgg .TraceToDirectObject (_fadff .Font ).(*_bgg .PdfObjectDictionary );if !_ccgdc {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bgg .TraceToDirectObject (_fadff .Font ));
return _bgg .ErrTypeError ;};_bdfef .Set (keyName ,obj );return nil ;};

// C returns the value of the C component of the color.
func (_dfdfb *PdfColorCalRGB )C ()float64 {return _dfdfb [2]};

// ToPdfObject returns the PDF representation of the function.
func (_agdc *PdfFunctionType2 )ToPdfObject ()_bgg .PdfObject {_dgceb :=_bgg .MakeDict ();_dgceb .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bgg .MakeInteger (2));_dbfac :=&_bgg .PdfObjectArray {};for _ ,_aaeac :=range _agdc .Domain {_dbfac .Append (_bgg .MakeFloat (_aaeac ));
};_dgceb .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_dbfac );if _agdc .Range !=nil {_cbbb :=&_bgg .PdfObjectArray {};for _ ,_ebfgd :=range _agdc .Range {_cbbb .Append (_bgg .MakeFloat (_ebfgd ));};_dgceb .Set ("\u0052\u0061\u006eg\u0065",_cbbb );};if _agdc .C0 !=nil {_bbfagb :=&_bgg .PdfObjectArray {};
for _ ,_ddagd :=range _agdc .C0 {_bbfagb .Append (_bgg .MakeFloat (_ddagd ));};_dgceb .Set ("\u0043\u0030",_bbfagb );};if _agdc .C1 !=nil {_dcbee :=&_bgg .PdfObjectArray {};for _ ,_bbcfec :=range _agdc .C1 {_dcbee .Append (_bgg .MakeFloat (_bbcfec ));};
_dgceb .Set ("\u0043\u0031",_dcbee );};_dgceb .Set ("\u004e",_bgg .MakeFloat (_agdc .N ));if _agdc ._ggdeb !=nil {_agdc ._ggdeb .PdfObject =_dgceb ;return _agdc ._ggdeb ;};return _dgceb ;};var (_ffbag =_da .MustCompile ("\u005cd\u002b\u0020\u0064\u0069c\u0074\u005c\u0073\u002b\u0028d\u0075p\u005cs\u002b\u0029\u003f\u0062\u0065\u0067\u0069n");
_aegd =_da .MustCompile ("\u005e\u005cs\u002a\u002f\u0028\u005c\u0053\u002b\u003f\u0029\u005c\u0073\u002b\u0028\u002e\u002b\u003f\u0029\u005c\u0073\u002b\u0064\u0065\u0066\\s\u002a\u0024");_gbdgb =_da .MustCompile ("\u005e\u005c\u0073*\u0064\u0075\u0070\u005c\u0073\u002b\u0028\u005c\u0064\u002b\u0029\u005c\u0073\u002a\u002f\u0028\u005c\u0077\u002b\u003f\u0029\u0028\u003f\u003a\u005c\u002e\u005c\u0064\u002b)\u003f\u005c\u0073\u002b\u0070\u0075\u0074\u0024");
_gdae ="\u002f\u0045\u006e\u0063od\u0069\u006e\u0067\u0020\u0032\u0035\u0036\u0020\u0061\u0072\u0072\u0061\u0079";_afccf ="\u0072\u0065\u0061d\u006f\u006e\u006c\u0079\u0020\u0064\u0065\u0066";_gfafe ="\u0063\u0075\u0072\u0072\u0065\u006e\u0074\u0066\u0069\u006c\u0065\u0020e\u0065\u0078\u0065\u0063";
);

// CharcodesToUnicodeWithStats is identical to CharcodesToUnicode except it returns more statistical
// information about hits and misses from the reverse mapping process.
// NOTE: The number of runes returned may be greater than the number of charcodes.
// TODO(peterwilliams97): Deprecate in v4 and use only CharcodesToStrings()
func (_dcbc *PdfFont )CharcodesToUnicodeWithStats (charcodes []_cc .CharCode )(_dcgfe []rune ,_dgcd ,_ceca int ){_bcgf ,_dgcd ,_ceca :=_dcbc .CharcodesToStrings (charcodes );return []rune (_ba .Join (_bcgf ,"")),_dgcd ,_ceca ;};type pdfCIDFontType0 struct{fontCommon ;
_cffda *_bgg .PdfIndirectObject ;_cggfa _cc .TextEncoder ;

// Table 117 – Entries in a CIDFont dictionary (page 269)
// (Required) Dictionary that defines the character collection of the CIDFont.
// See Table 116.
CIDSystemInfo *_bgg .PdfObjectDictionary ;

// Glyph metrics fields (optional).
DW _bgg .PdfObject ;W _bgg .PdfObject ;DW2 _bgg .PdfObject ;W2 _bgg .PdfObject ;_debd map[_cc .CharCode ]float64 ;_ceceg float64 ;};

// PdfShadingType1 is a Function-based shading.
type PdfShadingType1 struct{*PdfShading ;Domain *_bgg .PdfObjectArray ;Matrix *_bgg .PdfObjectArray ;Function []PdfFunction ;};

// L returns the value of the L component of the color.
func (_ecda *PdfColorLab )L ()float64 {return _ecda [0]};func _abae (_gedb _bgg .PdfObject )(*PdfColorspaceSpecialSeparation ,error ){_cfaea :=NewPdfColorspaceSpecialSeparation ();if _gccba ,_deeb :=_gedb .(*_bgg .PdfIndirectObject );_deeb {_cfaea ._aabb =_gccba ;
};_gedb =_bgg .TraceToDirectObject (_gedb );_dged ,_eccba :=_gedb .(*_bgg .PdfObjectArray );if !_eccba {return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062je\u0063\u0074");
};if _dged .Len ()!=4{return nil ,_e .Errorf ("\u0073\u0065p\u0061\u0072\u0061\u0074i\u006f\u006e \u0043\u0053\u003a\u0020\u0049\u006e\u0063\u006fr\u0072\u0065\u0063\u0074\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006ce\u006e\u0067\u0074\u0068");};_gedb =_dged .Get (0);
_fcga ,_eccba :=_gedb .(*_bgg .PdfObjectName );if !_eccba {return nil ,_e .Errorf ("\u0073\u0065\u0070ar\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a \u0069n\u0076a\u006ci\u0064\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};if *_fcga !="\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e"{return nil ,_e .Errorf ("\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0043\u0053\u003a\u0020w\u0072o\u006e\u0067\u0020\u0066\u0061\u006d\u0069\u006c\u0079\u0020\u006e\u0061\u006d\u0065");
};_gedb =_dged .Get (1);_fcga ,_eccba =_gedb .(*_bgg .PdfObjectName );if !_eccba {return nil ,_e .Errorf ("\u0073\u0065pa\u0072\u0061\u0074i\u006f\u006e\u0020\u0043S: \u0049nv\u0061\u006c\u0069\u0064\u0020\u0063\u006flo\u0072\u0061\u006e\u0074\u0020\u006e\u0061m\u0065");
};_cfaea .ColorantName =_fcga ;_gedb =_dged .Get (2);_cgad ,_adcbf :=NewPdfColorspaceFromPdfObject (_gedb );if _adcbf !=nil {return nil ,_adcbf ;};_cfaea .AlternateSpace =_cgad ;_egfaf ,_adcbf :=_aefac (_dged .Get (3));if _adcbf !=nil {return nil ,_adcbf ;
};_cfaea .TintTransform =_egfaf ;return _cfaea ,nil ;};

// GetMediaBox gets the inheritable media box value, either from the page
// or a higher up page/pages struct.
func (_agdbd *PdfPage )GetMediaBox ()(*PdfRectangle ,error ){if _agdbd .MediaBox !=nil {return _agdbd .MediaBox ,nil ;};_eaced :=_agdbd .Parent ;for _eaced !=nil {_gedc ,_dgfg :=_bgg .GetDict (_eaced );if !_dgfg {return nil ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _aefae :=_gedc .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");_aefae !=nil {_fbdc ,_ecaad :=_bgg .GetArray (_aefae );if !_ecaad {return nil ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006d\u0065\u0064\u0069a\u0020\u0062\u006f\u0078");
};_ebfcc ,_ggded :=NewPdfRectangle (*_fbdc );if _ggded !=nil {return nil ,_ggded ;};return _ebfcc ,nil ;};_eaced =_gedc .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return nil ,_ag .New ("m\u0065\u0064\u0069\u0061 b\u006fx\u0020\u006e\u006f\u0074\u0020d\u0065\u0066\u0069\u006e\u0065\u0064");
};

// ToPdfObject returns the PDF representation of the colorspace.
func (_aebeg *PdfPageResourcesColorspaces )ToPdfObject ()_bgg .PdfObject {_agabb :=_bgg .MakeDict ();for _ ,_ecbe :=range _aebeg .Names {_agabb .Set (_bgg .PdfObjectName (_ecbe ),_aebeg .Colorspaces [_ecbe ].ToPdfObject ());};if _aebeg ._abaa !=nil {_aebeg ._abaa .PdfObject =_agabb ;
return _aebeg ._abaa ;};return _agabb ;};

// Inspect inspects the object types, subtypes and content in the PDF file returning a map of
// object type to number of instances of each.
func (_edbfa *PdfReader )Inspect ()(map[string ]int ,error ){return _edbfa ._ebdgc .Inspect ()};

// GetAlphabet returns a map of the runes in `text` and their frequencies.
func GetAlphabet (text string )map[rune ]int {_gfbab :=map[rune ]int {};for _ ,_cggb :=range text {_gfbab [_cggb ]++;};return _gfbab ;};

// GetFillImage get attached model.Image in push button.
func (_fggac *PdfFieldButton )GetFillImage ()*Image {if _fggac .IsPush (){return _fggac ._bgfd ;};return nil ;};var ImageHandling ImageHandler =DefaultImageHandler {};

// NewPdfAnnotationWidget returns an initialized annotation widget.
func NewPdfAnnotationWidget ()*PdfAnnotationWidget {_bbb :=NewPdfAnnotation ();_fab :=&PdfAnnotationWidget {};_fab .PdfAnnotation =_bbb ;_bbb .SetContext (_fab );return _fab ;};

// ToPdfObject implements interface PdfModel.
func (_edda *PdfAnnotationStamp )ToPdfObject ()_bgg .PdfObject {_edda .PdfAnnotation .ToPdfObject ();_gcf :=_edda ._gec ;_gefc :=_gcf .PdfObject .(*_bgg .PdfObjectDictionary );_edda .PdfAnnotationMarkup .appendToPdfDictionary (_gefc );_gefc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0053\u0074\u0061m\u0070"));
_gefc .SetIfNotNil ("\u004e\u0061\u006d\u0065",_edda .Name );return _gcf ;};

// Encoder returns the font's text encoder.
func (_dbacg *pdfFontSimple )Encoder ()_cc .TextEncoder {if _dbacg ._bfced !=nil {return _dbacg ._bfced ;};if _dbacg ._aaef !=nil {return _dbacg ._aaef ;};_cdgb ,_ :=_cc .NewSimpleTextEncoder ("\u0053\u0074a\u006e\u0064\u0061r\u0064\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",nil );
return _cdgb ;};

// NewPdfActionSetOCGState returns a new "named" action.
func NewPdfActionSetOCGState ()*PdfActionSetOCGState {_gbb :=NewPdfAction ();_ab :=&PdfActionSetOCGState {};_ab .PdfAction =_gbb ;_gbb .SetContext (_ab );return _ab ;};

// NewPdfAnnotationLink returns a new link annotation.
func NewPdfAnnotationLink ()*PdfAnnotationLink {_aaac :=NewPdfAnnotation ();_bbaa :=&PdfAnnotationLink {};_bbaa .PdfAnnotation =_aaac ;_aaac .SetContext (_bbaa );return _bbaa ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gebgff *PdfShadingType1 )ToPdfObject ()_bgg .PdfObject {_gebgff .PdfShading .ToPdfObject ();_dfddc ,_ebcgf :=_gebgff .getShadingDict ();if _ebcgf !=nil {_dcf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gebgff .Domain !=nil {_dfddc .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gebgff .Domain );};if _gebgff .Matrix !=nil {_dfddc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_gebgff .Matrix );};if _gebgff .Function !=nil {if len (_gebgff .Function )==1{_dfddc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gebgff .Function [0].ToPdfObject ());
}else {_abead :=_bgg .MakeArray ();for _ ,_adbeb :=range _gebgff .Function {_abead .Append (_adbeb .ToPdfObject ());};_dfddc .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_abead );};};return _gebgff ._fcfbb ;};

// FieldFlattenOpts defines a set of options which can be used to configure
// the field flattening process.
type FieldFlattenOpts struct{

// FilterFunc allows filtering the form fields used in the flattening
// process. If the filter function returns true, the field is flattened,
// otherwise it is skipped.
// If a non-terminal field is discarded, all of its children (the fields
// present in the Kids array) are discarded as well.
// Non-terminal fields are kept in the AcroForm if one or more of their
// child fields have not been selected for flattening.
// If a filter function is not provided, all form fields are flattened.
FilterFunc FieldFilterFunc ;

// AnnotFilterFunc allows filtering the annotations in the flattening
// process. If the filter function returns true, the annotation is flattened,
// otherwise it is skipped.
AnnotFilterFunc AnnotFilterFunc ;};

// SetPdfModifiedDate sets the ModDate attribute of the output PDF.
func SetPdfModifiedDate (modifiedDate _g .Time ){_abfga .Lock ();defer _abfga .Unlock ();_bgebb =modifiedDate ;};func (_fcdcf *PdfReader )buildPageList (_ecedg *_bgg .PdfIndirectObject ,_ceabe *_bgg .PdfIndirectObject ,_egggc map[_bgg .PdfObject ]struct{})error {if _ecedg ==nil {return nil ;
};if _ ,_bdcba :=_egggc [_ecedg ];_bdcba {_dcf .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_ecedg .ObjectNumber );
return nil ;};_egggc [_ecedg ]=struct{}{};_baacb ,_gabeg :=_ecedg .PdfObject .(*_bgg .PdfObjectDictionary );if !_gabeg {return _ag .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};_bbfga ,_gabeg :=(*_baacb ).Get ("\u0054\u0079\u0070\u0065").(*_bgg .PdfObjectName );
if !_gabeg {if _baacb .Get ("\u004b\u0069\u0064\u0073")==nil {return _ag .New ("\u006e\u006f\u0064\u0065 \u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0054\u0079p\u0065 \u0028\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0029");};_dcf .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u006e\u006f\u0064\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067\u0020\u0054\u0079\u0070\u0065\u002c\u0020\u0062\u0075\u0074\u0020\u0068\u0061\u0073\u0020\u004b\u0069\u0064\u0073\u002e\u0020\u0041\u0073\u0073u\u006di\u006e\u0067\u0020\u0050\u0061\u0067\u0065\u0073 \u006eo\u0064\u0065.");
_bbfga =_bgg .MakeName ("\u0050\u0061\u0067e\u0073");_baacb .Set ("\u0054\u0079\u0070\u0065",_bbfga );};_dcf .Log .Trace ("\u0062\u0075\u0069\u006c\u0064\u0050a\u0067\u0065\u004c\u0069\u0073\u0074\u0020\u006e\u006f\u0064\u0065\u0020\u0074y\u0070\u0065\u003a\u0020\u0025\u0073\u0020(\u0025\u002b\u0076\u0029",*_bbfga ,_ecedg );
if *_bbfga =="\u0050\u0061\u0067\u0065"{_ggadf ,_bbdfa :=_fcdcf .newPdfPageFromDict (_baacb );if _bbdfa !=nil {return _bbdfa ;};_ggadf .setContainer (_ecedg );if _ceabe !=nil {_baacb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ceabe );};_fcdcf ._ebbfg =append (_fcdcf ._ebbfg ,_ecedg );
_fcdcf .PageList =append (_fcdcf .PageList ,_ggadf );return nil ;};if *_bbfga !="\u0050\u0061\u0067e\u0073"{_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u006f\u0066\u0020\u0063\u006fnt\u0065n\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073\u0020\u006f\u0062j\u0065\u0063\u0074\u0021\u0020\u0028\u0025\u0073\u0029",_bbfga );
return _ag .New ("\u0074\u0061\u0062\u006c\u0065\u0020o\u0066\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067 \u006e\u006f\u006e\u0020\u0050\u0061\u0067\u0065\u002f\u0050\u0061\u0067\u0065\u0073 \u006fb\u006a\u0065\u0063\u0074");
};if _ceabe !=nil {_baacb .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ceabe );};if !_fcdcf ._cdbfbb {_cdecd :=_fcdcf .traverseObjectData (_ecedg );if _cdecd !=nil {return _cdecd ;};};_ggfece ,_bfgff :=_fcdcf ._ebdgc .Resolve (_baacb .Get ("\u004b\u0069\u0064\u0073"));
if _bfgff !=nil {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0046\u0061\u0069\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u004b\u0069\u0064\u0073\u0020\u006fb\u006a\u0065\u0063\u0074");return _bfgff ;};var _gfbfd *_bgg .PdfObjectArray ;
_gfbfd ,_gabeg =_ggfece .(*_bgg .PdfObjectArray );if !_gabeg {_addbg ,_geaee :=_ggfece .(*_bgg .PdfIndirectObject );if !_geaee {return _ag .New ("\u0069\u006e\u0076\u0061li\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u006f\u0062\u006a\u0065\u0063\u0074");
};_gfbfd ,_gabeg =_addbg .PdfObject .(*_bgg .PdfObjectArray );if !_gabeg {return _ag .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u004b\u0069\u0064\u0073\u0020\u0069\u006ed\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006ae\u0063\u0074");};};_dcf .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_gfbfd );
for _faaff ,_dcfdd :=range _gfbfd .Elements (){_dafge ,_bgcec :=_bgg .GetIndirect (_dcfdd );if !_bgcec {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069\u0072\u0065\u0063\u0074 \u006f\u0062\u006a\u0065\u0063t\u0020\u002d \u0028\u0025\u0073\u0029",_dafge );
return _ag .New ("\u0070a\u0067\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};_gfbfd .Set (_faaff ,_dafge );_bfgff =_fcdcf .buildPageList (_dafge ,_ecedg ,_egggc );if _bfgff !=nil {return _bfgff ;
};};return nil ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_fdaee *PdfShadingType2 )ToPdfObject ()_bgg .PdfObject {_fdaee .PdfShading .ToPdfObject ();_afdea ,_eeeb :=_fdaee .getShadingDict ();if _eeeb !=nil {_dcf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _afdea ==nil {_dcf .Log .Error ("\u0053\u0068\u0061\u0064in\u0067\u0020\u0064\u0069\u0063\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c");return nil ;};if _fdaee .Coords !=nil {_afdea .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_fdaee .Coords );
};if _fdaee .Domain !=nil {_afdea .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_fdaee .Domain );};if _fdaee .Function !=nil {if len (_fdaee .Function )==1{_afdea .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_fdaee .Function [0].ToPdfObject ());
}else {_bdege :=_bgg .MakeArray ();for _ ,_bbgda :=range _fdaee .Function {_bdege .Append (_bbgda .ToPdfObject ());};_afdea .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_bdege );};};if _fdaee .Extend !=nil {_afdea .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_fdaee .Extend );
};return _fdaee ._fcfbb ;};

// NewPdfActionSubmitForm returns a new "submit form" action.
func NewPdfActionSubmitForm ()*PdfActionSubmitForm {_ebf :=NewPdfAction ();_fc :=&PdfActionSubmitForm {};_fc .PdfAction =_ebf ;_ebf .SetContext (_fc );return _fc ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_edgc *PdfColorspaceDeviceCMYK )ToPdfObject ()_bgg .PdfObject {return _bgg .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b");};

// PdfOutputIntentType is the subtype of the given PdfOutputIntent.
type PdfOutputIntentType int ;

// ToPdfObject implements interface PdfModel.
func (_fcb *PdfActionGoTo3DView )ToPdfObject ()_bgg .PdfObject {_fcb .PdfAction .ToPdfObject ();_dbed :=_fcb ._ddf ;_baf :=_dbed .PdfObject .(*_bgg .PdfObjectDictionary );_baf .SetIfNotNil ("\u0053",_bgg .MakeName (string (ActionTypeGoTo3DView )));_baf .SetIfNotNil ("\u0054\u0041",_fcb .TA );
_baf .SetIfNotNil ("\u0056",_fcb .V );return _dbed ;};

// ToPdfObject implements interface PdfModel.
func (_afb *PdfAnnotationCaret )ToPdfObject ()_bgg .PdfObject {_afb .PdfAnnotation .ToPdfObject ();_dgb :=_afb ._gec ;_ccbc :=_dgb .PdfObject .(*_bgg .PdfObjectDictionary );_afb .PdfAnnotationMarkup .appendToPdfDictionary (_ccbc );_ccbc .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0043\u0061\u0072e\u0074"));
_ccbc .SetIfNotNil ("\u0052\u0044",_afb .RD );_ccbc .SetIfNotNil ("\u0053\u0079",_afb .Sy );return _dgb ;};

// DecodeArray returns the range of color component values in DeviceRGB colorspace.
func (_aedc *PdfColorspaceDeviceRGB )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0};};

// Flags returns the field flags for the field accounting for any inherited flags.
func (_acaf *PdfField )Flags ()FieldFlag {var _bebgb FieldFlag ;_bacf ,_bggabd :=_acaf .inherit (func (_effc *PdfField )bool {if _effc .Ff !=nil {_bebgb =FieldFlag (*_effc .Ff );return true ;};return false ;});if _bggabd !=nil {_dcf .Log .Debug ("\u0045\u0072\u0072o\u0072\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0069\u006e\u0067\u0020\u0066\u006c\u0061\u0067\u0073\u0020\u0076\u0069\u0061\u0020\u0069\u006e\u0068\u0065\u0072\u0069t\u0061\u006e\u0063\u0065\u003a\u0020\u0025\u0076",_bggabd );
};if !_bacf {_dcf .Log .Trace ("N\u006f\u0020\u0066\u0069\u0065\u006cd\u0020\u0066\u006c\u0061\u0067\u0073 \u0066\u006f\u0075\u006e\u0064\u0020\u002d \u0061\u0073\u0073\u0075\u006d\u0065\u0020\u0063\u006c\u0065a\u0072");};return _bebgb ;};

// WriteToFile writes the output PDF to file.
func (_ffdd *PdfWriter )WriteToFile (outputFilePath string )error {_cfbfa ,_cdfef :=_eg .Create (outputFilePath );if _cdfef !=nil {return _cdfef ;};defer _cfbfa .Close ();return _ffdd .Write (_cfbfa );};func (_aadf *PdfColorspaceICCBased )String ()string {return "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064";
};func (_gaadc *PdfWriter )addObject (_aadee _bgg .PdfObject )bool {_dcfgb :=_gaadc .hasObject (_aadee );if !_dcfgb {_gfdc :=_bgg .ResolveReferencesDeep (_aadee ,_gaadc ._bgfcc );if _gfdc !=nil {_dcf .Log .Debug ("E\u0052R\u004f\u0052\u003a\u0020\u0025\u0076\u0020\u002d \u0073\u006b\u0069\u0070pi\u006e\u0067",_gfdc );
};_gaadc ._eddge =append (_gaadc ._eddge ,_aadee );_gaadc ._gbfd [_aadee ]=struct{}{};return true ;};return false ;};

// GetEncryptionMethod returns a descriptive information string about the encryption method used.
func (_facbe *PdfReader )GetEncryptionMethod ()string {_dfaa :=_facbe ._ebdgc .GetCrypter ();return _dfaa .String ();};

// PdfOutlineItem represents an outline item dictionary (Table 153 - pp. 376 - 377).
type PdfOutlineItem struct{PdfOutlineTreeNode ;Title *_bgg .PdfObjectString ;Parent *PdfOutlineTreeNode ;Prev *PdfOutlineTreeNode ;Next *PdfOutlineTreeNode ;Count *int64 ;Dest _bgg .PdfObject ;A _bgg .PdfObject ;SE _bgg .PdfObject ;C _bgg .PdfObject ;F _bgg .PdfObject ;
_gcec *_bgg .PdfIndirectObject ;};

// PdfAnnotationStrikeOut represents StrikeOut annotations.
// (Section 12.5.6.10).
type PdfAnnotationStrikeOut struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bgg .PdfObject ;};

// SetPdfTitle sets the Title attribute of the output PDF.
func SetPdfTitle (title string ){_abfga .Lock ();defer _abfga .Unlock ();_ggce =title };func (_ggac *PdfReader )newPdfAnnotationCircleFromDict (_abf *_bgg .PdfObjectDictionary )(*PdfAnnotationCircle ,error ){_fcc :=PdfAnnotationCircle {};_bfaf ,_egge :=_ggac .newPdfAnnotationMarkupFromDict (_abf );
if _egge !=nil {return nil ,_egge ;};_fcc .PdfAnnotationMarkup =_bfaf ;_fcc .BS =_abf .Get ("\u0042\u0053");_fcc .IC =_abf .Get ("\u0049\u0043");_fcc .BE =_abf .Get ("\u0042\u0045");_fcc .RD =_abf .Get ("\u0052\u0044");return &_fcc ,nil ;};func (_fbcgc *LTV )validateSig (_aaaae *PdfSignature )error {if _aaaae ==nil ||_aaaae .Contents ==nil ||len (_aaaae .Contents .Bytes ())==0{return _e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0066\u0069\u0065l\u0064:\u0020\u0025\u0076",_aaaae );
};return nil ;};

// GetCustomInfo returns a custom info value for the specified name.
func (_dbcgf *PdfInfo )GetCustomInfo (name string )*_bgg .PdfObjectString {var _daaf *_bgg .PdfObjectString ;if _dbcgf ._fdaag ==nil {return _daaf ;};if _gfba ,_ebde :=_dbcgf ._fdaag .Get (*_bgg .MakeName (name )).(*_bgg .PdfObjectString );_ebde {_daaf =_gfba ;
};return _daaf ;};const (TrappedUnknown PdfInfoTrapped ="\u0055n\u006b\u006e\u006f\u0077\u006e";TrappedTrue PdfInfoTrapped ="\u0054\u0072\u0075\u0065";TrappedFalse PdfInfoTrapped ="\u0046\u0061\u006cs\u0065";);

// ParserMetadata gets the parser  metadata.
func (_eaag *CompliancePdfReader )ParserMetadata ()_bgg .ParserMetadata {if _eaag ._dggeb ==(_bgg .ParserMetadata {}){_eaag ._dggeb ,_ =_eaag ._ebdgc .ParserMetadata ();};return _eaag ._dggeb ;};

// Insert adds a top level outline item in the outline,
// at the specified index.
func (_cacfe *Outline )Insert (index uint ,item *OutlineItem ){_cfeb :=uint (len (_cacfe .Entries ));if index > _cfeb {index =_cfeb ;};_cacfe .Entries =append (_cacfe .Entries [:index ],append ([]*OutlineItem {item },_cacfe .Entries [index :]...)...);};


// EnableAll LTV enables all signatures in the PDF document.
// The signing certificate chain is extracted from each signature dictionary.
// Optionally, additional certificates can be specified through the
// `extraCerts` parameter. The LTV client attempts to build the certificate
// chain up to a trusted root by downloading any missing certificates.
func (_gffg *LTV )EnableAll (extraCerts []*_dd .Certificate )error {_gabe :=_gffg ._gafcc ._bded .AcroForm ;for _ ,_gcba :=range _gabe .AllFields (){_efgeeg ,_ :=_gcba .GetContext ().(*PdfFieldSignature );if _efgeeg ==nil {continue ;};_eceeaa :=_efgeeg .V ;
if _cbada :=_gffg .validateSig (_eceeaa );_cbada !=nil {_dcf .Log .Debug ("\u0057\u0041\u0052N\u003a\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0076",_cbada );
};if _geaec :=_gffg .Enable (_eceeaa ,extraCerts );_geaec !=nil {return _geaec ;};};return nil ;};func (_bca *PdfReader )newPdfAnnotationRichMediaFromDict (_dae *_bgg .PdfObjectDictionary )(*PdfAnnotationRichMedia ,error ){_bbca :=&PdfAnnotationRichMedia {};
_bbca .RichMediaSettings =_dae .Get ("\u0052\u0069\u0063\u0068\u004d\u0065\u0064\u0069\u0061\u0053\u0065\u0074t\u0069\u006e\u0067\u0073");_bbca .RichMediaContent =_dae .Get ("\u0052\u0069c\u0068\u004d\u0065d\u0069\u0061\u0043\u006f\u006e\u0074\u0065\u006e\u0074");
return _bbca ,nil ;};

// GetPdfVersion gets the version of the PDF used within this document.
func (_fbcdg *PdfWriter )GetPdfVersion ()string {return _fbcdg .getPdfVersion ()};

// EnableChain adds the specified certificate chain and validation data (OCSP
// and CRL information) for it to the global scope of the document DSS. The
// added data is used for validating any of the signatures present in the
// document. The LTV client attempts to build the certificate chain up to a
// trusted root by downloading any missing certificates.
func (_cggda *LTV )EnableChain (chain []*_dd .Certificate )error {return _cggda .enable (nil ,chain ,"")};

// PdfShadingType3 is a Radial shading.
type PdfShadingType3 struct{*PdfShading ;Coords *_bgg .PdfObjectArray ;Domain *_bgg .PdfObjectArray ;Function []PdfFunction ;Extend *_bgg .PdfObjectArray ;};

// GetNumComponents returns the number of color components (4 for CMYK32).
func (_gaag *PdfColorDeviceCMYK )GetNumComponents ()int {return 4};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element.
func (_cedf *PdfColorspaceSpecialSeparation )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_dbee :=vals [0];_adgb :=[]float64 {_dbee };_eeagg ,_dbag :=_cedf .TintTransform .Evaluate (_adgb );
if _dbag !=nil {_dcf .Log .Debug ("\u0045\u0072r\u006f\u0072\u002c\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0065\u0076\u0061\u006c\u0075\u0061\u0074\u0065: \u0025\u0076",_dbag );_dcf .Log .Trace ("\u0054\u0069\u006e\u0074 t\u0072\u0061\u006e\u0073\u0066\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_cedf .TintTransform );
return nil ,_dbag ;};_dcf .Log .Trace ("\u0050\u0072\u006f\u0063\u0065\u0073\u0073\u0069\u006e\u0067\u0020\u0043\u006f\u006c\u006fr\u0046\u0072\u006f\u006d\u0046\u006c\u006f\u0061\u0074\u0073\u0028\u0025\u002bv\u0029\u0020\u006f\u006e\u0020\u0041\u006c\u0074\u0065\u0072\u006e\u0061te\u0053\u0070\u0061\u0063\u0065\u003a\u0020\u0025\u0023\u0076",_eeagg ,_cedf .AlternateSpace );
_bfeeb ,_dbag :=_cedf .AlternateSpace .ColorFromFloats (_eeagg );if _dbag !=nil {_dcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u002c\u0020\u0066a\u0069\u006c\u0065d \u0074\u006f\u0020\u0065\u0076\u0061l\u0075\u0061\u0074\u0065\u0020\u0069\u006e\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0065\u0020\u0073\u0070\u0061\u0063\u0065\u003a \u0025\u0076",_dbag );
return nil ,_dbag ;};return _bfeeb ,nil ;};

// Y returns the value of the yellow component of the color.
func (_efeb *PdfColorDeviceCMYK )Y ()float64 {return _efeb [2]};func (_gfcaa *Image )samplesTrimPadding (_dabbg []uint32 )[]uint32 {_ebfa :=_gfcaa .ColorComponents *int (_gfcaa .Width )*int (_gfcaa .Height );if len (_dabbg )==_ebfa {return _dabbg ;};_beadc :=make ([]uint32 ,_ebfa );
_deffc :=int (_gfcaa .Width )*_gfcaa .ColorComponents ;var _ggadg ,_eceaad ,_edff ,_dcafe int ;_cbfe :=_dcg .BytesPerLine (int (_gfcaa .Width ),int (_gfcaa .BitsPerComponent ),_gfcaa .ColorComponents );for _ggadg =0;_ggadg < int (_gfcaa .Height );_ggadg ++{_eceaad =_ggadg *int (_gfcaa .Width );
_edff =_ggadg *_cbfe ;for _dcafe =0;_dcafe < _deffc ;_dcafe ++{_beadc [_eceaad +_dcafe ]=_dabbg [_edff +_dcafe ];};};return _beadc ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_bcbce pdfFontType0 )GetRuneMetrics (r rune )(_dad .CharMetrics ,bool ){if _bcbce .DescendantFont ==nil {_dcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_bcbce );
return _dad .CharMetrics {},false ;};return _bcbce .DescendantFont .GetRuneMetrics (r );};

// NewPdfAnnotationFileAttachment returns a new file attachment annotation.
func NewPdfAnnotationFileAttachment ()*PdfAnnotationFileAttachment {_beb :=NewPdfAnnotation ();_gcc :=&PdfAnnotationFileAttachment {};_gcc .PdfAnnotation =_beb ;_gcc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_beb .SetContext (_gcc );return _gcc ;};


// GetRevision returns the specific version of the PdfReader for the current Pdf document
func (_feecd *PdfReader )GetRevision (revisionNumber int )(*PdfReader ,error ){_cgee :=_feecd ._ebdgc .GetRevisionNumber ();if revisionNumber < 0||revisionNumber > _cgee {return nil ,_ag .New ("w\u0072\u006f\u006e\u0067 r\u0065v\u0069\u0073\u0069\u006f\u006e \u006e\u0075\u006d\u0062\u0065\u0072");
};if revisionNumber ==_cgee {return _feecd ,nil ;};if _feecd ._bdegd [revisionNumber ]!=nil {return _feecd ._bdegd [revisionNumber ],nil ;};_cebg :=_feecd ;for _fbbda :=_cgee -1;_fbbda >=revisionNumber ;_fbbda --{_ddbfc ,_bcge :=_cebg .GetPreviousRevision ();
if _bcge !=nil {return nil ,_bcge ;};_feecd ._bdegd [_fbbda ]=_ddbfc ;_cebg =_ddbfc ;};return _cebg ,nil ;};

// NewStandard14Font returns the standard 14 font named `basefont` as a *PdfFont, or an error if it
// `basefont` is not one of the standard 14 font names.
func NewStandard14Font (basefont StdFontName )(*PdfFont ,error ){_gefg ,_bgea :=_ddce (basefont );if _bgea !=nil {return nil ,_bgea ;};if basefont !=SymbolName &&basefont !=ZapfDingbatsName {_gefg ._bfced =_cc .NewWinAnsiEncoder ();};return &PdfFont {_efdec :&_gefg },nil ;
};

// SetBorderWidth sets the style's border width.
func (_gacc *PdfBorderStyle )SetBorderWidth (width float64 ){_gacc .W =&width };func _dfgfb (_edgg *_bgg .PdfObjectDictionary )(*PdfShadingType7 ,error ){_effa :=PdfShadingType7 {};_agfda :=_edgg .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _agfda ==nil {_dcf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_agaae ,_ffca :=_agfda .(*_bgg .PdfObjectInteger );if !_ffca {_dcf .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_agfda );
return nil ,_bgg .ErrTypeError ;};_effa .BitsPerCoordinate =_agaae ;_agfda =_edgg .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _agfda ==nil {_dcf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_agaae ,_ffca =_agfda .(*_bgg .PdfObjectInteger );if !_ffca {_dcf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_agfda );
return nil ,_bgg .ErrTypeError ;};_effa .BitsPerComponent =_agaae ;_agfda =_edgg .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _agfda ==nil {_dcf .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_agaae ,_ffca =_agfda .(*_bgg .PdfObjectInteger );if !_ffca {_dcf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_agfda );
return nil ,_bgg .ErrTypeError ;};_effa .BitsPerComponent =_agaae ;_agfda =_edgg .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _agfda ==nil {_dcf .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ggbg ,_ffca :=_agfda .(*_bgg .PdfObjectArray );if !_ffca {_dcf .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_agfda );
return nil ,_bgg .ErrTypeError ;};_effa .Decode =_ggbg ;if _fadef :=_edgg .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_fadef !=nil {_effa .Function =[]PdfFunction {};if _cefgb ,_ggfggf :=_fadef .(*_bgg .PdfObjectArray );_ggfggf {for _ ,_fcbdg :=range _cefgb .Elements (){_aaadc ,_gfdgd :=_aefac (_fcbdg );
if _gfdgd !=nil {_dcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_gfdgd );return nil ,_gfdgd ;};_effa .Function =append (_effa .Function ,_aaadc );
};}else {_effgec ,_eefae :=_aefac (_fadef );if _eefae !=nil {_dcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_eefae );return nil ,_eefae ;
};_effa .Function =append (_effa .Function ,_effgec );};};return &_effa ,nil ;};

// ToPdfObject converts the font to a PDF representation.
func (_dcgeg *pdfFontType0 )ToPdfObject ()_bgg .PdfObject {if _dcgeg ._ecea ==nil {_dcgeg ._ecea =&_bgg .PdfIndirectObject {};};_dbece :=_dcgeg .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0030");_dcgeg ._ecea .PdfObject =_dbece ;if _dcgeg .Encoding !=nil {_dbece .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dcgeg .Encoding );
}else if _dcgeg ._dfbdd !=nil {_dbece .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_dcgeg ._dfbdd .ToPdfObject ());};if _dcgeg .DescendantFont !=nil {_dbece .Set ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073",_bgg .MakeArray (_dcgeg .DescendantFont .ToPdfObject ()));
};return _dcgeg ._ecea ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// component PDF objects.
func (_bgbag *PdfColorspaceICCBased )ColorFromPdfObjects (objects []_bgg .PdfObject )(PdfColor ,error ){if _bgbag .Alternate ==nil {if _bgbag .N ==1{_ffgdd :=NewPdfColorspaceDeviceGray ();return _ffgdd .ColorFromPdfObjects (objects );}else if _bgbag .N ==3{_cgef :=NewPdfColorspaceDeviceRGB ();
return _cgef .ColorFromPdfObjects (objects );}else if _bgbag .N ==4{_fcfeg :=NewPdfColorspaceDeviceCMYK ();return _fcfeg .ColorFromPdfObjects (objects );}else {return nil ,_ag .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};return _bgbag .Alternate .ColorFromPdfObjects (objects );};

// GetAsTilingPattern returns a tiling pattern. Check with IsTiling() prior to using this.
func (_afgff *PdfPattern )GetAsTilingPattern ()*PdfTilingPattern {return _afgff ._dcdgae .(*PdfTilingPattern );};

// ToPdfObject returns colorspace in a PDF object format [name dictionary]
func (_dceb *PdfColorspaceLab )ToPdfObject ()_bgg .PdfObject {_bcdf :=_bgg .MakeArray ();_bcdf .Append (_bgg .MakeName ("\u004c\u0061\u0062"));_cfc :=_bgg .MakeDict ();if _dceb .WhitePoint !=nil {_aaba :=_bgg .MakeArray (_bgg .MakeFloat (_dceb .WhitePoint [0]),_bgg .MakeFloat (_dceb .WhitePoint [1]),_bgg .MakeFloat (_dceb .WhitePoint [2]));
_cfc .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_aaba );}else {_dcf .Log .Error ("\u004c\u0061\u0062: \u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057h\u0069t\u0065P\u006fi\u006e\u0074\u0020\u0028\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};if _dceb .BlackPoint !=nil {_abagf :=_bgg .MakeArray (_bgg .MakeFloat (_dceb .BlackPoint [0]),_bgg .MakeFloat (_dceb .BlackPoint [1]),_bgg .MakeFloat (_dceb .BlackPoint [2]));_cfc .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_abagf );
};if _dceb .Range !=nil {_eagfbd :=_bgg .MakeArray (_bgg .MakeFloat (_dceb .Range [0]),_bgg .MakeFloat (_dceb .Range [1]),_bgg .MakeFloat (_dceb .Range [2]),_bgg .MakeFloat (_dceb .Range [3]));_cfc .Set ("\u0052\u0061\u006eg\u0065",_eagfbd );};_bcdf .Append (_cfc );
if _dceb ._gdeb !=nil {_dceb ._gdeb .PdfObject =_bcdf ;return _dceb ._gdeb ;};return _bcdf ;};

// ToPdfObject returns the PdfFontDescriptor as a PDF dictionary inside an indirect object.
func (_gbge *PdfFontDescriptor )ToPdfObject ()_bgg .PdfObject {_bafbb :=_bgg .MakeDict ();if _gbge ._afce ==nil {_gbge ._afce =&_bgg .PdfIndirectObject {};};_gbge ._afce .PdfObject =_bafbb ;_bafbb .Set ("\u0054\u0079\u0070\u0065",_bgg .MakeName ("\u0046\u006f\u006e\u0074\u0044\u0065\u0073\u0063\u0072i\u0070\u0074\u006f\u0072"));
if _gbge .FontName !=nil {_bafbb .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_gbge .FontName );};if _gbge .FontFamily !=nil {_bafbb .Set ("\u0046\u006f\u006e\u0074\u0046\u0061\u006d\u0069\u006c\u0079",_gbge .FontFamily );};if _gbge .FontStretch !=nil {_bafbb .Set ("F\u006f\u006e\u0074\u0053\u0074\u0072\u0065\u0074\u0063\u0068",_gbge .FontStretch );
};if _gbge .FontWeight !=nil {_bafbb .Set ("\u0046\u006f\u006e\u0074\u0057\u0065\u0069\u0067\u0068\u0074",_gbge .FontWeight );};if _gbge .Flags !=nil {_bafbb .Set ("\u0046\u006c\u0061g\u0073",_gbge .Flags );};if _gbge .FontBBox !=nil {_bafbb .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_gbge .FontBBox );
};if _gbge .ItalicAngle !=nil {_bafbb .Set ("I\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065",_gbge .ItalicAngle );};if _gbge .Ascent !=nil {_bafbb .Set ("\u0041\u0073\u0063\u0065\u006e\u0074",_gbge .Ascent );};if _gbge .Descent !=nil {_bafbb .Set ("\u0044e\u0073\u0063\u0065\u006e\u0074",_gbge .Descent );
};if _gbge .Leading !=nil {_bafbb .Set ("\u004ce\u0061\u0064\u0069\u006e\u0067",_gbge .Leading );};if _gbge .CapHeight !=nil {_bafbb .Set ("\u0043a\u0070\u0048\u0065\u0069\u0067\u0068t",_gbge .CapHeight );};if _gbge .XHeight !=nil {_bafbb .Set ("\u0058H\u0065\u0069\u0067\u0068\u0074",_gbge .XHeight );
};if _gbge .StemV !=nil {_bafbb .Set ("\u0053\u0074\u0065m\u0056",_gbge .StemV );};if _gbge .StemH !=nil {_bafbb .Set ("\u0053\u0074\u0065m\u0048",_gbge .StemH );};if _gbge .AvgWidth !=nil {_bafbb .Set ("\u0041\u0076\u0067\u0057\u0069\u0064\u0074\u0068",_gbge .AvgWidth );
};if _gbge .MaxWidth !=nil {_bafbb .Set ("\u004d\u0061\u0078\u0057\u0069\u0064\u0074\u0068",_gbge .MaxWidth );};if _gbge .MissingWidth !=nil {_bafbb .Set ("\u004d\u0069\u0073s\u0069\u006e\u0067\u0057\u0069\u0064\u0074\u0068",_gbge .MissingWidth );};if _gbge .FontFile !=nil {_bafbb .Set ("\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065",_gbge .FontFile );
};if _gbge .FontFile2 !=nil {_bafbb .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00652",_gbge .FontFile2 );};if _gbge .FontFile3 !=nil {_bafbb .Set ("\u0046o\u006e\u0074\u0046\u0069\u006c\u00653",_gbge .FontFile3 );};if _gbge .CharSet !=nil {_bafbb .Set ("\u0043h\u0061\u0072\u0053\u0065\u0074",_gbge .CharSet );
};if _gbge .Style !=nil {_bafbb .Set ("\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065",_gbge .FontName );};if _gbge .Lang !=nil {_bafbb .Set ("\u004c\u0061\u006e\u0067",_gbge .Lang );};if _gbge .FD !=nil {_bafbb .Set ("\u0046\u0044",_gbge .FD );};if _gbge .CIDSet !=nil {_bafbb .Set ("\u0043\u0049\u0044\u0053\u0065\u0074",_gbge .CIDSet );
};return _gbge ._afce ;};func _fdbe (_fgaag string )(string ,error ){var _cgccg _aa .Buffer ;_cgccg .WriteString (_fgaag );_cfgfg :=make ([]byte ,8+16);_efgbb :=_g .Now ().UTC ().UnixNano ();_f .BigEndian .PutUint64 (_cfgfg ,uint64 (_efgbb ));_ ,_dgega :=_ef .Read (_cfgfg [8:]);
if _dgega !=nil {return "",_dgega ;};_cgccg .WriteString (_ae .EncodeToString (_cfgfg ));return _cgccg .String (),nil ;};

// ToPdfObject converts the pdfFontSimple to its PDF representation for outputting.
func (_acgdc *pdfFontSimple )ToPdfObject ()_bgg .PdfObject {if _acgdc ._fefb ==nil {_acgdc ._fefb =&_bgg .PdfIndirectObject {};};_ccfc :=_acgdc .baseFields ().asPdfObjectDictionary ("");_acgdc ._fefb .PdfObject =_ccfc ;if _acgdc .FirstChar !=nil {_ccfc .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_acgdc .FirstChar );
};if _acgdc .LastChar !=nil {_ccfc .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_acgdc .LastChar );};if _acgdc .Widths !=nil {_ccfc .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_acgdc .Widths );};if _acgdc .Encoding !=nil {_ccfc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_acgdc .Encoding );
}else if _acgdc ._bfced !=nil {_gddg :=_acgdc ._bfced .ToPdfObject ();if _gddg !=nil {_ccfc .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_gddg );};};return _acgdc ._fefb ;};

// NewPdfFontFromTTFFile loads a TTF font file and returns a PdfFont type
// that can be used in text styling functions.
// Uses a WinAnsiTextEncoder and loads only character codes 32-255.
// NOTE: For composite fonts such as used in symbolic languages, use NewCompositePdfFontFromTTFFile.
func NewPdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_dacgb ,_geada :=_eg .Open (filePath );if _geada !=nil {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0072\u0065\u0061\u0064\u0069\u006e\u0067\u0020T\u0054F\u0020\u0066\u006f\u006e\u0074\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_geada );
return nil ,_geada ;};defer _dacgb .Close ();return NewPdfFontFromTTF (_dacgb );};

// NewPdfAnnotationSound returns a new sound annotation.
func NewPdfAnnotationSound ()*PdfAnnotationSound {_bdb :=NewPdfAnnotation ();_agc :=&PdfAnnotationSound {};_agc .PdfAnnotation =_bdb ;_agc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bdb .SetContext (_agc );return _agc ;};

// NewPdfColorspaceSpecialPattern returns a new pattern color.
func NewPdfColorspaceSpecialPattern ()*PdfColorspaceSpecialPattern {return &PdfColorspaceSpecialPattern {};};func (_aegb *PdfReader )newPdfAnnotation3DFromDict (_bdea *_bgg .PdfObjectDictionary )(*PdfAnnotation3D ,error ){_fege :=PdfAnnotation3D {};_fege .T3DD =_bdea .Get ("\u0033\u0044\u0044");
_fege .T3DV =_bdea .Get ("\u0033\u0044\u0056");_fege .T3DA =_bdea .Get ("\u0033\u0044\u0041");_fege .T3DI =_bdea .Get ("\u0033\u0044\u0049");_fege .T3DB =_bdea .Get ("\u0033\u0044\u0042");return &_fege ,nil ;};

// AddExtGState add External Graphics State (GState). The gsDict can be specified
// either directly as a dictionary or an indirect object containing a dictionary.
func (_gadcb *PdfPageResources )AddExtGState (gsName _bgg .PdfObjectName ,gsDict _bgg .PdfObject )error {if _gadcb .ExtGState ==nil {_gadcb .ExtGState =_bgg .MakeDict ();};_debbge :=_gadcb .ExtGState ;_feafa ,_adebb :=_bgg .TraceToDirectObject (_debbge ).(*_bgg .PdfObjectDictionary );
if !_adebb {_dcf .Log .Debug ("\u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020e\u0072r\u006f\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u002f\u0025\u0054\u0029",_debbge ,_bgg .TraceToDirectObject (_debbge ));
return _bgg .ErrTypeError ;};_feafa .Set (gsName ,gsDict );return nil ;};

// NewPdfDate returns a new PdfDate object from a PDF date string (see 7.9.4 Dates).
// format: "D: YYYYMMDDHHmmSSOHH'mm"
func NewPdfDate (dateStr string )(PdfDate ,error ){_gadd ,_bgbga :=_egb .ParsePdfTime (dateStr );if _bgbga !=nil {return PdfDate {},_bgbga ;};return NewPdfDateFromTime (_gadd );};func _gbeg (_ecbcf *fontCommon )*pdfCIDFontType2 {return &pdfCIDFontType2 {fontCommon :*_ecbcf }};


// GetContainingPdfObject returns the page as a dictionary within an PdfIndirectObject.
func (_dbgad *PdfPage )GetContainingPdfObject ()_bgg .PdfObject {return _dbgad ._bcdg };func (_ebfb *PdfReader )buildNameNodes (_bcgaef *_bgg .PdfIndirectObject ,_dcfca map[_bgg .PdfObject ]struct{})error {if _bcgaef ==nil {return nil ;};if _ ,_cagea :=_dcfca [_bcgaef ];
_cagea {_dcf .Log .Debug ("\u0043\u0079\u0063l\u0069\u0063\u0020\u0072e\u0063\u0075\u0072\u0073\u0069\u006f\u006e,\u0020\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0028\u0025\u0076\u0029",_bcgaef .ObjectNumber );return nil ;};_dcfca [_bcgaef ]=struct{}{};
_feda ,_gagdd :=_bcgaef .PdfObject .(*_bgg .PdfObjectDictionary );if !_gagdd {return _ag .New ("n\u006f\u0064\u0065\u0020no\u0074 \u0061\u0020\u0064\u0069\u0063t\u0069\u006f\u006e\u0061\u0072\u0079");};if _edcd ,_cgada :=_bgg .GetDict (_feda .Get ("\u0044\u0065\u0073t\u0073"));
_cgada {_gbeef ,_fcbd :=_bgg .GetArray (_edcd .Get ("\u004b\u0069\u0064\u0073"));if !_fcbd {return _ag .New ("\u0049n\u0076\u0061\u006c\u0069d\u0020\u004b\u0069\u0064\u0073 \u0061r\u0072a\u0079\u0020\u006f\u0062\u006a\u0065\u0063t");};_dcf .Log .Trace ("\u004b\u0069\u0064\u0073\u003a\u0020\u0025\u0073",_gbeef );
for _aebab ,_bcea :=range _gbeef .Elements (){_bccdf ,_gbega :=_bgg .GetIndirect (_bcea );if !_gbega {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0063\u0068\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006e\u0064i\u0072\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u002d \u0028\u0025\u0073\u0029",_bccdf );
return _ag .New ("\u0063h\u0069\u006c\u0064\u0020n\u006f\u0074\u0020\u0069\u006ed\u0069r\u0065c\u0074\u0020\u006f\u0062\u006a\u0065\u0063t");};_gbeef .Set (_aebab ,_bccdf );_bgfag :=_ebfb .buildNameNodes (_bccdf ,_dcfca );if _bgfag !=nil {return _bgfag ;
};};};if _fddbg ,_gedbd :=_bgg .GetDict (_feda );_gedbd {if !_bgg .IsNullObject (_fddbg .Get ("\u004b\u0069\u0064\u0073")){if _ffdcd ,_ecdee :=_bgg .GetArray (_fddbg .Get ("\u004b\u0069\u0064\u0073"));_ecdee {for _edfg ,_agggd :=range _ffdcd .Elements (){if _badg ,_bfbgg :=_bgg .GetIndirect (_agggd );
_bfbgg {_ffdcd .Set (_edfg ,_badg );_fbdfg :=_ebfb .buildNameNodes (_badg ,_dcfca );if _fbdfg !=nil {return _fbdfg ;};};};};};};return nil ;};

// NewPdfAppender creates a new Pdf appender from a Pdf reader.
func NewPdfAppender (reader *PdfReader )(*PdfAppender ,error ){_aeaec :=&PdfAppender {_ddbge :reader ._aeacdd ,Reader :reader ,_ega :reader ._ebdgc ,_efaa :reader ._ddcbee };_bdaa ,_aeff :=_aeaec ._ddbge .Seek (0,_gb .SeekEnd );if _aeff !=nil {return nil ,_aeff ;
};_aeaec ._dge =_bdaa ;if _ ,_aeff =_aeaec ._ddbge .Seek (0,_gb .SeekStart );_aeff !=nil {return nil ,_aeff ;};_aeaec ._bded ,_aeff =NewPdfReader (_aeaec ._ddbge );if _aeff !=nil {return nil ,_aeff ;};for _ ,_gffa :=range _aeaec .Reader .GetObjectNums (){if _aeaec ._adab < _gffa {_aeaec ._adab =_gffa ;
};};_aeaec ._ccee =_aeaec ._ega .GetXrefTable ();_aeaec ._bcgb =_aeaec ._ega .GetXrefOffset ();_aeaec ._daab =append (_aeaec ._daab ,_aeaec ._bded .PageList ...);_aeaec ._eccg =make (map[_bgg .PdfObject ]struct{});_aeaec ._fbdg =make (map[_bgg .PdfObject ]int64 );
_aeaec ._faf =make (map[_bgg .PdfObject ]struct{});_aeaec ._fgbb =_aeaec ._bded .AcroForm ;_aeaec ._ebdc =_aeaec ._bded .DSS ;return _aeaec ,nil ;};

// ToPdfObject sets the common field elements.
// Note: Call the more field context's ToPdfObject to set both the generic and
// non-generic information.
func (_bfgc *PdfField )ToPdfObject ()_bgg .PdfObject {_bbcb :=_bfgc ._fagb ;_bgeccg :=_bbcb .PdfObject .(*_bgg .PdfObjectDictionary );_fbaeg :=_bgg .MakeArray ();for _ ,_dadcb :=range _bfgc .Kids {_fbaeg .Append (_dadcb .ToPdfObject ());};for _ ,_efbbf :=range _bfgc .Annotations {if _efbbf ._gec !=_bfgc ._fagb {_fbaeg .Append (_efbbf .GetContext ().ToPdfObject ());
};};if _bfgc .Parent !=nil {_bgeccg .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_bfgc .Parent .GetContainingPdfObject ());};if _fbaeg .Len ()> 0{_bgeccg .Set ("\u004b\u0069\u0064\u0073",_fbaeg );};_bgeccg .SetIfNotNil ("\u0046\u0054",_bfgc .FT );
_bgeccg .SetIfNotNil ("\u0054",_bfgc .T );_bgeccg .SetIfNotNil ("\u0054\u0055",_bfgc .TU );_bgeccg .SetIfNotNil ("\u0054\u004d",_bfgc .TM );_bgeccg .SetIfNotNil ("\u0046\u0066",_bfgc .Ff );_bgeccg .SetIfNotNil ("\u0056",_bfgc .V );_bgeccg .SetIfNotNil ("\u0044\u0056",_bfgc .DV );
_bgeccg .SetIfNotNil ("\u0041\u0041",_bfgc .AA );if _bfgc .VariableText !=nil {_bgeccg .SetIfNotNil ("\u0044\u0041",_bfgc .VariableText .DA );_bgeccg .SetIfNotNil ("\u0051",_bfgc .VariableText .Q );_bgeccg .SetIfNotNil ("\u0044\u0053",_bfgc .VariableText .DS );
_bgeccg .SetIfNotNil ("\u0052\u0056",_bfgc .VariableText .RV );};return _bbcb ;};func (_fbggd *PdfAcroForm )fillImageWithAppearance (_gcccc FieldImageProvider ,_ddfdg FieldAppearanceGenerator )error {if _fbggd ==nil {return nil ;};_fadg ,_acbe :=_gcccc .FieldImageValues ();
if _acbe !=nil {return _acbe ;};for _ ,_beeag :=range _fbggd .AllFields (){_gbfcf :=_beeag .PartialName ();_ddcea ,_ceafa :=_fadg [_gbfcf ];if !_ceafa {if _ccff ,_fbgda :=_beeag .FullName ();_fbgda ==nil {_ddcea ,_ceafa =_fadg [_ccff ];};};if !_ceafa {_dcf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_gbfcf );
continue ;};switch _acfaf :=_beeag .GetContext ().(type ){case *PdfFieldButton :if _acfaf .IsPush (){_acfaf .SetFillImage (_ddcea );};};if _ddfdg ==nil {continue ;};for _ ,_dbfb :=range _beeag .Annotations {_cedfe ,_gadc :=_ddfdg .GenerateAppearanceDict (_fbggd ,_beeag ,_dbfb );
if _gadc !=nil {return _gadc ;};_dbfb .AP =_cedfe ;_dbfb .ToPdfObject ();};};return nil ;};

// GetOutlinesFlattened returns a flattened list of tree nodes and titles.
// NOTE: for most use cases, it is recommended to use the high-level GetOutlines
// method instead, which also provides information regarding the destination
// of the outline items.
func (_ddcbf *PdfReader )GetOutlinesFlattened ()([]*PdfOutlineTreeNode ,[]string ,error ){var _cdeg []*PdfOutlineTreeNode ;var _cade []string ;var _gaecb func (*PdfOutlineTreeNode ,*[]*PdfOutlineTreeNode ,*[]string ,int );_gaecb =func (_acddc *PdfOutlineTreeNode ,_gbbcb *[]*PdfOutlineTreeNode ,_dbef *[]string ,_aabe int ){if _acddc ==nil {return ;
};if _acddc ._ebbf ==nil {_dcf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020M\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006e\u006fd\u0065\u002e\u0063o\u006et\u0065\u0078\u0074");return ;};_beada ,_cedcb :=_acddc ._ebbf .(*PdfOutlineItem );if _cedcb {*_gbbcb =append (*_gbbcb ,&_beada .PdfOutlineTreeNode );
_effge :=_ba .Repeat ("\u0020",_aabe *2)+_beada .Title .Decoded ();*_dbef =append (*_dbef ,_effge );};if _acddc .First !=nil {_agdf :=_ba .Repeat ("\u0020",_aabe *2)+"\u002b";*_dbef =append (*_dbef ,_agdf );_gaecb (_acddc .First ,_gbbcb ,_dbef ,_aabe +1);
};if _cedcb &&_beada .Next !=nil {_gaecb (_beada .Next ,_gbbcb ,_dbef ,_aabe );};};_gaecb (_ddcbf ._accd ,&_cdeg ,&_cade ,0);return _cdeg ,_cade ,nil ;};

// IsTiling specifies if the pattern is a tiling pattern.
func (_begg *PdfPattern )IsTiling ()bool {return _begg .PatternType ==1};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components.
func (_dfed *PdfColorspaceSpecialPattern )ColorFromFloats (vals []float64 )(PdfColor ,error ){if _dfed .UnderlyingCS ==nil {return nil ,_ag .New ("u\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0043\u0053\u0020\u006e\u006f\u0074 \u0073\u0070\u0065c\u0069f\u0069\u0065\u0064");
};return _dfed .UnderlyingCS .ColorFromFloats (vals );};

// PdfAnnotationWatermark represents Watermark annotations.
// (Section 12.5.6.22).
type PdfAnnotationWatermark struct{*PdfAnnotation ;FixedPrint _bgg .PdfObject ;};

// NewPdfAnnotationInk returns a new ink annotation.
func NewPdfAnnotationInk ()*PdfAnnotationInk {_aaeb :=NewPdfAnnotation ();_aceg :=&PdfAnnotationInk {};_aceg .PdfAnnotation =_aaeb ;_aceg .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_aaeb .SetContext (_aceg );return _aceg ;};

// GetOCProperties returns the optional content properties PdfObject.
func (_ddbaa *PdfReader )GetOCProperties ()(_bgg .PdfObject ,error ){_gggdfa :=_ddbaa ._gaebb ;_bfef :=_gggdfa .Get ("\u004f\u0043\u0050r\u006f\u0070\u0065\u0072\u0074\u0069\u0065\u0073");_bfef =_bgg .ResolveReference (_bfef );if !_ddbaa ._cdbfbb {_fbaec :=_ddbaa .traverseObjectData (_bfef );
if _fbaec !=nil {return nil ,_fbaec ;};};return _bfef ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gddb *PdfAnnotationInk )ToPdfObject ()_bgg .PdfObject {_gddb .PdfAnnotation .ToPdfObject ();_ggee :=_gddb ._gec ;_edca :=_ggee .PdfObject .(*_bgg .PdfObjectDictionary );_gddb .PdfAnnotationMarkup .appendToPdfDictionary (_edca );_edca .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0049\u006e\u006b"));
_edca .SetIfNotNil ("\u0049n\u006b\u004c\u0069\u0073\u0074",_gddb .InkList );_edca .SetIfNotNil ("\u0042\u0053",_gddb .BS );return _ggee ;};

// SetDecode sets the decode image float slice.
func (_eacee *Image )SetDecode (decode []float64 ){_eacee ._ddaa =decode };var _ pdfFont =(*pdfCIDFontType2 )(nil );

// DefaultFont returns the default font, which is currently the built in Helvetica.
func DefaultFont ()*PdfFont {_aggb ,_gggb :=_dad .NewStdFontByName (HelveticaName );if !_gggb {panic ("\u0048\u0065lv\u0065\u0074\u0069c\u0061\u0020\u0073\u0068oul\u0064 a\u006c\u0077\u0061\u0079\u0073\u0020\u0062e \u0061\u0076\u0061\u0069\u006c\u0061\u0062l\u0065");
};_ddbc :=_ggfce (_aggb );return &PdfFont {_efdec :&_ddbc };};func (_fgcab *PdfWriter )setHashIDs (_dfegf _a .Hash )error {_fcdcc :=_dfegf .Sum (nil );if _fgcab ._gcege ==""{_fgcab ._gcege =_ae .EncodeToString (_fcdcc [:8]);};_fgcab .setDocumentIDs (_fgcab ._gcege ,_ae .EncodeToString (_fcdcc [8:]));
return nil ;};

// ToPdfObject converts the font to a PDF representation.
func (_ddcb *pdfFontType3 )ToPdfObject ()_bgg .PdfObject {if _ddcb ._dggg ==nil {_ddcb ._dggg =&_bgg .PdfIndirectObject {};};_afgd :=_ddcb .baseFields ().asPdfObjectDictionary ("\u0054\u0079\u0070e\u0033");_ddcb ._dggg .PdfObject =_afgd ;if _ddcb .FirstChar !=nil {_afgd .Set ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r",_ddcb .FirstChar );
};if _ddcb .LastChar !=nil {_afgd .Set ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072",_ddcb .LastChar );};if _ddcb .Widths !=nil {_afgd .Set ("\u0057\u0069\u0064\u0074\u0068\u0073",_ddcb .Widths );};if _ddcb .Encoding !=nil {_afgd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_ddcb .Encoding );
}else if _ddcb ._bcddf !=nil {_fagbg :=_ddcb ._bcddf .ToPdfObject ();if _fagbg !=nil {_afgd .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_fagbg );};};if _ddcb .FontBBox !=nil {_afgd .Set ("\u0046\u006f\u006e\u0074\u0042\u0042\u006f\u0078",_ddcb .FontBBox );
};if _ddcb .FontMatrix !=nil {_afgd .Set ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0069\u0072\u0078",_ddcb .FontMatrix );};if _ddcb .CharProcs !=nil {_afgd .Set ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s",_ddcb .CharProcs );};if _ddcb .Resources !=nil {_afgd .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_ddcb .Resources );
};return _ddcb ._dggg ;};func _cegd (_dcedb map[_dad .GID ]int ,_aafc uint16 )*_bgg .PdfObjectArray {_acega :=&_bgg .PdfObjectArray {};_cgcg :=_dad .GID (_aafc );for _bddfd :=_dad .GID (0);_bddfd < _cgcg ;{_bfdgf ,_efbba :=_dcedb [_bddfd ];if !_efbba {_bddfd ++;
continue ;};_ffedg :=_bddfd ;for _caac :=_ffedg +1;_caac < _cgcg ;_caac ++{if _bdefc ,_gbdb :=_dcedb [_caac ];!_gbdb ||_bfdgf !=_bdefc {break ;};_ffedg =_caac ;};_acega .Append (_bgg .MakeInteger (int64 (_bddfd )));_acega .Append (_bgg .MakeInteger (int64 (_ffedg )));
_acega .Append (_bgg .MakeInteger (int64 (_bfdgf )));_bddfd =_ffedg +1;};return _acega ;};

// UpdatePage updates the `page` in the new revision if it has changed.
func (_egaa *PdfAppender )UpdatePage (page *PdfPage ){_egaa .updateObjectsDeep (page .ToPdfObject (),nil )};

// ColorFromFloats returns a new PdfColor based on input color components.
func (_cdba *PdfColorspaceDeviceN )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=_cdba .GetNumComponents (){return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_afgf ,_cfad :=_cdba .TintTransform .Evaluate (vals );
if _cfad !=nil {return nil ,_cfad ;};_agac ,_cfad :=_cdba .AlternateSpace .ColorFromFloats (_afgf );if _cfad !=nil {return nil ,_cfad ;};return _agac ,nil ;};

// NewPdfColorCalGray returns a new CalGray color.
func NewPdfColorCalGray (grayVal float64 )*PdfColorCalGray {_cbbd :=PdfColorCalGray (grayVal );return &_cbbd ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for an RGB device.
func (_egfe *PdfColorspaceDeviceRGB )GetNumComponents ()int {return 3};func (_cecc fontCommon )isCIDFont ()bool {if _cecc ._dadgd ==""{_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0069\u0073\u0043\u0049\u0044\u0046\u006f\u006e\u0074\u002e\u0020\u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_cecc );
};_beceef :=false ;switch _cecc ._dadgd {case "\u0054\u0079\u0070e\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0030","\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032":_beceef =true ;};_dcf .Log .Trace ("i\u0073\u0043\u0049\u0044\u0046\u006fn\u0074\u003a\u0020\u0069\u0073\u0043\u0049\u0044\u003d%\u0074\u0020\u0066o\u006et\u003d\u0025\u0073",_beceef ,_cecc );
return _beceef ;};

// SetColorSpace sets `r` colorspace object to `colorspace`.
func (_bdceg *PdfPageResources )SetColorSpace (colorspace *PdfPageResourcesColorspaces ){_bdceg ._adggf =colorspace ;};type crossReference struct{Type int ;

// Type 1
Offset int64 ;Generation int64 ;

// Type 2
ObjectNumber int ;Index int ;};

// PdfAcroForm represents the AcroForm dictionary used for representation of form data in PDF.
type PdfAcroForm struct{Fields *[]*PdfField ;NeedAppearances *_bgg .PdfObjectBool ;SigFlags *_bgg .PdfObjectInteger ;CO *_bgg .PdfObjectArray ;DR *PdfPageResources ;DA *_bgg .PdfObjectString ;Q *_bgg .PdfObjectInteger ;XFA _bgg .PdfObject ;_gfffc *_bgg .PdfIndirectObject ;
};

// DecodeArray returns the range of color component values in the Lab colorspace.
func (_bgdf *PdfColorspaceLab )DecodeArray ()[]float64 {_bggdg :=[]float64 {0,100};if _bgdf .Range !=nil &&len (_bgdf .Range )==4{_bggdg =append (_bggdg ,_bgdf .Range ...);}else {_bggdg =append (_bggdg ,-100,100,-100,100);};return _bggdg ;};func (_ggecc *PdfWriter )setCatalogVersion (){_ggecc ._ffbb .Set ("\u0056e\u0072\u0073\u0069\u006f\u006e",_bgg .MakeName (_e .Sprintf ("\u0025\u0064\u002e%\u0064",_ggecc ._ffgff .Major ,_ggecc ._ffgff .Minor )));
};

// GetNameDictionary returns the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_efcg *PdfReader )GetNameDictionary ()(_bgg .PdfObject ,error ){_agbb :=_bgg .ResolveReference (_efcg ._gaebb .Get ("\u004e\u0061\u006de\u0073"));if _agbb ==nil {return nil ,nil ;};if !_efcg ._cdbfbb {_ceegc :=_efcg .traverseObjectData (_agbb );if _ceegc !=nil {return nil ,_ceegc ;
};};return _agbb ,nil ;};func (_gfbcd *PdfSignature )extractChainFromCert ()([]*_dd .Certificate ,error ){var _babb *_bgg .PdfObjectArray ;switch _adcab :=_gfbcd .Cert .(type ){case *_bgg .PdfObjectString :_babb =_bgg .MakeArray (_adcab );case *_bgg .PdfObjectArray :_babb =_adcab ;
default:return nil ,_e .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020s\u0069\u0067\u006e\u0061\u0074\u0075\u0072e\u0020\u0063\u0065\u0072\u0074\u0069f\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_adcab );
};var _adege _aa .Buffer ;for _ ,_fffbc :=range _babb .Elements (){_fcade ,_cgfdg :=_bgg .GetString (_fffbc );if !_cgfdg {return nil ,_e .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074\u0020\u0074\u0079p\u0065\u0020\u0069\u006e\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065 \u0063\u0065r\u0074\u0069\u0066\u0069c\u0061\u0074\u0065\u0020\u0063h\u0061\u0069\u006e\u003a\u0020\u0025\u0054",_fffbc );
};if _ ,_aaaefe :=_adege .Write (_fcade .Bytes ());_aaaefe !=nil {return nil ,_aaaefe ;};};return _dd .ParseCertificates (_adege .Bytes ());};

// Write writes out the PDF.
func (_gegbe *PdfWriter )Write (writer _gb .Writer )error {_dcf .Log .Trace ("\u0057r\u0069\u0074\u0065\u0028\u0029");_dgfdf :=_gegbe .checkLicense ();if _dgfdf !=nil {return _dgfdf ;};if _dgfdf =_gegbe .writeOutlines ();_dgfdf !=nil {return _dgfdf ;};
if _dgfdf =_gegbe .writeAcroFormFields ();_dgfdf !=nil {return _dgfdf ;};_gegbe .checkPendingObjects ();if _dgfdf =_gegbe .writeOutputIntents ();_dgfdf !=nil {return _dgfdf ;};_gegbe .setCatalogVersion ();_gegbe .copyObjects ();if _dgfdf =_gegbe .optimize ();
_dgfdf !=nil {return _dgfdf ;};if _dgfdf =_gegbe .optimizeDocument ();_dgfdf !=nil {return _dgfdf ;};var _eaaga _a .Hash ;if _gegbe ._aefd {_eaaga =_gf .New ();writer =_gb .MultiWriter (_eaaga ,writer );};_gegbe .setWriter (writer );_fbged :=_gegbe .checkCrossReferenceStream ();
_ddece ,_fbged :=_gegbe .mapObjectStreams (_fbged );_gegbe .adjustXRefAffectedVersion (_fbged );_gegbe .writeDocumentVersion ();_gegbe .updateObjectNumbers ();_gegbe .writeObjects ();if _dgfdf =_gegbe .writeObjectsInStreams (_ddece );_dgfdf !=nil {return _dgfdf ;
};_dbcaf :=_gegbe ._ebdcg ;var _fffaa int ;for _eaege :=range _gegbe ._decfgb {if _eaege > _fffaa {_fffaa =_eaege ;};};if _gegbe ._aefd {if _dgfdf =_gegbe .setHashIDs (_eaaga );_dgfdf !=nil {return _dgfdf ;};};if _fbged {if _dgfdf =_gegbe .writeXRefStreams (_fffaa ,_dbcaf );
_dgfdf !=nil {return _dgfdf ;};}else {_gegbe .writeTrailer (_fffaa );};_gegbe .makeOffSetReference (_dbcaf );if _dgfdf =_gegbe .flushWriter ();_dgfdf !=nil {return _dgfdf ;};return nil ;};func (_ecadb *PdfWriter )writeOutputIntents ()error {if len (_ecadb ._fdbff )==0{return nil ;
};_dacba :=make ([]_bgg .PdfObject ,len (_ecadb ._fdbff ));for _ffbbb ,_gabda :=range _ecadb ._fdbff {_faafg :=_gabda .ToPdfObject ();_dacba [_ffbbb ]=_bgg .MakeIndirectObject (_faafg );};_fedbf :=_bgg .MakeIndirectObject (_bgg .MakeArray (_dacba ...));
_ecadb ._ffbb .Set ("\u004f\u0075\u0074\u0070\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074\u0073",_fedbf );if _cgcdb :=_ecadb .addObjects (_fedbf );_cgcdb !=nil {return _cgcdb ;};return nil ;};

// GetContainingPdfObject returns the container of the shading object (indirect object).
func (_dbfge *PdfShading )GetContainingPdfObject ()_bgg .PdfObject {return _dbfge ._fcfbb };

// VariableText contains the common attributes of a variable text.
// The VariableText is typically not used directly, but is can encapsulate by PdfField
// See section 12.7.3.3 "Variable Text" and Table 222 (pp. 434-436 PDF32000_2008).
type VariableText struct{DA *_bgg .PdfObjectString ;Q *_bgg .PdfObjectInteger ;DS *_bgg .PdfObjectString ;RV _bgg .PdfObject ;};

// SetSamples convert samples to byte-data and sets for the image.
// NOTE: The method resamples the data and this could lead to high memory usage,
// especially on large images. It should be used only when it is not possible
// to work with the image byte data directly.
func (_gfcb *Image )SetSamples (samples []uint32 ){if _gfcb .BitsPerComponent < 8{samples =_gfcb .samplesAddPadding (samples );};_ebab :=_ceg .ResampleUint32 (samples ,int (_gfcb .BitsPerComponent ),8);_cfbdd :=make ([]byte ,len (_ebab ));for _bdaff ,_caacb :=range _ebab {_cfbdd [_bdaff ]=byte (_caacb );
};_gfcb .Data =_cfbdd ;};func (_eeeg *PdfAppender )replaceObject (_edbd ,_afcd _bgg .PdfObject ){switch _dbfg :=_edbd .(type ){case *_bgg .PdfIndirectObject :_eeeg ._fbdg [_afcd ]=_dbfg .ObjectNumber ;case *_bgg .PdfObjectStream :_eeeg ._fbdg [_afcd ]=_dbfg .ObjectNumber ;
};};

// NewPdfAnnotation returns an initialized generic PDF annotation model.
func NewPdfAnnotation ()*PdfAnnotation {_efca :=&PdfAnnotation {};_efca ._gec =_bgg .MakeIndirectObject (_bgg .MakeDict ());return _efca ;};

// ColorToRGB converts a color in Separation colorspace to RGB colorspace.
func (_caeca *PdfColorspaceSpecialSeparation )ColorToRGB (color PdfColor )(PdfColor ,error ){if _caeca .AlternateSpace ==nil {return nil ,_ag .New ("\u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0065\u0020c\u006f\u006c\u006f\u0072\u0073\u0070\u0061c\u0065\u0020\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};return _caeca .AlternateSpace .ColorToRGB (color );};

// PdfFieldSignature signature field represents digital signatures and optional data for authenticating
// the name of the signer and verifying document contents.
type PdfFieldSignature struct{*PdfField ;*PdfAnnotationWidget ;V *PdfSignature ;Lock *_bgg .PdfIndirectObject ;SV *_bgg .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_cbcdb *PdfSignature )ToPdfObject ()_bgg .PdfObject {_cbeea :=_cbcdb ._ddfdc ;var _ccfg *_bgg .PdfObjectDictionary ;if _eebae ,_gadgg :=_cbeea .PdfObject .(*pdfSignDictionary );_gadgg {_ccfg =_eebae .PdfObjectDictionary ;}else {_ccfg =_cbeea .PdfObject .(*_bgg .PdfObjectDictionary );
};_ccfg .SetIfNotNil ("\u0054\u0079\u0070\u0065",_cbcdb .Type );_ccfg .SetIfNotNil ("\u0046\u0069\u006c\u0074\u0065\u0072",_cbcdb .Filter );_ccfg .SetIfNotNil ("\u0053u\u0062\u0046\u0069\u006c\u0074\u0065r",_cbcdb .SubFilter );_ccfg .SetIfNotNil ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_cbcdb .ByteRange );
_ccfg .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_cbcdb .Contents );_ccfg .SetIfNotNil ("\u0043\u0065\u0072\u0074",_cbcdb .Cert );_ccfg .SetIfNotNil ("\u004e\u0061\u006d\u0065",_cbcdb .Name );_ccfg .SetIfNotNil ("\u0052\u0065\u0061\u0073\u006f\u006e",_cbcdb .Reason );
_ccfg .SetIfNotNil ("\u004d",_cbcdb .M );_ccfg .SetIfNotNil ("\u0052e\u0066\u0065\u0072\u0065\u006e\u0063e",_cbcdb .Reference );_ccfg .SetIfNotNil ("\u0043h\u0061\u006e\u0067\u0065\u0073",_cbcdb .Changes );_ccfg .SetIfNotNil ("C\u006f\u006e\u0074\u0061\u0063\u0074\u0049\u006e\u0066\u006f",_cbcdb .ContactInfo );
return _cbeea ;};func _fabcg (_bdfgb _bgg .PdfObject )(*PdfShading ,error ){_adffe :=&PdfShading {};var _cagad *_bgg .PdfObjectDictionary ;if _ddacc ,_beggb :=_bgg .GetIndirect (_bdfgb );_beggb {_adffe ._fcfbb =_ddacc ;_aeede ,_faeg :=_ddacc .PdfObject .(*_bgg .PdfObjectDictionary );
if !_faeg {_dcf .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_bgg .ErrTypeError ;};_cagad =_aeede ;}else if _aggdc ,_ebgcf :=_bgg .GetStream (_bdfgb );
_ebgcf {_adffe ._fcfbb =_aggdc ;_cagad =_aggdc .PdfObjectDictionary ;}else if _gbbae ,_cdfdb :=_bgg .GetDict (_bdfgb );_cdfdb {_adffe ._fcfbb =_gbbae ;_cagad =_gbbae ;}else {_dcf .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",_bdfgb );
return nil ,_bgg .ErrTypeError ;};if _cagad ==nil {_dcf .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,_ag .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");
};_bdfgb =_cagad .Get ("S\u0068\u0061\u0064\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _bdfgb ==nil {_dcf .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073si\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_bdfgb =_bgg .TraceToDirectObject (_bdfgb );_aaadg ,_bfafg :=_bdfgb .(*_bgg .PdfObjectInteger );if !_bfafg {_dcf .Log .Debug ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u0066o\u0072 \u0073h\u0061d\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_bdfgb );
return nil ,_bgg .ErrTypeError ;};if *_aaadg < 1||*_aaadg > 7{_dcf .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020\u0074\u0079\u0070\u0065\u002c\u0020\u006e\u006ft\u0020\u0031\u002d\u0037\u0020(\u0067\u006ft\u0020\u0025\u0064\u0029",*_aaadg );
return nil ,_bgg .ErrTypeError ;};_adffe .ShadingType =_aaadg ;_bdfgb =_cagad .Get ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065");if _bdfgb ==nil {_dcf .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072e\u0064\u0020\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065\u0020e\u006e\u0074\u0072\u0079\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ccedb ,_ecgce :=NewPdfColorspaceFromPdfObject (_bdfgb );if _ecgce !=nil {_dcf .Log .Debug ("\u0046\u0061i\u006c\u0065\u0064\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065: \u0025\u0076",_ecgce );
return nil ,_ecgce ;};_adffe .ColorSpace =_ccedb ;_bdfgb =_cagad .Get ("\u0042\u0061\u0063\u006b\u0067\u0072\u006f\u0075\u006e\u0064");if _bdfgb !=nil {_bdfgb =_bgg .TraceToDirectObject (_bdfgb );_cebgf ,_bcbe :=_bdfgb .(*_bgg .PdfObjectArray );if !_bcbe {_dcf .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_bdfgb );
return nil ,_bgg .ErrTypeError ;};_adffe .Background =_cebgf ;};_bdfgb =_cagad .Get ("\u0042\u0042\u006f\u0078");if _bdfgb !=nil {_bdfgb =_bgg .TraceToDirectObject (_bdfgb );_fgdfd ,_fabab :=_bdfgb .(*_bgg .PdfObjectArray );if !_fabab {_dcf .Log .Debug ("\u0042\u0061\u0063\u006b\u0067r\u006f\u0075\u006e\u0064\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054)",_bdfgb );
return nil ,_bgg .ErrTypeError ;};_ggdae ,_fgfegb :=NewPdfRectangle (*_fgdfd );if _fgfegb !=nil {_dcf .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_fgfegb );return nil ,_fgfegb ;};_adffe .BBox =_ggdae ;
};_bdfgb =_cagad .Get ("\u0041n\u0074\u0069\u0041\u006c\u0069\u0061s");if _bdfgb !=nil {_bdfgb =_bgg .TraceToDirectObject (_bdfgb );_fbgbg ,_ffdeg :=_bdfgb .(*_bgg .PdfObjectBool );if !_ffdeg {_dcf .Log .Debug ("A\u006e\u0074\u0069\u0041\u006c\u0069\u0061\u0073\u0020i\u006e\u0076\u0061\u006c\u0069\u0064\u0020ty\u0070\u0065\u002c\u0020s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020bo\u006f\u006c \u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bdfgb );
return nil ,_bgg .ErrTypeError ;};_adffe .AntiAlias =_fbgbg ;};switch *_aaadg {case 1:_cgbd ,_aecb :=_geegg (_cagad );if _aecb !=nil {return nil ,_aecb ;};_cgbd .PdfShading =_adffe ;_adffe ._efbed =_cgbd ;return _adffe ,nil ;case 2:_fadde ,_aeeda :=_baeac (_cagad );
if _aeeda !=nil {return nil ,_aeeda ;};_fadde .PdfShading =_adffe ;_adffe ._efbed =_fadde ;return _adffe ,nil ;case 3:_dfgcb ,_aadag :=_effca (_cagad );if _aadag !=nil {return nil ,_aadag ;};_dfgcb .PdfShading =_adffe ;_adffe ._efbed =_dfgcb ;return _adffe ,nil ;
case 4:_cadee ,_ddfff :=_bbbcg (_cagad );if _ddfff !=nil {return nil ,_ddfff ;};_cadee .PdfShading =_adffe ;_adffe ._efbed =_cadee ;return _adffe ,nil ;case 5:_gffde ,_bfbbg :=_gfadb (_cagad );if _bfbbg !=nil {return nil ,_bfbbg ;};_gffde .PdfShading =_adffe ;
_adffe ._efbed =_gffde ;return _adffe ,nil ;case 6:_dedcge ,_cfgcg :=_dgbec (_cagad );if _cfgcg !=nil {return nil ,_cfgcg ;};_dedcge .PdfShading =_adffe ;_adffe ._efbed =_dedcge ;return _adffe ,nil ;case 7:_gcae ,_gbafa :=_dfgfb (_cagad );if _gbafa !=nil {return nil ,_gbafa ;
};_gcae .PdfShading =_adffe ;_adffe ._efbed =_gcae ;return _adffe ,nil ;};return nil ,_ag .New ("u\u006ek\u006e\u006f\u0077\u006e\u0020\u0073\u0068\u0061d\u0069\u006e\u0067\u0020ty\u0070\u0065");};

// ColorFromFloats returns a new PdfColorDevice based on the input slice of
// color components. The slice should contain four elements representing the
// cyan, magenta, yellow and key components of the color. The values of the
// elements should be between 0 and 1.
func (_eaac *PdfColorspaceDeviceCMYK )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=4{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_addaa :=vals [0];if _addaa < 0.0||_addaa > 1.0{_dcf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_addaa );
return nil ,ErrColorOutOfRange ;};_bfeb :=vals [1];if _bfeb < 0.0||_bfeb > 1.0{_dcf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_bfeb );return nil ,ErrColorOutOfRange ;
};_cggcb :=vals [2];if _cggcb < 0.0||_cggcb > 1.0{_dcf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_cggcb );return nil ,ErrColorOutOfRange ;};_agfg :=vals [3];
if _agfg < 0.0||_agfg > 1.0{_dcf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_agfg );return nil ,ErrColorOutOfRange ;};_cagc :=NewPdfColorDeviceCMYK (_addaa ,_bfeb ,_cggcb ,_agfg );
return _cagc ,nil ;};

// ColorToRGB converts a ICCBased color to an RGB color.
func (_ecff *PdfColorspaceICCBased )ColorToRGB (color PdfColor )(PdfColor ,error ){if _ecff .Alternate ==nil {_dcf .Log .Debug ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
if _ecff .N ==1{_dcf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061y\u0020\u0028\u004e\u003d\u0031\u0029");
_cfbf :=NewPdfColorspaceDeviceGray ();return _cfbf .ColorToRGB (color );}else if _ecff .N ==3{_dcf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070a\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067 \u0061\u006c\u0074\u0065\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006eg\u0020\u0044\u0065\u0076\u0069\u0063e\u0052\u0047B\u0020\u0028N\u003d3\u0029");
return color ,nil ;}else if _ecff .N ==4{_dcf .Log .Debug ("\u0049\u0043\u0043\u0020\u0042a\u0073\u0065\u0064\u0020\u0063o\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061\u006c\u0074\u0065r\u006e\u0061\u0074\u0069\u0076\u0065\u0020\u002d\u0020\u0075\u0073\u0069\u006e\u0067\u0020\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059K\u0020\u0028\u004e\u003d\u0034\u0029");
_ageg :=NewPdfColorspaceDeviceCMYK ();return _ageg .ColorToRGB (color );}else {return nil ,_ag .New ("I\u0043\u0043\u0020\u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0061lt\u0065\u0072\u006ea\u0074i\u0076\u0065");
};};_dcf .Log .Trace ("\u0049\u0043\u0043 \u0042\u0061\u0073\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0077\u0069\u0074\u0068\u0020\u0061\u006c\u0074\u0065\u0072\u006e\u0061t\u0069\u0076\u0065\u003a\u0020\u0025\u0023\u0076",_ecff );
return _ecff .Alternate .ColorToRGB (color );};

// GetNumPages returns the number of pages in the document.
func (_bafbf *PdfReader )GetNumPages ()(int ,error ){if _bafbf ._ebdgc .GetCrypter ()!=nil &&!_bafbf ._ebdgc .IsAuthenticated (){return 0,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};return len (_bafbf ._ebbfg ),nil ;};

// FieldAppearanceGenerator generates appearance stream for a given field.
type FieldAppearanceGenerator interface{ContentStreamWrapper ;GenerateAppearanceDict (_daece *PdfAcroForm ,_agae *PdfField ,_afeaba *PdfAnnotationWidget )(*_bgg .PdfObjectDictionary ,error );};

// NewXObjectForm creates a brand new XObject Form. Creates a new underlying PDF object stream primitive.
func NewXObjectForm ()*XObjectForm {_ddeea :=&XObjectForm {};_dedee :=&_bgg .PdfObjectStream {};_dedee .PdfObjectDictionary =_bgg .MakeDict ();_ddeea ._eaeegc =_dedee ;return _ddeea ;};

// AllFields returns a flattened list of all fields in the form.
func (_dfga *PdfAcroForm )AllFields ()[]*PdfField {if _dfga ==nil {return nil ;};var _bdaad []*PdfField ;if _dfga .Fields !=nil {for _ ,_cgcc :=range *_dfga .Fields {_bdaad =append (_bdaad ,_feaga (_cgcc )...);};};return _bdaad ;};

// PageCallback callback function used in page loading
// that could be used to modify the page content.
//
// Deprecated: will be removed in v4. Use PageProcessCallback instead.
type PageCallback func (_egfag int ,_dbffd *PdfPage );

// GetContext returns the PdfField context which is the more specific field data type, e.g. PdfFieldButton
// for a button field.
func (_edcg *PdfField )GetContext ()PdfModel {return _edcg ._afag };func _gaage (_cagd _bgg .PdfObject )(*PdfColorspaceCalRGB ,error ){_adge :=NewPdfColorspaceCalRGB ();if _gdda ,_dgdf :=_cagd .(*_bgg .PdfIndirectObject );_dgdf {_adge ._ffafg =_gdda ;};
_cagd =_bgg .TraceToDirectObject (_cagd );_ffggd ,_ccefg :=_cagd .(*_bgg .PdfObjectArray );if !_ccefg {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _ffggd .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");
};_cagd =_bgg .TraceToDirectObject (_ffggd .Get (0));_faed ,_ccefg :=_cagd .(*_bgg .PdfObjectName );if !_ccefg {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};if *_faed !="\u0043\u0061\u006c\u0052\u0047\u0042"{return nil ,_e .Errorf ("\u006e\u006f\u0074 a\u0020\u0043\u0061\u006c\u0052\u0047\u0042\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");};_cagd =_bgg .TraceToDirectObject (_ffggd .Get (1));
_ffeca ,_ccefg :=_cagd .(*_bgg .PdfObjectDictionary );if !_ccefg {return nil ,_e .Errorf ("\u0043\u0061l\u0052\u0047\u0042\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062je\u0063\u0074");
};_cagd =_ffeca .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_cagd =_bgg .TraceToDirectObject (_cagd );_dcabe ,_ccefg :=_cagd .(*_bgg .PdfObjectArray );if !_ccefg {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050o\u0069\u006e\u0074");
};if _dcabe .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0057h\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_bab ,_bdef :=_dcabe .GetAsFloat64Slice ();
if _bdef !=nil {return nil ,_bdef ;};_adge .WhitePoint =_bab ;_cagd =_ffeca .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _cagd !=nil {_cagd =_bgg .TraceToDirectObject (_cagd );_gdag ,_gagg :=_cagd .(*_bgg .PdfObjectArray );if !_gagg {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050o\u0069\u006e\u0074");
};if _gdag .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052\u0047\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0042l\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061\u0072\u0072\u0061\u0079");};_bggab ,_adcaf :=_gdag .GetAsFloat64Slice ();
if _adcaf !=nil {return nil ,_adcaf ;};_adge .BlackPoint =_bggab ;};_cagd =_ffeca .Get ("\u0047\u0061\u006dm\u0061");if _cagd !=nil {_cagd =_bgg .TraceToDirectObject (_cagd );_bgae ,_ddagf :=_cagd .(*_bgg .PdfObjectArray );if !_ddagf {return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047B:\u0020I\u006e\u0076\u0061\u006c\u0069d\u0020\u0047\u0061\u006d\u006d\u0061");
};if _bgae .Len ()!=3{return nil ,_e .Errorf ("C\u0061\u006c\u0052\u0047\u0042\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0047a\u006d\u006d\u0061 \u0061r\u0072\u0061\u0079");};_cdeea ,_fbae :=_bgae .GetAsFloat64Slice ();if _fbae !=nil {return nil ,_fbae ;
};_adge .Gamma =_cdeea ;};_cagd =_ffeca .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");if _cagd !=nil {_cagd =_bgg .TraceToDirectObject (_cagd );_cegf ,_fcbeb :=_cagd .(*_bgg .PdfObjectArray );if !_fcbeb {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052GB\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004d\u0061\u0074\u0072i\u0078");
};if _cegf .Len ()!=9{_dcf .Log .Error ("\u004d\u0061t\u0072\u0069\u0078 \u0061\u0072\u0072\u0061\u0079\u003a\u0020\u0025\u0073",_cegf .String ());return nil ,_e .Errorf ("\u0043\u0061\u006c\u0052G\u0042\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u004da\u0074\u0072\u0069\u0078\u0020\u0061\u0072r\u0061\u0079");
};_aedcg ,_fcae :=_cegf .GetAsFloat64Slice ();if _fcae !=nil {return nil ,_fcae ;};_adge .Matrix =_aedcg ;};return _adge ,nil ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the L, A and B components of the color.
func (_fdce *PdfColorspaceLab )ColorFromPdfObjects (objects []_bgg .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggfga ,_bggb :=_bgg .GetNumbersAsFloat (objects );
if _bggb !=nil {return nil ,_bggb ;};return _fdce .ColorFromFloats (_ggfga );};func (_bfca *PdfWriter )addObjects (_ggbda _bgg .PdfObject )error {_dcf .Log .Trace ("\u0041d\u0064i\u006e\u0067\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0073\u0021");if _fffda ,_gddgc :=_ggbda .(*_bgg .PdfIndirectObject );
_gddgc {_dcf .Log .Trace ("\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074");_dcf .Log .Trace ("\u002d \u0025\u0073\u0020\u0028\u0025\u0070)",_ggbda ,_fffda );_dcf .Log .Trace ("\u002d\u0020\u0025\u0073",_fffda .PdfObject );if _bfca .addObject (_fffda ){_eccgb :=_bfca .addObjects (_fffda .PdfObject );
if _eccgb !=nil {return _eccgb ;};};return nil ;};if _efdf ,_acbea :=_ggbda .(*_bgg .PdfObjectStream );_acbea {_dcf .Log .Trace ("\u0053\u0074\u0072\u0065\u0061\u006d");_dcf .Log .Trace ("\u002d \u0025\u0073\u0020\u0025\u0070",_ggbda ,_ggbda );if _bfca .addObject (_efdf ){_ddab :=_bfca .addObjects (_efdf .PdfObjectDictionary );
if _ddab !=nil {return _ddab ;};};return nil ;};if _baaef ,_cadb :=_ggbda .(*_bgg .PdfObjectDictionary );_cadb {_dcf .Log .Trace ("\u0044\u0069\u0063\u0074");_dcf .Log .Trace ("\u002d\u0020\u0025\u0073",_ggbda );for _ ,_ffbf :=range _baaef .Keys (){_fcafce :=_baaef .Get (_ffbf );
if _fbbfcb ,_abeaf :=_fcafce .(*_bgg .PdfObjectReference );_abeaf {_fcafce =_fbbfcb .Resolve ();_baaef .Set (_ffbf ,_fcafce );};if _ffbf !="\u0050\u0061\u0072\u0065\u006e\u0074"{if _fdbbb :=_bfca .addObjects (_fcafce );_fdbbb !=nil {return _fdbbb ;};}else {if _ ,_dagbg :=_fcafce .(*_bgg .PdfObjectNull );
_dagbg {continue ;};if _dgbeb :=_bfca .hasObject (_fcafce );!_dgbeb {_dcf .Log .Debug ("P\u0061\u0072\u0065\u006e\u0074\u0020o\u0062\u006a\u0020\u006e\u006f\u0074 \u0061\u0064\u0064\u0065\u0064\u0020\u0079e\u0074\u0021\u0021\u0020\u0025\u0054\u0020\u0025\u0070\u0020%\u0076",_fcafce ,_fcafce ,_fcafce );
_bfca ._gceaa [_fcafce ]=append (_bfca ._gceaa [_fcafce ],_baaef );};};};return nil ;};if _dbeg ,_afgda :=_ggbda .(*_bgg .PdfObjectArray );_afgda {_dcf .Log .Trace ("\u0041\u0072\u0072a\u0079");_dcf .Log .Trace ("\u002d\u0020\u0025\u0073",_ggbda );if _dbeg ==nil {return _ag .New ("\u0061\u0072\u0072a\u0079\u0020\u0069\u0073\u0020\u006e\u0069\u006c");
};for _gbebe ,_cdea :=range _dbeg .Elements (){if _fggeg ,_egee :=_cdea .(*_bgg .PdfObjectReference );_egee {_cdea =_fggeg .Resolve ();_dbeg .Set (_gbebe ,_cdea );};if _bfeec :=_bfca .addObjects (_cdea );_bfeec !=nil {return _bfeec ;};};return nil ;};if _ ,_fbeea :=_ggbda .(*_bgg .PdfObjectReference );
_fbeea {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0043\u0061\u006e\u006e\u006f\u0074 \u0062\u0065\u0020\u0061\u0020\u0072e\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u002d\u0020\u0067\u006f\u0074 \u0025\u0023\u0076\u0021",_ggbda );
return _ag .New ("r\u0065\u0066\u0065\u0072en\u0063e\u0020\u006e\u006f\u0074\u0020a\u006c\u006c\u006f\u0077\u0065\u0064");};return nil ;};

// Encoder returns the font's text encoder.
func (_beec pdfFontType3 )Encoder ()_cc .TextEncoder {return _beec ._bcddf };

// AddFont adds a font dictionary to the Font resources.
func (_egfdg *PdfPage )AddFont (name _bgg .PdfObjectName ,font _bgg .PdfObject )error {if _egfdg .Resources ==nil {_egfdg .Resources =NewPdfPageResources ();};if _egfdg .Resources .Font ==nil {_egfdg .Resources .Font =_bgg .MakeDict ();};_dcaba ,_gafd :=_bgg .TraceToDirectObject (_egfdg .Resources .Font ).(*_bgg .PdfObjectDictionary );
if !_gafd {_dcf .Log .Debug ("\u0045\u0078\u0070\u0065\u0063\u0074\u0065\u0064 \u0066\u006f\u006et \u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u003a \u0025\u0076",_bgg .TraceToDirectObject (_egfdg .Resources .Font ));
return _ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_dcaba .Set (name ,font );return nil ;};

// ToPdfObject converts rectangle to a PDF object.
func (_ddffg *PdfRectangle )ToPdfObject ()_bgg .PdfObject {return _bgg .MakeArray (_bgg .MakeFloat (_ddffg .Llx ),_bgg .MakeFloat (_ddffg .Lly ),_bgg .MakeFloat (_ddffg .Urx ),_bgg .MakeFloat (_ddffg .Ury ));};

// AppendContentBytes creates a PDF stream from `cs` and appends it to the
// array of streams specified by the pages's Contents entry.
// If `wrapContents` is true, the content stream of the page is wrapped using
// a `q/Q` operator pair, so that its state does not affect the appended
// content stream.
func (_dgfdc *PdfPage )AppendContentBytes (cs []byte ,wrapContents bool )error {_bbea :=_dgfdc .GetContentStreamObjs ();wrapContents =wrapContents &&len (_bbea )> 0;_bfgf :=_bgg .NewFlateEncoder ();_aeegd :=_bgg .MakeArray ();if wrapContents {_ffada ,_cgaee :=_bgg .MakeStream ([]byte ("\u0071\u000a"),_bfgf );
if _cgaee !=nil {return _cgaee ;};_aeegd .Append (_ffada );};_aeegd .Append (_bbea ...);if wrapContents {_eeef ,_fcbfa :=_bgg .MakeStream ([]byte ("\u000a\u0051\u000a"),_bfgf );if _fcbfa !=nil {return _fcbfa ;};_aeegd .Append (_eeef );};_bcgfd ,_egcbc :=_bgg .MakeStream (cs ,_bfgf );
if _egcbc !=nil {return _egcbc ;};_aeegd .Append (_bcgfd );_dgfdc .Contents =_aeegd ;return nil ;};func (_gefa *PdfReader )newPdfAnnotationScreenFromDict (_gea *_bgg .PdfObjectDictionary )(*PdfAnnotationScreen ,error ){_aedd :=PdfAnnotationScreen {};_aedd .T =_gea .Get ("\u0054");
_aedd .MK =_gea .Get ("\u004d\u004b");_aedd .A =_gea .Get ("\u0041");_aedd .AA =_gea .Get ("\u0041\u0041");return &_aedd ,nil ;};

// NewPdfReader returns a new PdfReader for an input io.ReadSeeker interface. Can be used to read PDF from
// memory or file. Immediately loads and traverses the PDF structure including pages and page contents (if
// not encrypted). Loads entire document structure into memory.
// Alternatively a lazy-loading reader can be created with NewPdfReaderLazy which loads only references,
// and references are loaded from disk into memory on an as-needed basis.
func NewPdfReader (rs _gb .ReadSeeker )(*PdfReader ,error ){const _gbff ="\u006do\u0064e\u006c\u003a\u004e\u0065\u0077P\u0064\u0066R\u0065\u0061\u0064\u0065\u0072";return _cdffe (rs ,&ReaderOpts {},false ,_gbff );};

// NewPdfActionJavaScript returns a new "javaScript" action.
func NewPdfActionJavaScript ()*PdfActionJavaScript {_agfc :=NewPdfAction ();_fgf :=&PdfActionJavaScript {};_fgf .PdfAction =_agfc ;_agfc .SetContext (_fgf );return _fgf ;};func (_eadg *PdfColorspaceDeviceGray )String ()string {return "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079";
};

// NewPdfColorDeviceGray returns a new grayscale color based on an input grayscale float value in range [0-1].
func NewPdfColorDeviceGray (grayVal float64 )*PdfColorDeviceGray {_aecg :=PdfColorDeviceGray (grayVal );return &_aecg ;};func (_bfgfa *PdfWriter )writeOutlines ()error {if _bfgfa ._fbbc ==nil {return nil ;};_dcf .Log .Trace ("\u004f\u0075t\u006c\u0069\u006ee\u0054\u0072\u0065\u0065\u003a\u0020\u0025\u002b\u0076",_bfgfa ._fbbc );
_gafce :=_bfgfa ._fbbc .ToPdfObject ();_dcf .Log .Trace ("\u004fu\u0074\u006c\u0069\u006e\u0065\u0073\u003a\u0020\u0025\u002b\u0076 \u0028\u0025\u0054\u002c\u0020\u0070\u003a\u0025\u0070\u0029",_gafce ,_gafce ,_gafce );_bfgfa ._ffbb .Set ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073",_gafce );
_bbdcc :=_bfgfa .addObjects (_gafce );if _bbdcc !=nil {return _bbdcc ;};return nil ;};

// String returns a string that describes `font`.
func (_eagb *PdfFont )String ()string {_bcegb :="";if _eagb ._efdec .Encoder ()!=nil {_bcegb =_eagb ._efdec .Encoder ().String ();};return _e .Sprintf ("\u0046\u004f\u004e\u0054\u007b\u0025\u0054\u0020\u0025s\u0020\u0025\u0073\u007d",_eagb ._efdec ,_eagb .baseFields ().coreString (),_bcegb );
};

// NewCompositePdfFontFromTTFFile loads a composite font from a TTF font file. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTFFile.
func NewCompositePdfFontFromTTFFile (filePath string )(*PdfFont ,error ){_fgeea ,_bggg :=_eg .Open (filePath );if _bggg !=nil {_dcf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u006f\u0070\u0065\u006e\u0069\u006e\u0067\u0020\u0066\u0069\u006c\u0065\u003a\u0020\u0025\u0076",_bggg );
return nil ,_bggg ;};defer _fgeea .Close ();return NewCompositePdfFontFromTTF (_fgeea );};

// NewPdfAnnotationSquiggly returns a new text squiggly annotation.
func NewPdfAnnotationSquiggly ()*PdfAnnotationSquiggly {_bfaa :=NewPdfAnnotation ();_egd :=&PdfAnnotationSquiggly {};_egd .PdfAnnotation =_bfaa ;_egd .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_bfaa .SetContext (_egd );return _egd ;};func (_cefgba *PdfWriter )copyObject (_cbcfd _bgg .PdfObject ,_efdb map[_bgg .PdfObject ]_bgg .PdfObject ,_deffa map[_bgg .PdfObject ]struct{},_ffedc bool )_bgg .PdfObject {_bafbd :=!_cefgba ._deagf &&_deffa !=nil ;
if _fcfgg ,_acaae :=_efdb [_cbcfd ];_acaae {if _bafbd &&!_ffedc {delete (_deffa ,_cbcfd );};return _fcfgg ;};_bbdfe :=_cbcfd ;switch _cacg :=_cbcfd .(type ){case *_bgg .PdfObjectArray :_gbfbe :=_bgg .MakeArray ();_bbdfe =_gbfbe ;_efdb [_cbcfd ]=_bbdfe ;
for _ ,_babgb :=range _cacg .Elements (){_gbfbe .Append (_cefgba .copyObject (_babgb ,_efdb ,_deffa ,_ffedc ));};case *_bgg .PdfObjectStreams :_deddb :=&_bgg .PdfObjectStreams {PdfObjectReference :_cacg .PdfObjectReference };_bbdfe =_deddb ;_efdb [_cbcfd ]=_bbdfe ;
for _ ,_dcfgc :=range _cacg .Elements (){_deddb .Append (_cefgba .copyObject (_dcfgc ,_efdb ,_deffa ,_ffedc ));};case *_bgg .PdfObjectStream :_gfeeg :=&_bgg .PdfObjectStream {Stream :_cacg .Stream ,PdfObjectReference :_cacg .PdfObjectReference };_bbdfe =_gfeeg ;
_efdb [_cbcfd ]=_bbdfe ;_gfeeg .PdfObjectDictionary =_cefgba .copyObject (_cacg .PdfObjectDictionary ,_efdb ,_deffa ,_ffedc ).(*_bgg .PdfObjectDictionary );case *_bgg .PdfObjectDictionary :var _baeb bool ;if _bafbd &&!_ffedc {if _bdbe ,_ :=_bgg .GetNameVal (_cacg .Get ("\u0054\u0079\u0070\u0065"));
_bdbe =="\u0050\u0061\u0067\u0065"{_ ,_febddg :=_cefgba ._bgab [_cacg ];_ffedc =!_febddg ;_baeb =_ffedc ;};};_bccbf :=_bgg .MakeDict ();_bbdfe =_bccbf ;_efdb [_cbcfd ]=_bbdfe ;for _ ,_gacgcg :=range _cacg .Keys (){_bccbf .Set (_gacgcg ,_cefgba .copyObject (_cacg .Get (_gacgcg ),_efdb ,_deffa ,_ffedc ));
};if _baeb {_bbdfe =_bgg .MakeNull ();_ffedc =false ;};case *_bgg .PdfIndirectObject :_gaaea :=&_bgg .PdfIndirectObject {PdfObjectReference :_cacg .PdfObjectReference };_bbdfe =_gaaea ;_efdb [_cbcfd ]=_bbdfe ;_gaaea .PdfObject =_cefgba .copyObject (_cacg .PdfObject ,_efdb ,_deffa ,_ffedc );
case *_bgg .PdfObjectString :_dfcbg :=*_cacg ;_bbdfe =&_dfcbg ;_efdb [_cbcfd ]=_bbdfe ;case *_bgg .PdfObjectName :_eeafd :=*_cacg ;_bbdfe =&_eeafd ;_efdb [_cbcfd ]=_bbdfe ;case *_bgg .PdfObjectNull :_bbdfe =_bgg .MakeNull ();_efdb [_cbcfd ]=_bbdfe ;case *_bgg .PdfObjectInteger :_dgcfe :=*_cacg ;
_bbdfe =&_dgcfe ;_efdb [_cbcfd ]=_bbdfe ;case *_bgg .PdfObjectReference :_gffbc :=*_cacg ;_bbdfe =&_gffbc ;_efdb [_cbcfd ]=_bbdfe ;case *_bgg .PdfObjectFloat :_debcc :=*_cacg ;_bbdfe =&_debcc ;_efdb [_cbcfd ]=_bbdfe ;case *_bgg .PdfObjectBool :_cadfee :=*_cacg ;
_bbdfe =&_cadfee ;_efdb [_cbcfd ]=_bbdfe ;case *pdfSignDictionary :_bfefd :=&pdfSignDictionary {PdfObjectDictionary :_bgg .MakeDict (),_agedfb :_cacg ._agedfb ,_dgdfb :_cacg ._dgdfb };_bbdfe =_bfefd ;_efdb [_cbcfd ]=_bbdfe ;for _ ,_geabb :=range _cacg .Keys (){_bfefd .Set (_geabb ,_cefgba .copyObject (_cacg .Get (_geabb ),_efdb ,_deffa ,_ffedc ));
};default:_dcf .Log .Info ("\u0054\u004f\u0044\u004f\u0028\u0061\u0035\u0069\u0029\u003a\u0020\u0069\u006dp\u006c\u0065\u006d\u0065\u006e\u0074 \u0063\u006f\u0070\u0079\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0066\u006fr\u0020\u0025\u002b\u0076",_cbcfd );
};if _bafbd &&_ffedc {_deffa [_cbcfd ]=struct{}{};};return _bbdfe ;};func _dbea (_addf *_bgg .PdfObjectDictionary )(*PdfFieldButton ,error ){_acee :=&PdfFieldButton {};_acee .PdfField =NewPdfField ();_acee .PdfField .SetContext (_acee );_acee .Opt ,_ =_bgg .GetArray (_addf .Get ("\u004f\u0070\u0074"));
_fggg :=NewPdfAnnotationWidget ();_fggg .A ,_ =_bgg .GetDict (_addf .Get ("\u0041"));_fggg .AP ,_ =_bgg .GetDict (_addf .Get ("\u0041\u0050"));_fggg .SetContext (_acee );_acee .PdfField .Annotations =append (_acee .PdfField .Annotations ,_fggg );return _acee ,nil ;
};

// ToPdfObject converts date to a PDF string object.
func (_aefcc *PdfDate )ToPdfObject ()_bgg .PdfObject {_dfcad :=_e .Sprintf ("\u0044\u003a\u0025\u002e\u0034\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e\u0032\u0064\u0025\u002e2\u0064\u0025\u0063\u0025\u002e2\u0064\u0027%\u002e\u0032\u0064\u0027",_aefcc ._efgaf ,_aefcc ._dbbdb ,_aefcc ._aeafb ,_aefcc ._bcfac ,_aefcc ._aacdg ,_aefcc ._ebbae ,_aefcc ._eefc ,_aefcc ._geeab ,_aefcc ._cegbf );
return _bgg .MakeString (_dfcad );};

// NewCompliancePdfReader creates a PdfReader or an input io.ReadSeeker that during reading will scan the files for the
// metadata details. It could be used for the PDF standard implementations like PDF/A or PDF/X.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
func NewCompliancePdfReader (rs _gb .ReadSeeker )(*CompliancePdfReader ,error ){const _dacgd ="\u006d\u006f\u0064\u0065l\u003a\u004e\u0065\u0077\u0043\u006f\u006d\u0070\u006c\u0069a\u006ec\u0065\u0050\u0064\u0066\u0052\u0065\u0061d\u0065\u0072";_fgdfg ,_cfce :=_cdffe (rs ,&ReaderOpts {ComplianceMode :true },false ,_dacgd );
if _cfce !=nil {return nil ,_cfce ;};return &CompliancePdfReader {PdfReader :_fgdfg },nil ;};

// HasXObjectByName checks if an XObject with a specified keyName is defined.
func (_afffc *PdfPageResources )HasXObjectByName (keyName _bgg .PdfObjectName )bool {_eagac ,_ :=_afffc .GetXObjectByName (keyName );return _eagac !=nil ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_cdbcf pdfFontType3 )GetRuneMetrics (r rune )(_dad .CharMetrics ,bool ){_gade :=_cdbcf .Encoder ();if _gade ==nil {_dcf .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_cdbcf );
return _dad .CharMetrics {},false ;};_ebcca ,_cdgaf :=_gade .RuneToCharcode (r );if !_cdgaf {if r !=' '{_dcf .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_cdbcf );
};return _dad .CharMetrics {},false ;};_gdgc ,_bbbc :=_cdbcf .GetCharMetrics (_ebcca );return _gdgc ,_bbbc ;};

// ToPdfObject returns the text field dictionary within an indirect object (container).
func (_cacf *PdfFieldText )ToPdfObject ()_bgg .PdfObject {_cacf .PdfField .ToPdfObject ();_eegad :=_cacf ._fagb ;_eefd :=_eegad .PdfObject .(*_bgg .PdfObjectDictionary );_eefd .Set ("\u0046\u0054",_bgg .MakeName ("\u0054\u0078"));if _cacf .DA !=nil {_eefd .Set ("\u0044\u0041",_cacf .DA );
};if _cacf .Q !=nil {_eefd .Set ("\u0051",_cacf .Q );};if _cacf .DS !=nil {_eefd .Set ("\u0044\u0053",_cacf .DS );};if _cacf .RV !=nil {_eefd .Set ("\u0052\u0056",_cacf .RV );};if _cacf .MaxLen !=nil {_eefd .Set ("\u004d\u0061\u0078\u004c\u0065\u006e",_cacf .MaxLen );
};return _eegad ;};

// GetTrailer returns the PDF's trailer dictionary.
func (_fgae *PdfReader )GetTrailer ()(*_bgg .PdfObjectDictionary ,error ){_eeefe :=_fgae ._ebdgc .GetTrailer ();if _eeefe ==nil {return nil ,_ag .New ("\u0074r\u0061i\u006c\u0065\u0072\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};return _eeefe ,nil ;
};func (_becdf *DSS )generateHashMaps ()error {_afdgg ,_acgd :=_becdf .generateHashMap (_becdf .Certs );if _acgd !=nil {return _acgd ;};_acda ,_acgd :=_becdf .generateHashMap (_becdf .OCSPs );if _acgd !=nil {return _acgd ;};_eadeb ,_acgd :=_becdf .generateHashMap (_becdf .CRLs );
if _acgd !=nil {return _acgd ;};_becdf ._dbfe =_afdgg ;_becdf ._cbeb =_acda ;_becdf ._dcgge =_eadeb ;return nil ;};

// GetAscent returns the Ascent of the font `descriptor`.
func (_aeced *PdfFontDescriptor )GetAscent ()(float64 ,error ){return _bgg .GetNumberAsFloat (_aeced .Ascent );};

// SetPdfSubject sets the Subject attribute of the output PDF.
func SetPdfSubject (subject string ){_abfga .Lock ();defer _abfga .Unlock ();_edafc =subject };const (RC4_128bit =EncryptionAlgorithm (iota );AES_128bit ;AES_256bit ;);

// IsShading specifies if the pattern is a shading pattern.
func (_acada *PdfPattern )IsShading ()bool {return _acada .PatternType ==2};

// PdfAnnotationMarkup represents additional fields for mark-up annotations.
// (Section 12.5.6.2 p. 399).
type PdfAnnotationMarkup struct{T _bgg .PdfObject ;Popup *PdfAnnotationPopup ;CA _bgg .PdfObject ;RC _bgg .PdfObject ;CreationDate _bgg .PdfObject ;IRT _bgg .PdfObject ;Subj _bgg .PdfObject ;RT _bgg .PdfObject ;IT _bgg .PdfObject ;ExData _bgg .PdfObject ;
};

// IsColored specifies if the pattern is colored.
func (_efgf *PdfTilingPattern )IsColored ()bool {if _efgf .PaintType !=nil &&*_efgf .PaintType ==1{return true ;};return false ;};func (_adf *PdfReader )newPdfAnnotationLinkFromDict (_bffg *_bgg .PdfObjectDictionary )(*PdfAnnotationLink ,error ){_efa :=PdfAnnotationLink {};
_efa .A =_bffg .Get ("\u0041");_efa .Dest =_bffg .Get ("\u0044\u0065\u0073\u0074");_efa .H =_bffg .Get ("\u0048");_efa .PA =_bffg .Get ("\u0050\u0041");_efa .QuadPoints =_bffg .Get ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073");_efa .BS =_bffg .Get ("\u0042\u0053");
return &_efa ,nil ;};

// ImageToRGB converts Lab colorspace image to RGB and returns the result.
func (_fdff *PdfColorspaceLab )ImageToRGB (img Image )(Image ,error ){_edba :=func (_aaaf float64 )float64 {if _aaaf >=6.0/29{return _aaaf *_aaaf *_aaaf ;};return 108.0/841*(_aaaf -4/29);};_gcbff :=img ._ddaa ;if len (_gcbff )!=6{_dcf .Log .Trace ("\u0049\u006d\u0061\u0067\u0065\u0020\u002d\u0020\u004c\u0061\u0062\u0020\u0044e\u0063\u006f\u0064\u0065\u0020\u0072\u0061\u006e\u0067e\u0020\u0021\u003d\u0020\u0036\u002e\u002e\u002e\u0020\u0075\u0073\u0065\u0020\u005b0\u0020\u0031\u0030\u0030\u0020\u0061\u006d\u0069\u006e\u0020\u0061\u006d\u0061\u0078\u0020\u0062\u006d\u0069\u006e\u0020\u0062\u006d\u0061\u0078\u005d\u0020\u0064\u0065\u0066\u0061u\u006c\u0074\u0020\u0064\u0065\u0063\u006f\u0064\u0065 \u0061\u0072r\u0061\u0079");
_gcbff =_fdff .DecodeArray ();};_eceg :=_ceg .NewReader (img .getBase ());_aagc :=_dcg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,img ._bfcec ,img ._ddaa );_fgde :=_ceg .NewWriter (_aagc );_cbbc :=_db .Pow (2,float64 (img .BitsPerComponent ))-1;
_bggaa :=make ([]uint32 ,3);var (_dgdce error ;Ls ,As ,Bs ,L ,M ,N ,X ,Y ,Z ,_dffg ,_fbcbc ,_ddec float64 ;);for {_dgdce =_eceg .ReadSamples (_bggaa );if _dgdce ==_gb .EOF {break ;}else if _dgdce !=nil {return img ,_dgdce ;};Ls =float64 (_bggaa [0])/_cbbc ;
As =float64 (_bggaa [1])/_cbbc ;Bs =float64 (_bggaa [2])/_cbbc ;Ls =_dcg .LinearInterpolate (Ls ,0.0,1.0,_gcbff [0],_gcbff [1]);As =_dcg .LinearInterpolate (As ,0.0,1.0,_gcbff [2],_gcbff [3]);Bs =_dcg .LinearInterpolate (Bs ,0.0,1.0,_gcbff [4],_gcbff [5]);
L =(Ls +16)/116+As /500;M =(Ls +16)/116;N =(Ls +16)/116-Bs /200;X =_fdff .WhitePoint [0]*_edba (L );Y =_fdff .WhitePoint [1]*_edba (M );Z =_fdff .WhitePoint [2]*_edba (N );_dffg =3.240479*X +-1.537150*Y +-0.498535*Z ;_fbcbc =-0.969256*X +1.875992*Y +0.041556*Z ;
_ddec =0.055648*X +-0.204043*Y +1.057311*Z ;_dffg =_db .Min (_db .Max (_dffg ,0),1.0);_fbcbc =_db .Min (_db .Max (_fbcbc ,0),1.0);_ddec =_db .Min (_db .Max (_ddec ,0),1.0);_bggaa [0]=uint32 (_dffg *_cbbc );_bggaa [1]=uint32 (_fbcbc *_cbbc );_bggaa [2]=uint32 (_ddec *_cbbc );
if _dgdce =_fgde .WriteSamples (_bggaa );_dgdce !=nil {return img ,_dgdce ;};};return _ddccc (&_aagc ),nil ;};func (_dca *PdfReader )newPdfActionHideFromDict (_eaff *_bgg .PdfObjectDictionary )(*PdfActionHide ,error ){return &PdfActionHide {T :_eaff .Get ("\u0054"),H :_eaff .Get ("\u0048")},nil ;
};func (_ddef *pdfCIDFontType0 )baseFields ()*fontCommon {return &_ddef .fontCommon };

// BytesToCharcodes converts the bytes in a PDF string to character codes.
func (_edac *PdfFont )BytesToCharcodes (data []byte )[]_cc .CharCode {_dcf .Log .Trace ("\u0042\u0079\u0074es\u0054\u006f\u0043\u0068\u0061\u0072\u0063\u006f\u0064e\u0073:\u0020d\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d\u003d\u0025\u0023\u0071",data ,data );
if _ggedb ,_ggdeg :=_edac ._efdec .(*pdfFontType0 );_ggdeg &&_ggedb ._gdcdb !=nil {if _cdda ,_fgdce :=_ggedb .bytesToCharcodes (data );_fgdce {return _cdda ;};};var (_ddga =make ([]_cc .CharCode ,0,len (data )+len (data )%2);_ggegg =_edac .baseFields ();
);if _ggegg ._ffed !=nil {if _gcaac ,_cbcc :=_ggegg ._ffed .BytesToCharcodes (data );_cbcc {for _ ,_cdeed :=range _gcaac {_ddga =append (_ddga ,_cc .CharCode (_cdeed ));};return _ddga ;};};if _ggegg .isCIDFont (){if len (data )==1{data =[]byte {0,data [0]};
};if len (data )%2!=0{_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0064\u0064\u0069\u006e\u0067\u0020\u0064\u0061\u0074\u0061\u003d\u0025\u002b\u0076\u0020t\u006f\u0020\u0065\u0076\u0065n\u0020\u006ce\u006e\u0067\u0074\u0068",data );
data =append (data ,0);};for _fdef :=0;_fdef < len (data );_fdef +=2{_caecf :=uint16 (data [_fdef ])<<8|uint16 (data [_fdef +1]);_ddga =append (_ddga ,_cc .CharCode (_caecf ));};}else {for _ ,_eegd :=range data {_ddga =append (_ddga ,_cc .CharCode (_eegd ));
};};return _ddga ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a CalGray device.
func (_bfee *PdfColorspaceCalGray )GetNumComponents ()int {return 1};

// GenerateXObjectName generates an unused XObject name that can be used for
// adding new XObjects. Uses format XObj1, XObj2, ...
func (_bcgfe *PdfPageResources )GenerateXObjectName ()_bgg .PdfObjectName {_geged :=1;for {_bbgb :=_bgg .MakeName (_e .Sprintf ("\u0058\u004f\u0062\u006a\u0025\u0064",_geged ));if !_bcgfe .HasXObjectByName (*_bbgb ){return *_bbgb ;};_geged ++;};};var (CourierName =_dad .CourierName ;
CourierBoldName =_dad .CourierBoldName ;CourierObliqueName =_dad .CourierObliqueName ;CourierBoldObliqueName =_dad .CourierBoldObliqueName ;HelveticaName =_dad .HelveticaName ;HelveticaBoldName =_dad .HelveticaBoldName ;HelveticaObliqueName =_dad .HelveticaObliqueName ;
HelveticaBoldObliqueName =_dad .HelveticaBoldObliqueName ;SymbolName =_dad .SymbolName ;ZapfDingbatsName =_dad .ZapfDingbatsName ;TimesRomanName =_dad .TimesRomanName ;TimesBoldName =_dad .TimesBoldName ;TimesItalicName =_dad .TimesItalicName ;TimesBoldItalicName =_dad .TimesBoldItalicName ;
);

// SetImageHandler sets the image handler used by the package.
func SetImageHandler (imgHandling ImageHandler ){ImageHandling =imgHandling };

// PdfColor interface represents a generic color in PDF.
type PdfColor interface{};

// PdfOutline represents a PDF outline dictionary (Table 152 - p. 376).
type PdfOutline struct{PdfOutlineTreeNode ;Parent *PdfOutlineTreeNode ;Count *int64 ;_aeag *_bgg .PdfIndirectObject ;};

// PdfAnnotationTrapNet represents TrapNet annotations.
// (Section 12.5.6.21).
type PdfAnnotationTrapNet struct{*PdfAnnotation };

// NewPdfWriter initializes a new PdfWriter.
func NewPdfWriter ()PdfWriter {_abdce :=PdfWriter {};_abdce ._gbfd =map[_bgg .PdfObject ]struct{}{};_abdce ._eddge =[]_bgg .PdfObject {};_abdce ._gceaa =map[_bgg .PdfObject ][]*_bgg .PdfObjectDictionary {};_abdce ._bgfcc =map[_bgg .PdfObject ]struct{}{};
_abdce ._ffgff .Major =1;_abdce ._ffgff .Minor =3;_fbbfc :=_bgg .MakeDict ();_fadfa :=[]struct{_dcefd _bgg .PdfObjectName ;_decff string ;}{{"\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_cccg ()},{"\u0043r\u0065\u0061\u0074\u006f\u0072",_eegde ()},{"\u0041\u0075\u0074\u0068\u006f\u0072",_acefeg ()},{"\u0053u\u0062\u006a\u0065\u0063\u0074",_abff ()},{"\u0054\u0069\u0074l\u0065",_abfdc ()},{"\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_eebgf ()}};
for _ ,_ddeaef :=range _fadfa {if _ddeaef ._decff !=""{_fbbfc .Set (_ddeaef ._dcefd ,_bgg .MakeString (_ddeaef ._decff ));};};if _dcabd :=_gdbgd ();!_dcabd .IsZero (){if _ecafe ,_dccbga :=NewPdfDateFromTime (_dcabd );_dccbga ==nil {_fbbfc .Set ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_ecafe .ToPdfObject ());
};};if _dfaca :=_dfgda ();!_dfaca .IsZero (){if _cdfgc ,_abbge :=NewPdfDateFromTime (_dfaca );_abbge ==nil {_fbbfc .Set ("\u004do\u0064\u0044\u0061\u0074\u0065",_cdfgc .ToPdfObject ());};};_degb :=_bgg .PdfIndirectObject {};_degb .PdfObject =_fbbfc ;_abdce ._eeged =&_degb ;
_abdce .addObject (&_degb );_acddb :=_bgg .PdfIndirectObject {};_cadec :=_bgg .MakeDict ();_cadec .Set ("\u0054\u0079\u0070\u0065",_bgg .MakeName ("\u0043a\u0074\u0061\u006c\u006f\u0067"));_acddb .PdfObject =_cadec ;_abdce ._bceaa =&_acddb ;_abdce .addObject (_abdce ._bceaa );
_ecdg ,_afcef :=_fdbe ("\u0077");if _afcef !=nil {_dcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afcef );};_abdce ._dffcg =_ecdg ;_cgcga :=_bgg .PdfIndirectObject {};_faeed :=_bgg .MakeDict ();_faeed .Set ("\u0054\u0079\u0070\u0065",_bgg .MakeName ("\u0050\u0061\u0067e\u0073"));
_dddd :=_bgg .PdfObjectArray {};_faeed .Set ("\u004b\u0069\u0064\u0073",&_dddd );_faeed .Set ("\u0043\u006f\u0075n\u0074",_bgg .MakeInteger (0));_cgcga .PdfObject =_faeed ;_abdce ._deeaf =&_cgcga ;_abdce ._bgab =map[_bgg .PdfObject ]struct{}{};_abdce .addObject (_abdce ._deeaf );
_cadec .Set ("\u0050\u0061\u0067e\u0073",&_cgcga );_abdce ._ffbb =_cadec ;_dcf .Log .Trace ("\u0043\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0025\u0073",_acddb );return _abdce ;};

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
func (_ddgg *PdfColorspaceDeviceN )ImageToRGB (img Image )(Image ,error ){_bccf :=_ceg .NewReader (img .getBase ());_efab :=_dcg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,nil ,img ._bfcec ,img ._ddaa );
_dagg :=_ceg .NewWriter (_efab );_fbccd :=_db .Pow (2,float64 (img .BitsPerComponent ))-1;_efbcg :=_ddgg .GetNumComponents ();_agadf :=make ([]uint32 ,_efbcg );_bfba :=make ([]float64 ,_efbcg );for {_ccdf :=_bccf .ReadSamples (_agadf );if _ccdf ==_gb .EOF {break ;
}else if _ccdf !=nil {return img ,_ccdf ;};for _caeee :=0;_caeee < _efbcg ;_caeee ++{_dbbdf :=float64 (_agadf [_caeee ])/_fbccd ;_bfba [_caeee ]=_dbbdf ;};_ggef ,_ccdf :=_ddgg .TintTransform .Evaluate (_bfba );if _ccdf !=nil {return img ,_ccdf ;};for _ ,_agff :=range _ggef {_agff =_db .Min (_db .Max (0,_agff ),1.0);
if _ccdf =_dagg .WriteSample (uint32 (_agff *_fbccd ));_ccdf !=nil {return img ,_ccdf ;};};};return _ddgg .AlternateSpace .ImageToRGB (_ddccc (&_efab ));};

// PdfActionResetForm represents a resetForm action.
type PdfActionResetForm struct{*PdfAction ;Fields _bgg .PdfObject ;Flags _bgg .PdfObject ;};func (_fcgddb *PdfWriter )seekByName (_bbgfb _bgg .PdfObject ,_ceagbe []string ,_ccbcc string )([]_bgg .PdfObject ,error ){_dcf .Log .Trace ("\u0053\u0065\u0065\u006b\u0020\u0062\u0079\u0020\u006e\u0061\u006d\u0065.\u002e\u0020\u0025\u0054",_bbgfb );
var _gdacg []_bgg .PdfObject ;if _cdce ,_aegcd :=_bbgfb .(*_bgg .PdfIndirectObject );_aegcd {return _fcgddb .seekByName (_cdce .PdfObject ,_ceagbe ,_ccbcc );};if _eaagd ,_dbede :=_bbgfb .(*_bgg .PdfObjectStream );_dbede {return _fcgddb .seekByName (_eaagd .PdfObjectDictionary ,_ceagbe ,_ccbcc );
};if _ecgcc ,_aecag :=_bbgfb .(*_bgg .PdfObjectDictionary );_aecag {_dcf .Log .Trace ("\u0044\u0069\u0063\u0074");for _ ,_edefbe :=range _ecgcc .Keys (){_ggabg :=_ecgcc .Get (_edefbe );if string (_edefbe )==_ccbcc {_gdacg =append (_gdacg ,_ggabg );};for _ ,_bcdc :=range _ceagbe {if string (_edefbe )==_bcdc {_dcf .Log .Trace ("\u0046\u006f\u006c\u006c\u006f\u0077\u0020\u006b\u0065\u0079\u0020\u0025\u0073",_bcdc );
_aaebb ,_bfga :=_fcgddb .seekByName (_ggabg ,_ceagbe ,_ccbcc );if _bfga !=nil {return _gdacg ,_bfga ;};_gdacg =append (_gdacg ,_aaebb ...);break ;};};};return _gdacg ,nil ;};return _gdacg ,nil ;};

// Hasher is the interface that wraps the basic Write method.
type Hasher interface{Write (_ffedf []byte )(_cgafaa int ,_ddgea error );};func _efef (_ddbgac _bgg .PdfObject ,_egda *fontCommon )(*_fbb .CMap ,error ){_dgbe ,_bbagg :=_bgg .GetStream (_ddbgac );if !_bbagg {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0074\u006f\u0055\u006e\u0069\u0063\u006f\u0064\u0065\u0054\u006f\u0043m\u0061\u0070\u003a\u0020\u004e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0028\u0025\u0054\u0029",_ddbgac );
return nil ,_bgg .ErrTypeError ;};_efdd ,_egdc :=_bgg .DecodeStream (_dgbe );if _egdc !=nil {return nil ,_egdc ;};_ddcf ,_egdc :=_fbb .LoadCmapFromData (_efdd ,!_egda .isCIDFont ());if _egdc !=nil {_dcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004f\u0062\u006a\u0065\u0063\u0074\u004e\u0075\u006d\u0062\u0065\u0072\u003d\u0025\u0064\u0020\u0065\u0072r=\u0025\u0076",_dgbe .ObjectNumber ,_egdc );
};return _ddcf ,_egdc ;};

// AddContentStreamByString adds content stream by string. Puts the content
// string into a stream object and points the content stream towards it.
func (_eaeeg *PdfPage )AddContentStreamByString (contentStr string )error {_dfdeg ,_bddeb :=_bgg .MakeStream ([]byte (contentStr ),_bgg .NewFlateEncoder ());if _bddeb !=nil {return _bddeb ;};if _eaeeg .Contents ==nil {_eaeeg .Contents =_dfdeg ;}else {_efggf :=_bgg .TraceToDirectObject (_eaeeg .Contents );
_decgcg ,_bbfdc :=_efggf .(*_bgg .PdfObjectArray );if !_bbfdc {_decgcg =_bgg .MakeArray (_efggf );};_decgcg .Append (_dfdeg );_eaeeg .Contents =_decgcg ;};return nil ;};

// ImageToRGB converts an image in CMYK32 colorspace to an RGB image.
func (_eddd *PdfColorspaceDeviceCMYK )ImageToRGB (img Image )(Image ,error ){_dcf .Log .Trace ("\u0043\u004d\u0059\u004b\u0033\u0032\u0020\u002d\u003e\u0020\u0052\u0047\u0042");_dcf .Log .Trace ("I\u006d\u0061\u0067\u0065\u0020\u0042P\u0043\u003a\u0020\u0025\u0064\u002c \u0043\u006f\u006c\u006f\u0072\u0020\u0063o\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020%\u0064",img .BitsPerComponent ,img .ColorComponents );
_dcf .Log .Trace ("\u004c\u0065\u006e \u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0064",len (img .Data ));_dcf .Log .Trace ("H\u0065\u0069\u0067\u0068t:\u0020%\u0064\u002c\u0020\u0057\u0069d\u0074\u0068\u003a\u0020\u0025\u0064",img .Height ,img .Width );
_fbcc ,_adee :=_dcg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._bfcec ,img ._ddaa );if _adee !=nil {return Image {},_adee ;};_daeb ,_adee :=_dcg .NRGBAConverter .Convert (_fbcc );if _adee !=nil {return Image {},_adee ;
};return _ddccc (_daeb .Base ()),nil ;};func _gdgfd (_gcca _bgg .PdfObject )(*PdfFunctionType3 ,error ){_afde :=&PdfFunctionType3 {};var _bcbb *_bgg .PdfObjectDictionary ;if _cbbce ,_cccefb :=_gcca .(*_bgg .PdfIndirectObject );_cccefb {_dafga ,_ddgdc :=_cbbce .PdfObject .(*_bgg .PdfObjectDictionary );
if !_ddgdc {return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};_afde ._cagde =_cbbce ;_bcbb =_dafga ;}else if _fbcf ,_aagg :=_gcca .(*_bgg .PdfObjectDictionary );_aagg {_bcbb =_fbcf ;}else {return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_aafef ,_baafd :=_bgg .TraceToDirectObject (_bcbb .Get ("\u0044\u006f\u006d\u0061\u0069\u006e")).(*_bgg .PdfObjectArray );if !_baafd {_dcf .Log .Error ("D\u006fm\u0061\u0069\u006e\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};if _aafef .Len ()!=2{_dcf .Log .Error ("\u0044\u006f\u006d\u0061\u0069\u006e\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
return nil ,_ag .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0064\u006f\u006da\u0069\u006e\u0020\u0072an\u0067\u0065");};_aebde ,_fddcb :=_aafef .ToFloat64Array ();if _fddcb !=nil {return nil ,_fddcb ;};_afde .Domain =_aebde ;_aafef ,_baafd =_bgg .TraceToDirectObject (_bcbb .Get ("\u0052\u0061\u006eg\u0065")).(*_bgg .PdfObjectArray );
if _baafd {if _aafef .Len ()< 0||_aafef .Len ()%2!=0{return nil ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065");};_fbce ,_efeef :=_aafef .ToFloat64Array ();if _efeef !=nil {return nil ,_efeef ;};_afde .Range =_fbce ;
};_aafef ,_baafd =_bgg .TraceToDirectObject (_bcbb .Get ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006es")).(*_bgg .PdfObjectArray );if !_baafd {_dcf .Log .Error ("\u0046\u0075\u006ect\u0069\u006f\u006e\u0073\u0020\u006e\u006f\u0074\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064");
return nil ,_ag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_afde .Functions =[]PdfFunction {};
for _ ,_ccffg :=range _aafef .Elements (){_gdead ,_dcgb :=_aefac (_ccffg );if _dcgb !=nil {return nil ,_dcgb ;};_afde .Functions =append (_afde .Functions ,_gdead );};_aafef ,_baafd =_bgg .TraceToDirectObject (_bcbb .Get ("\u0042\u006f\u0075\u006e\u0064\u0073")).(*_bgg .PdfObjectArray );
if !_baafd {_dcf .Log .Error ("B\u006fu\u006e\u0064\u0073\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");return nil ,_ag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};_addae ,_fddcb :=_aafef .ToFloat64Array ();if _fddcb !=nil {return nil ,_fddcb ;};_afde .Bounds =_addae ;if len (_afde .Bounds )!=len (_afde .Functions )-1{_dcf .Log .Error ("B\u006f\u0075\u006e\u0064\u0073\u0020\u0028\u0025\u0064)\u0020\u0061\u006e\u0064\u0020\u006e\u0075m \u0066\u0075\u006e\u0063t\u0069\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029 n\u006f\u0074 \u006d\u0061\u0074\u0063\u0068\u0069\u006e\u0067",len (_afde .Bounds ),len (_afde .Functions ));
return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_aafef ,_baafd =_bgg .TraceToDirectObject (_bcbb .Get ("\u0045\u006e\u0063\u006f\u0064\u0065")).(*_bgg .PdfObjectArray );if !_baafd {_dcf .Log .Error ("E\u006ec\u006f\u0064\u0065\u0020\u006e\u006f\u0074\u0020s\u0070\u0065\u0063\u0069fi\u0065\u0064");
return nil ,_ag .New ("\u0072\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u006f\u0072\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");};_dfdbf ,_fddcb :=_aafef .ToFloat64Array ();
if _fddcb !=nil {return nil ,_fddcb ;};_afde .Encode =_dfdbf ;if len (_afde .Encode )!=2*len (_afde .Functions ){_dcf .Log .Error ("\u004c\u0065\u006e\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0020\u0028\u0025\u0064\u0029 \u0061\u006e\u0064\u0020\u006e\u0075\u006d\u0020\u0066\u0075\u006e\u0063\u0074i\u006f\u006e\u0073\u0020\u0028\u0025\u0064\u0029\u0020\u006e\u006f\u0074 m\u0061\u0074\u0063\u0068\u0069\u006e\u0067\u0020\u0075\u0070",len (_afde .Encode ),len (_afde .Functions ));
return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};return _afde ,nil ;};

// NewPdfAnnotationText returns a new text annotation.
func NewPdfAnnotationText ()*PdfAnnotationText {_eca :=NewPdfAnnotation ();_abb :=&PdfAnnotationText {};_abb .PdfAnnotation =_eca ;_abb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_eca .SetContext (_abb );return _abb ;};

// PdfColorspaceSpecialPattern is a Pattern colorspace.
// Can be defined either as /Pattern or with an underlying colorspace [/Pattern cs].
type PdfColorspaceSpecialPattern struct{UnderlyingCS PdfColorspace ;_gfdg *_bgg .PdfIndirectObject ;};

// GetCerts returns the signature certificate chain.
func (_cacbc *PdfSignature )GetCerts ()([]*_dd .Certificate ,error ){var _gfcd []func ()([]*_dd .Certificate ,error );switch _ebfef ,_ :=_bgg .GetNameVal (_cacbc .SubFilter );_ebfef {case "\u0061\u0064\u0062\u0065.p\u006b\u0063\u0073\u0037\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064","\u0045\u0054\u0053\u0049.C\u0041\u0064\u0045\u0053\u002e\u0064\u0065\u0074\u0061\u0063\u0068\u0065\u0064":_gfcd =append (_gfcd ,_cacbc .extractChainFromPKCS7 ,_cacbc .extractChainFromCert );
case "\u0061d\u0062e\u002e\u0078\u0035\u0030\u0039.\u0072\u0073a\u005f\u0073\u0068\u0061\u0031":_gfcd =append (_gfcd ,_cacbc .extractChainFromCert );case "\u0045\u0054\u0053I\u002e\u0052\u0046\u0043\u0033\u0031\u0036\u0031":_gfcd =append (_gfcd ,_cacbc .extractChainFromPKCS7 );
default:return nil ,_e .Errorf ("\u0075n\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020S\u0075b\u0046i\u006c\u0074\u0065\u0072\u003a\u0020\u0025s",_ebfef );};for _ ,_ccedf :=range _gfcd {_abfeb ,_bfacb :=_ccedf ();if _bfacb !=nil {return nil ,_bfacb ;
};if len (_abfeb )> 0{return _abfeb ,nil ;};};return nil ,ErrSignNoCertificates ;};

// GetNumComponents returns the number of color components (1 for CalGray).
func (_gbd *PdfColorCalGray )GetNumComponents ()int {return 1};

// StandardApplier is the interface that performs optimization of the whole PDF document.
// As a result an input document is being changed by the optimizer.
// The writer than takes back all it's parts and overwrites it.
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardApplier interface{ApplyStandard (_dgfda *_cg .Document )error ;};

// A PdfPattern can represent a Pattern, either a tiling pattern or a shading pattern.
// Note that all patterns shall be treated as colours; a Pattern colour space shall be established with the CS or cs
// operator just like other colour spaces, and a particular pattern shall be installed as the current colour with the
// SCN or scn operator.
type PdfPattern struct{

// Type: Pattern
PatternType int64 ;_dcdgae PdfModel ;_aebfe _bgg .PdfObject ;};

// BaseFont returns the font's "BaseFont" field.
func (_gface *PdfFont )BaseFont ()string {return _gface .baseFields ()._dbbc };

// ToPdfObject implements interface PdfModel.
func (_agfb *PdfAnnotationSquare )ToPdfObject ()_bgg .PdfObject {_agfb .PdfAnnotation .ToPdfObject ();_ggeg :=_agfb ._gec ;_dce :=_ggeg .PdfObject .(*_bgg .PdfObjectDictionary );if _agfb .PdfAnnotationMarkup !=nil {_agfb .PdfAnnotationMarkup .appendToPdfDictionary (_dce );
};_dce .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0053\u0071\u0075\u0061\u0072\u0065"));_dce .SetIfNotNil ("\u0042\u0053",_agfb .BS );_dce .SetIfNotNil ("\u0049\u0043",_agfb .IC );_dce .SetIfNotNil ("\u0042\u0045",_agfb .BE );
_dce .SetIfNotNil ("\u0052\u0044",_agfb .RD );return _ggeg ;};

// PdfShading represents a shading dictionary. There are 7 types of shading,
// indicatedby the shading type variable:
// 1: Function-based shading.
// 2: Axial shading.
// 3: Radial shading.
// 4: Free-form Gouraud-shaded triangle mesh.
// 5: Lattice-form Gouraud-shaded triangle mesh.
// 6: Coons patch mesh.
// 7: Tensor-product patch mesh.
// types 4-7 are contained in a stream object, where the dictionary is given by the stream dictionary.
type PdfShading struct{ShadingType *_bgg .PdfObjectInteger ;ColorSpace PdfColorspace ;Background *_bgg .PdfObjectArray ;BBox *PdfRectangle ;AntiAlias *_bgg .PdfObjectBool ;_efbed PdfModel ;_fcfbb _bgg .PdfObject ;};

// SetPatternByName sets a pattern resource specified by keyName.
func (_ffgef *PdfPageResources )SetPatternByName (keyName _bgg .PdfObjectName ,pattern _bgg .PdfObject )error {if _ffgef .Pattern ==nil {_ffgef .Pattern =_bgg .MakeDict ();};_gdfce ,_fgec :=_ffgef .Pattern .(*_bgg .PdfObjectDictionary );if !_fgec {return _bgg .ErrTypeError ;
};_gdfce .Set (keyName ,pattern );return nil ;};

// SetContext sets the sub action (context).
func (_efb *PdfAction )SetContext (ctx PdfModel ){_efb ._adc =ctx };

// GetPageDict converts the Page to a PDF object dictionary.
func (_feefe *PdfPage )GetPageDict ()*_bgg .PdfObjectDictionary {_bcbbg :=_feefe ._gdbeb ;_bcbbg .Clear ();_bcbbg .Set ("\u0054\u0079\u0070\u0065",_bgg .MakeName ("\u0050\u0061\u0067\u0065"));_bcbbg .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_feefe .Parent );
if _feefe .LastModified !=nil {_bcbbg .Set ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064",_feefe .LastModified .ToPdfObject ());};if _feefe .Resources !=nil {_bcbbg .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_feefe .Resources .ToPdfObject ());
};if _feefe .CropBox !=nil {_bcbbg .Set ("\u0043r\u006f\u0070\u0042\u006f\u0078",_feefe .CropBox .ToPdfObject ());};if _feefe .MediaBox !=nil {_bcbbg .Set ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078",_feefe .MediaBox .ToPdfObject ());};if _feefe .BleedBox !=nil {_bcbbg .Set ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078",_feefe .BleedBox .ToPdfObject ());
};if _feefe .TrimBox !=nil {_bcbbg .Set ("\u0054r\u0069\u006d\u0042\u006f\u0078",_feefe .TrimBox .ToPdfObject ());};if _feefe .ArtBox !=nil {_bcbbg .Set ("\u0041\u0072\u0074\u0042\u006f\u0078",_feefe .ArtBox .ToPdfObject ());};_bcbbg .SetIfNotNil ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f",_feefe .BoxColorInfo );
_bcbbg .SetIfNotNil ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073",_feefe .Contents );if _feefe .Rotate !=nil {_bcbbg .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_bgg .MakeInteger (*_feefe .Rotate ));};_bcbbg .SetIfNotNil ("\u0047\u0072\u006fu\u0070",_feefe .Group );
_bcbbg .SetIfNotNil ("\u0054\u0068\u0075m\u0062",_feefe .Thumb );_bcbbg .SetIfNotNil ("\u0042",_feefe .B );_bcbbg .SetIfNotNil ("\u0044\u0075\u0072",_feefe .Dur );_bcbbg .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_feefe .Trans );_bcbbg .SetIfNotNil ("\u0041\u0041",_feefe .AA );
_bcbbg .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_feefe .Metadata );_bcbbg .SetIfNotNil ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o",_feefe .PieceInfo );_bcbbg .SetIfNotNil ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073",_feefe .StructParents );
_bcbbg .SetIfNotNil ("\u0049\u0044",_feefe .ID );_bcbbg .SetIfNotNil ("\u0050\u005a",_feefe .PZ );_bcbbg .SetIfNotNil ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f",_feefe .SeparationInfo );_bcbbg .SetIfNotNil ("\u0054\u0061\u0062\u0073",_feefe .Tabs );
_bcbbg .SetIfNotNil ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064",_feefe .TemplateInstantiated );_bcbbg .SetIfNotNil ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s",_feefe .PresSteps );_bcbbg .SetIfNotNil ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074",_feefe .UserUnit );
_bcbbg .SetIfNotNil ("\u0056\u0050",_feefe .VP );if _feefe ._dedeg !=nil {_cgdbg :=_bgg .MakeArray ();for _ ,_bcffc :=range _feefe ._dedeg {if _fdeac :=_bcffc .GetContext ();_fdeac !=nil {_cgdbg .Append (_fdeac .ToPdfObject ());}else {_cgdbg .Append (_bcffc .ToPdfObject ());
};};if _cgdbg .Len ()> 0{_bcbbg .Set ("\u0041\u006e\u006e\u006f\u0074\u0073",_cgdbg );};}else if _feefe .Annots !=nil {_bcbbg .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0073",_feefe .Annots );};return _bcbbg ;};

// Encoder returns the font's text encoder.
func (_bbdbde pdfCIDFontType2 )Encoder ()_cc .TextEncoder {return _bbdbde ._dfffe };

// AddWatermarkImage adds a watermark to the page.
func (_dcgbf *PdfPage )AddWatermarkImage (ximg *XObjectImage ,opt WatermarkImageOptions )error {_cgagb ,_gaeb :=_dcgbf .GetMediaBox ();if _gaeb !=nil {return _gaeb ;};_ccdg :=_cgagb .Urx -_cgagb .Llx ;_efdca :=_cgagb .Ury -_cgagb .Lly ;_eadgc :=float64 (*ximg .Width );
_dfdfbc :=(_ccdg -_eadgc )/2;if opt .FitToWidth {_eadgc =_ccdg ;_dfdfbc =0;};_agfa :=_efdca ;_eddf :=float64 (0);if opt .PreserveAspectRatio {_agfa =_eadgc *float64 (*ximg .Height )/float64 (*ximg .Width );_eddf =(_efdca -_agfa )/2;};if _dcgbf .Resources ==nil {_dcgbf .Resources =NewPdfPageResources ();
};_ecgfg :=0;_cedfb :=_bgg .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_ecgfg ));for _dcgbf .Resources .HasXObjectByName (_cedfb ){_ecgfg ++;_cedfb =_bgg .PdfObjectName (_e .Sprintf ("\u0049\u006d\u0077%\u0064",_ecgfg ));};_gaeb =_dcgbf .AddImageResource (_cedfb ,ximg );
if _gaeb !=nil {return _gaeb ;};_ecgfg =0;_gaecf :=_bgg .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_ecgfg ));for _dcgbf .HasExtGState (_gaecf ){_ecgfg ++;_gaecf =_bgg .PdfObjectName (_e .Sprintf ("\u0047\u0053\u0025\u0064",_ecgfg ));};_badd :=_bgg .MakeDict ();
_badd .Set ("\u0042\u004d",_bgg .MakeName ("\u004e\u006f\u0072\u006d\u0061\u006c"));_badd .Set ("\u0043\u0041",_bgg .MakeFloat (opt .Alpha ));_badd .Set ("\u0063\u0061",_bgg .MakeFloat (opt .Alpha ));_gaeb =_dcgbf .AddExtGState (_gaecf ,_badd );if _gaeb !=nil {return _gaeb ;
};_bbage :=_e .Sprintf ("\u0071\u000a"+"\u002f%\u0073\u0020\u0067\u0073\u000a"+"%\u002e\u0030\u0066\u0020\u0030\u00200\u0020\u0025\u002e\u0030\u0066\u0020\u0025\u002e\u0034f\u0020\u0025\u002e4\u0066 \u0063\u006d\u000a"+"\u002f%\u0073\u0020\u0044\u006f\u000a"+"\u0051",_gaecf ,_eadgc ,_agfa ,_dfdfbc ,_eddf ,_cedfb );
_dcgbf .AddContentStreamByString (_bbage );return nil ;};

// MergePageWith appends page content to source Pdf file page content.
func (_ggae *PdfAppender )MergePageWith (pageNum int ,page *PdfPage )error {_aged :=pageNum -1;var _ddfd *PdfPage ;for _ddcd ,_abcg :=range _ggae ._daab {if _ddcd ==_aged {_ddfd =_abcg ;};};if _ddfd ==nil {return _e .Errorf ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0050\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064\u0020\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0073o\u0075\u0072\u0063\u0065\u0020\u0064o\u0063\u0075\u006de\u006e\u0074",pageNum );
};if _ddfd ._bcdg !=nil &&_ddfd ._bcdg .GetParser ()==_ggae ._bded ._ebdgc {_ddfd =_ddfd .Duplicate ();_ggae ._daab [_aged ]=_ddfd ;};page =page .Duplicate ();_bccb (page );_fde :=_faaf (_ddfd );_adgg :=_faaf (page );_becc :=make (map[_bgg .PdfObjectName ]_bgg .PdfObjectName );
for _gfbd :=range _adgg {if _ ,_addb :=_fde [_gfbd ];_addb {for _becd :=1;true ;_becd ++{_fgdg :=_bgg .PdfObjectName (string (_gfbd )+_dgd .Itoa (_becd ));if _ ,_bagf :=_fde [_fgdg ];!_bagf {_becc [_gfbd ]=_fgdg ;break ;};};};};_fbddc ,_ffee :=page .GetContentStreams ();
if _ffee !=nil {return _ffee ;};_gfbf ,_ffee :=_ddfd .GetContentStreams ();if _ffee !=nil {return _ffee ;};for _efgc ,_adga :=range _fbddc {for _aca ,_bcded :=range _becc {_adga =_ba .Replace (_adga ,"\u002f"+string (_aca ),"\u002f"+string (_bcded ),-1);
};_fbddc [_efgc ]=_adga ;};_gfbf =append (_gfbf ,_fbddc ...);if _aead :=_ddfd .SetContentStreams (_gfbf ,_bgg .NewFlateEncoder ());_aead !=nil {return _aead ;};_ddfd ._dedeg =append (_ddfd ._dedeg ,page ._dedeg ...);if _ddfd .Resources ==nil {_ddfd .Resources =NewPdfPageResources ();
};if page .Resources !=nil {_ddfd .Resources .Font =_ggae .mergeResources (_ddfd .Resources .Font ,page .Resources .Font ,_becc );_ddfd .Resources .XObject =_ggae .mergeResources (_ddfd .Resources .XObject ,page .Resources .XObject ,_becc );_ddfd .Resources .Properties =_ggae .mergeResources (_ddfd .Resources .Properties ,page .Resources .Properties ,_becc );
if _ddfd .Resources .ProcSet ==nil {_ddfd .Resources .ProcSet =page .Resources .ProcSet ;};_ddfd .Resources .Shading =_ggae .mergeResources (_ddfd .Resources .Shading ,page .Resources .Shading ,_becc );_ddfd .Resources .ExtGState =_ggae .mergeResources (_ddfd .Resources .ExtGState ,page .Resources .ExtGState ,_becc );
};_agdd ,_ffee :=_ddfd .GetMediaBox ();if _ffee !=nil {return _ffee ;};_gcbf ,_ffee :=page .GetMediaBox ();if _ffee !=nil {return _ffee ;};var _dbab bool ;if _agdd .Llx > _gcbf .Llx {_agdd .Llx =_gcbf .Llx ;_dbab =true ;};if _agdd .Lly > _gcbf .Lly {_agdd .Lly =_gcbf .Lly ;
_dbab =true ;};if _agdd .Urx < _gcbf .Urx {_agdd .Urx =_gcbf .Urx ;_dbab =true ;};if _agdd .Ury < _gcbf .Ury {_agdd .Ury =_gcbf .Ury ;_dbab =true ;};if _dbab {_ddfd .MediaBox =_agdd ;};return nil ;};

// NewPdfColorspaceSpecialSeparation returns a new separation color.
func NewPdfColorspaceSpecialSeparation ()*PdfColorspaceSpecialSeparation {_agfbd :=&PdfColorspaceSpecialSeparation {};return _agfbd ;};func (_abee *PdfColorspaceSpecialIndexed )String ()string {return "\u0049n\u0064\u0065\u0078\u0065\u0064";};func (_fcbb *PdfReader )newPdfAnnotationStampFromDict (_agdg *_bgg .PdfObjectDictionary )(*PdfAnnotationStamp ,error ){_cccb :=PdfAnnotationStamp {};
_cceca ,_fbe :=_fcbb .newPdfAnnotationMarkupFromDict (_agdg );if _fbe !=nil {return nil ,_fbe ;};_cccb .PdfAnnotationMarkup =_cceca ;_cccb .Name =_agdg .Get ("\u004e\u0061\u006d\u0065");return &_cccb ,nil ;};

// Insert adds an outline item as a child of the current outline item,
// at the specified index.
func (_fbeed *OutlineItem )Insert (index uint ,item *OutlineItem ){_cebe :=uint (len (_fbeed .Entries ));if index > _cebe {index =_cebe ;};_fbeed .Entries =append (_fbeed .Entries [:index ],append ([]*OutlineItem {item },_fbeed .Entries [index :]...)...);
};

// PdfActionType represents an action type in PDF (section 12.6.4 p. 417).
type PdfActionType string ;func (_cage *PdfReader )loadAnnotations (_ffedgg _bgg .PdfObject )([]*PdfAnnotation ,error ){_bbbb ,_eabdb :=_bgg .GetArray (_ffedgg );if !_eabdb {return nil ,_e .Errorf ("\u0041\u006e\u006e\u006fts\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _eecfa []*PdfAnnotation ;for _ ,_aafgb :=range _bbbb .Elements (){_aafgb =_bgg .ResolveReference (_aafgb );if _ ,_aeabe :=_aafgb .(*_bgg .PdfObjectNull );_aeabe {continue ;};_fage ,_fegcg :=_aafgb .(*_bgg .PdfObjectDictionary );_ffgac ,_ffbg :=_aafgb .(*_bgg .PdfIndirectObject );
if _fegcg {_ffgac =&_bgg .PdfIndirectObject {};_ffgac .PdfObject =_fage ;}else {if !_ffbg {return nil ,_e .Errorf ("\u0061\u006eno\u0074\u0061\u0074i\u006f\u006e\u0020\u006eot \u0069n \u0061\u006e\u0020\u0069\u006e\u0064\u0069re\u0063\u0074\u0020\u006f\u0062\u006a\u0065c\u0074");
};};_bcceg ,_cecea :=_cage .newPdfAnnotationFromIndirectObject (_ffgac );if _cecea !=nil {return nil ,_cecea ;};switch _dcffd :=_bcceg .GetContext ().(type ){case *PdfAnnotationWidget :for _ ,_ebccb :=range _cage .AcroForm .AllFields (){if _ebccb ._fagb ==_dcffd .Parent {_dcffd ._aaa =_ebccb ;
break ;};};};if _bcceg !=nil {_eecfa =append (_eecfa ,_bcceg );};};return _eecfa ,nil ;};

// PdfWriter handles outputing PDF content.
type PdfWriter struct{_bceaa *_bgg .PdfIndirectObject ;_deeaf *_bgg .PdfIndirectObject ;_bgab map[_bgg .PdfObject ]struct{};_eddge []_bgg .PdfObject ;_gbfd map[_bgg .PdfObject ]struct{};_ececd []*_bgg .PdfIndirectObject ;_fbbc *PdfOutlineTreeNode ;_ffbb *_bgg .PdfObjectDictionary ;
_cfecc []_bgg .PdfObject ;_eeged *_bgg .PdfIndirectObject ;_eggab *_c .Writer ;_ebdcg int64 ;_bbdfff error ;_dfade *_bgg .PdfCrypt ;_ddcbec *_bgg .PdfObjectDictionary ;_baefd *_bgg .PdfIndirectObject ;_agfdf *_bgg .PdfObjectArray ;_ffgff _bgg .Version ;
_ebec *bool ;_gceaa map[_bgg .PdfObject ][]*_bgg .PdfObjectDictionary ;_gagef *PdfAcroForm ;_ebdfc Optimizer ;_dabfc StandardApplier ;_decfgb map[int ]crossReference ;_deffg int64 ;ObjNumOffset int ;_deagf bool ;_bacdb _bgg .XrefTable ;_ccbec int64 ;_cfbdc int64 ;
_eeagf map[_bgg .PdfObject ]int64 ;_bgfcc map[_bgg .PdfObject ]struct{};_dffcg string ;_fdbff []*PdfOutputIntent ;_aefd bool ;_gcege ,_dafd string ;};func (_edef fontCommon )fontFlags ()int {if _edef ._abdg ==nil {return 0;};return _edef ._abdg ._gdfdf ;
};

// IsTerminal returns true for terminal fields, false otherwise.
// Terminal fields are fields whose descendants are only widget annotations.
func (_abeef *PdfField )IsTerminal ()bool {return len (_abeef .Kids )==0};

// ToPdfObject implements interface PdfModel.
func (_ccdc *PdfActionNamed )ToPdfObject ()_bgg .PdfObject {_ccdc .PdfAction .ToPdfObject ();_fgc :=_ccdc ._ddf ;_cf :=_fgc .PdfObject .(*_bgg .PdfObjectDictionary );_cf .SetIfNotNil ("\u0053",_bgg .MakeName (string (ActionTypeNamed )));_cf .SetIfNotNil ("\u004e",_ccdc .N );
return _fgc ;};

// IsCID returns true if the underlying font is CID.
func (_bgbb *PdfFont )IsCID ()bool {return _bgbb .baseFields ().isCIDFont ()};

// SetPdfAuthor sets the Author attribute of the output PDF.
func SetPdfAuthor (author string ){_abfga .Lock ();defer _abfga .Unlock ();_fedg =author };func (_fegd *pdfCIDFontType2 )getFontDescriptor ()*PdfFontDescriptor {return _fegd ._abdg };

// AcroFormRepairOptions contains options for rebuilding the AcroForm.
type AcroFormRepairOptions struct{};

// ToPdfObject implements interface PdfModel.
func (_agab *PdfAnnotationPolyLine )ToPdfObject ()_bgg .PdfObject {_agab .PdfAnnotation .ToPdfObject ();_eage :=_agab ._gec ;_gab :=_eage .PdfObject .(*_bgg .PdfObjectDictionary );_agab .PdfAnnotationMarkup .appendToPdfDictionary (_gab );_gab .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065"));
_gab .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_agab .Vertices );_gab .SetIfNotNil ("\u004c\u0045",_agab .LE );_gab .SetIfNotNil ("\u0042\u0053",_agab .BS );_gab .SetIfNotNil ("\u0049\u0043",_agab .IC );_gab .SetIfNotNil ("\u0042\u0045",_agab .BE );
_gab .SetIfNotNil ("\u0049\u0054",_agab .IT );_gab .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_agab .Measure );return _eage ;};

// NewPdfAnnotationPopup returns a new popup annotation.
func NewPdfAnnotationPopup ()*PdfAnnotationPopup {_gdfd :=NewPdfAnnotation ();_gecg :=&PdfAnnotationPopup {};_gecg .PdfAnnotation =_gdfd ;_gdfd .SetContext (_gecg );return _gecg ;};

// ToPdfObject implements interface PdfModel.
func (_gbbc *PdfActionRendition )ToPdfObject ()_bgg .PdfObject {_gbbc .PdfAction .ToPdfObject ();_bgfa :=_gbbc ._ddf ;_eff :=_bgfa .PdfObject .(*_bgg .PdfObjectDictionary );_eff .SetIfNotNil ("\u0053",_bgg .MakeName (string (ActionTypeRendition )));_eff .SetIfNotNil ("\u0052",_gbbc .R );
_eff .SetIfNotNil ("\u0041\u004e",_gbbc .AN );_eff .SetIfNotNil ("\u004f\u0050",_gbbc .OP );_eff .SetIfNotNil ("\u004a\u0053",_gbbc .JS );return _bgfa ;};

// NewPdfActionResetForm returns a new "reset form" action.
func NewPdfActionResetForm ()*PdfActionResetForm {_ebg :=NewPdfAction ();_fd :=&PdfActionResetForm {};_fd .PdfAction =_ebg ;_ebg .SetContext (_fd );return _fd ;};func _faca (_fdceb string )(map[_cc .CharCode ]_cc .GlyphName ,error ){_adbf :=_ba .Split (_fdceb ,"\u000a");
_cdcaf :=make (map[_cc .CharCode ]_cc .GlyphName );for _ ,_adbb :=range _adbf {_ggbb :=_gbdgb .FindStringSubmatch (_adbb );if _ggbb ==nil {continue ;};_gfca ,_caggb :=_ggbb [1],_ggbb [2];_cbfc ,_gaec :=_dgd .Atoi (_gfca );if _gaec !=nil {_dcf .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0042\u0061\u0064\u0020\u0065\u006e\u0063\u006fd\u0069n\u0067\u0020\u006c\u0069\u006e\u0065\u002e \u0025\u0071",_adbb );
return nil ,_bgg .ErrTypeError ;};_cdcaf [_cc .CharCode (_cbfc )]=_cc .GlyphName (_caggb );};_dcf .Log .Trace ("g\u0065\u0074\u0045\u006e\u0063\u006fd\u0069\u006e\u0067\u0073\u003a\u0020\u006b\u0065\u0079V\u0061\u006c\u0075e\u0073=\u0025\u0023\u0076",_cdcaf );
return _cdcaf ,nil ;};func (_gace *PdfReader )newPdfAnnotationFromIndirectObject (_fga *_bgg .PdfIndirectObject )(*PdfAnnotation ,error ){_bfg ,_ggd :=_fga .PdfObject .(*_bgg .PdfObjectDictionary );if !_ggd {return nil ,_e .Errorf ("\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0069\u006e\u0064\u0069r\u0065\u0063\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006ft\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006e\u0067\u0020a \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};if model :=_gace ._gabea .GetModelFromPrimitive (_bfg );model !=nil {_bag ,_fegc :=model .(*PdfAnnotation );if !_fegc {return nil ,_e .Errorf ("\u0063\u0061\u0063\u0068\u0065\u0064 \u006d\u006f\u0064\u0065\u006c\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0050D\u0046\u0020\u0061\u006e\u006e\u006f\u0074a\u0074\u0069\u006f\u006e");
};return _bag ,nil ;};_gecf :=&PdfAnnotation {};_gecf ._gec =_fga ;_gace ._gabea .Register (_bfg ,_gecf );if _gggc :=_bfg .Get ("\u0054\u0079\u0070\u0065");_gggc !=nil {_ggde ,_cef :=_gggc .(*_bgg .PdfObjectName );if !_cef {_dcf .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_gggc );
}else {if *_ggde !="\u0041\u006e\u006eo\u0074"{_dcf .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070\u0065\u0063\u0074\u0065d\u0020\u0054\u0079\u0070\u0065\u0020\u0021=\u0020\u0041\u006e\u006e\u006f\u0074\u0020\u0028\u0025\u0073\u0029",*_ggde );};};};
if _bafd :=_bfg .Get ("\u0052\u0065\u0063\u0074");_bafd !=nil {_gecf .Rect =_bafd ;};if _egc :=_bfg .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_egc !=nil {_gecf .Contents =_egc ;};if _gge :=_bfg .Get ("\u0050");_gge !=nil {_gecf .P =_gge ;
};if _bga :=_bfg .Get ("\u004e\u004d");_bga !=nil {_gecf .NM =_bga ;};if _cfd :=_bfg .Get ("\u004d");_cfd !=nil {_gecf .M =_cfd ;};if _cbg :=_bfg .Get ("\u0046");_cbg !=nil {_gecf .F =_cbg ;};if _cege :=_bfg .Get ("\u0041\u0050");_cege !=nil {_gecf .AP =_cege ;
};if _dgf :=_bfg .Get ("\u0041\u0053");_dgf !=nil {_gecf .AS =_dgf ;};if _age :=_bfg .Get ("\u0042\u006f\u0072\u0064\u0065\u0072");_age !=nil {_gecf .Border =_age ;};if _caed :=_bfg .Get ("\u0043");_caed !=nil {_gecf .C =_caed ;};if _dadg :=_bfg .Get ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074");
_dadg !=nil {_gecf .StructParent =_dadg ;};if _gfc :=_bfg .Get ("\u004f\u0043");_gfc !=nil {_gecf .OC =_gfc ;};_bgc :=_bfg .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065");if _bgc ==nil {_dcf .Log .Debug ("\u0057\u0041\u0052\u004e\u0049\u004e\u0047:\u0020\u0043\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079 \u0069s\u0073\u0075\u0065\u0020\u002d\u0020a\u006e\u006e\u006f\u0074\u0061\u0074\u0069o\u006e\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u002d\u0020\u0061\u0073\u0073u\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0073\u0075\u0062\u0074\u0079p\u0065");
_gecf ._afg =nil ;return _gecf ,nil ;};_bbc ,_afea :=_bgc .(*_bgg .PdfObjectName );if !_afea {_dcf .Log .Debug ("E\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0053\u0075\u0062ty\u0070\u0065\u0020\u006fb\u006a\u0065\u0063\u0074\u0020\u0074\u0079\u0070\u0065 !\u003d\u0020n\u0061\u006d\u0065\u0020\u0028\u0025\u0054\u0029",_bgc );
return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0075\u0062\u0074\u0079\u0070\u0065\u0020\u006f\u0062\u006ae\u0063\u0074\u0020\u0074\u0079\u0070\u0065\u0020\u0021\u003d n\u0061\u006d\u0065 \u0028%\u0054\u0029",_bgc );};switch *_bbc {case "\u0054\u0065\u0078\u0074":_ccec ,_cdcf :=_gace .newPdfAnnotationTextFromDict (_bfg );
if _cdcf !=nil {return nil ,_cdcf ;};_ccec .PdfAnnotation =_gecf ;_gecf ._afg =_ccec ;return _gecf ,nil ;case "\u004c\u0069\u006e\u006b":_cfag ,_gdbf :=_gace .newPdfAnnotationLinkFromDict (_bfg );if _gdbf !=nil {return nil ,_gdbf ;};_cfag .PdfAnnotation =_gecf ;
_gecf ._afg =_cfag ;return _gecf ,nil ;case "\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074":_dag ,_dabb :=_gace .newPdfAnnotationFreeTextFromDict (_bfg );if _dabb !=nil {return nil ,_dabb ;};_dag .PdfAnnotation =_gecf ;_gecf ._afg =_dag ;return _gecf ,nil ;
case "\u004c\u0069\u006e\u0065":_baef ,_fgfa :=_gace .newPdfAnnotationLineFromDict (_bfg );if _fgfa !=nil {return nil ,_fgfa ;};_baef .PdfAnnotation =_gecf ;_gecf ._afg =_baef ;_dcf .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041N\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u003a\u0020\u0061\u006e\u006eo\u0074\u0020\u0028\u0025\u0054\u0029\u003a \u0025\u002b\u0076\u000a",_gecf ,_gecf );
_dcf .Log .Trace ("\u004c\u0049\u004eE\u0020\u0041\u004e\u004eO\u0054\u0041\u0054\u0049\u004f\u004e\u003a \u0063\u0074\u0078\u0020\u0028\u0025\u0054\u0029\u003a\u0020\u0025\u002b\u0076\u000a",_baef ,_baef );_dcf .Log .Trace ("\u004c\u0049\u004e\u0045\u0020\u0041\u004e\u004e\u004f\u0054\u0041\u0054\u0049\u004f\u004e\u0020\u004d\u0061\u0072\u006b\u0075\u0070\u003a\u0020c\u0074\u0078\u0020\u0028\u0025T\u0029\u003a \u0025\u002b\u0076\u000a",_baef .PdfAnnotationMarkup ,_baef .PdfAnnotationMarkup );
return _gecf ,nil ;case "\u0053\u0071\u0075\u0061\u0072\u0065":_egg ,_ece :=_gace .newPdfAnnotationSquareFromDict (_bfg );if _ece !=nil {return nil ,_ece ;};_egg .PdfAnnotation =_gecf ;_gecf ._afg =_egg ;return _gecf ,nil ;case "\u0043\u0069\u0072\u0063\u006c\u0065":_cdee ,_eeec :=_gace .newPdfAnnotationCircleFromDict (_bfg );
if _eeec !=nil {return nil ,_eeec ;};_cdee .PdfAnnotation =_gecf ;_gecf ._afg =_cdee ;return _gecf ,nil ;case "\u0050o\u006c\u0079\u0067\u006f\u006e":_ebbg ,_eaef :=_gace .newPdfAnnotationPolygonFromDict (_bfg );if _eaef !=nil {return nil ,_eaef ;};_ebbg .PdfAnnotation =_gecf ;
_gecf ._afg =_ebbg ;return _gecf ,nil ;case "\u0050\u006f\u006c\u0079\u004c\u0069\u006e\u0065":_cbdg ,_aaea :=_gace .newPdfAnnotationPolyLineFromDict (_bfg );if _aaea !=nil {return nil ,_aaea ;};_cbdg .PdfAnnotation =_gecf ;_gecf ._afg =_cbdg ;return _gecf ,nil ;
case "\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t":_eebb ,_cbge :=_gace .newPdfAnnotationHighlightFromDict (_bfg );if _cbge !=nil {return nil ,_cbge ;};_eebb .PdfAnnotation =_gecf ;_gecf ._afg =_eebb ;return _gecf ,nil ;case "\u0055n\u0064\u0065\u0072\u006c\u0069\u006ee":_faaeb ,_gbc :=_gace .newPdfAnnotationUnderlineFromDict (_bfg );
if _gbc !=nil {return nil ,_gbc ;};_faaeb .PdfAnnotation =_gecf ;_gecf ._afg =_faaeb ;return _gecf ,nil ;case "\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079":_gfac ,_abc :=_gace .newPdfAnnotationSquigglyFromDict (_bfg );if _abc !=nil {return nil ,_abc ;
};_gfac .PdfAnnotation =_gecf ;_gecf ._afg =_gfac ;return _gecf ,nil ;case "\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t":_dabbf ,_aeae :=_gace .newPdfAnnotationStrikeOut (_bfg );if _aeae !=nil {return nil ,_aeae ;};_dabbf .PdfAnnotation =_gecf ;_gecf ._afg =_dabbf ;
return _gecf ,nil ;case "\u0043\u0061\u0072e\u0074":_gaf ,_fdc :=_gace .newPdfAnnotationCaretFromDict (_bfg );if _fdc !=nil {return nil ,_fdc ;};_gaf .PdfAnnotation =_gecf ;_gecf ._afg =_gaf ;return _gecf ,nil ;case "\u0053\u0074\u0061m\u0070":_ffge ,_bcee :=_gace .newPdfAnnotationStampFromDict (_bfg );
if _bcee !=nil {return nil ,_bcee ;};_ffge .PdfAnnotation =_gecf ;_gecf ._afg =_ffge ;return _gecf ,nil ;case "\u0049\u006e\u006b":_bcef ,_fbc :=_gace .newPdfAnnotationInkFromDict (_bfg );if _fbc !=nil {return nil ,_fbc ;};_bcef .PdfAnnotation =_gecf ;
_gecf ._afg =_bcef ;return _gecf ,nil ;case "\u0050\u006f\u0070u\u0070":_fdba ,_agd :=_gace .newPdfAnnotationPopupFromDict (_bfg );if _agd !=nil {return nil ,_agd ;};_fdba .PdfAnnotation =_gecf ;_gecf ._afg =_fdba ;return _gecf ,nil ;case "\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074":_ebbd ,_egf :=_gace .newPdfAnnotationFileAttachmentFromDict (_bfg );
if _egf !=nil {return nil ,_egf ;};_ebbd .PdfAnnotation =_gecf ;_gecf ._afg =_ebbd ;return _gecf ,nil ;case "\u0053\u006f\u0075n\u0064":_cca ,_bfd :=_gace .newPdfAnnotationSoundFromDict (_bfg );if _bfd !=nil {return nil ,_bfd ;};_cca .PdfAnnotation =_gecf ;
_gecf ._afg =_cca ;return _gecf ,nil ;case "\u0052i\u0063\u0068\u004d\u0065\u0064\u0069a":_bbba ,_ccdca :=_gace .newPdfAnnotationRichMediaFromDict (_bfg );if _ccdca !=nil {return nil ,_ccdca ;};_bbba .PdfAnnotation =_gecf ;_gecf ._afg =_bbba ;return _gecf ,nil ;
case "\u004d\u006f\u0076i\u0065":_cgafa ,_bdcd :=_gace .newPdfAnnotationMovieFromDict (_bfg );if _bdcd !=nil {return nil ,_bdcd ;};_cgafa .PdfAnnotation =_gecf ;_gecf ._afg =_cgafa ;return _gecf ,nil ;case "\u0053\u0063\u0072\u0065\u0065\u006e":_ccg ,_aba :=_gace .newPdfAnnotationScreenFromDict (_bfg );
if _aba !=nil {return nil ,_aba ;};_ccg .PdfAnnotation =_gecf ;_gecf ._afg =_ccg ;return _gecf ,nil ;case "\u0057\u0069\u0064\u0067\u0065\u0074":_aced ,_eagf :=_gace .newPdfAnnotationWidgetFromDict (_bfg );if _eagf !=nil {return nil ,_eagf ;};_aced .PdfAnnotation =_gecf ;
_gecf ._afg =_aced ;return _gecf ,nil ;case "P\u0072\u0069\u006e\u0074\u0065\u0072\u004d\u0061\u0072\u006b":_afc ,_bde :=_gace .newPdfAnnotationPrinterMarkFromDict (_bfg );if _bde !=nil {return nil ,_bde ;};_afc .PdfAnnotation =_gecf ;_gecf ._afg =_afc ;
return _gecf ,nil ;case "\u0054r\u0061\u0070\u004e\u0065\u0074":_dgfe ,_bdg :=_gace .newPdfAnnotationTrapNetFromDict (_bfg );if _bdg !=nil {return nil ,_bdg ;};_dgfe .PdfAnnotation =_gecf ;_gecf ._afg =_dgfe ;return _gecf ,nil ;case "\u0057a\u0074\u0065\u0072\u006d\u0061\u0072k":_ceae ,_ggff :=_gace .newPdfAnnotationWatermarkFromDict (_bfg );
if _ggff !=nil {return nil ,_ggff ;};_ceae .PdfAnnotation =_gecf ;_gecf ._afg =_ceae ;return _gecf ,nil ;case "\u0033\u0044":_eaa ,_fcd :=_gace .newPdfAnnotation3DFromDict (_bfg );if _fcd !=nil {return nil ,_fcd ;};_eaa .PdfAnnotation =_gecf ;_gecf ._afg =_eaa ;
return _gecf ,nil ;case "\u0050\u0072\u006f\u006a\u0065\u0063\u0074\u0069\u006f\u006e":_eecg ,_gfdb :=_gace .newPdfAnnotationProjectionFromDict (_bfg );if _gfdb !=nil {return nil ,_gfdb ;};_eecg .PdfAnnotation =_gecf ;_gecf ._afg =_eecg ;return _gecf ,nil ;
case "\u0052\u0065\u0064\u0061\u0063\u0074":_ggb ,_aff :=_gace .newPdfAnnotationRedactFromDict (_bfg );if _aff !=nil {return nil ,_aff ;};_ggb .PdfAnnotation =_gecf ;_gecf ._afg =_ggb ;return _gecf ,nil ;};_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0075\u006e\u006b\u006e\u006f\u0077\u006e\u0020a\u006e\u006e\u006f\u0074\u0061t\u0069\u006fn\u003a\u0020\u0025\u0073",*_bbc );
return nil ,nil ;};

// ToPdfOutline returns a low level PdfOutline object, based on the current
// instance.
func (_ceaa *Outline )ToPdfOutline ()*PdfOutline {_edeb :=NewPdfOutline ();var _fbcfb []*PdfOutlineItem ;var _egcff int64 ;var _daeda *PdfOutlineItem ;for _ ,_gddgd :=range _ceaa .Entries {_aedee ,_efbec :=_gddgd .ToPdfOutlineItem ();_aedee .Parent =&_edeb .PdfOutlineTreeNode ;
if _daeda !=nil {_daeda .Next =&_aedee .PdfOutlineTreeNode ;_aedee .Prev =&_daeda .PdfOutlineTreeNode ;};_fbcfb =append (_fbcfb ,_aedee );_egcff +=_efbec ;_daeda =_aedee ;};_gdcf :=int64 (len (_fbcfb ));_egcff +=_gdcf ;if _gdcf > 0{_edeb .First =&_fbcfb [0].PdfOutlineTreeNode ;
_edeb .Last =&_fbcfb [_gdcf -1].PdfOutlineTreeNode ;_edeb .Count =&_egcff ;};return _edeb ;};

// Field returns the parent form field of the widget annotation, if one exists.
// NOTE: the method returns nil if the parent form field has not been parsed.
func (_gfa *PdfAnnotationWidget )Field ()*PdfField {return _gfa ._aaa };type pdfSignDictionary struct{*_bgg .PdfObjectDictionary ;_agedfb *SignatureHandler ;_dgdfb *PdfSignature ;_fcgcb int64 ;_ccecb int ;_acbeb int ;_gdfb int ;_efce int ;};

// ToOutlineTree returns a low level PdfOutlineTreeNode object, based on
// the current instance.
func (_cgggg *Outline )ToOutlineTree ()*PdfOutlineTreeNode {return &_cgggg .ToPdfOutline ().PdfOutlineTreeNode ;};var _ pdfFont =(*pdfFontType0 )(nil );

// NewPdfActionMovie returns a new "movie" action.
func NewPdfActionMovie ()*PdfActionMovie {_dff :=NewPdfAction ();_bf :=&PdfActionMovie {};_bf .PdfAction =_dff ;_dff .SetContext (_bf );return _bf ;};

// FieldFilterFunc represents a PDF field filtering function. If the function
// returns true, the PDF field is kept, otherwise it is discarded.
type FieldFilterFunc func (*PdfField )bool ;func (_abbb *PdfPage )setContainer (_ecfdc *_bgg .PdfIndirectObject ){_ecfdc .PdfObject =_abbb ._gdbeb ;_abbb ._bcdg =_ecfdc ;};func _fegf (_eafcd _bgg .PdfObject )(*PdfColorspaceLab ,error ){_bdeg :=NewPdfColorspaceLab ();
if _accc ,_cfge :=_eafcd .(*_bgg .PdfIndirectObject );_cfge {_bdeg ._gdeb =_accc ;};_eafcd =_bgg .TraceToDirectObject (_eafcd );_egcc ,_cedd :=_eafcd .(*_bgg .PdfObjectArray );if !_cedd {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _egcc .Len ()!=2{return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0043\u0061\u006c\u0052G\u0042 \u0063o\u006c\u006f\u0072\u0073\u0070\u0061\u0063e");};_eafcd =_bgg .TraceToDirectObject (_egcc .Get (0));_efec ,_cedd :=_eafcd .(*_bgg .PdfObjectName );
if !_cedd {return nil ,_e .Errorf ("\u006c\u0061\u0062\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020\u0061\u0020\u004e\u0061\u006d\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");};if *_efec !="\u004c\u0061\u0062"{return nil ,_e .Errorf ("n\u006ft\u0020\u0061\u0020\u004c\u0061\u0062\u0020\u0063o\u006c\u006f\u0072\u0073pa\u0063\u0065");
};_eafcd =_bgg .TraceToDirectObject (_egcc .Get (1));_ccba ,_cedd :=_eafcd .(*_bgg .PdfObjectDictionary );if !_cedd {return nil ,_e .Errorf ("c\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0020\u0069\u006ev\u0061l\u0069\u0064");
};_eafcd =_ccba .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_eafcd =_bgg .TraceToDirectObject (_eafcd );_gdfaf ,_cedd :=_eafcd .(*_bgg .PdfObjectArray );if !_cedd {return nil ,_e .Errorf ("\u004c\u0061\u0062\u0020In\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069n\u0074");
};if _gdfaf .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");};_gagb ,_bgba :=_gdfaf .GetAsFloat64Slice ();
if _bgba !=nil {return nil ,_bgba ;};_bdeg .WhitePoint =_gagb ;_eafcd =_ccba .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _eafcd !=nil {_eafcd =_bgg .TraceToDirectObject (_eafcd );_caef ,_fagc :=_eafcd .(*_bgg .PdfObjectArray );
if !_fagc {return nil ,_e .Errorf ("\u004c\u0061\u0062: \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");};if _caef .Len ()!=3{return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074\u0020\u0061rr\u0061\u0079");
};_ggfb ,_dggd :=_caef .GetAsFloat64Slice ();if _dggd !=nil {return nil ,_dggd ;};_bdeg .BlackPoint =_ggfb ;};_eafcd =_ccba .Get ("\u0052\u0061\u006eg\u0065");if _eafcd !=nil {_eafcd =_bgg .TraceToDirectObject (_eafcd );_dbge ,_fada :=_eafcd .(*_bgg .PdfObjectArray );
if !_fada {_dcf .Log .Error ("\u0052\u0061n\u0067\u0065\u0020t\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");return nil ,_e .Errorf ("\u004ca\u0062:\u0020\u0054\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _dbge .Len ()!=4{_dcf .Log .Error ("\u0052\u0061\u006e\u0067\u0065\u0020\u0072\u0061\u006e\u0067\u0065\u0020e\u0072\u0072\u006f\u0072");
return nil ,_e .Errorf ("\u004c\u0061b\u003a\u0020\u0052a\u006e\u0067\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};_gagbc ,_dcaed :=_dbge .GetAsFloat64Slice ();if _dcaed !=nil {return nil ,_dcaed ;};_bdeg .Range =_gagbc ;};return _bdeg ,nil ;};

// ToPdfObject returns the PDF representation of the VRI dictionary.
func (_bace *VRI )ToPdfObject ()*_bgg .PdfObjectDictionary {_ddgbd :=_bgg .MakeDict ();_ddgbd .SetIfNotNil (_bgg .PdfObjectName ("\u0043\u0065\u0072\u0074"),_gcfde (_bace .Cert ));_ddgbd .SetIfNotNil (_bgg .PdfObjectName ("\u004f\u0043\u0053\u0050"),_gcfde (_bace .OCSP ));
_ddgbd .SetIfNotNil (_bgg .PdfObjectName ("\u0043\u0052\u004c"),_gcfde (_bace .CRL ));_ddgbd .SetIfNotNil ("\u0054\u0055",_bace .TU );_ddgbd .SetIfNotNil ("\u0054\u0053",_bace .TS );return _ddgbd ;};

// ToPdfObject converts the pdfCIDFontType2 to a PDF representation.
func (_dccfe *pdfCIDFontType2 )ToPdfObject ()_bgg .PdfObject {if _dccfe ._fadag ==nil {_dccfe ._fadag =&_bgg .PdfIndirectObject {};};_cbga :=_dccfe .baseFields ().asPdfObjectDictionary ("\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032");
_dccfe ._fadag .PdfObject =_cbga ;if _dccfe .CIDSystemInfo !=nil {_cbga .Set ("\u0043\u0049\u0044\u0053\u0079\u0073\u0074\u0065\u006d\u0049\u006e\u0066\u006f",_dccfe .CIDSystemInfo );};if _dccfe .DW !=nil {_cbga .Set ("\u0044\u0057",_dccfe .DW );};if _dccfe .DW2 !=nil {_cbga .Set ("\u0044\u0057\u0032",_dccfe .DW2 );
};if _dccfe .W !=nil {_cbga .Set ("\u0057",_dccfe .W );};if _dccfe .W2 !=nil {_cbga .Set ("\u0057\u0032",_dccfe .W2 );};if _dccfe .CIDToGIDMap !=nil {_cbga .Set ("C\u0049\u0044\u0054\u006f\u0047\u0049\u0044\u004d\u0061\u0070",_dccfe .CIDToGIDMap );};return _dccfe ._fadag ;
};

// PdfPageResourcesColorspaces contains the colorspace in the PdfPageResources.
// Needs to have matching name and colorspace map entry. The Names define the order.
type PdfPageResourcesColorspaces struct{Names []string ;Colorspaces map[string ]PdfColorspace ;_abaa *_bgg .PdfIndirectObject ;};

// GetNumComponents returns the number of color components (3 for Lab).
func (_geaf *PdfColorLab )GetNumComponents ()int {return 3};func (_fdbg *PdfAppender )mergeResources (_fbeb ,_fafc _bgg .PdfObject ,_cgcd map[_bgg .PdfObjectName ]_bgg .PdfObjectName )_bgg .PdfObject {if _fafc ==nil &&_fbeb ==nil {return nil ;};if _fafc ==nil {return _fbeb ;
};_ggfg ,_ecae :=_bgg .GetDict (_fafc );if !_ecae {return _fbeb ;};if _fbeb ==nil {_ebae :=_bgg .MakeDict ();_ebae .Merge (_ggfg );return _fafc ;};_dgeb ,_ecae :=_bgg .GetDict (_fbeb );if !_ecae {_dcf .Log .Error ("\u0045\u0072\u0072or\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
_dgeb =_bgg .MakeDict ();};for _ ,_dbbbf :=range _ggfg .Keys (){if _afbg ,_egff :=_cgcd [_dbbbf ];_egff {_dgeb .Set (_afbg ,_ggfg .Get (_dbbbf ));}else {_dgeb .Set (_dbbbf ,_ggfg .Get (_dbbbf ));};};return _dgeb ;};func (_bacd *pdfFontType0 )subsetRegistered ()error {_eacc ,_acdf :=_bacd .DescendantFont ._efdec .(*pdfCIDFontType2 );
if !_acdf {_dcf .Log .Debug ("\u0046\u006fnt\u0020\u006e\u006ft\u0020\u0073\u0075\u0070por\u0074ed\u0020\u0066\u006f\u0072\u0020\u0073\u0075bs\u0065\u0074\u0074\u0069\u006e\u0067\u0020%\u0054",_bacd .DescendantFont );return nil ;};if _eacc ==nil {return nil ;
};if _eacc ._abdg ==nil {_dcf .Log .Debug ("\u004d\u0069\u0073si\u006e\u0067\u0020\u0066\u006f\u006e\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074\u006f\u0072");return nil ;};if _bacd ._dfbdd ==nil {_dcf .Log .Debug ("\u004e\u006f\u0020e\u006e\u0063\u006f\u0064e\u0072\u0020\u002d\u0020\u0073\u0075\u0062s\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0069\u0067\u006e\u006f\u0072\u0065\u0064");
return nil ;};_cegg ,_acdf :=_bgg .GetStream (_eacc ._abdg .FontFile2 );if !_acdf {_dcf .Log .Debug ("\u0045\u006d\u0062\u0065\u0064\u0064\u0065\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u006f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u002d\u002d\u0020\u0041\u0042\u004f\u0052T\u0020\u0073\u0075\u0062\u0073\u0065\u0074\u0074\u0069\u006e\u0067");
return _ag .New ("\u0066\u006f\u006e\u0074fi\u006c\u0065\u0032\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_dcffc ,_baafc :=_bgg .DecodeStream (_cegg );if _baafc !=nil {_dcf .Log .Debug ("\u0044\u0065c\u006f\u0064\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0076",_baafc );
return _baafc ;};_facb ,_baafc :=_df .Parse (_aa .NewReader (_dcffc ));if _baafc !=nil {_dcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0020f\u006f\u006e\u0074",len (_cegg .Stream ));
return _baafc ;};var _fedf []rune ;var _eebbg *_df .Font ;switch _bacec :=_bacd ._dfbdd .(type ){case *_cc .TrueTypeFontEncoder :_fedf =_bacec .RegisteredRunes ();_eebbg ,_baafc =_facb .SubsetKeepRunes (_fedf );if _baafc !=nil {_dcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_baafc );
return _baafc ;};_bacec .SubsetRegistered ();case *_cc .IdentityEncoder :_fedf =_bacec .RegisteredRunes ();_dbeeg :=make ([]_df .GlyphIndex ,len (_fedf ));for _ggfd ,_afbfc :=range _fedf {_dbeeg [_ggfd ]=_df .GlyphIndex (_afbfc );};_eebbg ,_baafc =_facb .SubsetKeepIndices (_dbeeg );
if _baafc !=nil {_dcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_baafc );return _baafc ;};case _cc .SimpleEncoder :_deaed :=_bacec .Charcodes ();for _ ,_cacd :=range _deaed {_ccagd ,_agagg :=_bacec .CharcodeToRune (_cacd );if !_agagg {_dcf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0075\u006e\u0061\u0062\u006c\u0065\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0020\u0074\u006f \u0072\u0075\u006e\u0065\u003a\u0020\u0025\u0064",_cacd );
continue ;};_fedf =append (_fedf ,_ccagd );};default:return _e .Errorf ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020s\u0075\u0062\u0073\u0065\u0074t\u0069\u006eg\u003a\u0020\u0025\u0054",_bacd ._dfbdd );
};var _fccad _aa .Buffer ;_baafc =_eebbg .Write (&_fccad );if _baafc !=nil {_dcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_baafc );return _baafc ;};if _bacd ._ffed !=nil {_fcec :=make (map[_fbb .CharCode ]rune ,len (_fedf ));for _ ,_gdfdd :=range _fedf {_ggfdb ,_geadd :=_bacd ._dfbdd .RuneToCharcode (_gdfdd );
if !_geadd {continue ;};_fcec [_fbb .CharCode (_ggfdb )]=_gdfdd ;};_bacd ._ffed =_fbb .NewToUnicodeCMap (_fcec );};_cegg ,_baafc =_bgg .MakeStream (_fccad .Bytes (),_bgg .NewFlateEncoder ());if _baafc !=nil {_dcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_baafc );
return _baafc ;};_cegg .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bgg .MakeInteger (int64 (_fccad .Len ())));if _fabdb ,_acfd :=_bgg .GetStream (_eacc ._abdg .FontFile2 );_acfd {*_fabdb =*_cegg ;}else {_eacc ._abdg .FontFile2 =_cegg ;};_eeca :=_bcdedd ();
if len (_bacd ._dbbc )> 0{_bacd ._dbbc =_afaf (_bacd ._dbbc ,_eeca );};if len (_eacc ._dbbc )> 0{_eacc ._dbbc =_afaf (_eacc ._dbbc ,_eeca );};if len (_bacd ._afge )> 0{_bacd ._afge =_afaf (_bacd ._afge ,_eeca );};if _eacc ._abdg !=nil {_bcecc ,_cbca :=_bgg .GetName (_eacc ._abdg .FontName );
if _cbca &&len (_bcecc .String ())> 0{_agaca :=_afaf (_bcecc .String (),_eeca );_eacc ._abdg .FontName =_bgg .MakeName (_agaca );};};return nil ;};var ErrColorOutOfRange =_ag .New ("\u0063o\u006co\u0072\u0020\u006f\u0075\u0074 \u006f\u0066 \u0072\u0061\u006e\u0067\u0065");


// PdfAnnotation3D represents 3D annotations.
// (Section 13.6.2).
type PdfAnnotation3D struct{*PdfAnnotation ;T3DD _bgg .PdfObject ;T3DV _bgg .PdfObject ;T3DA _bgg .PdfObject ;T3DI _bgg .PdfObject ;T3DB _bgg .PdfObject ;};

// GetCatalogMetadata gets the catalog defined XMP Metadata.
func (_dffc *PdfReader )GetCatalogMetadata ()(_bgg .PdfObject ,bool ){if _dffc ._gaebb ==nil {return nil ,false ;};_cadd :=_dffc ._gaebb .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");return _cadd ,_cadd !=nil ;};

// HasColorspaceByName checks if the colorspace with the specified name exists in the page resources.
func (_daceg *PdfPageResources )HasColorspaceByName (keyName _bgg .PdfObjectName )bool {_bfdc ,_eggaf :=_daceg .GetColorspaces ();if _eggaf !=nil {_dcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_eggaf );
return false ;};if _bfdc ==nil {return false ;};_ ,_fffe :=_bfdc .Colorspaces [string (keyName )];return _fffe ;};

// NewLTV returns a new LTV client.
func NewLTV (appender *PdfAppender )(*LTV ,error ){_bbdgf :=appender .Reader .DSS ;if _bbdgf ==nil {_bbdgf =NewDSS ();};if _feddc :=_bbdgf .generateHashMaps ();_feddc !=nil {return nil ,_feddc ;};return &LTV {CertClient :_ad .NewCertClient (),OCSPClient :_ad .NewOCSPClient (),CRLClient :_ad .NewCRLClient (),SkipExisting :true ,_gafcc :appender ,_ebce :_bbdgf },nil ;
};

// PdfFunction interface represents the common methods of a function in PDF.
type PdfFunction interface{Evaluate ([]float64 )([]float64 ,error );ToPdfObject ()_bgg .PdfObject ;};type pdfFont interface{_dad .Font ;

// ToPdfObject returns a PDF representation of the font and implements interface Model.
ToPdfObject ()_bgg .PdfObject ;getFontDescriptor ()*PdfFontDescriptor ;baseFields ()*fontCommon ;};

// GetAction returns the PDF action for the annotation link.
func (_eec *PdfAnnotationLink )GetAction ()(*PdfAction ,error ){if _eec ._fce !=nil {return _eec ._fce ,nil ;};if _eec .A ==nil {return nil ,nil ;};if _eec ._fgff ==nil {return nil ,nil ;};_bfa ,_dfb :=_eec ._fgff .loadAction (_eec .A );if _dfb !=nil {return nil ,_dfb ;
};_eec ._fce =_bfa ;return _eec ._fce ,nil ;};func _bebca (_gdec *[]*PdfField ,_fcdg FieldFilterFunc ,_dgccdc bool )[]*PdfField {if _gdec ==nil {return nil ;};_edgfe :=*_gdec ;if len (*_gdec )==0{return nil ;};_ggegd :=_edgfe [:0];if _fcdg ==nil {_fcdg =func (*PdfField )bool {return true };
};var _cgge []*PdfField ;for _ ,_gffff :=range _edgfe {_bbdd :=_fcdg (_gffff );if _bbdd {_cgge =append (_cgge ,_gffff );if len (_gffff .Kids )> 0{_cgge =append (_cgge ,_bebca (&_gffff .Kids ,_fcdg ,_dgccdc )...);};};if !_dgccdc ||!_bbdd ||len (_gffff .Kids )> 0{_ggegd =append (_ggegd ,_gffff );
};};*_gdec =_ggegd ;return _cgge ;};func (_bagc *PdfReader )newPdfAnnotationSquareFromDict (_ebgb *_bgg .PdfObjectDictionary )(*PdfAnnotationSquare ,error ){_fbca :=PdfAnnotationSquare {};_ecfd ,_bcd :=_bagc .newPdfAnnotationMarkupFromDict (_ebgb );if _bcd !=nil {return nil ,_bcd ;
};_fbca .PdfAnnotationMarkup =_ecfd ;_fbca .BS =_ebgb .Get ("\u0042\u0053");_fbca .IC =_ebgb .Get ("\u0049\u0043");_fbca .BE =_ebgb .Get ("\u0042\u0045");_fbca .RD =_ebgb .Get ("\u0052\u0044");return &_fbca ,nil ;};func (_gbca *PdfReader )newPdfOutlineItemFromIndirectObject (_dbbce *_bgg .PdfIndirectObject )(*PdfOutlineItem ,error ){_cceb ,_fcef :=_dbbce .PdfObject .(*_bgg .PdfObjectDictionary );
if !_fcef {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");};_eacef :=NewPdfOutlineItem ();_bcbgd :=_cceb .Get ("\u0054\u0069\u0074l\u0065");
if _bcbgd ==nil {return nil ,_e .Errorf ("\u006d\u0069\u0073s\u0069\u006e\u0067\u0020\u0054\u0069\u0074\u006c\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0049\u0074\u0065\u006d\u0020\u0028r\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0029");
};_gbbeg ,_bdbga :=_bgg .GetString (_bcbgd );if !_bdbga {return nil ,_e .Errorf ("\u0074\u0069\u0074le\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0073\u0074\u0072\u0069\u006e\u0067\u0020\u0028\u0025\u0054\u0029",_bcbgd );};_eacef .Title =_gbbeg ;if _fecce :=_cceb .Get ("\u0043\u006f\u0075n\u0074");
_fecce !=nil {_ceddg ,_ccbaa :=_fecce .(*_bgg .PdfObjectInteger );if !_ccbaa {return nil ,_e .Errorf ("\u0063o\u0075\u006e\u0074\u0020n\u006f\u0074\u0020\u0061\u006e \u0069n\u0074e\u0067\u0065\u0072\u0020\u0028\u0025\u0054)",_fecce );};_fccac :=int64 (*_ceddg );
_eacef .Count =&_fccac ;};if _dcfb :=_cceb .Get ("\u0044\u0065\u0073\u0074");_dcfb !=nil {_eacef .Dest =_bgg .ResolveReference (_dcfb );if !_gbca ._cdbfbb {_ebabf :=_gbca .traverseObjectData (_eacef .Dest );if _ebabf !=nil {return nil ,_ebabf ;};};};if _bdcbc :=_cceb .Get ("\u0041");
_bdcbc !=nil {_eacef .A =_bgg .ResolveReference (_bdcbc );if !_gbca ._cdbfbb {_eabd :=_gbca .traverseObjectData (_eacef .A );if _eabd !=nil {return nil ,_eabd ;};};};if _bbeb :=_cceb .Get ("\u0053\u0045");_bbeb !=nil {_eacef .SE =nil ;};if _gcaag :=_cceb .Get ("\u0043");
_gcaag !=nil {_eacef .C =_bgg .ResolveReference (_gcaag );};if _ffcdf :=_cceb .Get ("\u0046");_ffcdf !=nil {_eacef .F =_bgg .ResolveReference (_ffcdf );};return _eacef ,nil ;};func _dgebe (_fddcg *XObjectImage )error {if _fddcg .SMask ==nil {return nil ;
};_dcdfe ,_cagccd :=_fddcg .SMask .(*_bgg .PdfObjectStream );if !_cagccd {_dcf .Log .Debug ("\u0053\u004da\u0073\u006b\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u002a\u0050\u0064\u0066\u004f\u0062\u006a\u0065\u0063\u0074\u0053\u0074re\u0061\u006d");
return _bgg .ErrTypeError ;};_gecc :=_dcdfe .PdfObjectDictionary ;_abdb :=_gecc .Get ("\u004d\u0061\u0074t\u0065");if _abdb ==nil {return nil ;};_caeba ,_eebfa :=_babfa (_abdb .(*_bgg .PdfObjectArray ));if _eebfa !=nil {return _eebfa ;};_adbad :=_bgg .MakeArrayFromFloats ([]float64 {_caeba });
_gecc .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_adbad );return nil ;};

// NewPdfActionTrans returns a new "trans" action.
func NewPdfActionTrans ()*PdfActionTrans {_bce :=NewPdfAction ();_feg :=&PdfActionTrans {};_feg .PdfAction =_bce ;_bce .SetContext (_feg );return _feg ;};

// GetFontByName gets the font specified by keyName. Returns the PdfObject which
// the entry refers to. Returns a bool value indicating whether or not the entry was found.
func (_fafge *PdfPageResources )GetFontByName (keyName _bgg .PdfObjectName )(_bgg .PdfObject ,bool ){if _fafge .Font ==nil {return nil ,false ;};_dccg ,_faea :=_bgg .TraceToDirectObject (_fafge .Font ).(*_bgg .PdfObjectDictionary );if !_faea {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006fn\u0061\u0072\u0079\u0021\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_bgg .TraceToDirectObject (_fafge .Font ));
return nil ,false ;};if _gadg :=_dccg .Get (keyName );_gadg !=nil {return _gadg ,true ;};return nil ,false ;};const (FieldFlagClear FieldFlag =0;FieldFlagReadOnly FieldFlag =1;FieldFlagRequired FieldFlag =(1<<1);FieldFlagNoExport FieldFlag =(2<<1);FieldFlagNoToggleToOff FieldFlag =(1<<14);
FieldFlagRadio FieldFlag =(1<<15);FieldFlagPushbutton FieldFlag =(1<<16);FieldFlagRadiosInUnision FieldFlag =(1<<25);FieldFlagMultiline FieldFlag =(1<<12);FieldFlagPassword FieldFlag =(1<<13);FieldFlagFileSelect FieldFlag =(1<<20);FieldFlagDoNotScroll FieldFlag =(1<<23);
FieldFlagComb FieldFlag =(1<<24);FieldFlagRichText FieldFlag =(1<<26);FieldFlagDoNotSpellCheck FieldFlag =(1<<22);FieldFlagCombo FieldFlag =(1<<17);FieldFlagEdit FieldFlag =(1<<18);FieldFlagSort FieldFlag =(1<<19);FieldFlagMultiSelect FieldFlag =(1<<21);
FieldFlagCommitOnSelChange FieldFlag =(1<<27););func _acgfb (_ecbbg _bgg .PdfObject )(map[_cc .CharCode ]float64 ,error ){if _ecbbg ==nil {return nil ,nil ;};_abddb ,_egaab :=_bgg .GetArray (_ecbbg );if !_egaab {return nil ,nil ;};_fdgf :=map[_cc .CharCode ]float64 {};
_aaaeg :=_abddb .Len ();for _bgaa :=0;_bgaa < _aaaeg -1;_bgaa ++{_dgdaf :=_bgg .TraceToDirectObject (_abddb .Get (_bgaa ));_ecef ,_bdbbc :=_bgg .GetIntVal (_dgdaf );if !_bdbbc {return nil ,_e .Errorf ("\u0042a\u0064\u0020\u0066\u006fn\u0074\u0020\u0057\u0020\u006fb\u006a0\u003a \u0069\u003d\u0025\u0064\u0020\u0025\u0023v",_bgaa ,_dgdaf );
};_bgaa ++;if _bgaa > _aaaeg -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_abddb );};_aaceb :=_bgg .TraceToDirectObject (_abddb .Get (_bgaa ));
switch _aaceb .(type ){case *_bgg .PdfObjectArray :_fbea ,_ :=_bgg .GetArray (_aaceb );if _gaef ,_cbffg :=_fbea .ToFloat64Array ();_cbffg ==nil {for _ddcfc :=0;_ddcfc < len (_gaef );_ddcfc ++{_fdgf [_cc .CharCode (_ecef +_ddcfc )]=_gaef [_ddcfc ];};}else {return nil ,_e .Errorf ("\u0042\u0061\u0064 \u0066\u006f\u006e\u0074 \u0057\u0020\u0061\u0072\u0072\u0061\u0079 \u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_bgaa ,_aaceb );
};case *_bgg .PdfObjectInteger :_adbcg ,_bgda :=_bgg .GetIntVal (_aaceb );if !_bgda {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0031\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_bgaa ,_aaceb );
};_bgaa ++;if _bgaa > _aaaeg -1{return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020a\u0072\u0072\u0061\u0079\u003a\u0020\u0061\u0072\u0072\u0032=\u0025\u002b\u0076",_abddb );};_aggbc :=_abddb .Get (_bgaa );_cbea ,_afeaf :=_bgg .GetNumberAsFloat (_aggbc );
if _afeaf !=nil {return nil ,_e .Errorf ("\u0042\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0057\u0020\u0069\u006e\u0074\u0020\u006f\u0062\u006a\u0032\u003a\u0020\u0069\u003d\u0025\u0064 %\u0023\u0076",_bgaa ,_aggbc );};for _cgeaa :=_ecef ;_cgeaa <=_adbcg ;
_cgeaa ++{_fdgf [_cc .CharCode (_cgeaa )]=_cbea ;};default:return nil ,_e .Errorf ("\u0042\u0061\u0064\u0020\u0066\u006f\u006e\u0074\u0020\u0057 \u006f\u0062\u006a\u0031\u0020\u0074\u0079p\u0065\u003a\u0020\u0069\u003d\u0025\u0064\u0020\u0025\u0023\u0076",_bgaa ,_aaceb );
};};return _fdgf ,nil ;};

// String returns a string representation of what flags are set.
func (_fgca FieldFlag )String ()string {_dafc :="";if _fgca ==FieldFlagClear {_dafc ="\u0043\u006c\u0065a\u0072";return _dafc ;};if _fgca &FieldFlagReadOnly > 0{_dafc +="\u007cR\u0065\u0061\u0064\u004f\u006e\u006cy";};if _fgca &FieldFlagRequired > 0{_dafc +="\u007cR\u0065\u0071\u0075\u0069\u0072\u0065d";
};if _fgca &FieldFlagNoExport > 0{_dafc +="\u007cN\u006f\u0045\u0078\u0070\u006f\u0072t";};if _fgca &FieldFlagNoToggleToOff > 0{_dafc +="\u007c\u004e\u006f\u0054\u006f\u0067\u0067\u006c\u0065T\u006f\u004f\u0066\u0066";};if _fgca &FieldFlagRadio > 0{_dafc +="\u007c\u0052\u0061\u0064\u0069\u006f";
};if _fgca &FieldFlagPushbutton > 0{_dafc +="|\u0050\u0075\u0073\u0068\u0062\u0075\u0074\u0074\u006f\u006e";};if _fgca &FieldFlagRadiosInUnision > 0{_dafc +="\u007c\u0052a\u0064\u0069\u006fs\u0049\u006e\u0055\u006e\u0069\u0073\u0069\u006f\u006e";};if _fgca &FieldFlagMultiline > 0{_dafc +="\u007c\u004d\u0075\u006c\u0074\u0069\u006c\u0069\u006e\u0065";
};if _fgca &FieldFlagPassword > 0{_dafc +="\u007cP\u0061\u0073\u0073\u0077\u006f\u0072d";};if _fgca &FieldFlagFileSelect > 0{_dafc +="|\u0046\u0069\u006c\u0065\u0053\u0065\u006c\u0065\u0063\u0074";};if _fgca &FieldFlagDoNotScroll > 0{_dafc +="\u007c\u0044\u006fN\u006f\u0074\u0053\u0063\u0072\u006f\u006c\u006c";
};if _fgca &FieldFlagComb > 0{_dafc +="\u007c\u0043\u006fm\u0062";};if _fgca &FieldFlagRichText > 0{_dafc +="\u007cR\u0069\u0063\u0068\u0054\u0065\u0078t";};if _fgca &FieldFlagDoNotSpellCheck > 0{_dafc +="\u007c\u0044o\u004e\u006f\u0074S\u0070\u0065\u006c\u006c\u0043\u0068\u0065\u0063\u006b";
};if _fgca &FieldFlagCombo > 0{_dafc +="\u007c\u0043\u006f\u006d\u0062\u006f";};if _fgca &FieldFlagEdit > 0{_dafc +="\u007c\u0045\u0064i\u0074";};if _fgca &FieldFlagSort > 0{_dafc +="\u007c\u0053\u006fr\u0074";};if _fgca &FieldFlagMultiSelect > 0{_dafc +="\u007c\u004d\u0075l\u0074\u0069\u0053\u0065\u006c\u0065\u0063\u0074";
};if _fgca &FieldFlagCommitOnSelChange > 0{_dafc +="\u007cC\u006fm\u006d\u0069\u0074\u004f\u006eS\u0065\u006cC\u0068\u0061\u006e\u0067\u0065";};return _ba .Trim (_dafc ,"\u007c");};

// ToGoImage converts the unidoc Image to a golang Image structure.
func (_bdgcd *Image )ToGoImage ()(_dc .Image ,error ){_dcf .Log .Trace ("\u0043\u006f\u006e\u0076er\u0074\u0069\u006e\u0067\u0020\u0074\u006f\u0020\u0067\u006f\u0020\u0069\u006d\u0061g\u0065");_cefgfc ,_bbaeb :=_dcg .NewImage (int (_bdgcd .Width ),int (_bdgcd .Height ),int (_bdgcd .BitsPerComponent ),_bdgcd .ColorComponents ,_bdgcd .Data ,_bdgcd ._bfcec ,_bdgcd ._ddaa );
if _bbaeb !=nil {return nil ,_bbaeb ;};return _cefgfc ,nil ;};

// GetPreviousRevision returns the previous revision of PdfReader for the Pdf document
func (_agegg *PdfReader )GetPreviousRevision ()(*PdfReader ,error ){if _agegg ._ebdgc .GetRevisionNumber ()==0{return nil ,_ag .New ("\u0070\u0072e\u0076\u0069\u006f\u0075\u0073\u0020\u0076\u0065\u0072\u0073\u0069\u006f\u006e\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0065xi\u0073\u0074");
};if _ebgfc ,_fagee :=_agegg ._gdfc [_agegg ];_fagee {return _ebgfc ,nil ;};_aedff ,_bebfc :=_agegg ._ebdgc .GetPreviousRevisionReadSeeker ();if _bebfc !=nil {return nil ,_bebfc ;};_gagc ,_bebfc :=_cdffe (_aedff ,_agegg ._fdbbf ,_agegg ._ceea ,"\u006do\u0064\u0065\u006c\u003aG\u0065\u0074\u0050\u0072\u0065v\u0069o\u0075s\u0052\u0065\u0076\u0069\u0073\u0069\u006fn");
if _bebfc !=nil {return nil ,_bebfc ;};_agegg ._bdegd [_agegg ._ebdgc .GetRevisionNumber ()-1]=_gagc ;_agegg ._gdfc [_agegg ]=_gagc ;_gagc ._gdfc =_agegg ._gdfc ;return _gagc ,nil ;};

// GetPage returns the PdfPage model for the specified page number.
func (_afgg *PdfReader )GetPage (pageNumber int )(*PdfPage ,error ){if _afgg ._ebdgc .GetCrypter ()!=nil &&!_afgg ._ebdgc .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006c\u0065\u0020\u006e\u0065\u0065\u0064\u0073\u0020\u0074\u006f\u0020\u0062e\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};if len (_afgg ._ebbfg )< pageNumber {return nil ,_ag .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0028\u0070\u0061\u0067\u0065\u0020\u0063\u006f\u0075\u006e\u0074\u0020\u0074o\u006f\u0020\u0073\u0068\u006f\u0072\u0074\u0029");
};_agbac :=pageNumber -1;if _agbac < 0{return nil ,_e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u006e\u0075\u006d\u0062\u0065r\u0069\u006e\u0067\u0020\u006d\u0075\u0073t\u0020\u0073\u0074\u0061\u0072\u0074\u0020\u0061\u0074\u0020\u0031");};_edbae :=_afgg .PageList [_agbac ];
return _edbae ,nil ;};

// ToPdfOutlineItem returns a low level PdfOutlineItem object,
// based on the current instance.
func (_caffg *OutlineItem )ToPdfOutlineItem ()(*PdfOutlineItem ,int64 ){_cgebf :=NewPdfOutlineItem ();_cgebf .Title =_bgg .MakeEncodedString (_caffg .Title ,true );_cgebf .Dest =_caffg .Dest .ToPdfObject ();var _cbfab []*PdfOutlineItem ;var _effdb int64 ;
var _eeee *PdfOutlineItem ;for _ ,_aafa :=range _caffg .Entries {_cfcdd ,_ebcda :=_aafa .ToPdfOutlineItem ();_cfcdd .Parent =&_cgebf .PdfOutlineTreeNode ;if _eeee !=nil {_eeee .Next =&_cfcdd .PdfOutlineTreeNode ;_cfcdd .Prev =&_eeee .PdfOutlineTreeNode ;
};_cbfab =append (_cbfab ,_cfcdd );_effdb +=_ebcda ;_eeee =_cfcdd ;};_cdbdb :=len (_cbfab );_effdb +=int64 (_cdbdb );if _cdbdb > 0{_cgebf .First =&_cbfab [0].PdfOutlineTreeNode ;_cgebf .Last =&_cbfab [_cdbdb -1].PdfOutlineTreeNode ;_cgebf .Count =&_effdb ;
};return _cgebf ,_effdb ;};

// ToPdfObject returns the button field dictionary within an indirect object.
func (_cdga *PdfFieldButton )ToPdfObject ()_bgg .PdfObject {_cdga .PdfField .ToPdfObject ();_bffdd :=_cdga ._fagb ;_afegg :=_bffdd .PdfObject .(*_bgg .PdfObjectDictionary );_afegg .Set ("\u0046\u0054",_bgg .MakeName ("\u0042\u0074\u006e"));if _cdga .Opt !=nil {_afegg .Set ("\u004f\u0070\u0074",_cdga .Opt );
};return _bffdd ;};

// DecodeArray returns the component range values for the Indexed colorspace.
func (_dacf *PdfColorspaceSpecialIndexed )DecodeArray ()[]float64 {return []float64 {0,float64 (_dacf .HiVal )};};func (_dfecb *PdfWriter )updateObjectNumbers (){_cfffg :=_dfecb .ObjNumOffset ;_dgdcf :=0;for _ ,_gbgde :=range _dfecb ._eddge {_fdgcf :=int64 (_dgdcf +1+_cfffg );
_fcddg :=true ;if _dfecb ._deagf {if _gbcfb ,_eefb :=_dfecb ._eeagf [_gbgde ];_eefb {_fdgcf =_gbcfb ;_fcddg =false ;};};switch _cgabf :=_gbgde .(type ){case *_bgg .PdfIndirectObject :_cgabf .ObjectNumber =_fdgcf ;_cgabf .GenerationNumber =0;case *_bgg .PdfObjectStream :_cgabf .ObjectNumber =_fdgcf ;
_cgabf .GenerationNumber =0;case *_bgg .PdfObjectStreams :_cgabf .ObjectNumber =_fdgcf ;_cgabf .GenerationNumber =0;default:_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u0020%\u0054\u0020\u002d\u0020\u0073\u006b\u0069p\u0070\u0069\u006e\u0067",_cgabf );
continue ;};if _fcddg {_dgdcf ++;};};_ddgag :=func (_fadcd _bgg .PdfObject )int64 {switch _agdgf :=_fadcd .(type ){case *_bgg .PdfIndirectObject :return _agdgf .ObjectNumber ;case *_bgg .PdfObjectStream :return _agdgf .ObjectNumber ;case *_bgg .PdfObjectStreams :return _agdgf .ObjectNumber ;
};return 0;};_gg .SliceStable (_dfecb ._eddge ,func (_fdgdfg ,_ggdcc int )bool {return _ddgag (_dfecb ._eddge [_fdgdfg ])< _ddgag (_dfecb ._eddge [_ggdcc ])});};func (_ccge *PdfAcroForm )fill (_agfe FieldValueProvider ,_caaba FieldAppearanceGenerator )error {if _ccge ==nil {return nil ;
};_fafab ,_ebcdc :=_agfe .FieldValues ();if _ebcdc !=nil {return _ebcdc ;};for _ ,_baff :=range _ccge .AllFields (){_aadeb :=_baff .PartialName ();_eeed ,_aebef :=_fafab [_aadeb ];if !_aebef {if _ababf ,_cgdee :=_baff .FullName ();_cgdee ==nil {_eeed ,_aebef =_fafab [_ababf ];
};};if !_aebef {_dcf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020f\u006f\u0072\u006d \u0066\u0069\u0065l\u0064\u0020\u0025\u0073\u0020\u006e\u006f\u0074\u0020\u0066o\u0075\u006e\u0064\u0020\u0069n \u0074\u0068\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0072\u002e\u0020\u0053\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u002e",_aadeb );
continue ;};if _aaedd :=_facf (_baff ,_eeed );_aaedd !=nil {return _aaedd ;};if _caaba ==nil {continue ;};for _ ,_ddca :=range _baff .Annotations {_cddf ,_acefe :=_caaba .GenerateAppearanceDict (_ccge ,_baff ,_ddca );if _acefe !=nil {return _acefe ;};_ddca .AP =_cddf ;
_ddca .ToPdfObject ();};};return nil ;};

// SignatureHandlerDocMDP extends SignatureHandler with the ValidateWithOpts method for checking the DocMDP policy.
type SignatureHandlerDocMDP interface{SignatureHandler ;

// ValidateWithOpts validates a PDF signature by checking PdfReader or PdfParser
// ValidateWithOpts shall contain Validate call
ValidateWithOpts (_fgcdc *PdfSignature ,_dcccg Hasher ,_aega SignatureHandlerDocMDPParams )(SignatureValidationResult ,error );};func (_cegadc *PdfReader )loadPerms ()(*Permissions ,error ){if _aacae :=_cegadc ._gaebb .Get ("\u0050\u0065\u0072m\u0073");
_aacae !=nil {if _cabee ,_gbfeg :=_bgg .GetDict (_aacae );_gbfeg {_dggbd :=_cabee .Get ("\u0044\u006f\u0063\u004d\u0044\u0050");if _dggbd ==nil {return nil ,nil ;};if _dcfeg ,_gbbcbg :=_bgg .GetIndirect (_dggbd );_gbbcbg {_afgbg ,_babg :=_cegadc .newPdfSignatureFromIndirect (_dcfeg );
if _babg !=nil {return nil ,_babg ;};return NewPermissions (_afgbg ),nil ;};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u006f\u0063M\u0044\u0050\u0020\u0065nt\u0072\u0079");};return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0050\u0065\u0072\u006d\u0073\u0020\u0065\u006e\u0074\u0072\u0079");
};return nil ,nil ;};

// GetCharMetrics returns the char metrics for character code `code`.
func (_dfag pdfFontType0 )GetCharMetrics (code _cc .CharCode )(_dad .CharMetrics ,bool ){if _dfag .DescendantFont ==nil {_dcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u002e\u0020\u0066\u006f\u006et=\u0025\u0073",_dfag );
return _dad .CharMetrics {},false ;};return _dfag .DescendantFont .GetCharMetrics (code );};

// FieldValueProvider provides field values from a data source such as FDF, JSON or any other.
type FieldValueProvider interface{FieldValues ()(map[string ]_bgg .PdfObject ,error );};

// PdfAnnotationFreeText represents FreeText annotations.
// (Section 12.5.6.6).
type PdfAnnotationFreeText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;DA _bgg .PdfObject ;Q _bgg .PdfObject ;RC _bgg .PdfObject ;DS _bgg .PdfObject ;CL _bgg .PdfObject ;IT _bgg .PdfObject ;BE _bgg .PdfObject ;RD _bgg .PdfObject ;BS _bgg .PdfObject ;LE _bgg .PdfObject ;
};

// IsRadio returns true if the button field represents a radio button, false otherwise.
func (_baeaa *PdfFieldButton )IsRadio ()bool {return _baeaa .GetType ()==ButtonTypeRadio };func _babfa (_ebacfg *_bgg .PdfObjectArray )(float64 ,error ){_gcegeb ,_dgefef :=_ebacfg .ToFloat64Array ();if _dgefef !=nil {_dcf .Log .Debug ("\u0042\u0061\u0064\u0020\u004d\u0061\u0074\u0074\u0065\u0020\u0061\u0072\u0072\u0061\u0079:\u0020m\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ebacfg ,_dgefef );
};switch len (_gcegeb ){case 1:return _gcegeb [0],nil ;case 3:_cgaea :=PdfColorspaceDeviceRGB {};_cggaf ,_cgbg :=_cgaea .ColorFromFloats (_gcegeb );if _cgbg !=nil {return 0.0,_cgbg ;};return _cggaf .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;case 4:_fgfd :=PdfColorspaceDeviceCMYK {};
_bffcc ,_accb :=_fgfd .ColorFromFloats (_gcegeb );if _accb !=nil {return 0.0,_accb ;};_febc ,_accb :=_fgfd .ColorToRGB (_bffcc .(*PdfColorDeviceCMYK ));if _accb !=nil {return 0.0,_accb ;};return _febc .(*PdfColorDeviceRGB ).ToGray ().Val (),nil ;};_dgefef =_ag .New ("\u0062a\u0064 \u004d\u0061\u0074\u0074\u0065\u0020\u0063\u006f\u006c\u006f\u0072");
_dcf .Log .Error ("\u0074\u006f\u0047ra\u0079\u003a\u0020\u006d\u0061\u0074\u0074\u0065\u003d\u0025\u0073\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_ebacfg ,_dgefef );return 0.0,_dgefef ;};func (_befba *LTV )buildCertChain (_eafcg ,_gbeaa []*_dd .Certificate )([]*_dd .Certificate ,map[string ]*_dd .Certificate ,error ){_cace :=map[string ]*_dd .Certificate {};
for _ ,_ebag :=range _eafcg {_cace [_ebag .Subject .CommonName ]=_ebag ;};_gafbe :=_eafcg ;for _ ,_egdg :=range _gbeaa {_gffb :=_egdg .Subject .CommonName ;if _ ,_ggda :=_cace [_gffb ];_ggda {continue ;};_cace [_gffb ]=_egdg ;_gafbe =append (_gafbe ,_egdg );
};if len (_gafbe )==0{return nil ,nil ,ErrSignNoCertificates ;};var _ecfae error ;for _gbcec :=_gafbe [0];_gbcec !=nil &&!_befba .CertClient .IsCA (_gbcec );{_dggb ,_adbbf :=_cace [_gbcec .Issuer .CommonName ];if !_adbbf {if _dggb ,_ecfae =_befba .CertClient .GetIssuer (_gbcec );
_ecfae !=nil {_dcf .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0043\u006f\u0075\u006cd\u0020\u006e\u006f\u0074\u0020\u0072\u0065tr\u0069\u0065\u0076\u0065 \u0063\u0065\u0072\u0074\u0069\u0066\u0069\u0063\u0061te\u0020\u0069s\u0073\u0075\u0065\u0072\u003a\u0020\u0025\u0076",_ecfae );
break ;};_cace [_gbcec .Issuer .CommonName ]=_dggb ;_gafbe =append (_gafbe ,_dggb );};_gbcec =_dggb ;};return _gafbe ,_cace ,nil ;};

// SetXObjectByName adds the XObject from the passed in stream to the page resources.
// The added XObject is identified by the specified name.
func (_ecdad *PdfPageResources )SetXObjectByName (keyName _bgg .PdfObjectName ,stream *_bgg .PdfObjectStream )error {if _ecdad .XObject ==nil {_ecdad .XObject =_bgg .MakeDict ();};_fgaaf :=_bgg .TraceToDirectObject (_ecdad .XObject );_bage ,_cbgg :=_fgaaf .(*_bgg .PdfObjectDictionary );
if !_cbgg {_dcf .Log .Debug ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0058\u004f\u0062j\u0065\u0063\u0074\u002c\u0020\u0067\u006f\u0074\u0020\u0025T\u002f\u0025\u0054",_ecdad .XObject ,_fgaaf );return _ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");
};_bage .Set (keyName ,stream );return nil ;};

// SetFillImage attach a model.Image to push button.
func (_gbbd *PdfFieldButton )SetFillImage (image *Image ){if _gbbd .IsPush (){_gbbd ._bgfd =image ;};};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_addff *PdfShadingType3 )ToPdfObject ()_bgg .PdfObject {_addff .PdfShading .ToPdfObject ();_edcec ,_dgfeg :=_addff .getShadingDict ();if _dgfeg !=nil {_dcf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _addff .Coords !=nil {_edcec .Set ("\u0043\u006f\u006f\u0072\u0064\u0073",_addff .Coords );};if _addff .Domain !=nil {_edcec .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_addff .Domain );};if _addff .Function !=nil {if len (_addff .Function )==1{_edcec .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_addff .Function [0].ToPdfObject ());
}else {_adagf :=_bgg .MakeArray ();for _ ,_agbf :=range _addff .Function {_adagf .Append (_agbf .ToPdfObject ());};_edcec .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_adagf );};};if _addff .Extend !=nil {_edcec .Set ("\u0045\u0078\u0074\u0065\u006e\u0064",_addff .Extend );
};return _addff ._fcfbb ;};

// GetContainingPdfObject returns the container of the DSS (indirect object).
func (_ebcdg *DSS )GetContainingPdfObject ()_bgg .PdfObject {return _ebcdg ._cegfd };

// PdfOutlineTreeNode contains common fields used by the outline and outline
// item objects.
type PdfOutlineTreeNode struct{_ebbf interface{};First *PdfOutlineTreeNode ;Last *PdfOutlineTreeNode ;};

// ToPdfObject implements interface PdfModel.
func (_bgeg *PdfBorderStyle )ToPdfObject ()_bgg .PdfObject {_dcde :=_bgg .MakeDict ();if _bgeg ._bcg !=nil {if _caae ,_ffbaa :=_bgeg ._bcg .(*_bgg .PdfIndirectObject );_ffbaa {_caae .PdfObject =_dcde ;};};_dcde .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0042\u006f\u0072\u0064\u0065\u0072"));
if _bgeg .W !=nil {_dcde .Set ("\u0057",_bgg .MakeFloat (*_bgeg .W ));};if _bgeg .S !=nil {_dcde .Set ("\u0053",_bgg .MakeName (_bgeg .S .GetPdfName ()));};if _bgeg .D !=nil {_dcde .Set ("\u0044",_bgg .MakeArrayFromIntegers (*_bgeg .D ));};if _bgeg ._bcg !=nil {return _bgeg ._bcg ;
};return _dcde ;};

// GetRuneMetrics returns the character metrics for the specified rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_fcdbg pdfCIDFontType0 )GetRuneMetrics (r rune )(_dad .CharMetrics ,bool ){return _dad .CharMetrics {Wx :_fcdbg ._ceceg },true ;};

// CustomKeys returns all custom info keys as list.
func (_gcfcc *PdfInfo )CustomKeys ()[]string {if _gcfcc ._fdaag ==nil {return nil ;};_baab :=make ([]string ,len (_gcfcc ._fdaag .Keys ()));for _ ,_bbga :=range _gcfcc ._fdaag .Keys (){_baab =append (_baab ,_bbga .String ());};return _baab ;};func _dcaea (_gfbce *_bgg .PdfObjectDictionary )(*PdfFieldText ,error ){_ccgc :=&PdfFieldText {};
_ccgc .DA ,_ =_bgg .GetString (_gfbce .Get ("\u0044\u0041"));_ccgc .Q ,_ =_bgg .GetInt (_gfbce .Get ("\u0051"));_ccgc .DS ,_ =_bgg .GetString (_gfbce .Get ("\u0044\u0053"));_ccgc .RV =_gfbce .Get ("\u0052\u0056");_ccgc .MaxLen ,_ =_bgg .GetInt (_gfbce .Get ("\u004d\u0061\u0078\u004c\u0065\u006e"));
return _ccgc ,nil ;};func _eegde ()string {_abfga .Lock ();defer _abfga .Unlock ();if len (_aecbg )> 0{return _aecbg ;};return "\u0055n\u0069\u0044\u006f\u0063 \u002d\u0020\u0068\u0074\u0074p\u003a/\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069o";};


// StandardImplementer is an interface that defines specified PDF standards like PDF/A-1A (pdfa.Profile1A)
// NOTE: This implementation is in experimental development state.
// 	Keep in mind that it might change in the subsequent minor versions.
type StandardImplementer interface{StandardValidator ;StandardApplier ;

// StandardName gets the human-readable name of the standard.
StandardName ()string ;};

// PdfAnnotationCaret represents Caret annotations.
// (Section 12.5.6.11).
type PdfAnnotationCaret struct{*PdfAnnotation ;*PdfAnnotationMarkup ;RD _bgg .PdfObject ;Sy _bgg .PdfObject ;};func (_egcf *PdfColorspaceLab )String ()string {return "\u004c\u0061\u0062"};var _fcaffd =map[string ]string {"\u0053\u0079\u006d\u0062\u006f\u006c":"\u0053\u0079\u006d\u0062\u006f\u006c\u0045\u006e\u0063o\u0064\u0069\u006e\u0067","\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073":"Z\u0061p\u0066\u0044\u0069\u006e\u0067\u0062\u0061\u0074s\u0045\u006e\u0063\u006fdi\u006e\u0067"};


// ToPdfObject implements interface PdfModel.
func (_bcb *PdfActionThread )ToPdfObject ()_bgg .PdfObject {_bcb .PdfAction .ToPdfObject ();_ccd :=_bcb ._ddf ;_ddc :=_ccd .PdfObject .(*_bgg .PdfObjectDictionary );_ddc .SetIfNotNil ("\u0053",_bgg .MakeName (string (ActionTypeThread )));if _bcb .F !=nil {_ddc .Set ("\u0046",_bcb .F .ToPdfObject ());
};_ddc .SetIfNotNil ("\u0044",_bcb .D );_ddc .SetIfNotNil ("\u0042",_bcb .B );return _ccd ;};

// GetContainingPdfObject implements interface PdfModel.
func (_feeac *PdfFilespec )GetContainingPdfObject ()_bgg .PdfObject {return _feeac ._efde };

// PdfAnnotationWidget represents Widget annotations.
// Note: Widget annotations are used to display form fields.
// (Section 12.5.6.19).
type PdfAnnotationWidget struct{*PdfAnnotation ;H _bgg .PdfObject ;MK _bgg .PdfObject ;A _bgg .PdfObject ;AA _bgg .PdfObject ;BS _bgg .PdfObject ;Parent _bgg .PdfObject ;_aaa *PdfField ;_aga bool ;};

// NewPdfActionRendition returns a new "rendition" action.
func NewPdfActionRendition ()*PdfActionRendition {_abe :=NewPdfAction ();_cegb :=&PdfActionRendition {};_cegb .PdfAction =_abe ;_abe .SetContext (_cegb );return _cegb ;};

// GetAsShadingPattern returns a shading pattern. Check with IsShading() prior to using this.
func (_gbaa *PdfPattern )GetAsShadingPattern ()*PdfShadingPattern {return _gbaa ._dcdgae .(*PdfShadingPattern );};

// NewPdfActionSound returns a new "sound" action.
func NewPdfActionSound ()*PdfActionSound {_bgge :=NewPdfAction ();_ggf :=&PdfActionSound {};_ggf .PdfAction =_bgge ;_bgge .SetContext (_ggf );return _ggf ;};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain three PdfObjectFloat elements representing
// the A, B and C components of the color.
func (_dacg *PdfColorspaceCalRGB )ColorFromPdfObjects (objects []_bgg .PdfObject )(PdfColor ,error ){if len (objects )!=3{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_caaa ,_fbagb :=_bgg .GetNumbersAsFloat (objects );
if _fbagb !=nil {return nil ,_fbagb ;};return _dacg .ColorFromFloats (_caaa );};

// SetName sets the `Name` field of the signature.
func (_ffbeb *PdfSignature )SetName (name string ){_ffbeb .Name =_bgg .MakeString (name )};

// ToPdfObject implements interface PdfModel.
func (_bbgd *PdfAnnotationHighlight )ToPdfObject ()_bgg .PdfObject {_bbgd .PdfAnnotation .ToPdfObject ();_ceac :=_bbgd ._gec ;_eced :=_ceac .PdfObject .(*_bgg .PdfObjectDictionary );_bbgd .PdfAnnotationMarkup .appendToPdfDictionary (_eced );_eced .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0048i\u0067\u0068\u006c\u0069\u0067\u0068t"));
_eced .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_bbgd .QuadPoints );return _ceac ;};

// GetXObjectByName returns the XObject with the specified keyName and the object type.
func (_abfgd *PdfPageResources )GetXObjectByName (keyName _bgg .PdfObjectName )(*_bgg .PdfObjectStream ,XObjectType ){if _abfgd .XObject ==nil {return nil ,XObjectTypeUndefined ;};_gbgfa ,_afeb :=_bgg .TraceToDirectObject (_abfgd .XObject ).(*_bgg .PdfObjectDictionary );
if !_afeb {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u006e\u006f\u0074\u0020a\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0021\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_bgg .TraceToDirectObject (_abfgd .XObject ));
return nil ,XObjectTypeUndefined ;};if _bdaec :=_gbgfa .Get (keyName );_bdaec !=nil {_efba ,_fdcgg :=_bgg .GetStream (_bdaec );if !_fdcgg {_dcf .Log .Debug ("X\u004f\u0062\u006a\u0065\u0063\u0074 \u006e\u006f\u0074\u0020\u0070\u006fi\u006e\u0074\u0069\u006e\u0067\u0020\u0074o\u0020\u0061\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020%\u0054",_bdaec );
return nil ,XObjectTypeUndefined ;};_gacgca :=_efba .PdfObjectDictionary ;_adedb ,_fdcgg :=_bgg .TraceToDirectObject (_gacgca .Get ("\u0053u\u0062\u0074\u0079\u0070\u0065")).(*_bgg .PdfObjectName );if !_fdcgg {_dcf .Log .Debug ("\u0058\u004fbj\u0065\u0063\u0074 \u0053\u0075\u0062\u0074ype\u0020no\u0074\u0020\u0061\u0020\u004e\u0061\u006de,\u0020\u0064\u0069\u0063\u0074\u003a\u0020%\u0073",_gacgca .String ());
return nil ,XObjectTypeUndefined ;};if *_adedb =="\u0049\u006d\u0061g\u0065"{return _efba ,XObjectTypeImage ;}else if *_adedb =="\u0046\u006f\u0072\u006d"{return _efba ,XObjectTypeForm ;}else if *_adedb =="\u0050\u0053"{return _efba ,XObjectTypePS ;}else {_dcf .Log .Debug ("\u0058\u004f\u0062\u006a\u0065\u0063\u0074\u0020\u0053\u0075b\u0074\u0079\u0070\u0065\u0020\u006e\u006ft\u0020\u006b\u006e\u006f\u0077\u006e\u0020\u0028\u0025\u0073\u0029",*_adedb );
return nil ,XObjectTypeUndefined ;};}else {return nil ,XObjectTypeUndefined ;};};

// ImageToRGB returns an error since an image cannot be defined in a pattern colorspace.
func (_dgcg *PdfColorspaceSpecialPattern )ImageToRGB (img Image )(Image ,error ){_dcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0049\u006d\u0061\u0067\u0065\u0020\u0063\u0061n\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066i\u0065\u0064\u0020\u0069\u006e\u0020\u0050\u0061\u0074\u0074\u0065\u0072n \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
return img ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0066\u006f\u0072\u0020\u0069m\u0061\u0067\u0065\u0020\u0028p\u0061\u0074t\u0065\u0072\u006e\u0029");};

// GetRotate gets the inheritable rotate value, either from the page
// or a higher up page/pages struct.
func (_aecc *PdfPage )GetRotate ()(int64 ,error ){if _aecc .Rotate !=nil {return *_aecc .Rotate ,nil ;};_bgcee :=_aecc .Parent ;for _bgcee !=nil {_gdgdd ,_bcbf :=_bgg .GetDict (_bgcee );if !_bcbf {return 0,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063t\u0073\u0020\u0064\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079");
};if _dddg :=_gdgdd .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_dddg !=nil {_daecb ,_bddcdc :=_bgg .GetInt (_dddg );if !_bddcdc {return 0,_ag .New ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0072\u006f\u0074a\u0074\u0065\u0020\u0076al\u0075\u0065");};
if _daecb !=nil {return int64 (*_daecb ),nil ;};return 0,_ag .New ("\u0072\u006f\u0074\u0061te\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0069\u0073\u0020\u006e\u0069\u006c");};_bgcee =_gdgdd .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");};return 0,_ag .New ("\u0072o\u0074a\u0074\u0065\u0020\u006e\u006ft\u0020\u0064e\u0066\u0069\u006e\u0065\u0064");
};

// SetDate sets the `M` field of the signature.
func (_ebeb *PdfSignature )SetDate (date _g .Time ,format string ){if format ==""{format ="\u0044\u003a\u003200\u0036\u0030\u0031\u0030\u0032\u0031\u0035\u0030\u0034\u0030\u0035\u002d\u0030\u0037\u0027\u0030\u0030\u0027";};_ebeb .M =_bgg .MakeString (date .Format (format ));
};

// PdfAnnotationLine represents Line annotations.
// (Section 12.5.6.7).
type PdfAnnotationLine struct{*PdfAnnotation ;*PdfAnnotationMarkup ;L _bgg .PdfObject ;BS _bgg .PdfObject ;LE _bgg .PdfObject ;IC _bgg .PdfObject ;LL _bgg .PdfObject ;LLE _bgg .PdfObject ;Cap _bgg .PdfObject ;IT _bgg .PdfObject ;LLO _bgg .PdfObject ;CP _bgg .PdfObject ;
Measure _bgg .PdfObject ;CO _bgg .PdfObject ;};func (_gaebd *PdfReader )loadDSS ()(*DSS ,error ){if _gaebd ._ebdgc .GetCrypter ()!=nil &&!_gaebd ._ebdgc .IsAuthenticated (){return nil ,_e .Errorf ("\u0066\u0069\u006ce\u0020\u006e\u0065\u0065d\u0020\u0074\u006f\u0020\u0062\u0065\u0020d\u0065\u0063\u0072\u0079\u0070\u0074\u0065\u0064\u0020\u0066\u0069\u0072\u0073\u0074");
};_bggga :=_gaebd ._gaebb .Get ("\u0044\u0053\u0053");if _bggga ==nil {return nil ,nil ;};_afabf ,_ :=_bgg .GetIndirect (_bggga );_bggga =_bgg .TraceToDirectObject (_bggga );switch _cfaeab :=_bggga .(type ){case *_bgg .PdfObjectNull :return nil ,nil ;case *_bgg .PdfObjectDictionary :return _cbgb (_afabf ,_cfaeab );
};return nil ,_e .Errorf ("i\u006ev\u0061\u006c\u0069\u0064\u0020\u0044\u0053\u0053 \u0065\u006e\u0074\u0072y \u0025\u0054",_bggga );};

// GetFontDescriptor returns the font descriptor for `font`.
func (_caea PdfFont )GetFontDescriptor ()(*PdfFontDescriptor ,error ){return _caea ._efdec .getFontDescriptor (),nil ;};func (_eecfc *XObjectImage )getParamsDict ()*_bgg .PdfObjectDictionary {_dcdgcc :=_bgg .MakeDict ();_dcdgcc .Set ("\u0057\u0069\u0064t\u0068",_bgg .MakeInteger (*_eecfc .Width ));
_dcdgcc .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bgg .MakeInteger (*_eecfc .Height ));_dcdgcc .Set ("\u0043o\u006co\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073",_bgg .MakeInteger (int64 (_eecfc .ColorSpace .GetNumComponents ())));
_dcdgcc .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bgg .MakeInteger (*_eecfc .BitsPerComponent ));return _dcdgcc ;};

// NewPdfColorspaceDeviceCMYK returns a new CMYK32 colorspace object.
func NewPdfColorspaceDeviceCMYK ()*PdfColorspaceDeviceCMYK {return &PdfColorspaceDeviceCMYK {}};

// PdfColorDeviceRGB represents a color in DeviceRGB colorspace with R, G, B components, where component is
// defined in the range 0.0 - 1.0 where 1.0 is the primary intensity.
type PdfColorDeviceRGB [3]float64 ;

// ToPdfObject returns a PdfObject representation of PdfColorspaceDeviceNAttributes as a PdfObjectDictionary directly
// or indirectly within an indirect object container.
func (_dabc *PdfColorspaceDeviceNAttributes )ToPdfObject ()_bgg .PdfObject {_cdde :=_bgg .MakeDict ();if _dabc .Subtype !=nil {_cdde .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_dabc .Subtype );};_cdde .SetIfNotNil ("\u0043o\u006c\u006f\u0072\u0061\u006e\u0074s",_dabc .Colorants );
_cdde .SetIfNotNil ("\u0050r\u006f\u0063\u0065\u0073\u0073",_dabc .Process );_cdde .SetIfNotNil ("M\u0069\u0078\u0069\u006e\u0067\u0048\u0069\u006e\u0074\u0073",_dabc .MixingHints );if _dabc ._faad !=nil {_dabc ._faad .PdfObject =_cdde ;return _dabc ._faad ;
};return _cdde ;};

// SetContentStream updates the content stream with specified encoding.
// If encoding is null, will use the xform.Filter object or Raw encoding if not set.
func (_bgbaec *XObjectForm )SetContentStream (content []byte ,encoder _bgg .StreamEncoder )error {_fabgg :=content ;if encoder ==nil {if _bgbaec .Filter !=nil {encoder =_bgbaec .Filter ;}else {encoder =_bgg .NewRawEncoder ();};};_aagdb ,_gbaac :=encoder .EncodeBytes (_fabgg );
if _gbaac !=nil {return _gbaac ;};_fabgg =_aagdb ;_bgbaec .Stream =_fabgg ;_bgbaec .Filter =encoder ;return nil ;};func (_edced *pdfFontSimple )updateStandard14Font (){_bgfbb ,_bbfdf :=_edced .Encoder ().(_cc .SimpleEncoder );if !_bbfdf {_dcf .Log .Error ("\u0057\u0072\u006f\u006e\u0067\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074y\u0070e\u003a\u0020\u0025\u0054\u002e\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073\u002e",_edced .Encoder (),_edced );
return ;};_egbdb :=_bgfbb .Charcodes ();_edced ._dcbe =make (map[_cc .CharCode ]float64 ,len (_egbdb ));for _ ,_cbcfa :=range _egbdb {_bfae ,_ :=_bgfbb .CharcodeToRune (_cbcfa );_dddf ,_ :=_edced ._ebfec .Read (_bfae );_edced ._dcbe [_cbcfa ]=_dddf .Wx ;
};};

// ToPdfObject returns the PDF representation of the tiling pattern.
func (_caaad *PdfTilingPattern )ToPdfObject ()_bgg .PdfObject {_caaad .PdfPattern .ToPdfObject ();_cgfb :=_caaad .getDict ();if _caaad .PaintType !=nil {_cgfb .Set ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e",_caaad .PaintType );};if _caaad .TilingType !=nil {_cgfb .Set ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065",_caaad .TilingType );
};if _caaad .BBox !=nil {_cgfb .Set ("\u0042\u0042\u006f\u0078",_caaad .BBox .ToPdfObject ());};if _caaad .XStep !=nil {_cgfb .Set ("\u0058\u0053\u0074e\u0070",_caaad .XStep );};if _caaad .YStep !=nil {_cgfb .Set ("\u0059\u0053\u0074e\u0070",_caaad .YStep );
};if _caaad .Resources !=nil {_cgfb .Set ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s",_caaad .Resources .ToPdfObject ());};if _caaad .Matrix !=nil {_cgfb .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_caaad .Matrix );};return _caaad ._aebfe ;};func _fffa (_dfafc _bgg .PdfObject )(*PdfPageResourcesColorspaces ,error ){_ccbfc :=&PdfPageResourcesColorspaces {};
if _bfagb ,_ggagg :=_dfafc .(*_bgg .PdfIndirectObject );_ggagg {_ccbfc ._abaa =_bfagb ;_dfafc =_bfagb .PdfObject ;};_ggddg ,_afgbbd :=_bgg .GetDict (_dfafc );if !_afgbbd {return nil ,_ag .New ("\u0043\u0053\u0020at\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};_ccbfc .Names =[]string {};_ccbfc .Colorspaces =map[string ]PdfColorspace {};for _ ,_fbgdc :=range _ggddg .Keys (){_ffdbe :=_ggddg .Get (_fbgdc );_ccbfc .Names =append (_ccbfc .Names ,string (_fbgdc ));_caeeg ,_edgcf :=NewPdfColorspaceFromPdfObject (_ffdbe );
if _edgcf !=nil {return nil ,_edgcf ;};_ccbfc .Colorspaces [string (_fbgdc )]=_caeeg ;};return _ccbfc ,nil ;};

// K returns the value of the key component of the color.
func (_afbga *PdfColorDeviceCMYK )K ()float64 {return _afbga [3]};

// SetOpenAction sets the OpenAction in the PDF catalog.
// The value shall be either an array defining a destination (12.3.2 "Destinations" PDF32000_2008),
// or an action dictionary representing an action (12.6 "Actions" PDF32000_2008).
func (_gfbae *PdfWriter )SetOpenAction (dest _bgg .PdfObject )error {if dest ==nil ||_bgg .IsNullObject (dest ){return nil ;};_gfbae ._ffbb .Set ("\u004f\u0070\u0065\u006e\u0041\u0063\u0074\u0069\u006f\u006e",dest );return _gfbae .addObjects (dest );};


// ToPdfObject convert PdfInfo to pdf object.
func (_bcgg *PdfInfo )ToPdfObject ()_bgg .PdfObject {_febg :=_bgg .MakeDict ();_febg .SetIfNotNil ("\u0054\u0069\u0074l\u0065",_bcgg .Title );_febg .SetIfNotNil ("\u0041\u0075\u0074\u0068\u006f\u0072",_bcgg .Author );_febg .SetIfNotNil ("\u0053u\u0062\u006a\u0065\u0063\u0074",_bcgg .Subject );
_febg .SetIfNotNil ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073",_bcgg .Keywords );_febg .SetIfNotNil ("\u0043r\u0065\u0061\u0074\u006f\u0072",_bcgg .Creator );_febg .SetIfNotNil ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072",_bcgg .Producer );
_febg .SetIfNotNil ("\u0054r\u0061\u0070\u0070\u0065\u0064",_bcgg .Trapped );if _bcgg .CreationDate !=nil {_febg .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_bcgg .CreationDate .ToPdfObject ());};if _bcgg .ModifiedDate !=nil {_febg .SetIfNotNil ("\u004do\u0064\u0044\u0061\u0074\u0065",_bcgg .ModifiedDate .ToPdfObject ());
};for _ ,_dade :=range _bcgg ._fdaag .Keys (){_febg .SetIfNotNil (_dade ,_bcgg ._fdaag .Get (_dade ));};return _febg ;};func (_dfgc *PdfAnnotationMarkup )appendToPdfDictionary (_cega *_bgg .PdfObjectDictionary ){_cega .SetIfNotNil ("\u0054",_dfgc .T );
if _dfgc .Popup !=nil {_cega .Set ("\u0050\u006f\u0070u\u0070",_dfgc .Popup .ToPdfObject ());};_cega .SetIfNotNil ("\u0043\u0041",_dfgc .CA );_cega .SetIfNotNil ("\u0052\u0043",_dfgc .RC );_cega .SetIfNotNil ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065",_dfgc .CreationDate );
_cega .SetIfNotNil ("\u0049\u0052\u0054",_dfgc .IRT );_cega .SetIfNotNil ("\u0053\u0075\u0062\u006a",_dfgc .Subj );_cega .SetIfNotNil ("\u0052\u0054",_dfgc .RT );_cega .SetIfNotNil ("\u0049\u0054",_dfgc .IT );_cega .SetIfNotNil ("\u0045\u0078\u0044\u0061\u0074\u0061",_dfgc .ExData );
};

// NewPdfColorCalRGB returns a new CalRBG color.
func NewPdfColorCalRGB (a ,b ,c float64 )*PdfColorCalRGB {_dffe :=PdfColorCalRGB {a ,b ,c };return &_dffe ;};

// PdfAnnotationRedact represents Redact annotations.
// (Section 12.5.6.23).
type PdfAnnotationRedact struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bgg .PdfObject ;IC _bgg .PdfObject ;RO _bgg .PdfObject ;OverlayText _bgg .PdfObject ;Repeat _bgg .PdfObject ;DA _bgg .PdfObject ;Q _bgg .PdfObject ;};

// ToPdfObject returns the PDF representation of the colorspace.
func (_ccce *PdfColorspaceDeviceGray )ToPdfObject ()_bgg .PdfObject {return _bgg .MakeName ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079");};

// NewPdfActionThread returns a new "thread" action.
func NewPdfActionThread ()*PdfActionThread {_bba :=NewPdfAction ();_ege :=&PdfActionThread {};_ege .PdfAction =_bba ;_bba .SetContext (_ege );return _ege ;};func _cccg ()string {_abfga .Lock ();defer _abfga .Unlock ();_egafg :=_dba .GetLicenseKey ();if len (_abebe )> 0&&(_egafg .IsLicensed ()||_bbebg ){return _abebe ;
};return _e .Sprintf ("\u0055\u006e\u0069Do\u0063\u0020\u0076\u0025\u0073\u0020\u0028\u0025\u0073)\u0020-\u0020h\u0074t\u0070\u003a\u002f\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f",_deag (),_egafg .TypeToString ());};

// NewPdfOutlineTree returns an initialized PdfOutline tree.
func NewPdfOutlineTree ()*PdfOutline {_ddbeg :=NewPdfOutline ();_ddbeg ._ebbf =&_ddbeg ;return _ddbeg ;};

// NewPdfColorspaceCalGray returns a new CalGray colorspace object.
func NewPdfColorspaceCalGray ()*PdfColorspaceCalGray {_dgfeb :=&PdfColorspaceCalGray {};_dgfeb .BlackPoint =[]float64 {0.0,0.0,0.0};_dgfeb .Gamma =1;return _dgfeb ;};func (_gdde *fontFile )parseASCIIPart (_dbged []byte )error {if len (_dbged )< 2||string (_dbged [:2])!="\u0025\u0021"{return _ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0073\u0074a\u0072\u0074\u0020\u006f\u0066\u0020\u0041S\u0043\u0049\u0049\u0020\u0073\u0065\u0067\u006d\u0065\u006e\u0074");
};_afdf ,_cabaa ,_gdbcb :=_addcc (_dbged );if _gdbcb !=nil {return _gdbcb ;};_gbgf :=_ebcf (_afdf );_gdde ._ddecf =_gbgf ["\u0046\u006f\u006e\u0074\u004e\u0061\u006d\u0065"];if _gdde ._ddecf ==""{_dcf .Log .Debug ("\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0020\u0068a\u0073\u0020\u006e\u006f\u0020\u002f\u0046\u006f\u006e\u0074N\u0061\u006d\u0065");
};if _cabaa !=""{_cgbf ,_bagcdc :=_faca (_cabaa );if _bagcdc !=nil {return _bagcdc ;};_cfdeb ,_bagcdc :=_cc .NewCustomSimpleTextEncoder (_cgbf ,nil );if _bagcdc !=nil {_dcf .Log .Debug ("\u0045\u0052\u0052\u004fR\u0020\u003a\u0055\u004e\u004b\u004e\u004f\u0057\u004e\u0020G\u004cY\u0050\u0048\u003a\u0020\u0065\u0072\u0072=\u0025\u0076",_bagcdc );
return nil ;};_gdde ._eeabg =_cfdeb ;};return nil ;};func (_fdbba *PdfWriter )copyObjects (){_caacf :=make (map[_bgg .PdfObject ]_bgg .PdfObject );_cgcdg :=make ([]_bgg .PdfObject ,0,len (_fdbba ._eddge ));_bagfa :=make (map[_bgg .PdfObject ]struct{},len (_fdbba ._eddge ));
_cdbb :=make (map[_bgg .PdfObject ]struct{});for _ ,_geafd :=range _fdbba ._eddge {_dffa :=_fdbba .copyObject (_geafd ,_caacf ,_cdbb ,false );if _ ,_bgdfe :=_cdbb [_geafd ];_bgdfe {continue ;};_cgcdg =append (_cgcdg ,_dffa );_bagfa [_dffa ]=struct{}{};
};_fdbba ._eddge =_cgcdg ;_fdbba ._gbfd =_bagfa ;_fdbba ._eeged =_fdbba .copyObject (_fdbba ._eeged ,_caacf ,nil ,false ).(*_bgg .PdfIndirectObject );_fdbba ._bceaa =_fdbba .copyObject (_fdbba ._bceaa ,_caacf ,nil ,false ).(*_bgg .PdfIndirectObject );if _fdbba ._baefd !=nil {_fdbba ._baefd =_fdbba .copyObject (_fdbba ._baefd ,_caacf ,nil ,false ).(*_bgg .PdfIndirectObject );
};if _fdbba ._deagf {_eeada :=make (map[_bgg .PdfObject ]int64 );for _badb ,_fgbbb :=range _fdbba ._eeagf {if _decga ,_ecdbb :=_caacf [_badb ];_ecdbb {_eeada [_decga ]=_fgbbb ;}else {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020a\u0070\u0070\u0065n\u0064\u0020\u006d\u006fd\u0065\u0020\u002d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0063\u006f\u0070\u0079\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u006d\u0061\u0070");
};};_fdbba ._eeagf =_eeada ;};};

// ToPdfObject returns a PDF object representation of the outline item.
func (_ageda *OutlineItem )ToPdfObject ()_bgg .PdfObject {_gbdbc ,_ :=_ageda .ToPdfOutlineItem ();return _gbdbc .ToPdfObject ();};func (_ccf *DSS )addCRLs (_baeg [][]byte )([]*_bgg .PdfObjectStream ,error ){return _ccf .add (&_ccf .CRLs ,_ccf ._dcgge ,_baeg );
};

// NewPdfColorspaceICCBased returns a new ICCBased colorspace object.
func NewPdfColorspaceICCBased (N int )(*PdfColorspaceICCBased ,error ){_gccf :=&PdfColorspaceICCBased {};if N !=1&&N !=3&&N !=4{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004e\u0020\u0028\u0031/\u0033\u002f\u0034\u0029");
};_gccf .N =N ;return _gccf ,nil ;};func _gebb (_cafbdg *_bgg .PdfIndirectObject )(*PdfOutline ,error ){_eccc ,_cgccb :=_cafbdg .PdfObject .(*_bgg .PdfObjectDictionary );if !_cgccb {return nil ,_e .Errorf ("\u006f\u0075\u0074l\u0069\u006e\u0065\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_afbfd :=NewPdfOutline ();if _agedf :=_eccc .Get ("\u0054\u0079\u0070\u0065");_agedf !=nil {_gfbaf ,_fbbbf :=_agedf .(*_bgg .PdfObjectName );if _fbbbf {if *_gfbaf !="\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"{_dcf .Log .Debug ("E\u0052\u0052\u004f\u0052\u0020\u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u004f\u0075\u0074l\u0069\u006e\u0065s\u0020(\u0025\u0073\u0029",*_gfbaf );
};};};if _gdbgf :=_eccc .Get ("\u0043\u006f\u0075n\u0074");_gdbgf !=nil {_ecefa ,_bdfa :=_bgg .GetNumberAsInt64 (_gdbgf );if _bdfa !=nil {return nil ,_bdfa ;};_afbfd .Count =&_ecefa ;};return _afbfd ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_gbbb *PdfActionSetOCGState )ToPdfObject ()_bgg .PdfObject {_gbbb .PdfAction .ToPdfObject ();_abg :=_gbbb ._ddf ;_cacc :=_abg .PdfObject .(*_bgg .PdfObjectDictionary );_cacc .SetIfNotNil ("\u0053",_bgg .MakeName (string (ActionTypeSetOCGState )));
_cacc .SetIfNotNil ("\u0053\u0074\u0061t\u0065",_gbbb .State );_cacc .SetIfNotNil ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042",_gbbb .PreserveRB );return _abg ;};func _cbgb (_ccbe *_bgg .PdfIndirectObject ,_fgcfa *_bgg .PdfObjectDictionary )(*DSS ,error ){if _ccbe ==nil {_ccbe =_bgg .MakeIndirectObject (nil );
};_ccbe .PdfObject =_bgg .MakeDict ();_bdga :=map[string ]*VRI {};if _gcaa ,_efgbf :=_bgg .GetDict (_fgcfa .Get ("\u0056\u0052\u0049"));_efgbf {for _ ,_dbde :=range _gcaa .Keys (){if _efeg ,_fdae :=_bgg .GetDict (_gcaa .Get (_dbde ));_fdae {_bdga [_ba .ToUpper (_dbde .String ())]=_dbdc (_efeg );
};};};return &DSS {Certs :_gbcaf (_fgcfa .Get ("\u0043\u0065\u0072t\u0073")),OCSPs :_gbcaf (_fgcfa .Get ("\u004f\u0043\u0053P\u0073")),CRLs :_gbcaf (_fgcfa .Get ("\u0043\u0052\u004c\u0073")),VRI :_bdga ,_cegfd :_ccbe },nil ;};func (_bgbf *PdfPattern )getDict ()*_bgg .PdfObjectDictionary {if _ffbe ,_bega :=_bgbf ._aebfe .(*_bgg .PdfIndirectObject );
_bega {_dgaaf ,_egde :=_ffbe .PdfObject .(*_bgg .PdfObjectDictionary );if !_egde {return nil ;};return _dgaaf ;}else if _gefad ,_baggc :=_bgbf ._aebfe .(*_bgg .PdfObjectStream );_baggc {return _gefad .PdfObjectDictionary ;}else {_dcf .Log .Debug ("\u0054r\u0079\u0069\u006e\u0067\u0020\u0074\u006f a\u0063\u0063\u0065\u0073\u0073\u0020\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020d\u0069\u0063t\u0069\u006f\u006ea\u0072\u0079\u0020\u006f\u0066\u0020\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0062j\u0065\u0063t \u0074\u0079\u0070e\u0020\u0028\u0025\u0054\u0029",_bgbf ._aebfe );
return nil ;};};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain a single element between 0 and 1.
func (_cgbb *PdfColorspaceDeviceGray )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=1{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ddfa :=vals [0];if _ddfa < 0.0||_ddfa > 1.0{_dcf .Log .Debug ("\u0049\u006eco\u006d\u0070\u0061t\u0069\u0062\u0069\u006city\u003a R\u0061\u006e\u0067\u0065\u0020\u006f\u0075ts\u0069\u0064\u0065\u0020\u005b\u0030\u002c1\u005d");
};if _ddfa < 0.0{_ddfa =0.0;}else if _ddfa > 1.0{_ddfa =1.0;};return NewPdfColorDeviceGray (_ddfa ),nil ;};

// Set sets the colorspace corresponding to key. Add to Names if not set.
func (_bdgfa *PdfPageResourcesColorspaces )Set (key _bgg .PdfObjectName ,val PdfColorspace ){if _ ,_cabaf :=_bdgfa .Colorspaces [string (key )];!_cabaf {_bdgfa .Names =append (_bdgfa .Names ,string (key ));};_bdgfa .Colorspaces [string (key )]=val ;};func (_acdd *PdfColorspaceCalGray )String ()string {return "\u0043a\u006c\u0047\u0072\u0061\u0079"};


// Height returns the height of `rect`.
func (_ebfdc *PdfRectangle )Height ()float64 {return _db .Abs (_ebfdc .Ury -_ebfdc .Lly )};

// SignatureValidationResult defines the response from the signature validation handler.
type SignatureValidationResult struct{

// List of errors when validating the signature.
Errors []string ;IsSigned bool ;IsVerified bool ;IsTrusted bool ;Fields []*PdfField ;Name string ;Date PdfDate ;Reason string ;Location string ;ContactInfo string ;DiffResults *_bg .DiffResults ;

// GeneralizedTime is the time at which the time-stamp token has been created by the TSA (RFC 3161).
GeneralizedTime _g .Time ;};

// PdfShadingType5 is a Lattice-form Gouraud-shaded triangle mesh.
type PdfShadingType5 struct{*PdfShading ;BitsPerCoordinate *_bgg .PdfObjectInteger ;BitsPerComponent *_bgg .PdfObjectInteger ;VerticesPerRow *_bgg .PdfObjectInteger ;Decode *_bgg .PdfObjectArray ;Function []PdfFunction ;};

// GetCatalogMarkInfo gets catalog MarkInfo object.
func (_caabc *PdfReader )GetCatalogMarkInfo ()(_bgg .PdfObject ,bool ){if _caabc ._gaebb ==nil {return nil ,false ;};_fdbcc :=_caabc ._gaebb .Get ("\u004d\u0061\u0072\u006b\u0049\u006e\u0066\u006f");return _fdbcc ,_fdbcc !=nil ;};

// UpdateObject marks `obj` as updated and to be included in the following revision.
func (_cfg *PdfAppender )UpdateObject (obj _bgg .PdfObject ){_cfg .replaceObject (obj ,obj );if _ ,_ecee :=_cfg ._eccg [obj ];!_ecee {_cfg ._dfgd =append (_cfg ._dfgd ,obj );_cfg ._eccg [obj ]=struct{}{};};};

// PdfActionSound represents a sound action.
type PdfActionSound struct{*PdfAction ;Sound _bgg .PdfObject ;Volume _bgg .PdfObject ;Synchronous _bgg .PdfObject ;Repeat _bgg .PdfObject ;Mix _bgg .PdfObject ;};

// NewPdfReaderLazy creates a new PdfReader for `rs` in lazy-loading mode. The difference
// from NewPdfReader is that in lazy-loading mode, objects are only loaded into memory when needed
// rather than entire structure being loaded into memory on reader creation.
// Note that it may make sense to use the lazy-load reader when processing only parts of files,
// rather than loading entire file into memory. Example: splitting a few pages from a large PDF file.
func NewPdfReaderLazy (rs _gb .ReadSeeker )(*PdfReader ,error ){const _dabad ="\u006d\u006f\u0064\u0065l:\u004e\u0065\u0077\u0050\u0064\u0066\u0052\u0065\u0061\u0064\u0065\u0072\u004c\u0061z\u0079";return _cdffe (rs ,&ReaderOpts {LazyLoad :true },false ,_dabad );
};func (_ceag *PdfReader )newPdfActionJavaScriptFromDict (_dcd *_bgg .PdfObjectDictionary )(*PdfActionJavaScript ,error ){return &PdfActionJavaScript {JS :_dcd .Get ("\u004a\u0053")},nil ;};

// FieldFlag represents form field flags. Some of the flags can apply to all types of fields whereas other
// flags are specific.
type FieldFlag uint32 ;func (_agfd *PdfReader )newPdfAnnotationPolygonFromDict (_bafdc *_bgg .PdfObjectDictionary )(*PdfAnnotationPolygon ,error ){_dgdea :=PdfAnnotationPolygon {};_eagfb ,_dfeb :=_agfd .newPdfAnnotationMarkupFromDict (_bafdc );if _dfeb !=nil {return nil ,_dfeb ;
};_dgdea .PdfAnnotationMarkup =_eagfb ;_dgdea .Vertices =_bafdc .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_dgdea .LE =_bafdc .Get ("\u004c\u0045");_dgdea .BS =_bafdc .Get ("\u0042\u0053");_dgdea .IC =_bafdc .Get ("\u0049\u0043");_dgdea .BE =_bafdc .Get ("\u0042\u0045");
_dgdea .IT =_bafdc .Get ("\u0049\u0054");_dgdea .Measure =_bafdc .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_dgdea ,nil ;};

// ImageToGray returns a new grayscale image based on the passed in RGB image.
func (_dgbfb *PdfColorspaceDeviceRGB )ImageToGray (img Image )(Image ,error ){if img .ColorComponents !=3{return img ,_ag .New ("\u0070\u0072\u006f\u0076\u0069\u0064e\u0064\u0020\u0069\u006d\u0061\u0067\u0065\u0020\u0069\u0073\u0020\u006e\u006ft\u0020\u0061\u0020\u0044\u0065\u0076\u0069c\u0065\u0052\u0047\u0042");
};_bdacb ,_ffec :=_dcg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._bfcec ,img ._ddaa );if _ffec !=nil {return img ,_ffec ;};_eaefa ,_ffec :=_dcg .GrayConverter .Convert (_bdacb );if _ffec !=nil {return img ,_ffec ;
};return _ddccc (_eaefa .Base ()),nil ;};

// GetPrimitiveFromModel returns the primitive object corresponding to the input `model`.
func (_eeceg *modelManager )GetPrimitiveFromModel (model PdfModel )_bgg .PdfObject {_feebb ,_cfcd :=_eeceg ._ddfeg [model ];if !_cfcd {return nil ;};return _feebb ;};

// GetContainingPdfObject implements model.PdfModel interface.
func (_dadcc *PdfOutputIntent )GetContainingPdfObject ()_bgg .PdfObject {return _dadcc ._faace };const (ActionTypeGoTo PdfActionType ="\u0047\u006f\u0054\u006f";ActionTypeGoTo3DView PdfActionType ="\u0047\u006f\u0054\u006f\u0033\u0044\u0056\u0069\u0065\u0077";
ActionTypeGoToE PdfActionType ="\u0047\u006f\u0054o\u0045";ActionTypeGoToR PdfActionType ="\u0047\u006f\u0054o\u0052";ActionTypeHide PdfActionType ="\u0048\u0069\u0064\u0065";ActionTypeImportData PdfActionType ="\u0049\u006d\u0070\u006f\u0072\u0074\u0044\u0061\u0074\u0061";
ActionTypeJavaScript PdfActionType ="\u004a\u0061\u0076\u0061\u0053\u0063\u0072\u0069\u0070\u0074";ActionTypeLaunch PdfActionType ="\u004c\u0061\u0075\u006e\u0063\u0068";ActionTypeMovie PdfActionType ="\u004d\u006f\u0076i\u0065";ActionTypeNamed PdfActionType ="\u004e\u0061\u006de\u0064";
ActionTypeRendition PdfActionType ="\u0052e\u006e\u0064\u0069\u0074\u0069\u006fn";ActionTypeResetForm PdfActionType ="\u0052e\u0073\u0065\u0074\u0046\u006f\u0072m";ActionTypeSetOCGState PdfActionType ="S\u0065\u0074\u004f\u0043\u0047\u0053\u0074\u0061\u0074\u0065";
ActionTypeSound PdfActionType ="\u0053\u006f\u0075n\u0064";ActionTypeSubmitForm PdfActionType ="\u0053\u0075\u0062\u006d\u0069\u0074\u0046\u006f\u0072\u006d";ActionTypeThread PdfActionType ="\u0054\u0068\u0072\u0065\u0061\u0064";ActionTypeTrans PdfActionType ="\u0054\u0072\u0061n\u0073";
ActionTypeURI PdfActionType ="\u0055\u0052\u0049";);

// GetContainingPdfObject returns the container of the outline tree node (indirect object).
func (_deace *PdfOutlineTreeNode )GetContainingPdfObject ()_bgg .PdfObject {return _deace .GetContext ().GetContainingPdfObject ();};

// String returns a string describing the font descriptor.
func (_afdd *PdfFontDescriptor )String ()string {var _bddf []string ;if _afdd .FontName !=nil {_bddf =append (_bddf ,_afdd .FontName .String ());};if _afdd .FontFamily !=nil {_bddf =append (_bddf ,_afdd .FontFamily .String ());};if _afdd .fontFile !=nil {_bddf =append (_bddf ,_afdd .fontFile .String ());
};if _afdd ._bgfg !=nil {_bddf =append (_bddf ,_afdd ._bgfg .String ());};_bddf =append (_bddf ,_e .Sprintf ("\u0046\u006f\u006et\u0046\u0069\u006c\u0065\u0033\u003d\u0025\u0074",_afdd .FontFile3 !=nil ));return _e .Sprintf ("\u0046\u004f\u004e\u0054_D\u0045\u0053\u0043\u0052\u0049\u0050\u0054\u004f\u0052\u007b\u0025\u0073\u007d",_ba .Join (_bddf ,"\u002c\u0020"));
};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_gaaca *PdfShadingType5 )ToPdfObject ()_bgg .PdfObject {_gaaca .PdfShading .ToPdfObject ();_bceaf ,_geeag :=_gaaca .getShadingDict ();if _geeag !=nil {_dcf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _gaaca .BitsPerCoordinate !=nil {_bceaf .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_gaaca .BitsPerCoordinate );};if _gaaca .BitsPerComponent !=nil {_bceaf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_gaaca .BitsPerComponent );
};if _gaaca .VerticesPerRow !=nil {_bceaf .Set ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077",_gaaca .VerticesPerRow );};if _gaaca .Decode !=nil {_bceaf .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_gaaca .Decode );};
if _gaaca .Function !=nil {if len (_gaaca .Function )==1{_bceaf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_gaaca .Function [0].ToPdfObject ());}else {_aadfb :=_bgg .MakeArray ();for _ ,_acaaf :=range _gaaca .Function {_aadfb .Append (_acaaf .ToPdfObject ());
};_bceaf .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_aadfb );};};return _gaaca ._fcfbb ;};

// NewPdfInfoFromObject creates a new PdfInfo from the input core.PdfObject.
func NewPdfInfoFromObject (obj _bgg .PdfObject )(*PdfInfo ,error ){var _gffd PdfInfo ;_fgdbb ,_ebda :=obj .(*_bgg .PdfObjectDictionary );if !_ebda {return nil ,_e .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063t\u0020\u0074\u0079p\u0065:\u0020\u0025\u0054",obj );
};for _ ,_cfde :=range _fgdbb .Keys (){switch _cfde {case "\u0054\u0069\u0074l\u0065":_gffd .Title ,_ =_bgg .GetString (_fgdbb .Get ("\u0054\u0069\u0074l\u0065"));case "\u0041\u0075\u0074\u0068\u006f\u0072":_gffd .Author ,_ =_bgg .GetString (_fgdbb .Get ("\u0041\u0075\u0074\u0068\u006f\u0072"));
case "\u0053u\u0062\u006a\u0065\u0063\u0074":_gffd .Subject ,_ =_bgg .GetString (_fgdbb .Get ("\u0053u\u0062\u006a\u0065\u0063\u0074"));case "\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073":_gffd .Keywords ,_ =_bgg .GetString (_fgdbb .Get ("\u004b\u0065\u0079\u0077\u006f\u0072\u0064\u0073"));
case "\u0043r\u0065\u0061\u0074\u006f\u0072":_gffd .Creator ,_ =_bgg .GetString (_fgdbb .Get ("\u0043r\u0065\u0061\u0074\u006f\u0072"));case "\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072":_gffd .Producer ,_ =_bgg .GetString (_fgdbb .Get ("\u0050\u0072\u006f\u0064\u0075\u0063\u0065\u0072"));
case "\u0054r\u0061\u0070\u0070\u0065\u0064":_gffd .Trapped ,_ =_bgg .GetName (_fgdbb .Get ("\u0054r\u0061\u0070\u0070\u0065\u0064"));case "\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065":if _debae ,_cgbc :=_bgg .GetString (_fgdbb .Get ("\u0043\u0072\u0065a\u0074\u0069\u006f\u006e\u0044\u0061\u0074\u0065"));
_cgbc &&_debae .String ()!=""{_cgab ,_ebgfd :=NewPdfDate (_debae .String ());if _ebgfd !=nil {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0072e\u0061\u0074\u0069\u006f\u006e\u0044\u0061t\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u003a\u0020\u0025\u0077",_ebgfd );
};_gffd .CreationDate =&_cgab ;};case "\u004do\u0064\u0044\u0061\u0074\u0065":if _bdgc ,_cbdf :=_bgg .GetString (_fgdbb .Get ("\u004do\u0064\u0044\u0061\u0074\u0065"));_cbdf &&_bdgc .String ()!=""{_agede ,_ebfdb :=NewPdfDate (_bdgc .String ());if _ebfdb !=nil {return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u004d\u006f\u0064\u0044a\u0074e\u0020f\u0069\u0065\u006c\u0064\u003a\u0020\u0025w",_ebfdb );
};_gffd .ModifiedDate =&_agede ;};default:_fgaf ,_ :=_bgg .GetString (_fgdbb .Get (_cfde ));if _gffd ._fdaag ==nil {_gffd ._fdaag =_bgg .MakeDict ();};_gffd ._fdaag .Set (_cfde ,_fgaf );};};return &_gffd ,nil ;};func _dgbfa (_ageca *_bgg .PdfObjectDictionary )(*PdfTilingPattern ,error ){_eabc :=&PdfTilingPattern {};
_dgcde :=_ageca .Get ("\u0050a\u0069\u006e\u0074\u0054\u0079\u0070e");if _dgcde ==nil {_dcf .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054\u0079\u0070\u0065\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cbbafa ,_gfgcc :=_dgcde .(*_bgg .PdfObjectInteger );
if !_gfgcc {_dcf .Log .Debug ("\u0050\u0061\u0069\u006e\u0074\u0054y\u0070\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006ft\u0020\u0025\u0054\u0029",_dgcde );return nil ,_bgg .ErrTypeError ;
};_eabc .PaintType =_cbbafa ;_dgcde =_ageca .Get ("\u0054\u0069\u006c\u0069\u006e\u0067\u0054\u0079\u0070\u0065");if _dgcde ==nil {_dcf .Log .Debug ("\u0054i\u006ci\u006e\u0067\u0054\u0079\u0070e\u0020\u006di\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_ggfeb ,_gfgcc :=_dgcde .(*_bgg .PdfObjectInteger );if !_gfgcc {_dcf .Log .Debug ("\u0054\u0069\u006cin\u0067\u0054\u0079\u0070\u0065\u0020\u006e\u006f\u0074 \u0061n\u0020i\u006et\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dgcde );
return nil ,_bgg .ErrTypeError ;};_eabc .TilingType =_ggfeb ;_dgcde =_ageca .Get ("\u0042\u0042\u006f\u0078");if _dgcde ==nil {_dcf .Log .Debug ("\u0042\u0042\u006fx\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_dgcde =_bgg .TraceToDirectObject (_dgcde );_ffda ,_gfgcc :=_dgcde .(*_bgg .PdfObjectArray );if !_gfgcc {_dcf .Log .Debug ("\u0042B\u006f\u0078 \u0073\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020\u0073p\u0065\u0063\u0069\u0066\u0069\u0065d\u0020\u0062\u0079\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061y\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dgcde );
return nil ,_bgg .ErrTypeError ;};_agagge ,_dfad :=NewPdfRectangle (*_ffda );if _dfad !=nil {_dcf .Log .Debug ("\u0042\u0042\u006f\u0078\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_dfad );return nil ,_dfad ;};_eabc .BBox =_agagge ;_dgcde =_ageca .Get ("\u0058\u0053\u0074e\u0070");
if _dgcde ==nil {_dcf .Log .Debug ("\u0058\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;};_cdafb ,_dfad :=_bgg .GetNumberAsFloat (_dgcde );if _dfad !=nil {_dcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0058S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_cdafb );
return nil ,_dfad ;};_eabc .XStep =_bgg .MakeFloat (_cdafb );_dgcde =_ageca .Get ("\u0059\u0053\u0074e\u0070");if _dgcde ==nil {_dcf .Log .Debug ("\u0059\u0053\u0074\u0065\u0070\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");return nil ,ErrRequiredAttributeMissing ;
};_cdgba ,_dfad :=_bgg .GetNumberAsFloat (_dgcde );if _dfad !=nil {_dcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0059S\u0074e\u0070\u0020\u0061\u0073\u0020\u0066\u006c\u006f\u0061\u0074\u003a\u0020\u0025\u0076",_cdgba );
return nil ,_dfad ;};_eabc .YStep =_bgg .MakeFloat (_cdgba );_dgcde =_ageca .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _dgcde ==nil {_dcf .Log .Debug ("\u0052\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073\u0020\u006d\u0069s\u0073\u0069\u006e\u0067");
return nil ,ErrRequiredAttributeMissing ;};_ageca ,_gfgcc =_bgg .TraceToDirectObject (_dgcde ).(*_bgg .PdfObjectDictionary );if !_gfgcc {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_dgcde );
};_gegf ,_dfad :=NewPdfPageResourcesFromDict (_ageca );if _dfad !=nil {return nil ,_dfad ;};_eabc .Resources =_gegf ;if _fgdae :=_ageca .Get ("\u004d\u0061\u0074\u0072\u0069\u0078");_fgdae !=nil {_efcbf ,_fbbg :=_fgdae .(*_bgg .PdfObjectArray );if !_fbbg {_dcf .Log .Debug ("\u004d\u0061\u0074\u0072i\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_fgdae );
return nil ,_bgg .ErrTypeError ;};_eabc .Matrix =_efcbf ;};return _eabc ,nil ;};

// ToPdfObject returns a PDF object representation of the outline.
func (_gbdgbd *Outline )ToPdfObject ()_bgg .PdfObject {return _gbdgbd .ToPdfOutline ().ToPdfObject ()};func (_gcg *PdfReader )newPdfActionThreadFromDict (_faa *_bgg .PdfObjectDictionary )(*PdfActionThread ,error ){_acea ,_gdbe :=_cbd (_faa .Get ("\u0046"));
if _gdbe !=nil {return nil ,_gdbe ;};return &PdfActionThread {D :_faa .Get ("\u0044"),B :_faa .Get ("\u0042"),F :_acea },nil ;};

// PdfColorspaceDeviceNAttributes contains additional information about the components of colour space that
// conforming readers may use. Conforming readers need not use the alternateSpace and tintTransform parameters,
// and may instead use a custom blending algorithms, along with other information provided in the attributes
// dictionary if present.
type PdfColorspaceDeviceNAttributes struct{Subtype *_bgg .PdfObjectName ;Colorants _bgg .PdfObject ;Process _bgg .PdfObject ;MixingHints _bgg .PdfObject ;_faad *_bgg .PdfIndirectObject ;};func _bagg (_ggbc _bgg .PdfObject )(*PdfColorspaceCalGray ,error ){_fbfd :=NewPdfColorspaceCalGray ();
if _fcab ,_eeaf :=_ggbc .(*_bgg .PdfIndirectObject );_eeaf {_fbfd ._ffbc =_fcab ;};_ggbc =_bgg .TraceToDirectObject (_ggbc );_dcedf ,_cegc :=_ggbc .(*_bgg .PdfObjectArray );if !_cegc {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");
};if _dcedf .Len ()!=2{return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0061\u006cG\u0072\u0061\u0079\u0020\u0063\u006f\u006c\u006f\u0072\u0073p\u0061\u0063\u0065");};_ggbc =_bgg .TraceToDirectObject (_dcedf .Get (0));_eedd ,_cegc :=_ggbc .(*_bgg .PdfObjectName );
if !_cegc {return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u0020\u006e\u0061m\u0065\u0020\u006e\u006f\u0074\u0020\u0061 \u004e\u0061\u006d\u0065\u0020\u006f\u0062\u006a\u0065\u0063\u0074");};if *_eedd !="\u0043a\u006c\u0047\u0072\u0061\u0079"{return nil ,_e .Errorf ("\u006eo\u0074\u0020\u0061\u0020\u0043\u0061\u006c\u0047\u0072\u0061\u0079 \u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063\u0065");
};_ggbc =_bgg .TraceToDirectObject (_dcedf .Get (1));_bcfa ,_cegc :=_ggbc .(*_bgg .PdfObjectDictionary );if !_cegc {return nil ,_e .Errorf ("\u0043\u0061lG\u0072\u0061\u0079 \u0064\u0069\u0063\u0074 no\u0074 a\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u006f\u0062\u006a\u0065c\u0074");
};_ggbc =_bcfa .Get ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074");_ggbc =_bgg .TraceToDirectObject (_ggbc );_gadb ,_cegc :=_ggbc .(*_bgg .PdfObjectArray );if !_cegc {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020W\u0068\u0069\u0074e\u0050o\u0069\u006e\u0074");
};if _gadb .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0057\u0068\u0069t\u0065\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");};_adcff ,_fabd :=_gadb .GetAsFloat64Slice ();
if _fabd !=nil {return nil ,_fabd ;};_fbfd .WhitePoint =_adcff ;_ggbc =_bcfa .Get ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074");if _ggbc !=nil {_ggbc =_bgg .TraceToDirectObject (_ggbc );_acdb ,_fdbdc :=_ggbc .(*_bgg .PdfObjectArray );
if !_fdbdc {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020B\u006c\u0061\u0063k\u0050o\u0069\u006e\u0074");};if _acdb .Len ()!=3{return nil ,_e .Errorf ("\u0043\u0061\u006c\u0047\u0072\u0061y\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0042\u006c\u0061c\u006b\u0050\u006f\u0069\u006e\u0074\u0020a\u0072\u0072\u0061\u0079");
};_fbfg ,_cgag :=_acdb .GetAsFloat64Slice ();if _cgag !=nil {return nil ,_cgag ;};_fbfd .BlackPoint =_fbfg ;};_ggbc =_bcfa .Get ("\u0047\u0061\u006dm\u0061");if _ggbc !=nil {_ggbc =_bgg .TraceToDirectObject (_ggbc );_ggebb ,_bfdb :=_bgg .GetNumberAsFloat (_ggbc );
if _bfdb !=nil {return nil ,_e .Errorf ("C\u0061\u006c\u0047\u0072\u0061\u0079:\u0020\u0067\u0061\u006d\u006d\u0061\u0020\u006e\u006ft\u0020\u0061\u0020n\u0075m\u0062\u0065\u0072");};_fbfd .Gamma =_ggebb ;};return _fbfd ,nil ;};func _aedag (_abdag *fontCommon )*pdfFontSimple {return &pdfFontSimple {fontCommon :*_abdag }};


// PdfAnnotationSound represents Sound annotations.
// (Section 12.5.6.16).
type PdfAnnotationSound struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Sound _bgg .PdfObject ;Name _bgg .PdfObject ;};

// PdfActionNamed represents a named action.
type PdfActionNamed struct{*PdfAction ;N _bgg .PdfObject ;};

// NewPdfActionImportData returns a new "import data" action.
func NewPdfActionImportData ()*PdfActionImportData {_gc :=NewPdfAction ();_ffe :=&PdfActionImportData {};_ffe .PdfAction =_gc ;_gc .SetContext (_ffe );return _ffe ;};func _bfgb ()*modelManager {_feaf :=modelManager {};_feaf ._ddfeg =map[PdfModel ]_bgg .PdfObject {};
_feaf ._effd =map[_bgg .PdfObject ]PdfModel {};return &_feaf ;};

// SetColorspaceByName adds the provided colorspace to the page resources.
func (_dfcc *PdfPageResources )SetColorspaceByName (keyName _bgg .PdfObjectName ,cs PdfColorspace )error {_dfdegc ,_ggfab :=_dfcc .GetColorspaces ();if _ggfab !=nil {_dcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_ggfab );
return _ggfab ;};if _dfdegc ==nil {_dfdegc =NewPdfPageResourcesColorspaces ();_dfcc .SetColorSpace (_dfdegc );};_dfdegc .Set (keyName ,cs );return nil ;};

// PdfActionGoTo3DView represents a GoTo3DView action.
type PdfActionGoTo3DView struct{*PdfAction ;TA _bgg .PdfObject ;V _bgg .PdfObject ;};

// GetShadingByName gets the shading specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_cbcfc *PdfPageResources )GetShadingByName (keyName _bgg .PdfObjectName )(*PdfShading ,bool ){if _cbcfc .Shading ==nil {return nil ,false ;};_baedc ,_agbbc :=_bgg .TraceToDirectObject (_cbcfc .Shading ).(*_bgg .PdfObjectDictionary );if !_agbbc {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0068\u0061d\u0069\u006e\u0067\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_cbcfc .Shading );
return nil ,false ;};if _gecge :=_baedc .Get (keyName );_gecge !=nil {_adebd ,_bdfb :=_fabcg (_gecge );if _bdfb !=nil {_dcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0073\u0068\u0061\u0064\u0069\u006eg\u003a\u0020\u0025\u0076",_bdfb );
return nil ,false ;};return _adebd ,true ;};return nil ,false ;};

// NewPdfActionGoToE returns a new "go to embedded" action.
func NewPdfActionGoToE ()*PdfActionGoToE {_ffa :=NewPdfAction ();_eeg :=&PdfActionGoToE {};_eeg .PdfAction =_ffa ;_ffa .SetContext (_eeg );return _eeg ;};

// NewCustomPdfOutputIntent creates a new custom PdfOutputIntent.
func NewCustomPdfOutputIntent (outputCondition ,outputConditionIdentifier ,info string ,destOutputProfile []byte ,colorComponents int )*PdfOutputIntent {return &PdfOutputIntent {Type :"\u004f\u0075\u0074p\u0075\u0074\u0049\u006e\u0074\u0065\u006e\u0074",OutputCondition :outputCondition ,OutputConditionIdentifier :outputConditionIdentifier ,Info :info ,DestOutputProfile :destOutputProfile ,_faace :_bgg .MakeDict (),ColorComponents :colorComponents };
};

// PdfColorspaceSpecialIndexed is an indexed color space is a lookup table, where the input element
// is an index to the lookup table and the output is a color defined in the lookup table in the Base
// colorspace.
// [/Indexed base hival lookup]
type PdfColorspaceSpecialIndexed struct{Base PdfColorspace ;HiVal int ;Lookup _bgg .PdfObject ;_cdfe []byte ;_addbe *_bgg .PdfIndirectObject ;};

// PdfColorspaceCalGray represents CalGray color space.
type PdfColorspaceCalGray struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma float64 ;_ffbc *_bgg .PdfIndirectObject ;};

// SetRotation sets the rotation of all pages added to writer. The rotation is
// specified in degrees and must be a multiple of 90.
// The Rotate field of individual pages has priority over the global rotation.
func (_gabce *PdfWriter )SetRotation (rotate int64 )error {_aaaegc ,_fabad :=_bgg .GetDict (_gabce ._deeaf );if !_fabad {return ErrTypeCheck ;};_aaaegc .Set ("\u0052\u006f\u0074\u0061\u0074\u0065",_bgg .MakeInteger (rotate ));return nil ;};

// NewPermissions returns a new permissions object.
func NewPermissions (docMdp *PdfSignature )*Permissions {_eaadbg :=Permissions {};_eaadbg .DocMDP =docMdp ;_eegef :=_bgg .MakeDict ();_eegef .Set ("\u0044\u006f\u0063\u004d\u0044\u0050",docMdp .ToPdfObject ());_eaadbg ._ffcaa =_eegef ;return &_eaadbg ;
};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_fdaa *PdfColorspaceCalGray )ColorFromPdfObjects (objects []_bgg .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bed ,_bbdbb :=_bgg .GetNumbersAsFloat (objects );
if _bbdbb !=nil {return nil ,_bbdbb ;};return _fdaa .ColorFromFloats (_bed );};func _abfdc ()string {_abfga .Lock ();defer _abfga .Unlock ();return _ggce };

// Encoder returns the font's text encoder.
func (_acfg pdfFontType0 )Encoder ()_cc .TextEncoder {return _acfg ._dfbdd };

// GetRuneMetrics returns the character metrics for the rune.
// A bool flag is returned to indicate whether or not the entry was found.
func (_ceacc pdfFontSimple )GetRuneMetrics (r rune )(_dad .CharMetrics ,bool ){if _ceacc ._ebfec !=nil {_gafbg ,_dcdcf :=_ceacc ._ebfec .Read (r );if _dcdcf {return _gafbg ,true ;};};_ddcfcd :=_ceacc .Encoder ();if _ddcfcd ==nil {_dcf .Log .Debug ("\u004e\u006f\u0020en\u0063\u006f\u0064\u0065\u0072\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u0073\u003d\u0025\u0073",_ceacc );
return _dad .CharMetrics {},false ;};_caff ,_acacb :=_ddcfcd .RuneToCharcode (r );if !_acacb {if r !=' '{_dcf .Log .Trace ("\u004e\u006f\u0020c\u0068\u0061\u0072\u0063o\u0064\u0065\u0020\u0066\u006f\u0072\u0020r\u0075\u006e\u0065\u003d\u0025\u0076\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",r ,_ceacc );
};return _dad .CharMetrics {},false ;};_cfeg ,_gfgeg :=_ceacc .GetCharMetrics (_caff );return _cfeg ,_gfgeg ;};const (BorderStyleSolid BorderStyle =iota ;BorderStyleDashed BorderStyle =iota ;BorderStyleBeveled BorderStyle =iota ;BorderStyleInset BorderStyle =iota ;
BorderStyleUnderline BorderStyle =iota ;);

// Mask returns the uin32 bitmask for the specific flag.
func (_ggcg FieldFlag )Mask ()uint32 {return uint32 (_ggcg )};

// NewPdfAnnotationMovie returns a new movie annotation.
func NewPdfAnnotationMovie ()*PdfAnnotationMovie {_cfa :=NewPdfAnnotation ();_dfdb :=&PdfAnnotationMovie {};_dfdb .PdfAnnotation =_cfa ;_cfa .SetContext (_dfdb );return _dfdb ;};

// PdfTransformParamsDocMDP represents a transform parameters dictionary for the DocMDP method and is used to detect
// modifications relative to a signature field that is signed by the author of a document.
// (Section 12.8.2.2, Table 254 - Entries in the DocMDP transform parameters dictionary p. 471 in PDF32000_2008).
type PdfTransformParamsDocMDP struct{Type *_bgg .PdfObjectName ;P *_bgg .PdfObjectInteger ;V *_bgg .PdfObjectName ;};

// ToPdfObject implements interface PdfModel.
func (_bgad *PdfAnnotationTrapNet )ToPdfObject ()_bgg .PdfObject {_bgad .PdfAnnotation .ToPdfObject ();_ffga :=_bgad ._gec ;_adda :=_ffga .PdfObject .(*_bgg .PdfObjectDictionary );_adda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0054r\u0061\u0070\u004e\u0065\u0074"));
return _ffga ;};

// NewReaderForText makes a new PdfReader for an input PDF content string. For use in testing.
func NewReaderForText (txt string )*PdfReader {return &PdfReader {_ddcbee :map[_bgg .PdfObject ]struct{}{},_gabea :_bfgb (),_ebdgc :_bgg .NewParserFromString (txt )};};

// SetForms sets the Acroform for a PDF file.
func (_cfebd *PdfWriter )SetForms (form *PdfAcroForm )error {_cfebd ._gagef =form ;return nil };

// ReplacePage replaces the original page to a new page.
func (_cggc *PdfAppender )ReplacePage (pageNum int ,page *PdfPage ){_ddff :=pageNum -1;for _gbfe :=range _cggc ._daab {if _gbfe ==_ddff {_eegg :=page .Duplicate ();_bccb (_eegg );_cggc ._daab [_gbfe ]=_eegg ;};};};var _ pdfFont =(*pdfCIDFontType0 )(nil );


// GetAnnotations returns the list of page annotations for `page`. If not loaded attempts to load the
// annotations, otherwise returns the loaded list.
func (_dafad *PdfPage )GetAnnotations ()([]*PdfAnnotation ,error ){if _dafad ._dedeg !=nil {return _dafad ._dedeg ,nil ;};if _dafad .Annots ==nil {_dafad ._dedeg =[]*PdfAnnotation {};return nil ,nil ;};if _dafad ._afbaa ==nil {_dafad ._dedeg =[]*PdfAnnotation {};
return nil ,nil ;};_cgace ,_bcdfb :=_dafad ._afbaa .loadAnnotations (_dafad .Annots );if _bcdfb !=nil {return nil ,_bcdfb ;};if _cgace ==nil {_dafad ._dedeg =[]*PdfAnnotation {};};_dafad ._dedeg =_cgace ;return _dafad ._dedeg ,nil ;};

// ToInteger convert to an integer format.
func (_ebcd *PdfColorDeviceGray )ToInteger (bits int )uint32 {_ffgeb :=_db .Pow (2,float64 (bits ))-1;return uint32 (_ffgeb *_ebcd .Val ());};func (_edc *PdfReader )newPdfActionSoundFromDict (_cce *_bgg .PdfObjectDictionary )(*PdfActionSound ,error ){return &PdfActionSound {Sound :_cce .Get ("\u0053\u006f\u0075n\u0064"),Volume :_cce .Get ("\u0056\u006f\u006c\u0075\u006d\u0065"),Synchronous :_cce .Get ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073"),Repeat :_cce .Get ("\u0052\u0065\u0070\u0065\u0061\u0074"),Mix :_cce .Get ("\u004d\u0069\u0078")},nil ;
};

// SetImage updates XObject Image with new image data.
func (_fdbgd *XObjectImage )SetImage (img *Image ,cs PdfColorspace )error {_fdbgd .Filter .UpdateParams (img .GetParamsDict ());_dacbf ,_dffdef :=_fdbgd .Filter .EncodeBytes (img .Data );if _dffdef !=nil {return _dffdef ;};_fdbgd .Stream =_dacbf ;_dcbad :=img .Width ;
_fdbgd .Width =&_dcbad ;_acbba :=img .Height ;_fdbgd .Height =&_acbba ;_cggbe :=img .BitsPerComponent ;_fdbgd .BitsPerComponent =&_cggbe ;if cs ==nil {if img .ColorComponents ==1{_fdbgd .ColorSpace =NewPdfColorspaceDeviceGray ();}else if img .ColorComponents ==3{_fdbgd .ColorSpace =NewPdfColorspaceDeviceRGB ();
}else if img .ColorComponents ==4{_fdbgd .ColorSpace =NewPdfColorspaceDeviceCMYK ();}else {return _ag .New ("c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065\u0020u\u006e\u0064\u0065\u0066in\u0065\u0064");};}else {_fdbgd .ColorSpace =cs ;};return nil ;
};

// PdfRectangle is a definition of a rectangle.
type PdfRectangle struct{Llx float64 ;Lly float64 ;Urx float64 ;Ury float64 ;};func (_acbde *DSS )add (_cbba *[]*_bgg .PdfObjectStream ,_aedda map[string ]*_bgg .PdfObjectStream ,_gbed [][]byte )([]*_bgg .PdfObjectStream ,error ){_dege :=make ([]*_bgg .PdfObjectStream ,0,len (_gbed ));
for _ ,_agcf :=range _gbed {_gbfed ,_gead :=_dagdc (_agcf );if _gead !=nil {return nil ,_gead ;};_cfcb ,_afdce :=_aedda [string (_gbfed )];if !_afdce {_cfcb ,_gead =_bgg .MakeStream (_agcf ,_bgg .NewRawEncoder ());if _gead !=nil {return nil ,_gead ;};_aedda [string (_gbfed )]=_cfcb ;
*_cbba =append (*_cbba ,_cfcb );};_dege =append (_dege ,_cfcb );};return _dege ,nil ;};

// NewPdfFilespecFromObj creates and returns a new PdfFilespec object.
func NewPdfFilespecFromObj (obj _bgg .PdfObject )(*PdfFilespec ,error ){_dcce :=&PdfFilespec {};var _eccdd *_bgg .PdfObjectDictionary ;if _gebc ,_adba :=_bgg .GetIndirect (obj );_adba {_dcce ._efde =_gebc ;_dcbd ,_efaaa :=_bgg .GetDict (_gebc .PdfObject );
if !_efaaa {_dcf .Log .Debug ("\u004f\u0062\u006a\u0065c\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069c\u0074i\u006f\u006e\u0061\u0072\u0079\u0020\u0074y\u0070\u0065");return nil ,_bgg .ErrTypeError ;};_eccdd =_dcbd ;}else if _eecc ,_cfdb :=_bgg .GetDict (obj );
_cfdb {_dcce ._efde =_eecc ;_eccdd =_eecc ;}else {_dcf .Log .Debug ("O\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0075\u006e\u0065\u0078\u0070e\u0063\u0074\u0065d\u0020(\u0025\u0054\u0029",obj );return nil ,_bgg .ErrTypeError ;};if _eccdd ==nil {_dcf .Log .Debug ("\u0044i\u0063t\u0069\u006f\u006e\u0061\u0072y\u0020\u006di\u0073\u0073\u0069\u006e\u0067");
return nil ,_ag .New ("\u0064\u0069\u0063t\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067");};if _ecgb :=_eccdd .Get ("\u0054\u0079\u0070\u0065");_ecgb !=nil {_aefaa ,_eafg :=_ecgb .(*_bgg .PdfObjectName );if !_eafg {_dcf .Log .Trace ("\u0049\u006e\u0063\u006f\u006d\u0070\u0061\u0074\u0069\u0062\u0069\u006c\u0069\u0074\u0079\u0021\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0074\u0079\u0070\u0065\u0020\u006f\u0066\u0020\u0054\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029\u0020\u002d\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u004e\u0061m\u0065",_ecgb );
}else {if *_aefaa !="\u0046\u0069\u006c\u0065\u0073\u0070\u0065\u0063"{_dcf .Log .Trace ("\u0055\u006e\u0073\u0075\u0073\u0070e\u0063\u0074\u0065\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020F\u0069\u006c\u0065\u0073\u0070\u0065\u0063 \u0028\u0025\u0073\u0029",*_aefaa );
};};};if _aceee :=_eccdd .Get ("\u0046\u0053");_aceee !=nil {_dcce .FS =_aceee ;};if _acae :=_eccdd .Get ("\u0046");_acae !=nil {_dcce .F =_acae ;};if _baadb :=_eccdd .Get ("\u0055\u0046");_baadb !=nil {_dcce .UF =_baadb ;};if _bcdd :=_eccdd .Get ("\u0044\u004f\u0053");
_bcdd !=nil {_dcce .DOS =_bcdd ;};if _bggff :=_eccdd .Get ("\u004d\u0061\u0063");_bggff !=nil {_dcce .Mac =_bggff ;};if _cbac :=_eccdd .Get ("\u0055\u006e\u0069\u0078");_cbac !=nil {_dcce .Unix =_cbac ;};if _dbbbc :=_eccdd .Get ("\u0049\u0044");_dbbbc !=nil {_dcce .ID =_dbbbc ;
};if _bbcbg :=_eccdd .Get ("\u0056");_bbcbg !=nil {_dcce .V =_bbcbg ;};if _caf :=_eccdd .Get ("\u0045\u0046");_caf !=nil {_dcce .EF =_caf ;};if _dgbb :=_eccdd .Get ("\u0052\u0046");_dgbb !=nil {_dcce .RF =_dgbb ;};if _ffeea :=_eccdd .Get ("\u0044\u0065\u0073\u0063");
_ffeea !=nil {_dcce .Desc =_ffeea ;};if _gcfb :=_eccdd .Get ("\u0043\u0049");_gcfb !=nil {_dcce .CI =_gcfb ;};return _dcce ,nil ;};

// GetColorspaceByName returns the colorspace with the specified name from the page resources.
func (_ccgea *PdfPageResources )GetColorspaceByName (keyName _bgg .PdfObjectName )(PdfColorspace ,bool ){_dffb ,_ecgc :=_ccgea .GetColorspaces ();if _ecgc !=nil {_dcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u0020\u0067\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0072\u0061\u0063\u0065: \u0025\u0076",_ecgc );
return nil ,false ;};if _dffb ==nil {return nil ,false ;};_fgdbgf ,_fede :=_dffb .Colorspaces [string (keyName )];if !_fede {return nil ,false ;};return _fgdbgf ,true ;};

// ToPdfObject implements interface PdfModel.
func (_ea *PdfAction )ToPdfObject ()_bgg .PdfObject {_fbba :=_ea ._ddf ;_eb :=_fbba .PdfObject .(*_bgg .PdfObjectDictionary );_eb .Clear ();_eb .Set ("\u0054\u0079\u0070\u0065",_bgg .MakeName ("\u0041\u0063\u0074\u0069\u006f\u006e"));_eb .SetIfNotNil ("\u0053",_ea .S );
_eb .SetIfNotNil ("\u004e\u0065\u0078\u0074",_ea .Next );return _fbba ;};

// CharcodeBytesToUnicode converts PDF character codes `data` to a Go unicode string.
//
// 9.10 Extraction of Text Content (page 292)
// The process of finding glyph descriptions in OpenType fonts by a conforming reader shall be the following:
// • For Type 1 fonts using “CFF” tables, the process shall be as described in 9.6.6.2, "Encodings
//   for Type 1 Fonts".
// • For TrueType fonts using “glyf” tables, the process shall be as described in 9.6.6.4,
//   "Encodings for TrueType Fonts". Since this process sometimes produces ambiguous results,
//   conforming writers, instead of using a simple font, shall use a Type 0 font with an Identity-H
//   encoding and use the glyph indices as character codes, as described following Table 118.
func (_eeece *PdfFont )CharcodeBytesToUnicode (data []byte )(string ,int ,int ){_bfgcf ,_ ,_fdaaa :=_eeece .CharcodesToUnicodeWithStats (_eeece .BytesToCharcodes (data ));_fgdgb :=_cc .ExpandLigatures (_bfgcf );return _fgdgb ,_ffd .RuneCountInString (_fgdgb ),_fdaaa ;
};

// SetDocInfo sets the document /Info metadata.
// This will overwrite any globally declared document info.
func (_fdbag *PdfAppender )SetDocInfo (info *PdfInfo ){_fdbag ._gdfg =info };func _baag (_agaa []byte )[]byte {const _affg =52845;const _bddeg =22719;_egaaa :=55665;for _ ,_cacae :=range _agaa [:4]{_egaaa =(int (_cacae )+_egaaa )*_affg +_bddeg ;};_effgb :=make ([]byte ,len (_agaa )-4);
for _acge ,_ebdce :=range _agaa [4:]{_effgb [_acge ]=byte (int (_ebdce )^_egaaa >>8);_egaaa =(int (_ebdce )+_egaaa )*_affg +_bddeg ;};return _effgb ;};

// ColorFromPdfObjects gets the color from a series of pdf objects (4 for cmyk).
func (_egfa *PdfColorspaceDeviceCMYK )ColorFromPdfObjects (objects []_bgg .PdfObject )(PdfColor ,error ){if len (objects )!=4{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_daf ,_fdfb :=_bgg .GetNumbersAsFloat (objects );
if _fdfb !=nil {return nil ,_fdfb ;};return _egfa .ColorFromFloats (_daf );};

// ColorFromPdfObjects returns a new PdfColor based on the input slice of color
// components. The slice should contain a single PdfObjectFloat element in
// range 0-1.
func (_addg *PdfColorspaceDeviceGray )ColorFromPdfObjects (objects []_bgg .PdfObject )(PdfColor ,error ){if len (objects )!=1{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_bgb ,_ggfe :=_bgg .GetNumbersAsFloat (objects );
if _ggfe !=nil {return nil ,_ggfe ;};return _addg .ColorFromFloats (_bgb );};func (_ecedge *PdfWriter )optimize ()error {if _ecedge ._ebdfc ==nil {return nil ;};var _eagg error ;_ecedge ._eddge ,_eagg =_ecedge ._ebdfc .Optimize (_ecedge ._eddge );if _eagg !=nil {return _eagg ;
};_dcfbf :=make (map[_bgg .PdfObject ]struct{},len (_ecedge ._eddge ));for _ ,_bafa :=range _ecedge ._eddge {_dcfbf [_bafa ]=struct{}{};};_ecedge ._gbfd =_dcfbf ;return nil ;};func (_edgbc *PdfReader )flattenFieldsWithOpts (_ddbb bool ,_cbbgf FieldAppearanceGenerator ,_adcde *FieldFlattenOpts )error {if _adcde ==nil {_adcde =&FieldFlattenOpts {};
};var _dfdc bool ;_adac :=map[*PdfAnnotation ]bool {};{var _fdac []*PdfField ;_bdde :=_edgbc .AcroForm ;if _bdde !=nil {if _adcde .FilterFunc !=nil {_fdac =_bdde .filteredFields (_adcde .FilterFunc ,true );_dfdc =_bdde .Fields !=nil &&len (*_bdde .Fields )> 0;
}else {_fdac =_bdde .AllFields ();};};for _ ,_ccagc :=range _fdac {for _ ,_dbafd :=range _ccagc .Annotations {_adac [_dbafd .PdfAnnotation ]=_ccagc .V !=nil ;if _cbbgf !=nil {_gbda ,_ggacc :=_cbbgf .GenerateAppearanceDict (_bdde ,_ccagc ,_dbafd );if _ggacc !=nil {return _ggacc ;
};_dbafd .AP =_gbda ;};};};};if _ddbb {for _ ,_fbdf :=range _edgbc .PageList {_fbdgb ,_fbgg :=_fbdf .GetAnnotations ();if _fbgg !=nil {return _fbgg ;};for _ ,_cbadf :=range _fbdgb {_adac [_cbadf ]=true ;};};};for _ ,_agebf :=range _edgbc .PageList {var _ggfbc []*PdfAnnotation ;
if _cbbgf !=nil {if _gfgaf :=_cbbgf .WrapContentStream (_agebf );_gfgaf !=nil {return _gfgaf ;};};_fcaba ,_ccbf :=_agebf .GetAnnotations ();if _ccbf !=nil {return _ccbf ;};for _ ,_agcec :=range _fcaba {_gagda ,_fggfc :=_adac [_agcec ];if !_fggfc &&_adcde .AnnotFilterFunc !=nil {if _ ,_bbceb :=_agcec .GetContext ().(*PdfAnnotationWidget );
!_bbceb {_fggfc =_adcde .AnnotFilterFunc (_agcec );};};if !_fggfc {_ggfbc =append (_ggfbc ,_agcec );continue ;};switch _agcec .GetContext ().(type ){case *PdfAnnotationPopup :continue ;case *PdfAnnotationLink :continue ;case *PdfAnnotationProjection :continue ;
};_fdbf ,_dfge ,_fgbga :=_dcbab (_agcec );if _fgbga !=nil {if !_gagda {_dcf .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0056\u0020\u002d\u003e\u0020\u0061\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075t\u0020\u0061p\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065am\u0020\u002d\u0020\u0073\u006b\u0069\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072");
continue ;};_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u0020\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u0020\u0077\u0069\u0074h\u006f\u0075\u0074\u0020\u0061\u0070\u0070\u0065\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d,\u0020\u0065\u0072\u0072\u0020\u003a\u0020\u0025\u0076\u0020\u002d\u0020\u0073\u006bi\u0070\u0070\u0069n\u0067\u0020\u006f\u0076\u0065\u0072",_fgbga );
continue ;};if _fdbf ==nil {continue ;};_cbcf :=_agebf .Resources .GenerateXObjectName ();_agebf .Resources .SetXObjectFormByName (_cbcf ,_fdbf );_gce :=_db .Min (_dfge .Llx ,_dfge .Urx );_gfgd :=_db .Min (_dfge .Lly ,_dfge .Ury );var _dffeg []string ;
_dffeg =append (_dffeg ,"\u0071");_dffeg =append (_dffeg ,_e .Sprintf ("\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020%\u002e6\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0025\u002e\u0036\u0066\u0020\u0063\u006d",1.0,0.0,0.0,1.0,_gce ,_gfgd ));
_dffeg =append (_dffeg ,_e .Sprintf ("\u002f\u0025\u0073\u0020\u0044\u006f",_cbcf .String ()));_dffeg =append (_dffeg ,"\u0051");_egea :=_ba .Join (_dffeg ,"\u000a");_fgbga =_agebf .AppendContentStream (_egea );if _fgbga !=nil {return _fgbga ;};if _fdbf .Resources !=nil {_bged ,_fcaff :=_bgg .GetDict (_fdbf .Resources .Font );
if _fcaff {for _ ,_decf :=range _bged .Keys (){if !_agebf .Resources .HasFontByName (_decf ){_agebf .Resources .SetFontByName (_decf ,_bged .Get (_decf ));};};};};};if len (_ggfbc )> 0{_agebf ._dedeg =_ggfbc ;}else {_agebf ._dedeg =[]*PdfAnnotation {};
};};if !_dfdc {_edgbc .AcroForm =nil ;};return nil ;};

// NewPdfSignature creates a new PdfSignature object.
func NewPdfSignature (handler SignatureHandler )*PdfSignature {_cffeb :=&PdfSignature {Type :_bgg .MakeName ("\u0053\u0069\u0067"),Handler :handler };_cfgee :=&pdfSignDictionary {PdfObjectDictionary :_bgg .MakeDict (),_agedfb :&handler ,_dgdfb :_cffeb };
_cffeb ._ddfdc =_bgg .MakeIndirectObject (_cfgee );return _cffeb ;};

// NewPdfActionURI returns a new "Uri" action.
func NewPdfActionURI ()*PdfActionURI {_cbf :=NewPdfAction ();_gfb :=&PdfActionURI {};_gfb .PdfAction =_cbf ;_cbf .SetContext (_gfb );return _gfb ;};

// PdfAnnotationSquare represents Square annotations.
// (Section 12.5.6.8).
type PdfAnnotationSquare struct{*PdfAnnotation ;*PdfAnnotationMarkup ;BS _bgg .PdfObject ;IC _bgg .PdfObject ;BE _bgg .PdfObject ;RD _bgg .PdfObject ;};

// A returns the value of the A component of the color.
func (_begc *PdfColorLab )A ()float64 {return _begc [1]};

// NewPdfAnnotationScreen returns a new screen annotation.
func NewPdfAnnotationScreen ()*PdfAnnotationScreen {_ddag :=NewPdfAnnotation ();_gdd :=&PdfAnnotationScreen {};_gdd .PdfAnnotation =_ddag ;_ddag .SetContext (_gdd );return _gdd ;};

// RepairAcroForm attempts to rebuild the AcroForm fields using the widget
// annotations present in the document pages. Pass nil for the opts parameter
// in order to use the default options.
// NOTE: Currently, the opts parameter is declared in order to enable adding
// future options, but passing nil will always result in the default options
// being used.
func (_cgdda *PdfReader )RepairAcroForm (opts *AcroFormRepairOptions )error {var _bgeeg []*PdfField ;_fabbfd :=map[*_bgg .PdfIndirectObject ]struct{}{};for _ ,_aegfd :=range _cgdda .PageList {_dbgab ,_gffbd :=_aegfd .GetAnnotations ();if _gffbd !=nil {return _gffbd ;
};for _ ,_bgdgc :=range _dbgab {var _bdafd *PdfField ;switch _badc :=_bgdgc .GetContext ().(type ){case *PdfAnnotationWidget :if _badc ._aaa !=nil {_bdafd =_badc ._aaa ;break ;};if _gbgec ,_adfb :=_bgg .GetIndirect (_badc .Parent );_adfb {_bdafd ,_gffbd =_cgdda .newPdfFieldFromIndirectObject (_gbgec ,nil );
if _gffbd ==nil {break ;};_dcf .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_gbgec ,_gffbd );
};if _badc ._gec !=nil {_bdafd ,_gffbd =_cgdda .newPdfFieldFromIndirectObject (_badc ._gec ,nil );if _gffbd ==nil {break ;};_dcf .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0070\u0061\u0072s\u0065\u0020\u0066\u006f\u0072\u006d\u0020\u0066\u0069\u0065ld\u0020\u0025\u002bv\u003a \u0025\u0076",_badc ._gec ,_gffbd );
};};if _bdafd ==nil {continue ;};if _ ,_dfedb :=_fabbfd [_bdafd ._fagb ];_dfedb {continue ;};_fabbfd [_bdafd ._fagb ]=struct{}{};_bgeeg =append (_bgeeg ,_bdafd );};};if len (_bgeeg )==0{return nil ;};if _cgdda .AcroForm ==nil {_cgdda .AcroForm =NewPdfAcroForm ();
};_cgdda .AcroForm .Fields =&_bgeeg ;return nil ;};

// CharcodesToStrings returns the unicode strings corresponding to `charcodes`.
// The int returns are the number of strings and the number of unconvereted codes.
// NOTE: The number of strings returned is equal to the number of charcodes
func (_fdbc *PdfFont )CharcodesToStrings (charcodes []_cc .CharCode )([]string ,int ,int ){_ebeeb :=_fdbc .baseFields ();_dfbde :=make ([]string ,0,len (charcodes ));_afdcef :=0;_dacgf :=_fdbc .Encoder ();_cgefa :=_ebeeb ._ffed !=nil &&_fdbc .IsSimple ()&&_fdbc .Subtype ()=="\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065"&&!_ba .Contains (_ebeeb ._ffed .Name (),"\u0049d\u0065\u006e\u0074\u0069\u0074\u0079-");
if !_cgefa &&_dacgf !=nil {switch _ffgf :=_dacgf .(type ){case _cc .SimpleEncoder :_aacaf :=_ffgf .BaseName ();if _ ,_gcdcf :=_adce [_aacaf ];_gcdcf {for _ ,_bbceba :=range charcodes {if _bggec ,_eceb :=_dacgf .CharcodeToRune (_bbceba );_eceb {_dfbde =append (_dfbde ,string (_bggec ));
}else {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_bbceba ,charcodes ,_ebeeb .isCIDFont (),_fdbc ,_dacgf );
_afdcef ++;_dfbde =append (_dfbde ,_fbb .MissingCodeString );};};return _dfbde ,len (_dfbde ),_afdcef ;};};};for _ ,_gega :=range charcodes {if _ebeeb ._ffed !=nil {if _cgfd ,_bcega :=_ebeeb ._ffed .CharcodeToUnicode (_fbb .CharCode (_gega ));_bcega {_dfbde =append (_dfbde ,_cgfd );
continue ;};};if _dacgf !=nil {if _bedf ,_gaae :=_dacgf .CharcodeToRune (_gega );_gaae {_dfbde =append (_dfbde ,string (_bedf ));continue ;};};_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u004e\u006f\u0020\u0072u\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065=\u0030x\u0025\u0030\u0034\u0078\u0020\u0063\u0068\u0061\u0072\u0063\u006f\u0064\u0065\u0073\u003d\u005b\u0025\u00200\u0034\u0078\u005d\u0020\u0043\u0049\u0044\u003d\u0025\u0074\u000a"+"\t\u0066\u006f\u006e\u0074=%\u0073\n\u0009\u0065\u006e\u0063\u006fd\u0069\u006e\u0067\u003d\u0025\u0073",_gega ,charcodes ,_ebeeb .isCIDFont (),_fdbc ,_dacgf );
_afdcef ++;_dfbde =append (_dfbde ,_fbb .MissingCodeString );};if _afdcef !=0{_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0043\u006f\u0075\u006c\u0064\u006e\u0027\u0074\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0074\u006f\u0020u\u006e\u0069\u0063\u006f\u0064\u0065\u002e\u0020\u0055\u0073\u0069\u006e\u0067\u0020i\u006ep\u0075\u0074\u002e\u000a"+"\u0009\u006e\u0075\u006d\u0043\u0068\u0061\u0072\u0073\u003d\u0025d\u0020\u006e\u0075\u006d\u004d\u0069\u0073\u0073\u0065\u0073=\u0025\u0064\u000a"+"\u0009\u0066\u006f\u006e\u0074\u003d\u0025\u0073",len (charcodes ),_afdcef ,_fdbc );
};return _dfbde ,len (_dfbde ),_afdcef ;};

// AppendContentStream adds content stream by string.  Appends to the last
// contentstream instance if many.
func (_gdbee *PdfPage )AppendContentStream (contentStr string )error {_cbdda ,_acgda :=_gdbee .GetContentStreams ();if _acgda !=nil {return _acgda ;};if len (_cbdda )==0{_cbdda =[]string {contentStr };return _gdbee .SetContentStreams (_cbdda ,_bgg .NewFlateEncoder ());
};var _fbedf _aa .Buffer ;_fbedf .WriteString (_cbdda [len (_cbdda )-1]);_fbedf .WriteString ("\u000a");_fbedf .WriteString (contentStr );_cbdda [len (_cbdda )-1]=_fbedf .String ();return _gdbee .SetContentStreams (_cbdda ,_bgg .NewFlateEncoder ());};func _deag ()string {return _dcf .Version };


// SetContext sets the sub pattern (context).  Either PdfTilingPattern or PdfShadingPattern.
func (_cefeaa *PdfPattern )SetContext (ctx PdfModel ){_cefeaa ._dcdgae =ctx };

// GetOutlineTree returns the outline tree.
func (_cefdg *PdfReader )GetOutlineTree ()*PdfOutlineTreeNode {return _cefdg ._accd };const (ButtonTypeCheckbox ButtonType =iota ;ButtonTypePush ButtonType =iota ;ButtonTypeRadio ButtonType =iota ;);

// Add appends an outline item as a child of the current outline item.
func (_daef *OutlineItem )Add (item *OutlineItem ){_daef .Entries =append (_daef .Entries ,item )};

// PdfSignature represents a PDF signature dictionary and is used for signing via form signature fields.
// (Section 12.8, Table 252 - Entries in a signature dictionary p. 475 in PDF32000_2008).
type PdfSignature struct{Handler SignatureHandler ;_ddfdc *_bgg .PdfIndirectObject ;

// Type: Sig/DocTimeStamp
Type *_bgg .PdfObjectName ;Filter *_bgg .PdfObjectName ;SubFilter *_bgg .PdfObjectName ;Contents *_bgg .PdfObjectString ;Cert _bgg .PdfObject ;ByteRange *_bgg .PdfObjectArray ;Reference *_bgg .PdfObjectArray ;Changes *_bgg .PdfObjectArray ;Name *_bgg .PdfObjectString ;
M *_bgg .PdfObjectString ;Location *_bgg .PdfObjectString ;Reason *_bgg .PdfObjectString ;ContactInfo *_bgg .PdfObjectString ;R *_bgg .PdfObjectInteger ;V *_bgg .PdfObjectInteger ;PropBuild *_bgg .PdfObjectDictionary ;PropAuthTime *_bgg .PdfObjectInteger ;
PropAuthType *_bgg .PdfObjectName ;};func (_bfccbc *pdfFontType3 )getFontDescriptor ()*PdfFontDescriptor {return _bfccbc ._abdg };

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a CalRGB device.
func (_degg *PdfColorspaceCalRGB )GetNumComponents ()int {return 3};func (_bbdc *PdfWriter )writeAcroFormFields ()error {if _bbdc ._gagef ==nil {return nil ;};_dcf .Log .Trace ("\u0057r\u0069t\u0069\u006e\u0067\u0020\u0061c\u0072\u006f \u0066\u006f\u0072\u006d\u0073");
_dfead :=_bbdc ._gagef .ToPdfObject ();_dcf .Log .Trace ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d\u003a\u0020\u0025\u002b\u0076",_dfead );_bbdc ._ffbb .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_dfead );_dafag :=_bbdc .addObjects (_dfead );
if _dafag !=nil {return _dafag ;};return nil ;};

// AddExtension adds the specified extension to the Extensions dictionary.
// See section 7.1.2 "Extensions Dictionary" (pp. 108-109 PDF32000_2008).
func (_cbadgf *PdfWriter )AddExtension (extName ,baseVersion string ,extLevel int ){_babgd ,_ccdea :=_bgg .GetDict (_cbadgf ._ffbb .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073"));if !_ccdea {_babgd =_bgg .MakeDict ();_cbadgf ._ffbb .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006e\u0073",_babgd );
};_faaef ,_ccdea :=_bgg .GetDict (_babgd .Get (_bgg .PdfObjectName (extName )));if !_ccdea {_faaef =_bgg .MakeDict ();_babgd .Set (_bgg .PdfObjectName (extName ),_faaef );};if _dgcea ,_ :=_bgg .GetNameVal (_faaef .Get ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e"));
_dgcea !=baseVersion {_faaef .Set ("B\u0061\u0073\u0065\u0056\u0065\u0072\u0073\u0069\u006f\u006e",_bgg .MakeName (baseVersion ));};if _cfca ,_ :=_bgg .GetIntVal (_faaef .Get ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c"));
_cfca !=extLevel {_faaef .Set ("\u0045\u0078\u0074\u0065\u006e\u0073\u0069\u006f\u006eL\u0065\u0076\u0065\u006c",_bgg .MakeInteger (int64 (extLevel )));};};

// PdfAction represents an action in PDF (section 12.6 p. 412).
type PdfAction struct{_adc PdfModel ;Type _bgg .PdfObject ;S _bgg .PdfObject ;Next _bgg .PdfObject ;_ddf *_bgg .PdfIndirectObject ;};

// XObjectType represents the type of an XObject.
type XObjectType int ;

// LTV represents an LTV (Long-Term Validation) client. It is used to LTV
// enable signatures by adding validation and revocation data (certificate,
// OCSP and CRL information) to the DSS dictionary of a PDF document.
//
// LTV is added through the DSS by:
// - Adding certificates, OCSP and CRL information in the global scope of the
//   DSS. The global data is used for validating any of the signatures present
//   in the document.
// - Adding certificates, OCSP and CRL information for a single signature,
//   through an entry in the VRI dictionary of the DSS. The added data is used
//   for validating that particular signature only. This is the recommended
//   method for adding validation data for a signature. However, this is not
//   is not possible in the same revision the signature is applied. Validation
//   data for a signature is added based on the Contents entry of the signature,
//   which is known only after the revision is written. Even if the Contents
//   are known (e.g. when signing externally), updating the DSS at that point
//   would invalidate the calculated signature. As a result, if adding LTV
//   in the same revision is a requirement, use the first method.
//   See LTV.EnableChain.
// The client applies both methods, when possible.
//
// If `LTV.SkipExisting` is set to true (the default), validations are
// not added for signatures which are already present in the VRI entry of the
// document's DSS dictionary.
type LTV struct{

// CertClient is the client used to retrieve certificates.
CertClient *_ad .CertClient ;

// OCSPClient is the client used to retrieve OCSP validation information.
OCSPClient *_ad .OCSPClient ;

// CRLClient is the client used to retrieve CRL validation information.
CRLClient *_ad .CRLClient ;

// SkipExisting specifies whether existing signature validations
// should be skipped.
SkipExisting bool ;_gafcc *PdfAppender ;_ebce *DSS ;};

// SetVersion sets the PDF version of the output file.
func (_afegb *PdfWriter )SetVersion (majorVersion ,minorVersion int ){_afegb ._ffgff .Major =majorVersion ;_afegb ._ffgff .Minor =minorVersion ;};

// PdfPageResources is a Page resources model.
// Implements PdfModel.
type PdfPageResources struct{ExtGState _bgg .PdfObject ;ColorSpace _bgg .PdfObject ;Pattern _bgg .PdfObject ;Shading _bgg .PdfObject ;XObject _bgg .PdfObject ;Font _bgg .PdfObject ;ProcSet _bgg .PdfObject ;Properties _bgg .PdfObject ;_ddgdd *_bgg .PdfObjectDictionary ;
_adggf *PdfPageResourcesColorspaces ;};type modelManager struct{_ddfeg map[PdfModel ]_bgg .PdfObject ;_effd map[_bgg .PdfObject ]PdfModel ;};

// PdfAnnotationText represents Text annotations.
// (Section 12.5.6.4 p. 402).
type PdfAnnotationText struct{*PdfAnnotation ;*PdfAnnotationMarkup ;Open _bgg .PdfObject ;Name _bgg .PdfObject ;State _bgg .PdfObject ;StateModel _bgg .PdfObject ;};

// PdfFunctionType0 uses a sequence of sample values (contained in a stream) to provide an approximation
// for functions whose domains and ranges are bounded. The samples are organized as an m-dimensional
// table in which each entry has n components
type PdfFunctionType0 struct{Domain []float64 ;Range []float64 ;NumInputs int ;NumOutputs int ;Size []int ;BitsPerSample int ;Order int ;Encode []float64 ;Decode []float64 ;_fdgca []byte ;_dcbed []uint32 ;_eada *_bgg .PdfObjectStream ;};

// NewPdfColorspaceSpecialIndexed returns a new Indexed color.
func NewPdfColorspaceSpecialIndexed ()*PdfColorspaceSpecialIndexed {return &PdfColorspaceSpecialIndexed {HiVal :255};};

// M returns the value of the magenta component of the color.
func (_caga *PdfColorDeviceCMYK )M ()float64 {return _caga [1]};

// GetContentStreamObjs returns a slice of PDF objects containing the content
// streams of the page.
func (_cggdb *PdfPage )GetContentStreamObjs ()[]_bgg .PdfObject {if _cggdb .Contents ==nil {return nil ;};_fcdca :=_bgg .TraceToDirectObject (_cggdb .Contents );if _ecga ,_decfg :=_fcdca .(*_bgg .PdfObjectArray );_decfg {return _ecga .Elements ();};return []_bgg .PdfObject {_fcdca };
};

// FlattenFieldsWithOpts flattens the AcroForm fields of the reader using the
// provided field appearance generator and the specified options. If no options
// are specified, all form fields are flattened.
// If a filter function is provided using the opts parameter, only the filtered
// fields are flattened. Otherwise, all form fields are flattened.
// At the end of the process, the AcroForm contains all the fields which were
// not flattened. If all fields are flattened, the reader's AcroForm field
// is set to nil.
func (_agbgf *PdfReader )FlattenFieldsWithOpts (appgen FieldAppearanceGenerator ,opts *FieldFlattenOpts )error {return _agbgf .flattenFieldsWithOpts (false ,appgen ,opts );};func (_acecg *PdfReader )newPdfSignatureReferenceFromDict (_cfgbf *_bgg .PdfObjectDictionary )(*PdfSignatureReference ,error ){if _afcff ,_cdcgb :=_acecg ._gabea .GetModelFromPrimitive (_cfgbf ).(*PdfSignatureReference );
_cdcgb {return _afcff ,nil ;};_geega :=&PdfSignatureReference {_fcggb :_cfgbf ,Data :_cfgbf .Get ("\u0044\u0061\u0074\u0061")};var _gbafg bool ;_geega .Type ,_ =_bgg .GetName (_cfgbf .Get ("\u0054\u0079\u0070\u0065"));_geega .TransformMethod ,_gbafg =_bgg .GetName (_cfgbf .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
if !_gbafg {_dcf .Log .Error ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0053\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0052\u0065\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0020\u0054\u0072\u0061\u006e\u0073\u0066o\u0072\u006dM\u0065\u0074h\u006f\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020in\u0076\u0061\u006c\u0069\u0064\u0020\u006f\u0072\u0020m\u0069\u0073\u0073\u0069\u006e\u0067");
return nil ,ErrInvalidAttribute ;};_geega .TransformParams ,_ =_bgg .GetDict (_cfgbf .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_geega .DigestMethod ,_ =_bgg .GetName (_cfgbf .Get ("\u0044\u0069\u0067e\u0073\u0074\u004d\u0065\u0074\u0068\u006f\u0064"));
return _geega ,nil ;};

// GetPatternByName gets the pattern specified by keyName. Returns nil if not existing.
// The bool flag indicated whether it was found or not.
func (_fbbf *PdfPageResources )GetPatternByName (keyName _bgg .PdfObjectName )(*PdfPattern ,bool ){if _fbbf .Pattern ==nil {return nil ,false ;};_cecgg ,_gcgaf :=_bgg .TraceToDirectObject (_fbbf .Pattern ).(*_bgg .PdfObjectDictionary );if !_gcgaf {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074t\u0065\u0072\u006e\u0020\u0065\u006e\u0074r\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064i\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_fbbf .Pattern );
return nil ,false ;};if _dgaf :=_cecgg .Get (keyName );_dgaf !=nil {_ebcdca ,_edadg :=_cdcbc (_dgaf );if _edadg !=nil {_dcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020f\u0061\u0069l\u0065\u0064\u0020\u0074\u006f\u0020\u006c\u006fa\u0064\u0020\u0070\u0064\u0066\u0020\u0070\u0061\u0074\u0074\u0065\u0072n\u003a\u0020\u0025\u0076",_edadg );
return nil ,false ;};return _ebcdca ,true ;};return nil ,false ;};

// CharMetrics represents width and height metrics of a glyph.
type CharMetrics =_dad .CharMetrics ;

// NewPdfOutline returns an initialized PdfOutline.
func NewPdfOutline ()*PdfOutline {_gdefcg :=&PdfOutline {_aeag :_bgg .MakeIndirectObject (_bgg .MakeDict ())};_gdefcg ._ebbf =_gdefcg ;return _gdefcg ;};func _gbcaf (_gccfg _bgg .PdfObject )[]*_bgg .PdfObjectStream {if _gccfg ==nil {return nil ;};_acbb ,_accfe :=_bgg .GetArray (_gccfg );
if !_accfe ||_acbb .Len ()==0{return nil ;};_dcdfb :=make ([]*_bgg .PdfObjectStream ,0,_acbb .Len ());for _ ,_agddc :=range _acbb .Elements (){if _dacgdf ,_fagg :=_bgg .GetStream (_agddc );_fagg {_dcdfb =append (_dcdfb ,_dacgdf );};};return _dcdfb ;};

// XObjectImage (Table 89 in 8.9.5.1).
// Implements PdfModel interface.
type XObjectImage struct{

//ColorSpace       PdfObject
Width *int64 ;Height *int64 ;ColorSpace PdfColorspace ;BitsPerComponent *int64 ;Filter _bgg .StreamEncoder ;Intent _bgg .PdfObject ;ImageMask _bgg .PdfObject ;Mask _bgg .PdfObject ;Matte _bgg .PdfObject ;Decode _bgg .PdfObject ;Interpolate _bgg .PdfObject ;
Alternatives _bgg .PdfObject ;SMask _bgg .PdfObject ;SMaskInData _bgg .PdfObject ;Name _bgg .PdfObject ;StructParent _bgg .PdfObject ;ID _bgg .PdfObject ;OPI _bgg .PdfObject ;Metadata _bgg .PdfObject ;OC _bgg .PdfObject ;Stream []byte ;_cfcfd *_bgg .PdfObjectStream ;
};

// DecodeArray returns the range of color component values in the ICCBased colorspace.
func (_aaed *PdfColorspaceICCBased )DecodeArray ()[]float64 {return _aaed .Range };

// NewPdfColorDeviceCMYK returns a new CMYK32 color.
func NewPdfColorDeviceCMYK (c ,m ,y ,k float64 )*PdfColorDeviceCMYK {_ecaef :=PdfColorDeviceCMYK {c ,m ,y ,k };return &_ecaef ;};

// Size returns the width and the height of the page. The method reports
// the page dimensions as displayed by a PDF viewer (i.e. page rotation is
// taken into account).
func (_dfffef *PdfPage )Size ()(float64 ,float64 ,error ){_cgae ,_edbeg :=_dfffef .GetMediaBox ();if _edbeg !=nil {return 0,0,_edbeg ;};_fdea ,_gcdeg :=_cgae .Width (),_cgae .Height ();_aceaf ,_edbeg :=_dfffef .GetRotate ();if _edbeg !=nil {_dcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0025\u0073\u0020\u002d\u0020\u0069\u0067\u006e\u006f\u0072\u0069\u006e\u0067\u0020\u0061\u006e\u0064\u0020\u0061\u0073\u0073\u0075\u006d\u0069\u006e\u0067\u0020\u006e\u006f\u0020\u0072\u006f\u0074\u0061\u0074\u0069\u006f\u006e\u000a",_edbeg .Error ());
};if _caedb :=_aceaf ;_caedb %360!=0&&_caedb %90==0{if _aeace :=(360+_caedb %360)%360;_aeace ==90||_aeace ==270{_fdea ,_gcdeg =_gcdeg ,_fdea ;};};return _fdea ,_gcdeg ,nil ;};

// Encoder returns the font's text encoder.
func (_ebeg *PdfFont )Encoder ()_cc .TextEncoder {_gdgag :=_ebeg .actualFont ();if _gdgag ==nil {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0045n\u0063\u006f\u0064er\u0020\u006e\u006f\u0074\u0020\u0069m\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0066o\u006e\u0074\u0020\u0074\u0079\u0070\u0065\u003d%\u0023\u0054",_ebeg ._efdec );
return nil ;};return _gdgag .Encoder ();};func _gebf (_afcdb *_bgg .PdfObjectDictionary ,_cdcc *fontCommon )(*pdfFontType3 ,error ){_cgfce :=_bcfd (_cdcc );_bfbf :=_afcdb .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _bfbf ==nil {_bfbf =_bgg .MakeInteger (0);
};_cgfce .FirstChar =_bfbf ;_cagg ,_fagca :=_bgg .GetIntVal (_bfbf );if !_fagca {_dcf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_bfbf );
return nil ,_bgg .ErrTypeError ;};_gagbf :=_cc .CharCode (_cagg );_bfbf =_afcdb .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _bfbf ==nil {_bfbf =_bgg .MakeInteger (255);};_cgfce .LastChar =_bfbf ;_cagg ,_fagca =_bgg .GetIntVal (_bfbf );
if !_fagca {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_bfbf );return nil ,_bgg .ErrTypeError ;
};_ccaea :=_cc .CharCode (_cagg );_bfbf =_afcdb .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");if _bfbf !=nil {_cgfce .Resources =_bfbf ;};_bfbf =_afcdb .Get ("\u0043h\u0061\u0072\u0050\u0072\u006f\u0063s");if _bfbf ==nil {_dcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0043\u0068\u0061\u0072\u0050\u0072\u006f\u0063\u0073\u0020(%\u0076\u0029",_bfbf );
return nil ,_bgg .ErrNotSupported ;};_cgfce .CharProcs =_bfbf ;_bfbf =_afcdb .Get ("\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078");if _bfbf ==nil {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076a\u006c\u0069\u0064\u0020\u0046\u006f\u006et\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0028\u0025\u0076\u0029",_bfbf );
return nil ,_bgg .ErrNotSupported ;};_cgfce .FontMatrix =_bfbf ;_cgfce ._ggbd =make (map[_cc .CharCode ]float64 );_bfbf =_afcdb .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _bfbf !=nil {_cgfce .Widths =_bfbf ;_eadba ,_gggaf :=_bgg .GetArray (_bfbf );
if !_gggaf {_dcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_bfbf );return nil ,_bgg .ErrTypeError ;
};_edad ,_aeed :=_eadba .ToFloat64Array ();if _aeed !=nil {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_aeed ;};if len (_edad )!=int (_ccaea -_gagbf +1){_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_ccaea -_gagbf +1,len (_edad ));
return nil ,_bgg .ErrRangeError ;};_aceeea ,_gggaf :=_bgg .GetArray (_cgfce .FontMatrix );if !_gggaf {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0046\u006f\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u0028\u0025\u0054\u0029",_aceeea );
return nil ,_aeed ;};_edgf ,_aeed :=_aceeea .ToFloat64Array ();if _aeed !=nil {_dcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020c\u006f\u006ev\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0046o\u006e\u0074\u004d\u0061\u0074\u0072\u0069\u0078\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_aeed ;};_gdffa :=_bb .NewMatrix (_edgf [0],_edgf [1],_edgf [2],_edgf [3],_edgf [4],_edgf [5]);for _gcgbd ,_fbbbg :=range _edad {_eaccb ,_ :=_gdffa .Transform (_fbbbg ,_fbbbg );_cgfce ._ggbd [_gagbf +_cc .CharCode (_gcgbd )]=_eaccb ;};};_cgfce .Encoding =_bgg .TraceToDirectObject (_afcdb .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));
_caeeef :=_afcdb .Get ("\u0054o\u0055\u006e\u0069\u0063\u006f\u0064e");if _caeeef !=nil {_cgfce ._fdded =_bgg .TraceToDirectObject (_caeeef );_aacafa ,_cdbe :=_efef (_cgfce ._fdded ,&_cgfce .fontCommon );if _cdbe !=nil {return nil ,_cdbe ;};_cgfce ._ffed =_aacafa ;
};if _gdac :=_cgfce ._ffed ;_gdac !=nil {_cgfce ._bcddf =_cc .NewCMapEncoder ("",nil ,_gdac );}else {_cgfce ._bcddf =_cc .NewPdfDocEncoder ();};return _cgfce ,nil ;};

// ReaderOpts defines options for creating PdfReader instances.
type ReaderOpts struct{

// Password password of the PDF file encryption.
// Default: empty ("").
Password string ;

// LazyLoad set if the PDF file would be loaded using lazy-loading mode.
// Default: true.
LazyLoad bool ;

// ComplianceMode set if parsed PDF file should contain meta information for the verifiers of the compliance standards like PDF/A.
ComplianceMode bool ;};func (_dcc *PdfReader )newPdfActionSetOCGStateFromDict (_baa *_bgg .PdfObjectDictionary )(*PdfActionSetOCGState ,error ){return &PdfActionSetOCGState {State :_baa .Get ("\u0053\u0074\u0061t\u0065"),PreserveRB :_baa .Get ("\u0050\u0072\u0065\u0073\u0065\u0072\u0076\u0065\u0052\u0042")},nil ;
};

// ToUnicode returns the name of the font's "ToUnicode" field if there is one, or "" if there isn't.
func (_cfed *PdfFont )ToUnicode ()string {if _cfed .baseFields ()._ffed ==nil {return "";};return _cfed .baseFields ()._ffed .Name ();};

// PdfOutputIntent provides a means for matching the color characteristics of a PDF document with
// those of a target output device.
// Multiple PdfOutputIntents allows the production process to be customized to the expected workflow and the specific
// tools available.
type PdfOutputIntent struct{

// Type is an optional PDF object that this dictionary describes.
// If present, must be OutputIntent for an output intent dictionary.
Type string ;

// S defines the OutputIntent subtype which should match the standard used in given document i.e:
// for PDF/X use PdfOutputIntentTypeX.
S PdfOutputIntentType ;

// OutputCondition is an optional field that is identifying the intended output device or production condition in
// human-readable form. This is preferred method of defining such a string for presentation to the user.
OutputCondition string ;

// OutputConditionIdentifier is a required field identifying the intended output device or production condition in
// human or machine-readable form. If human-readable, this string may be used
// in lieu of an OutputCondition for presentation to the user.
// A typical value for this entry would be the name of a production condition  maintained
// in  an  industry-standard registry such  as the ICC Characterization Data Registry
// If the intended production condition is not a recognized standard, the value Custom is recommended for this entry.
// the DestOutputProfile entry defines the ICC profile, and the Info entry is used for further
// human-readable identification.
OutputConditionIdentifier string ;

// RegistryName is an optional string field (conventionally URI) identifying the registry in which the condition
// designated by OutputConditionIdentifier is defined.
RegistryName string ;

// Info is a required field if OutputConditionIdentifier does not specify a standard production condition.
// A human-readable text string containing additional information  or comments about intended
// target device or production condition.
Info string ;

// DestOutputProfile is required if OutputConditionIdentifier does not specify a standard production condition.
// It is an ICC profile stream defining the transformation from the PDF document's source colors to output device colorants.
DestOutputProfile []byte ;

// ColorComponents is the number of color components supported by given output profile.
ColorComponents int ;_faace *_bgg .PdfObjectDictionary ;};func (_afbe *PdfWriter )writeDocumentVersion (){if _afbe ._deagf {_afbe .writeString ("\u000a");}else {_afbe .writeString (_e .Sprintf ("\u0025\u0025\u0050D\u0046\u002d\u0025\u0064\u002e\u0025\u0064\u000a",_afbe ._ffgff .Major ,_afbe ._ffgff .Minor ));
_afbe .writeString ("\u0025\u00e2\u00e3\u00cf\u00d3\u000a");};};

// SignatureHandlerDocMDPParams describe the specific parameters for the SignatureHandlerEx
// These parameters describe how to check the difference between revisions.
// Revisions of the document get from the PdfParser.
type SignatureHandlerDocMDPParams struct{Parser *_bgg .PdfParser ;DiffPolicy _bg .DiffPolicy ;};

// ImageToRGB converts CalRGB colorspace image to RGB and returns the result.
func (_dcae *PdfColorspaceCalRGB )ImageToRGB (img Image )(Image ,error ){_dagb :=_ceg .NewReader (img .getBase ());_ecfe :=_dcg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),3,nil ,nil ,nil );_dead :=_ceg .NewWriter (_ecfe );
_aaagb :=_db .Pow (2,float64 (img .BitsPerComponent ))-1;_cdge :=make ([]uint32 ,3);var (_fead error ;_cegfg ,_dcgea ,_becg ,_ebccg ,_dccfb ,_aecd float64 ;);for {_fead =_dagb .ReadSamples (_cdge );if _fead ==_gb .EOF {break ;}else if _fead !=nil {return img ,_fead ;
};_cegfg =float64 (_cdge [0])/_aaagb ;_dcgea =float64 (_cdge [1])/_aaagb ;_becg =float64 (_cdge [2])/_aaagb ;_ebccg =_dcae .Matrix [0]*_db .Pow (_cegfg ,_dcae .Gamma [0])+_dcae .Matrix [3]*_db .Pow (_dcgea ,_dcae .Gamma [1])+_dcae .Matrix [6]*_db .Pow (_becg ,_dcae .Gamma [2]);
_dccfb =_dcae .Matrix [1]*_db .Pow (_cegfg ,_dcae .Gamma [0])+_dcae .Matrix [4]*_db .Pow (_dcgea ,_dcae .Gamma [1])+_dcae .Matrix [7]*_db .Pow (_becg ,_dcae .Gamma [2]);_aecd =_dcae .Matrix [2]*_db .Pow (_cegfg ,_dcae .Gamma [0])+_dcae .Matrix [5]*_db .Pow (_dcgea ,_dcae .Gamma [1])+_dcae .Matrix [8]*_db .Pow (_becg ,_dcae .Gamma [2]);
_cegfg =3.240479*_ebccg +-1.537150*_dccfb +-0.498535*_aecd ;_dcgea =-0.969256*_ebccg +1.875992*_dccfb +0.041556*_aecd ;_becg =0.055648*_ebccg +-0.204043*_dccfb +1.057311*_aecd ;_cegfg =_db .Min (_db .Max (_cegfg ,0),1.0);_dcgea =_db .Min (_db .Max (_dcgea ,0),1.0);
_becg =_db .Min (_db .Max (_becg ,0),1.0);_cdge [0]=uint32 (_cegfg *_aaagb );_cdge [1]=uint32 (_dcgea *_aaagb );_cdge [2]=uint32 (_becg *_aaagb );if _fead =_dead .WriteSamples (_cdge );_fead !=nil {return img ,_fead ;};};return _ddccc (&_ecfe ),nil ;};


// ToPdfObject implements interface PdfModel.
func (_fcf *PdfAnnotationProjection )ToPdfObject ()_bgg .PdfObject {_fcf .PdfAnnotation .ToPdfObject ();_cebc :=_fcf ._gec ;_dcdd :=_cebc .PdfObject .(*_bgg .PdfObjectDictionary );_fcf .PdfAnnotationMarkup .appendToPdfDictionary (_dcdd );return _cebc ;
};func (_dgad *PdfReader )newPdfActionResetFormFromDict (_bdcb *_bgg .PdfObjectDictionary )(*PdfActionResetForm ,error ){return &PdfActionResetForm {Fields :_bdcb .Get ("\u0046\u0069\u0065\u006c\u0064\u0073"),Flags :_bdcb .Get ("\u0046\u006c\u0061g\u0073")},nil ;
};var _ pdfFont =(*pdfFontSimple )(nil );

// Evaluate runs the function on the passed in slice and returns the results.
func (_cgffe *PdfFunctionType3 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=1{_dcf .Log .Error ("\u004f\u006e\u006c\u0079 o\u006e\u0065\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0061\u006c\u006c\u006f\u0077e\u0064");return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");
};return nil ,_ag .New ("\u006e\u006f\u0074\u0020im\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020\u0079\u0065\u0074");};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// red, green and blue components of the color. The values of the elements
// should be between 0 and 1.
func (_ddba *PdfColorspaceDeviceRGB )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_eeea :=vals [0];if _eeea < 0.0||_eeea > 1.0{_dcf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_eeea );
return nil ,ErrColorOutOfRange ;};_bbec :=vals [1];if _bbec < 0.0||_bbec > 1.0{_dcf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_eeea );return nil ,ErrColorOutOfRange ;
};_acec :=vals [2];if _acec < 0.0||_acec > 1.0{_dcf .Log .Debug ("\u0063\u006f\u006cor\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0043\u0053\u0020\u0072\u0061\u006e\u0067\u0065\u003a\u0020",_eeea );return nil ,ErrColorOutOfRange ;};_bgaf :=NewPdfColorDeviceRGB (_eeea ,_bbec ,_acec );
return _bgaf ,nil ;};func _feaga (_fgea *PdfField )[]*PdfField {_afedc :=[]*PdfField {_fgea };for _ ,_faef :=range _fgea .Kids {_afedc =append (_afedc ,_feaga (_faef )...);};return _afedc ;};

// PdfReader represents a PDF file reader. It is a frontend to the lower level parsing mechanism and provides
// a higher level access to work with PDF structure and information, such as the page structure etc.
type PdfReader struct{_ebdgc *_bgg .PdfParser ;_cedg _bgg .PdfObject ;_dbgd *_bgg .PdfIndirectObject ;_aggd *_bgg .PdfObjectDictionary ;_ebbfg []*_bgg .PdfIndirectObject ;PageList []*PdfPage ;_cbade int ;_gaebb *_bgg .PdfObjectDictionary ;_accd *PdfOutlineTreeNode ;
AcroForm *PdfAcroForm ;DSS *DSS ;Rotate *int64 ;_dcbbe *Permissions ;_gdfc map[*PdfReader ]*PdfReader ;_bdegd []*PdfReader ;_gabea *modelManager ;_cdbfbb bool ;_ddcbee map[_bgg .PdfObject ]struct{};_aeacdd _gb .ReadSeeker ;_eegac string ;_cddc bool ;_fdbbf *ReaderOpts ;
_ceea bool ;};func (_dgbf *PdfAppender )updateObjectsDeep (_eaec _bgg .PdfObject ,_gdcd map[_bgg .PdfObject ]struct{}){if _gdcd ==nil {_gdcd =map[_bgg .PdfObject ]struct{}{};};if _ ,_dadd :=_gdcd [_eaec ];_dadd ||_eaec ==nil {return ;};_gdcd [_eaec ]=struct{}{};
_dgcc :=_bgg .ResolveReferencesDeep (_eaec ,_dgbf ._efaa );if _dgcc !=nil {_dcf .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_dgcc );};switch _egfg :=_eaec .(type ){case *_bgg .PdfIndirectObject :switch {case _egfg .GetParser ()==_dgbf ._bded ._ebdgc :return ;
case _egfg .GetParser ()==_dgbf .Reader ._ebdgc :_fgbe ,_ :=_dgbf ._bded .GetIndirectObjectByNumber (int (_egfg .ObjectNumber ));_ggcf ,_afee :=_fgbe .(*_bgg .PdfIndirectObject );if _afee &&_ggcf !=nil {if _ggcf .PdfObject !=_egfg .PdfObject &&_ggcf .PdfObject .WriteString ()!=_egfg .PdfObject .WriteString (){_dgbf .addNewObject (_eaec );
_dgbf ._fbdg [_eaec ]=_egfg .ObjectNumber ;};};default:_dgbf .addNewObject (_eaec );};_dgbf .updateObjectsDeep (_egfg .PdfObject ,_gdcd );case *_bgg .PdfObjectArray :for _ ,_afba :=range _egfg .Elements (){_dgbf .updateObjectsDeep (_afba ,_gdcd );};case *_bgg .PdfObjectDictionary :for _ ,_bfb :=range _egfg .Keys (){_dgbf .updateObjectsDeep (_egfg .Get (_bfb ),_gdcd );
};case *_bgg .PdfObjectStreams :if _egfg .GetParser ()!=_dgbf ._bded ._ebdgc {for _ ,_bdce :=range _egfg .Elements (){_dgbf .updateObjectsDeep (_bdce ,_gdcd );};};case *_bgg .PdfObjectStream :switch {case _egfg .GetParser ()==_dgbf ._bded ._ebdgc :return ;
case _egfg .GetParser ()==_dgbf .Reader ._ebdgc :if _gcgda ,_debe :=_dgbf ._bded ._ebdgc .LookupByReference (_egfg .PdfObjectReference );_debe ==nil {var _fecca bool ;if _gabc ,_dgg :=_bgg .GetStream (_gcgda );_dgg &&_aa .Equal (_gabc .Stream ,_egfg .Stream ){_fecca =true ;
};if _ecad ,_bcdb :=_bgg .GetDict (_gcgda );_fecca &&_bcdb {_fecca =_ecad .WriteString ()==_egfg .PdfObjectDictionary .WriteString ();};if _fecca {return ;};};if _egfg .ObjectNumber !=0{_dgbf ._fbdg [_eaec ]=_egfg .ObjectNumber ;};default:if _ ,_dadc :=_dgbf ._eccg [_eaec ];
!_dadc {_dgbf .addNewObject (_eaec );};};_dgbf .updateObjectsDeep (_egfg .PdfObjectDictionary ,_gdcd );};};

// HasFontByName checks whether a font is defined by the specified keyName.
func (_ddefb *PdfPageResources )HasFontByName (keyName _bgg .PdfObjectName )bool {_ ,_dcbgb :=_ddefb .GetFontByName (keyName );return _dcbgb ;};func (_cagdc *fontFile )loadFromSegments (_bdgb ,_ebccf []byte )error {_dcf .Log .Trace ("\u006c\u006f\u0061dF\u0072\u006f\u006d\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u0020\u0025\u0064",len (_bdgb ),len (_ebccf ));
_fdaac :=_cagdc .parseASCIIPart (_bdgb );if _fdaac !=nil {return _fdaac ;};_dcf .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_cagdc );if len (_ebccf )==0{return nil ;};_dcf .Log .Trace ("f\u006f\u006e\u0074\u0066\u0069\u006c\u0065\u003d\u0025\u0073",_cagdc );
return nil ;};const (_dfcfa =0x00001;_dcfd =0x00002;_dcga =0x00004;_bfbe =0x00008;_cbfbd =0x00020;_ebdcf =0x00040;_efece =0x10000;_fffc =0x20000;_bffbb =0x40000;);func _abff ()string {_abfga .Lock ();defer _abfga .Unlock ();return _edafc };

// IsValid checks if the given pdf output intent type is valid.
func (_eecegf PdfOutputIntentType )IsValid ()bool {return _eecegf >=PdfOutputIntentTypeA1 &&_eecegf <=PdfOutputIntentTypeX ;};func (_cbffge *PdfFunctionType0 )processSamples ()error {_effe :=_ceg .ResampleBytes (_cbffge ._fdgca ,_cbffge .BitsPerSample );
_cbffge ._dcbed =_effe ;return nil ;};func (_bbfe *PdfAcroForm )signatureFields ()[]*PdfFieldSignature {var _daggb []*PdfFieldSignature ;for _ ,_eaccc :=range _bbfe .AllFields (){switch _ggefc :=_eaccc .GetContext ().(type ){case *PdfFieldSignature :_gdgab :=_ggefc ;
_daggb =append (_daggb ,_gdgab );};};return _daggb ;};func _bbbcg (_fedcf *_bgg .PdfObjectDictionary )(*PdfShadingType4 ,error ){_bccad :=PdfShadingType4 {};_aabfb :=_fedcf .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _aabfb ==nil {_dcf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dacea ,_gbade :=_aabfb .(*_bgg .PdfObjectInteger );if !_gbade {_dcf .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_aabfb );
return nil ,_bgg .ErrTypeError ;};_bccad .BitsPerCoordinate =_dacea ;_aabfb =_fedcf .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _aabfb ==nil {_dcf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_dacea ,_gbade =_aabfb .(*_bgg .PdfObjectInteger );if !_gbade {_dcf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_aabfb );
return nil ,_bgg .ErrTypeError ;};_bccad .BitsPerComponent =_dacea ;_aabfb =_fedcf .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _aabfb ==nil {_dcf .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_dacea ,_gbade =_aabfb .(*_bgg .PdfObjectInteger );if !_gbade {_dcf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_aabfb );
return nil ,_bgg .ErrTypeError ;};_bccad .BitsPerComponent =_dacea ;_aabfb =_fedcf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _aabfb ==nil {_dcf .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ebgfg ,_gbade :=_aabfb .(*_bgg .PdfObjectArray );if !_gbade {_dcf .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_aabfb );
return nil ,_bgg .ErrTypeError ;};_bccad .Decode =_ebgfg ;_aabfb =_fedcf .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");if _aabfb ==nil {_dcf .Log .Debug ("\u0052\u0065q\u0075\u0069\u0072\u0065d\u0020\u0061t\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020m\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0020\u0046\u0075\u006ec\u0074\u0069\u006f\u006e");
return nil ,ErrRequiredAttributeMissing ;};_bccad .Function =[]PdfFunction {};if _ggbce ,_bdcdd :=_aabfb .(*_bgg .PdfObjectArray );_bdcdd {for _ ,_dgeaa :=range _ggbce .Elements (){_fgcaf ,_acacg :=_aefac (_dgeaa );if _acacg !=nil {_dcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_acacg );
return nil ,_acacg ;};_bccad .Function =append (_bccad .Function ,_fgcaf );};}else {_cggea ,_cfacb :=_aefac (_aabfb );if _cfacb !=nil {_dcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_cfacb );
return nil ,_cfacb ;};_bccad .Function =append (_bccad .Function ,_cggea );};return &_bccad ,nil ;};

// NewPdfAnnotationWatermark returns a new watermark annotation.
func NewPdfAnnotationWatermark ()*PdfAnnotationWatermark {_baad :=NewPdfAnnotation ();_bda :=&PdfAnnotationWatermark {};_bda .PdfAnnotation =_baad ;_baad .SetContext (_bda );return _bda ;};func (_dcbb *PdfReader )newPdfAnnotationLineFromDict (_cfba *_bgg .PdfObjectDictionary )(*PdfAnnotationLine ,error ){_afdc :=PdfAnnotationLine {};
_cee ,_cced :=_dcbb .newPdfAnnotationMarkupFromDict (_cfba );if _cced !=nil {return nil ,_cced ;};_afdc .PdfAnnotationMarkup =_cee ;_afdc .L =_cfba .Get ("\u004c");_afdc .BS =_cfba .Get ("\u0042\u0053");_afdc .LE =_cfba .Get ("\u004c\u0045");_afdc .IC =_cfba .Get ("\u0049\u0043");
_afdc .LL =_cfba .Get ("\u004c\u004c");_afdc .LLE =_cfba .Get ("\u004c\u004c\u0045");_afdc .Cap =_cfba .Get ("\u0043\u0061\u0070");_afdc .IT =_cfba .Get ("\u0049\u0054");_afdc .LLO =_cfba .Get ("\u004c\u004c\u004f");_afdc .CP =_cfba .Get ("\u0043\u0050");
_afdc .Measure =_cfba .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");_afdc .CO =_cfba .Get ("\u0043\u004f");return &_afdc ,nil ;};

// DecodeArray returns the range of color component values in DeviceCMYK colorspace.
func (_gaad *PdfColorspaceDeviceCMYK )DecodeArray ()[]float64 {return []float64 {0.0,1.0,0.0,1.0,0.0,1.0,0.0,1.0};};

// PdfAnnotationPrinterMark represents PrinterMark annotations.
// (Section 12.5.6.20).
type PdfAnnotationPrinterMark struct{*PdfAnnotation ;MN _bgg .PdfObject ;};func _cbd (_bbae _bgg .PdfObject )(*PdfFilespec ,error ){if _bbae ==nil {return nil ,nil ;};return NewPdfFilespecFromObj (_bbae );};

// ColorFromFloats returns a new PdfColor based on the input slice of color
// components. The slice should contain three elements representing the
// L (range 0-100), A (range -100-100) and B (range -100-100) components of
// the color.
func (_dbfa *PdfColorspaceLab )ColorFromFloats (vals []float64 )(PdfColor ,error ){if len (vals )!=3{return nil ,_ag .New ("r\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b");};_ggfbg :=vals [0];if _ggfbg < 0.0||_ggfbg > 100.0{_dcf .Log .Debug ("\u004c\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030-\u0031\u0030\u0030\u0029",_ggfbg );
return nil ,ErrColorOutOfRange ;};_afbf :=vals [1];_dbec :=float64 (-100);_cdcae :=float64 (100);if len (_dbfa .Range )> 1{_dbec =_dbfa .Range [0];_cdcae =_dbfa .Range [1];};if _afbf < _dbec ||_afbf > _cdcae {_dcf .Log .Debug ("\u0041\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_afbf ,_dbec ,_cdcae );
return nil ,ErrColorOutOfRange ;};_cddb :=vals [2];_ebacf :=float64 (-100);_bfcfg :=float64 (100);if len (_dbfa .Range )> 3{_ebacf =_dbfa .Range [2];_bfcfg =_dbfa .Range [3];};if _cddb < _ebacf ||_cddb > _bfcfg {_dcf .Log .Debug ("\u0062\u0020\u006f\u0075\u0074\u0020\u006f\u0066\u0020\u0072\u0061\u006e\u0067e\u0020\u0028\u0067\u006f\u0074\u0020%\u0076\u003b\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u0025\u0076\u0020\u0074o\u0020\u0025\u0076\u0029",_cddb ,_ebacf ,_bfcfg );
return nil ,ErrColorOutOfRange ;};_bbcd :=NewPdfColorLab (_ggfbg ,_afbf ,_cddb );return _bbcd ,nil ;};

// PageProcessCallback callback function used in page loading
// that could be used to modify the page content.
//
// If an error is returned, the `ToWriter` process would fail.
//
// This callback, if defined, will take precedence over `PageCallback` callback.
type PageProcessCallback func (_eebc int ,_gage *PdfPage )error ;

// SetXObjectImageByName adds the provided XObjectImage to the page resources.
// The added XObjectImage is identified by the specified name.
func (_deddf *PdfPageResources )SetXObjectImageByName (keyName _bgg .PdfObjectName ,ximg *XObjectImage )error {_ecba :=ximg .ToPdfObject ().(*_bgg .PdfObjectStream );_cbafe :=_deddf .SetXObjectByName (keyName ,_ecba );return _cbafe ;};

// GetXObjectFormByName returns the XObjectForm with the specified name from the
// page resources, if it exists.
func (_afgc *PdfPageResources )GetXObjectFormByName (keyName _bgg .PdfObjectName )(*XObjectForm ,error ){_eeac ,_dggaf :=_afgc .GetXObjectByName (keyName );if _eeac ==nil {return nil ,nil ;};if _dggaf !=XObjectTypeForm {return nil ,_ag .New ("\u006e\u006f\u0074\u0020\u0061\u0020\u0066\u006f\u0072\u006d");
};_dbfec ,_afac :=NewXObjectFormFromStream (_eeac );if _afac !=nil {return nil ,_afac ;};return _dbfec ,nil ;};func _dbdc (_gcdccc *_bgg .PdfObjectDictionary )*VRI {_gggce ,_ :=_bgg .GetString (_gcdccc .Get ("\u0054\u0055"));_fbga ,_ :=_bgg .GetString (_gcdccc .Get ("\u0054\u0053"));
return &VRI {Cert :_gbcaf (_gcdccc .Get ("\u0043\u0065\u0072\u0074")),OCSP :_gbcaf (_gcdccc .Get ("\u004f\u0043\u0053\u0050")),CRL :_gbcaf (_gcdccc .Get ("\u0043\u0052\u004c")),TU :_gggce ,TS :_fbga };};func (_fgge *PdfReader )newPdfActionRenditionFromDict (_efbc *_bgg .PdfObjectDictionary )(*PdfActionRendition ,error ){return &PdfActionRendition {R :_efbc .Get ("\u0052"),AN :_efbc .Get ("\u0041\u004e"),OP :_efbc .Get ("\u004f\u0050"),JS :_efbc .Get ("\u004a\u0053")},nil ;
};

// Duplicate creates a duplicate page based on the current one and returns it.
func (_ebdf *PdfPage )Duplicate ()*PdfPage {_bdfc :=*_ebdf ;_bdfc ._gdbeb =_bgg .MakeDict ();_bdfc ._bcdg =_bgg .MakeIndirectObject (_bdfc ._gdbeb );return &_bdfc ;};

// SetPageLabels sets the PageLabels entry in the PDF catalog.
// See section 12.4.2 "Page Labels" (p. 382 PDF32000_2008).
func (_eebebg *PdfWriter )SetPageLabels (pageLabels _bgg .PdfObject )error {if pageLabels ==nil {return nil ;};_dcf .Log .Trace ("\u0053\u0065t\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u0020\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006cs.\u002e\u002e");
_eebebg ._ffbb .Set ("\u0050\u0061\u0067\u0065\u004c\u0061\u0062\u0065\u006c\u0073",pageLabels );return _eebebg .addObjects (pageLabels );};func (_adca *PdfColorspaceDeviceRGB )String ()string {return "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B";};

// PdfActionThread represents a thread action.
type PdfActionThread struct{*PdfAction ;F *PdfFilespec ;D _bgg .PdfObject ;B _bgg .PdfObject ;};

// SetAlpha sets the alpha layer for the image.
func (_gacdf *Image )SetAlpha (alpha []byte ){_gacdf ._bfcec =alpha };func (_efgb *PdfReader )newPdfActionNamedFromDict (_dcab *_bgg .PdfObjectDictionary )(*PdfActionNamed ,error ){return &PdfActionNamed {N :_dcab .Get ("\u004e")},nil ;};

// ImageToRGB convert 1-component grayscale data to 3-component RGB.
func (_gafc *PdfColorspaceDeviceGray )ImageToRGB (img Image )(Image ,error ){if img .ColorComponents !=1{return img ,_ag .New ("\u0074\u0068e \u0070\u0072\u006fv\u0069\u0064\u0065\u0064 im\u0061ge\u0020\u0069\u0073\u0020\u006e\u006f\u0074 g\u0072\u0061\u0079\u0020\u0073\u0063\u0061l\u0065");
};_edfd ,_fdbaf :=_dcg .NewImage (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),img .ColorComponents ,img .Data ,img ._bfcec ,img ._ddaa );if _fdbaf !=nil {return img ,_fdbaf ;};_ddge ,_fdbaf :=_dcg .NRGBAConverter .Convert (_edfd );
if _fdbaf !=nil {return img ,_fdbaf ;};_fggb :=_ddccc (_ddge .Base ());_dcf .Log .Trace ("\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079\u0020\u002d>\u0020\u0052\u0047\u0042");_dcf .Log .Trace ("s\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",img .Data );
_dcf .Log .Trace ("\u0052G\u0042 \u0073\u0061\u006d\u0070\u006c\u0065\u0073\u003a\u0020\u0025\u0076",_fggb .Data );_dcf .Log .Trace ("\u0025\u0076\u0020\u002d\u003e\u0020\u0025\u0076",img ,_fggb );return _fggb ,nil ;};func _eebgf ()string {_abfga .Lock ();
defer _abfga .Unlock ();return _fggff };

// SetPdfProducer sets the Producer attribute of the output PDF.
func SetPdfProducer (producer string ){_abfga .Lock ();defer _abfga .Unlock ();_abebe =producer };

// NewBorderStyle returns an initialized PdfBorderStyle.
func NewBorderStyle ()*PdfBorderStyle {_aeddd :=&PdfBorderStyle {};return _aeddd };

// GetAllContentStreams gets all the content streams for a page as one string.
func (_eede *PdfPage )GetAllContentStreams ()(string ,error ){_edafa ,_egcde :=_eede .GetContentStreams ();if _egcde !=nil {return "",_egcde ;};return _ba .Join (_edafa ,"\u0020"),nil ;};

// NewPdfColorDeviceRGB returns a new PdfColorDeviceRGB based on the r,g,b component values.
func NewPdfColorDeviceRGB (r ,g ,b float64 )*PdfColorDeviceRGB {_eebef :=PdfColorDeviceRGB {r ,g ,b };return &_eebef ;};

// ToPdfObject returns the PDF representation of the shading dictionary.
func (_ggffa *PdfShadingType6 )ToPdfObject ()_bgg .PdfObject {_ggffa .PdfShading .ToPdfObject ();_ffdbed ,_eegbab :=_ggffa .getShadingDict ();if _eegbab !=nil {_dcf .Log .Error ("\u0055\u006ea\u0062\u006c\u0065\u0020\u0074\u006f\u0020\u0061\u0063\u0063\u0065\u0073\u0073\u0020\u0073\u0068\u0061\u0064\u0069\u006e\u0067\u0020di\u0063\u0074");
return nil ;};if _ggffa .BitsPerCoordinate !=nil {_ffdbed .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065",_ggffa .BitsPerCoordinate );};if _ggffa .BitsPerComponent !=nil {_ffdbed .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_ggffa .BitsPerComponent );
};if _ggffa .BitsPerFlag !=nil {_ffdbed .Set ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067",_ggffa .BitsPerFlag );};if _ggffa .Decode !=nil {_ffdbed .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_ggffa .Decode );};if _ggffa .Function !=nil {if len (_ggffa .Function )==1{_ffdbed .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_ggffa .Function [0].ToPdfObject ());
}else {_beaa :=_bgg .MakeArray ();for _ ,_cfea :=range _ggffa .Function {_beaa .Append (_cfea .ToPdfObject ());};_ffdbed .Set ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e",_beaa );};};return _ggffa ._fcfbb ;};func _addcc (_gefee []byte )(_fcag ,_eccga string ,_deea error ){_dcf .Log .Trace ("g\u0065\u0074\u0041\u0053CI\u0049S\u0065\u0063\u0074\u0069\u006fn\u0073\u003a\u0020\u0025\u0064\u0020",len (_gefee ));
_dcef :=_ffbag .FindIndex (_gefee );if _dcef ==nil {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0067\u0065\u0074\u0041\u0053\u0043\u0049\u0049\u0053\u0065\u0063\u0074\u0069o\u006e\u0073\u002e\u0020\u004e\u006f\u0020d\u0069\u0063\u0074\u002e");
return "","",_bgg .ErrTypeError ;};_dggff :=_dcef [1];_fecg :=_ba .Index (string (_gefee [_dggff :]),_gdae );if _fecg < 0{_fcag =string (_gefee [_dggff :]);return _fcag ,"",nil ;};_fabbc :=_dggff +_fecg ;_fcag =string (_gefee [_dggff :_fabbc ]);_aaaa :=_fabbc ;
_fecg =_ba .Index (string (_gefee [_aaaa :]),_afccf );if _fecg < 0{_dcf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0067e\u0074\u0041\u0053\u0043\u0049\u0049\u0053e\u0063\u0074\u0069\u006f\u006e\u0073\u002e\u0020\u0065\u0072\u0072\u003d\u0025\u0076",_deea );
return "","",_bgg .ErrTypeError ;};_bgfc :=_aaaa +_fecg ;_eccga =string (_gefee [_aaaa :_bgfc ]);return _fcag ,_eccga ,nil ;};

// PdfColorspaceCalRGB stores A, B, C components
type PdfColorspaceCalRGB struct{WhitePoint []float64 ;BlackPoint []float64 ;Gamma []float64 ;Matrix []float64 ;_bbdga *_bgg .PdfObjectDictionary ;_ffafg *_bgg .PdfIndirectObject ;};

// PdfBorderEffect represents a PDF border effect.
type PdfBorderEffect struct{S *BorderEffect ;I *float64 ;};

// GetContainingPdfObject returns the container of the resources object (indirect object).
func (_eddfc *PdfPageResources )GetContainingPdfObject ()_bgg .PdfObject {return _eddfc ._ddgdd };type fontFile struct{_ddecf string ;_caaab string ;_eeabg _cc .SimpleEncoder ;};

// NewPdfAnnotationPolygon returns a new polygon annotation.
func NewPdfAnnotationPolygon ()*PdfAnnotationPolygon {_gcgb :=NewPdfAnnotation ();_dbbb :=&PdfAnnotationPolygon {};_dbbb .PdfAnnotation =_gcgb ;_dbbb .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_gcgb .SetContext (_dbbb );return _dbbb ;};

// XObjectForm (Table 95 in 8.10.2).
type XObjectForm struct{Filter _bgg .StreamEncoder ;FormType _bgg .PdfObject ;BBox _bgg .PdfObject ;Matrix _bgg .PdfObject ;Resources *PdfPageResources ;Group _bgg .PdfObject ;Ref _bgg .PdfObject ;MetaData _bgg .PdfObject ;PieceInfo _bgg .PdfObject ;LastModified _bgg .PdfObject ;
StructParent _bgg .PdfObject ;StructParents _bgg .PdfObject ;OPI _bgg .PdfObject ;OC _bgg .PdfObject ;Name _bgg .PdfObject ;

// Stream data.
Stream []byte ;_eaeegc *_bgg .PdfObjectStream ;};func (_acacf *PdfWriter )makeOffSetReference (_fggbc int64 ){_ffcdg :=_e .Sprintf ("\u0073\u0074\u0061\u0072\u0074\u0078\u0072\u0065\u0066\u000a\u0025\u0064\u000a",_fggbc );_acacf .writeString (_ffcdg );
_acacf .writeString ("\u0025\u0025\u0045\u004f\u0046\u000a");};

// NewPdfActionNamed returns a new "named" action.
func NewPdfActionNamed ()*PdfActionNamed {_fgg :=NewPdfAction ();_ac :=&PdfActionNamed {};_ac .PdfAction =_fgg ;_fgg .SetContext (_ac );return _ac ;};

// GetObjectNums returns the object numbers of the PDF objects in the file
// Numbered objects are either indirect objects or stream objects.
// e.g. objNums := pdfReader.GetObjectNums()
// The underlying objects can then be accessed with
// pdfReader.GetIndirectObjectByNumber(objNums[0]) for the first available object.
func (_cebeb *PdfReader )GetObjectNums ()[]int {return _cebeb ._ebdgc .GetObjectNums ()};

// Write writes the Appender output to io.Writer.
// It can only be called once and further invocations will result in an error.
func (_fded *PdfAppender )Write (w _gb .Writer )error {if _fded ._acg {return _ag .New ("\u0061\u0070\u0070\u0065\u006e\u0064\u0065\u0072\u0020\u0077\u0072\u0069\u0074e\u0020\u0063\u0061\u006e\u0020\u006fn\u006c\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0076\u006f\u006b\u0065\u0064 \u006f\u006e\u0063\u0065");
};_gae :=NewPdfWriter ();_fddf ,_bgec :=_bgg .GetDict (_gae ._deeaf );if !_bgec {return _ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_cedc ,_bgec :=_fddf .Get ("\u004b\u0069\u0064\u0073").(*_bgg .PdfObjectArray );if !_bgec {return _ag .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_ddg ,_bgec :=_fddf .Get ("\u0043\u006f\u0075n\u0074").(*_bgg .PdfObjectInteger );if !_bgec {return _ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};_fffd :=_fded ._bded ._ebdgc ;_bdf :=_fffd .GetTrailer ();if _bdf ==nil {return _ag .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0074\u0072\u0061\u0069\u006c\u0065\u0072");};_baea ,_bgec :=_bgg .GetIndirect (_bdf .Get ("\u0052\u006f\u006f\u0074"));
if !_bgec {return _ag .New ("c\u0061\u0074\u0061\u006c\u006f\u0067 \u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072 \u006e\u006f\u0074 \u0066o\u0075\u006e\u0064");};_ggeb ,_bgec :=_bgg .GetDict (_baea );if !_bgec {_dcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067\u003a\u0020\u0028\u0072\u006f\u006f\u0074\u0020\u0025\u0071\u0029\u0020\u0028\u0074\u0072\u0061\u0069\u006c\u0065\u0072\u0020\u0025\u0073\u0029",_baea ,*_bdf );
return _ag .New ("\u006di\u0073s\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006c\u006f\u0067");};for _ ,_eef :=range _ggeb .Keys (){if _gae ._ffbb .Get (_eef )==nil {_aece :=_ggeb .Get (_eef );_gae ._ffbb .Set (_eef ,_aece );};};if _fded ._fgbb !=nil {_gae ._ffbb .Set ("\u0041\u0063\u0072\u006f\u0046\u006f\u0072\u006d",_fded ._fgbb .ToPdfObject ());
_fded .updateObjectsDeep (_fded ._fgbb .ToPdfObject (),nil );};if _fded ._ebdc !=nil {_fded .updateObjectsDeep (_fded ._ebdc .ToPdfObject (),nil );_gae ._ffbb .Set ("\u0044\u0053\u0053",_fded ._ebdc .GetContainingPdfObject ());};if _fded ._ddcg !=nil {_gae ._ffbb .Set ("\u0050\u0065\u0072m\u0073",_fded ._ddcg .ToPdfObject ());
_fded .updateObjectsDeep (_fded ._ddcg .ToPdfObject (),nil );};if _gae ._ffgff .Major < 2{_gae .AddExtension ("\u0045\u0053\u0049\u0043","\u0031\u002e\u0037",5);_gae .AddExtension ("\u0041\u0044\u0042\u0045","\u0031\u002e\u0037",8);};if _egfd ,_becee :=_bgg .GetDict (_bdf .Get ("\u0049\u006e\u0066\u006f"));
_becee {if _afgbb ,_fcdbc :=_bgg .GetDict (_gae ._eeged );_fcdbc {for _ ,_affe :=range _egfd .Keys (){if _afgbb .Get (_affe )==nil {_afgbb .Set (_affe ,_egfd .Get (_affe ));};};};};if _fded ._gdfg !=nil {_gae ._eeged =_bgg .MakeIndirectObject (_fded ._gdfg .ToPdfObject ());
};_fded .addNewObject (_gae ._eeged );_fded .addNewObject (_gae ._bceaa );_cfbb :=false ;if len (_fded ._bded .PageList )!=len (_fded ._daab ){_cfbb =true ;}else {for _fgga :=range _fded ._bded .PageList {switch {case _fded ._daab [_fgga ]==_fded ._bded .PageList [_fgga ]:case _fded ._daab [_fgga ]==_fded .Reader .PageList [_fgga ]:default:_cfbb =true ;
};if _cfbb {break ;};};};if _cfbb {_fded .updateObjectsDeep (_gae ._deeaf ,nil );}else {_fded ._faf [_gae ._deeaf ]=struct{}{};};_gae ._deeaf .ObjectNumber =_fded .Reader ._dbgd .ObjectNumber ;_fded ._fbdg [_gae ._deeaf ]=_fded .Reader ._dbgd .ObjectNumber ;
_daeg :=[]_bgg .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};for _ ,_ddeae :=range _fded ._daab {_fdeg :=_ddeae .ToPdfObject ();
*_ddg =*_ddg +1;if _dagf ,_facc :=_fdeg .(*_bgg .PdfIndirectObject );_facc &&_dagf .GetParser ()==_fded ._bded ._ebdgc {_cedc .Append (&_dagf .PdfObjectReference );continue ;};if _aege ,_cdbc :=_bgg .GetDict (_fdeg );_cdbc {_edab ,_bfafe :=_aege .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bgg .PdfIndirectObject );
for _bfafe {_dcf .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_edab );_abfa ,_bcfb :=_edab .PdfObject .(*_bgg .PdfObjectDictionary );if !_bcfb {return _ag .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_agbg :=range _daeg {_dcf .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_agbg );if _aege .Get (_agbg )!=nil {_dcf .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");continue ;
};if _afeab :=_abfa .Get (_agbg );_afeab !=nil {_dcf .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_agbg );_aege .Set (_agbg ,_afeab );};};_edab ,_bfafe =_abfa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074").(*_bgg .PdfIndirectObject );
_dcf .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_abfa .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_aege .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_gae ._deeaf );};_fded .updateObjectsDeep (_fdeg ,nil );
_cedc .Append (_fdeg );};if _ ,_bfcf :=_fded ._ddbge .Seek (0,_gb .SeekStart );_bfcf !=nil {return _bfcf ;};_fbdb :=make (map[SignatureHandler ]_gb .Writer );_efdcb :=_bgg .MakeArray ();for _ ,_efcf :=range _fded ._dfgd {if _ecaf ,_eaaa :=_bgg .GetIndirect (_efcf );
_eaaa {if _fcbec ,_bbef :=_ecaf .PdfObject .(*pdfSignDictionary );_bbef {_cdd :=*_fcbec ._agedfb ;var _caeb error ;_fbdb [_cdd ],_caeb =_cdd .NewDigest (_fcbec ._dgdfb );if _caeb !=nil {return _caeb ;};_efdcb .Append (_bgg .MakeInteger (0xfffff),_bgg .MakeInteger (0xfffff));
};};};if _efdcb .Len ()> 0{_efdcb .Append (_bgg .MakeInteger (0xfffff),_bgg .MakeInteger (0xfffff));};for _ ,_feeg :=range _fded ._dfgd {if _dgfd ,_fbagd :=_bgg .GetIndirect (_feeg );_fbagd {if _cebca ,_bfbb :=_dgfd .PdfObject .(*pdfSignDictionary );_bfbb {_cebca .Set ("\u0042y\u0074\u0065\u0052\u0061\u006e\u0067e",_efdcb );
};};};_cdab :=len (_fbdb )> 0;var _aede _gb .Reader =_fded ._ddbge ;if _cdab {_dceg :=make ([]_gb .Writer ,0,len (_fbdb ));for _ ,_eceea :=range _fbdb {_dceg =append (_dceg ,_eceea );};_aede =_gb .TeeReader (_fded ._ddbge ,_gb .MultiWriter (_dceg ...));
};_cgb ,_ebbda :=_gb .Copy (w ,_aede );if _ebbda !=nil {return _ebbda ;};if len (_fded ._dfgd )==0{return nil ;};_gae ._deffg =_cgb ;_gae .ObjNumOffset =_fded ._adab ;_gae ._deagf =true ;_gae ._bacdb =_fded ._ccee ;_gae ._ccbec =_fded ._bcgb ;_gae ._cfbdc =_fded ._dge ;
_gae ._ffgff =_fded ._bded .PdfVersion ();_gae ._eeagf =_fded ._fbdg ;_gae ._dfade =_fded ._ega .GetCrypter ();_gae ._baefd =_fded ._ega .GetEncryptObj ();_gffc :=_fded ._ega .GetXrefType ();if _gffc !=nil {_fef :=*_gffc ==_bgg .XrefTypeObjectStream ;_gae ._ebec =&_fef ;
};_gae ._gbfd =map[_bgg .PdfObject ]struct{}{};_gae ._eddge =[]_bgg .PdfObject {};for _ ,_gfgfd :=range _fded ._dfgd {if _ ,_geeg :=_fded ._faf [_gfgfd ];_geeg {continue ;};_gae .addObject (_gfgfd );};_fbagg :=w ;if _cdab {_fbagg =_aa .NewBuffer (nil );
};if _fded ._bdgg !=""&&_gae ._dfade ==nil {_gae .Encrypt ([]byte (_fded ._bdgg ),[]byte (_fded ._bdgg ),_fded ._gacd );};if _beaf :=_bdf .Get ("\u0049\u0044");_beaf !=nil {if _cdca ,_eaga :=_bgg .GetArray (_beaf );_eaga {_gae ._agfdf =_cdca ;};};if _cgfa :=_gae .Write (_fbagg );
_cgfa !=nil {return _cgfa ;};if _cdab {_fbf :=_fbagg .(*_aa .Buffer ).Bytes ();_dfcd :=_bgg .MakeArray ();var _aaag []*pdfSignDictionary ;var _gdbdc int64 ;for _ ,_dace :=range _gae ._eddge {if _fffb ,_ffcg :=_bgg .GetIndirect (_dace );_ffcg {if _feec ,_eecf :=_fffb .PdfObject .(*pdfSignDictionary );
_eecf {_aaag =append (_aaag ,_feec );_bcfg :=_feec ._fcgcb +int64 (_feec ._ccecb );_dfcd .Append (_bgg .MakeInteger (_gdbdc ),_bgg .MakeInteger (_bcfg -_gdbdc ));_gdbdc =_feec ._fcgcb +int64 (_feec ._acbeb );};};};_dfcd .Append (_bgg .MakeInteger (_gdbdc ),_bgg .MakeInteger (_cgb +int64 (len (_fbf ))-_gdbdc ));
_ggcff :=[]byte (_dfcd .WriteString ());for _ ,_faac :=range _aaag {_gdfa :=int (_faac ._fcgcb -_cgb );for _agga :=_faac ._gdfb ;_agga < _faac ._efce ;_agga ++{_fbf [_gdfa +_agga ]=' ';};_geda :=_fbf [_gdfa +_faac ._gdfb :_gdfa +_faac ._efce ];copy (_geda ,_ggcff );
};var _abdd int ;for _ ,_begb :=range _aaag {_ead :=int (_begb ._fcgcb -_cgb );_bdbb :=_fbf [_abdd :_ead +_begb ._ccecb ];_eccb :=*_begb ._agedfb ;_fbdb [_eccb ].Write (_bdbb );_abdd =_ead +_begb ._acbeb ;};for _ ,_faded :=range _aaag {_ecbd :=_fbf [_abdd :];
_cdg :=*_faded ._agedfb ;_fbdb [_cdg ].Write (_ecbd );};for _ ,_eebeb :=range _aaag {_cgeb :=int (_eebeb ._fcgcb -_cgb );_dcff :=*_eebeb ._agedfb ;_eagff :=_fbdb [_dcff ];if _eeae :=_dcff .Sign (_eebeb ._dgdfb ,_eagff );_eeae !=nil {return _eeae ;};_eebeb ._dgdfb .ByteRange =_dfcd ;
_agad :=[]byte (_eebeb ._dgdfb .Contents .WriteString ());for _dced :=_eebeb ._gdfb ;_dced < _eebeb ._efce ;_dced ++{_fbf [_cgeb +_dced ]=' ';};for _bffd :=_eebeb ._ccecb ;_bffd < _eebeb ._acbeb ;_bffd ++{_fbf [_cgeb +_bffd ]=' ';};_cbdaf :=_fbf [_cgeb +_eebeb ._gdfb :_cgeb +_eebeb ._efce ];
copy (_cbdaf ,_ggcff );_cbdaf =_fbf [_cgeb +_eebeb ._ccecb :_cgeb +_eebeb ._acbeb ];copy (_cbdaf ,_agad );};_adcf :=_aa .NewBuffer (_fbf );_ ,_ebbda =_gb .Copy (w ,_adcf );if _ebbda !=nil {return _ebbda ;};};_fded ._acg =true ;return nil ;};func _bcfd (_cebd *fontCommon )*pdfFontType3 {return &pdfFontType3 {fontCommon :*_cebd }};


// PdfColorspace interface defines the common methods of a PDF colorspace.
// The colorspace defines the data storage format for each color and color representation.
//
// Device based colorspace, specified by name
// - /DeviceGray
// - /DeviceRGB
// - /DeviceCMYK
//
// CIE based colorspace specified by [name, dictionary]
// - [/CalGray dict]
// - [/CalRGB dict]
// - [/Lab dict]
// - [/ICCBased dict]
//
// Special colorspaces
// - /Pattern
// - /Indexed
// - /Separation
// - /DeviceN
//
// Work is in progress to support all colorspaces. At the moment ICCBased color spaces fall back to the alternate
// colorspace which works OK in most cases. For full color support, will need fully featured ICC support.
type PdfColorspace interface{

// String returns the PdfColorspace's name.
String ()string ;

// ImageToRGB converts an Image in a given PdfColorspace to an RGB image.
ImageToRGB (Image )(Image ,error );

// ColorToRGB converts a single color in a given PdfColorspace to an RGB color.
ColorToRGB (_geebf PdfColor )(PdfColor ,error );

// GetNumComponents returns the number of components in the PdfColorspace.
GetNumComponents ()int ;

// ToPdfObject returns a PdfObject representation of the PdfColorspace.
ToPdfObject ()_bgg .PdfObject ;

// ColorFromPdfObjects returns a PdfColor in the given PdfColorspace from an array of PdfObject where each
// PdfObject represents a numeric value.
ColorFromPdfObjects (_ecce []_bgg .PdfObject )(PdfColor ,error );

// ColorFromFloats returns a new PdfColor based on input color components for a given PdfColorspace.
ColorFromFloats (_bggd []float64 )(PdfColor ,error );

// DecodeArray returns the Decode array for the PdfColorSpace, i.e. the range of each component.
DecodeArray ()[]float64 ;};

// ColorFromPdfObjects loads the color from PDF objects.
// The first objects (if present) represent the color in underlying colorspace.  The last one represents
// the name of the pattern.
func (_daee *PdfColorspaceSpecialPattern )ColorFromPdfObjects (objects []_bgg .PdfObject )(PdfColor ,error ){if len (objects )< 1{return nil ,_ag .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020o\u0066 \u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072\u0073");
};_deac :=&PdfColorPattern {};_deab ,_ggecf :=objects [len (objects )-1].(*_bgg .PdfObjectName );if !_ggecf {_dcf .Log .Debug ("\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u006e\u0061\u006d\u0065\u0020\u006e\u006ft\u0020a\u0020\u006e\u0061\u006d\u0065\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",objects [len (objects )-1]);
return nil ,ErrTypeCheck ;};_deac .PatternName =*_deab ;if len (objects )> 1{_abdc :=objects [0:len (objects )-1];if _daee .UnderlyingCS ==nil {_dcf .Log .Debug ("P\u0061\u0074t\u0065\u0072\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0077\u0069\u0074\u0068\u0020\u0064\u0065\u0066\u0069\u006ee\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006et\u0073\u0020\u0062\u0075\u0074\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079i\u006e\u0067\u0020\u0063\u0073\u0020\u006d\u0069\u0073\u0073\u0069n\u0067");
return nil ,_ag .New ("\u0075n\u0064\u0065\u0072\u006cy\u0069\u006e\u0067\u0020\u0043S\u0020n\u006ft\u0020\u0064\u0065\u0066\u0069\u006e\u0065d");};_gbdg ,_bcag :=_daee .UnderlyingCS .ColorFromPdfObjects (_abdc );if _bcag !=nil {_dcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0076\u0069\u0061\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079\u0069\u006e\u0067\u0020\u0063\u0073\u003a\u0020\u0025\u0076",_bcag );
return nil ,_bcag ;};_deac .Color =_gbdg ;};return _deac ,nil ;};func (_eagffa *PdfWriter )setDocumentIDs (_bfaab ,_fcgddg string ){_eagffa ._agfdf =_bgg .MakeArray (_bgg .MakeHexString (_bfaab ),_bgg .MakeHexString (_fcgddg ));};func (_gfeab *LTV )generateVRIKey (_fefaa *PdfSignature )(string ,error ){_bcce ,_fcddc :=_dagdc (_fefaa .Contents .Bytes ());
if _fcddc !=nil {return "",_fcddc ;};return _ba .ToUpper (_ae .EncodeToString (_bcce )),nil ;};

// ToPdfObject implements interface PdfModel.
func (_dea *PdfActionMovie )ToPdfObject ()_bgg .PdfObject {_dea .PdfAction .ToPdfObject ();_dfff :=_dea ._ddf ;_ffdce :=_dfff .PdfObject .(*_bgg .PdfObjectDictionary );_ffdce .SetIfNotNil ("\u0053",_bgg .MakeName (string (ActionTypeMovie )));_ffdce .SetIfNotNil ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e",_dea .Annotation );
_ffdce .SetIfNotNil ("\u0054",_dea .T );_ffdce .SetIfNotNil ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn",_dea .Operation );return _dfff ;};func (_ggbe *PdfReader )newPdfAnnotationTextFromDict (_bfc *_bgg .PdfObjectDictionary )(*PdfAnnotationText ,error ){_dec :=PdfAnnotationText {};
_bbagf ,_ffef :=_ggbe .newPdfAnnotationMarkupFromDict (_bfc );if _ffef !=nil {return nil ,_ffef ;};_dec .PdfAnnotationMarkup =_bbagf ;_dec .Open =_bfc .Get ("\u004f\u0070\u0065\u006e");_dec .Name =_bfc .Get ("\u004e\u0061\u006d\u0065");_dec .State =_bfc .Get ("\u0053\u0074\u0061t\u0065");
_dec .StateModel =_bfc .Get ("\u0053\u0074\u0061\u0074\u0065\u004d\u006f\u0064\u0065\u006c");return &_dec ,nil ;};

// ToPdfObject implements interface PdfModel.
func (_aee *PdfActionGoTo )ToPdfObject ()_bgg .PdfObject {_aee .PdfAction .ToPdfObject ();_eba :=_aee ._ddf ;_bac :=_eba .PdfObject .(*_bgg .PdfObjectDictionary );_bac .SetIfNotNil ("\u0053",_bgg .MakeName (string (ActionTypeGoTo )));_bac .SetIfNotNil ("\u0044",_aee .D );
return _eba ;};func (_gbag Image )getBase ()_dcg .ImageBase {return _dcg .NewImageBase (int (_gbag .Width ),int (_gbag .Height ),int (_gbag .BitsPerComponent ),_gbag .ColorComponents ,_gbag .Data ,_gbag ._bfcec ,_gbag ._ddaa );};

// GetExtGState gets the ExtGState specified by keyName. Returns a bool
// indicating whether it was found or not.
func (_geefe *PdfPageResources )GetExtGState (keyName _bgg .PdfObjectName )(_bgg .PdfObject ,bool ){if _geefe .ExtGState ==nil {return nil ,false ;};_bcbbb ,_gcff :=_bgg .TraceToDirectObject (_geefe .ExtGState ).(*_bgg .PdfObjectDictionary );if !_gcff {_dcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006c\u0069\u0064 \u0045\u0078\u0074\u0047\u0053\u0074\u0061\u0074\u0065\u0020\u0065\u006e\u0074\u0072\u0079\u0020\u002d\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_geefe .ExtGState );
return nil ,false ;};if _ebcdgd :=_bcbbb .Get (keyName );_ebcdgd !=nil {return _ebcdgd ,true ;};return nil ,false ;};

// PdfAnnotation represents an annotation in PDF (section 12.5 p. 389).
type PdfAnnotation struct{_afg PdfModel ;Rect _bgg .PdfObject ;Contents _bgg .PdfObject ;P _bgg .PdfObject ;NM _bgg .PdfObject ;M _bgg .PdfObject ;F _bgg .PdfObject ;AP _bgg .PdfObject ;AS _bgg .PdfObject ;Border _bgg .PdfObject ;C _bgg .PdfObject ;StructParent _bgg .PdfObject ;
OC _bgg .PdfObject ;_gec *_bgg .PdfIndirectObject ;};

// PdfActionGoToE represents a GoToE action.
type PdfActionGoToE struct{*PdfAction ;F *PdfFilespec ;D _bgg .PdfObject ;NewWindow _bgg .PdfObject ;T _bgg .PdfObject ;};

// NewCompositePdfFontFromTTF loads a composite TTF font. Composite fonts can
// be used to represent unicode fonts which can have multi-byte character codes, representing a wide
// range of values. They are often used for symbolic languages, including Chinese, Japanese and Korean.
// It is represented by a Type0 Font with an underlying CIDFontType2 and an Identity-H encoding map.
// TODO: May be extended in the future to support a larger variety of CMaps and vertical fonts.
// NOTE: For simple fonts, use NewPdfFontFromTTF.
func NewCompositePdfFontFromTTF (r _gb .ReadSeeker )(*PdfFont ,error ){_bffaf ,_bfdf :=_ge .ReadAll (r );if _bfdf !=nil {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065 \u0074\u006f\u0020\u0072\u0065\u0061d\u0020\u0066\u006f\u006e\u0074\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_bfdf );
return nil ,_bfdf ;};_bbbd ,_bfdf :=_dad .TtfParse (_aa .NewReader (_bffaf ));if _bfdf !=nil {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0077\u0068\u0069\u006c\u0065\u0020\u006c\u006f\u0061\u0064\u0069\u006e\u0067 \u0074\u0074\u0066\u0020\u0066\u006f\u006et\u003a\u0020\u0025\u0076",_bfdf );
return nil ,_bfdf ;};_agaf :=&pdfCIDFontType2 {fontCommon :fontCommon {_dadgd :"\u0043\u0049\u0044F\u006f\u006e\u0074\u0054\u0079\u0070\u0065\u0032"},CIDToGIDMap :_bgg .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079")};if len (_bbbd .Widths )<=0{return nil ,_ag .New ("\u0045\u0052\u0052O\u0052\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0072\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065 \u0028\u0057\u0069\u0064\u0074\u0068\u0073\u0029");
};_cdgac :=1000.0/float64 (_bbbd .UnitsPerEm );_dbedg :=_cdgac *float64 (_bbbd .Widths [0]);_gcddf :=make (map[rune ]int );_dfecd :=make (map[_dad .GID ]int );_cecd :=_dad .GID (len (_bbbd .Widths ));for _fegff ,_cadf :=range _bbbd .Chars {if _cadf > _cecd -1{continue ;
};_bcebg :=int (_cdgac *float64 (_bbbd .Widths [_cadf ]));_gcddf [_fegff ]=_bcebg ;_dfecd [_cadf ]=_bcebg ;};_agaf ._bfcb =_gcddf ;_agaf .DW =_bgg .MakeInteger (int64 (_dbedg ));_bfedc :=_cegd (_dfecd ,uint16 (_cecd ));_agaf .W =_bgg .MakeIndirectObject (_bfedc );
_dacb :=_bgg .MakeDict ();_dacb .Set ("\u004f\u0072\u0064\u0065\u0072\u0069\u006e\u0067",_bgg .MakeString ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079"));_dacb .Set ("\u0052\u0065\u0067\u0069\u0073\u0074\u0072\u0079",_bgg .MakeString ("\u0041\u0064\u006fb\u0065"));
_dacb .Set ("\u0053\u0075\u0070\u0070\u006c\u0065\u006d\u0065\u006e\u0074",_bgg .MakeInteger (0));_agaf .CIDSystemInfo =_dacb ;_bdabf :=&PdfFontDescriptor {FontName :_bgg .MakeName (_bbbd .PostScriptName ),Ascent :_bgg .MakeFloat (_cdgac *float64 (_bbbd .TypoAscender )),Descent :_bgg .MakeFloat (_cdgac *float64 (_bbbd .TypoDescender )),CapHeight :_bgg .MakeFloat (_cdgac *float64 (_bbbd .CapHeight )),FontBBox :_bgg .MakeArrayFromFloats ([]float64 {_cdgac *float64 (_bbbd .Xmin ),_cdgac *float64 (_bbbd .Ymin ),_cdgac *float64 (_bbbd .Xmax ),_cdgac *float64 (_bbbd .Ymax )}),ItalicAngle :_bgg .MakeFloat (_bbbd .ItalicAngle ),MissingWidth :_bgg .MakeFloat (_dbedg )};
_dcbcg ,_bfdf :=_bgg .MakeStream (_bffaf ,_bgg .NewFlateEncoder ());if _bfdf !=nil {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020\u0074o\u0020m\u0061\u006b\u0065\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u003a\u0020\u0025\u0076",_bfdf );
return nil ,_bfdf ;};_dcbcg .PdfObjectDictionary .Set ("\u004ce\u006e\u0067\u0074\u0068\u0031",_bgg .MakeInteger (int64 (len (_bffaf ))));_bdabf .FontFile2 =_dcbcg ;if _bbbd .Bold {_bdabf .StemV =_bgg .MakeInteger (120);}else {_bdabf .StemV =_bgg .MakeInteger (70);
};_aeca :=_dcga ;if _bbbd .IsFixedPitch {_aeca |=_dfcfa ;};if _bbbd .ItalicAngle !=0{_aeca |=_ebdcf ;};_bdabf .Flags =_bgg .MakeInteger (int64 (_aeca ));_agaf ._dbbc =_bbbd .PostScriptName ;_agaf ._abdg =_bdabf ;_eceaa :=pdfFontType0 {fontCommon :fontCommon {_dadgd :"\u0054\u0079\u0070e\u0030",_dbbc :_bbbd .PostScriptName },DescendantFont :&PdfFont {_efdec :_agaf },Encoding :_bgg .MakeName ("\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"),_dfbdd :_bbbd .NewEncoder ()};
if len (_bbbd .Chars )> 0{_cfcbg :=make (map[_fbb .CharCode ]rune ,len (_bbbd .Chars ));for _adbe ,_bcgdd :=range _bbbd .Chars {_gcde :=_fbb .CharCode (_bcgdd );if _bggbd ,_abfaa :=_cfcbg [_gcde ];!_abfaa ||(_abfaa &&_bggbd > _adbe ){_cfcbg [_gcde ]=_adbe ;
};};_eceaa ._ffed =_fbb .NewToUnicodeCMap (_cfcbg );};_dbbea :=PdfFont {_efdec :&_eceaa };return &_dbbea ,nil ;};func (_aceeeb *PdfWriter )checkLicense ()error {_dcfbdb :=_dba .GetLicenseKey ();if (_dcfbdb ==nil ||!_dcfbdb .IsLicensed ())&&!_bbebg {_e .Printf ("\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020c\u006f\u0070\u0079\u0020\u006f\u0066\u0020\u0055\u006e\u0069P\u0044\u0046\u000a");
_e .Println ("-\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u0066\u0072e\u0065\u0020\u0074\u0072\u0069\u0061\u006c l\u0069\u0063\u0065\u006es\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070s:\u002f\u002fu\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _ag .New ("\u0075\u006e\u0069\u0070d\u0066\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020c\u006fd\u0065\u0020\u0072\u0065\u0071\u0075\u0069r\u0065\u0064");};return nil ;};func (_eeaedd *PdfWriter )setWriter (_fcfac _gb .Writer ){_eeaedd ._ebdcg =_eeaedd ._deffg ;
_eeaedd ._eggab =_c .NewWriter (_fcfac );};

// SetReason sets the `Reason` field of the signature.
func (_bcfgd *PdfSignature )SetReason (reason string ){_bcfgd .Reason =_bgg .MakeString (reason )};

// PdfActionSubmitForm represents a submitForm action.
type PdfActionSubmitForm struct{*PdfAction ;F *PdfFilespec ;Fields _bgg .PdfObject ;Flags _bgg .PdfObject ;};func (_ffag *PdfReader )newPdfActionImportDataFromDict (_fdfeg *_bgg .PdfObjectDictionary )(*PdfActionImportData ,error ){_aef ,_eeb :=_cbd (_fdfeg .Get ("\u0046"));
if _eeb !=nil {return nil ,_eeb ;};return &PdfActionImportData {F :_aef },nil ;};

// GetColorspaces loads PdfPageResourcesColorspaces from `r.ColorSpace` and returns an error if there
// is a problem loading. Once loaded, the same object is returned on multiple calls.
func (_gebgf *PdfPageResources )GetColorspaces ()(*PdfPageResourcesColorspaces ,error ){if _gebgf ._adggf !=nil {return _gebgf ._adggf ,nil ;};if _gebgf .ColorSpace ==nil {return nil ,nil ;};_bdaag ,_adcdd :=_fffa (_gebgf .ColorSpace );if _adcdd !=nil {return nil ,_adcdd ;
};_gebgf ._adggf =_bdaag ;return _gebgf ._adggf ,nil ;};

// NewPdfPage returns a new PDF page.
func NewPdfPage ()*PdfPage {_bfdfc :=PdfPage {};_bfdfc ._gdbeb =_bgg .MakeDict ();_bfdfc .Resources =NewPdfPageResources ();_bceec :=_bgg .PdfIndirectObject {};_bceec .PdfObject =_bfdfc ._gdbeb ;_bfdfc ._bcdg =&_bceec ;return &_bfdfc ;};

// ImageToRGB convert an indexed image to RGB.
func (_ebdb *PdfColorspaceSpecialIndexed )ImageToRGB (img Image )(Image ,error ){N :=_ebdb .Base .GetNumComponents ();if N < 1{return Image {},_e .Errorf ("\u0062\u0061d \u0062\u0061\u0073e\u0020\u0063\u006f\u006cors\u0070ac\u0065\u0020\u004e\u0075\u006d\u0043\u006fmp\u006f\u006e\u0065\u006e\u0074\u0073\u003d%\u0064",N );
};_cbfb :=_dcg .NewImageBase (int (img .Width ),int (img .Height ),8,N ,nil ,img ._bfcec ,img ._ddaa );_gcggf :=_ceg .NewReader (img .getBase ());_ccae :=_ceg .NewWriter (_cbfb );var (_bdbg uint32 ;_fdbdg int ;_ccgf error ;);for {_bdbg ,_ccgf =_gcggf .ReadSample ();
if _ccgf ==_gb .EOF {break ;}else if _ccgf !=nil {return img ,_ccgf ;};_fdbdg =int (_bdbg );_dcf .Log .Trace ("\u0049\u006ed\u0065\u0078\u0065\u0064\u003a\u0020\u0069\u006e\u0064\u0065\u0078\u003d\u0025\u0064\u0020\u004e\u003d\u0025\u0064\u0020\u006c\u0075t=\u0025\u0064",_fdbdg ,N ,len (_ebdb ._cdfe ));
if (_fdbdg +1)*N > len (_ebdb ._cdfe ){_fdbdg =len (_ebdb ._cdfe )/N -1;_dcf .Log .Trace ("C\u006c\u0069\u0070\u0070in\u0067 \u0074\u006f\u0020\u0069\u006ed\u0065\u0078\u003a\u0020\u0025\u0064",_fdbdg );if _fdbdg < 0{_dcf .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069p\u0020\u0069\u006e\u0064\u0065\u0078.\u0020\u0049\u0073\u0020\u0050\u0044\u0046\u0020\u0066\u0069\u006ce\u0020\u0064\u0061\u006d\u0061\u0067\u0065\u0064\u003f");
break ;};};for _ggfaf :=_fdbdg *N ;_ggfaf < (_fdbdg +1)*N ;_ggfaf ++{if _ccgf =_ccae .WriteSample (uint32 (_ebdb ._cdfe [_ggfaf ]));_ccgf !=nil {return img ,_ccgf ;};};};return _ebdb .Base .ImageToRGB (_ddccc (&_cbfb ));};

// GetNumComponents returns the number of input color components, i.e. that are input to the tint transform.
func (_acfc *PdfColorspaceDeviceN )GetNumComponents ()int {return _acfc .ColorantNames .Len ()};

// GetXObjectByName gets XObject by name.
func (_gcfe *PdfPage )GetXObjectByName (name _bgg .PdfObjectName )(_bgg .PdfObject ,bool ){_ececf ,_gccda :=_gcfe .Resources .XObject .(*_bgg .PdfObjectDictionary );if !_gccda {return nil ,false ;};if _dagge :=_ececf .Get (name );_dagge !=nil {return _dagge ,true ;
};return nil ,false ;};

// ToPdfObject implements interface PdfModel.
func (_dcb *PdfActionHide )ToPdfObject ()_bgg .PdfObject {_dcb .PdfAction .ToPdfObject ();_daad :=_dcb ._ddf ;_cd :=_daad .PdfObject .(*_bgg .PdfObjectDictionary );_cd .SetIfNotNil ("\u0053",_bgg .MakeName (string (ActionTypeHide )));_cd .SetIfNotNil ("\u0054",_dcb .T );
_cd .SetIfNotNil ("\u0048",_dcb .H );return _daad ;};func _ddccc (_fdffg *_dcg .ImageBase )(_ecca Image ){_ecca .Width =int64 (_fdffg .Width );_ecca .Height =int64 (_fdffg .Height );_ecca .BitsPerComponent =int64 (_fdffg .BitsPerComponent );_ecca .ColorComponents =_fdffg .ColorComponents ;
_ecca .Data =_fdffg .Data ;_ecca ._ddaa =_fdffg .Decode ;_ecca ._bfcec =_fdffg .Alpha ;return _ecca ;};func _ddce (_bgceg StdFontName )(pdfFontSimple ,error ){_ecbb ,_egbg :=_dad .NewStdFontByName (_bgceg );if !_egbg {return pdfFontSimple {},ErrFontNotSupported ;
};_fgad :=_ggfce (_ecbb );return _fgad ,nil ;};

// SetContext set the sub annotation (context).
func (_dfbcc *PdfShading )SetContext (ctx PdfModel ){_dfbcc ._efbed =ctx };

// CheckAccessRights checks access rights and permissions for a specified password.  If either user/owner
// password is specified,  full rights are granted, otherwise the access rights are specified by the
// Permissions flag.
//
// The bool flag indicates that the user can access and view the file.
// The AccessPermissions shows what access the user has for editing etc.
// An error is returned if there was a problem performing the authentication.
func (_addcdb *PdfReader )CheckAccessRights (password []byte )(bool ,_de .Permissions ,error ){return _addcdb ._ebdgc .CheckAccessRights (password );};func _gfadb (_aebfa *_bgg .PdfObjectDictionary )(*PdfShadingType5 ,error ){_egae :=PdfShadingType5 {};
_dggbe :=_aebfa .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");if _dggbe ==nil {_dcf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ecgbf ,_dgag :=_dggbe .(*_bgg .PdfObjectInteger );if !_dgag {_dcf .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_dggbe );
return nil ,_bgg .ErrTypeError ;};_egae .BitsPerCoordinate =_ecgbf ;_dggbe =_aebfa .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _dggbe ==nil {_dcf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_ecgbf ,_dgag =_dggbe .(*_bgg .PdfObjectInteger );if !_dgag {_dcf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_dggbe );
return nil ,_bgg .ErrTypeError ;};_egae .BitsPerComponent =_ecgbf ;_dggbe =_aebfa .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050e\u0072\u0052\u006f\u0077");if _dggbe ==nil {_dcf .Log .Debug ("\u0052\u0065\u0071u\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0056\u0065\u0072\u0074\u0069c\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077");
return nil ,ErrRequiredAttributeMissing ;};_ecgbf ,_dgag =_dggbe .(*_bgg .PdfObjectInteger );if !_dgag {_dcf .Log .Debug ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073\u0050\u0065\u0072\u0052\u006f\u0077\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006et\u0065\u0067\u0065\u0072\u0020(\u0067\u006ft\u0020\u0025\u0054\u0029",_dggbe );
return nil ,_bgg .ErrTypeError ;};_egae .VerticesPerRow =_ecgbf ;_dggbe =_aebfa .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _dggbe ==nil {_dcf .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_dfedd ,_dgag :=_dggbe .(*_bgg .PdfObjectArray );if !_dgag {_dcf .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_dggbe );
return nil ,_bgg .ErrTypeError ;};_egae .Decode =_dfedd ;if _afeae :=_aebfa .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_afeae !=nil {_egae .Function =[]PdfFunction {};if _dcdcb ,_gccfa :=_afeae .(*_bgg .PdfObjectArray );_gccfa {for _ ,_gcbeea :=range _dcdcb .Elements (){_dffeb ,_dbcgg :=_aefac (_gcbeea );
if _dbcgg !=nil {_dcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dbcgg );return nil ,_dbcgg ;};_egae .Function =append (_egae .Function ,_dffeb );
};}else {_effgeg ,_afbda :=_aefac (_afeae );if _afbda !=nil {_dcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_afbda );return nil ,_afbda ;
};_egae .Function =append (_egae .Function ,_effgeg );};};return &_egae ,nil ;};

// GetContext returns the context of the outline tree node, which is either a
// *PdfOutline or a *PdfOutlineItem. The method returns nil for uninitialized
// tree nodes.
func (_abcec *PdfOutlineTreeNode )GetContext ()PdfModel {if _gcbc ,_fagdc :=_abcec ._ebbf .(*PdfOutline );_fagdc {return _gcbc ;};if _aagd ,_bgfbg :=_abcec ._ebbf .(*PdfOutlineItem );_bgfbg {return _aagd ;};_dcf .Log .Debug ("\u0045\u0052RO\u0052\u0020\u0049n\u0076\u0061\u006c\u0069d o\u0075tl\u0069\u006e\u0065\u0020\u0074\u0072\u0065e \u006e\u006f\u0064\u0065\u0020\u0069\u0074e\u006d");
return nil ;};func (_deg *PdfReader )newPdfAnnotationPolyLineFromDict (_bbdg *_bgg .PdfObjectDictionary )(*PdfAnnotationPolyLine ,error ){_bfag :=PdfAnnotationPolyLine {};_gdbc ,_decg :=_deg .newPdfAnnotationMarkupFromDict (_bbdg );if _decg !=nil {return nil ,_decg ;
};_bfag .PdfAnnotationMarkup =_gdbc ;_bfag .Vertices =_bbdg .Get ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073");_bfag .LE =_bbdg .Get ("\u004c\u0045");_bfag .BS =_bbdg .Get ("\u0042\u0053");_bfag .IC =_bbdg .Get ("\u0049\u0043");_bfag .BE =_bbdg .Get ("\u0042\u0045");
_bfag .IT =_bbdg .Get ("\u0049\u0054");_bfag .Measure =_bbdg .Get ("\u004de\u0061\u0073\u0075\u0072\u0065");return &_bfag ,nil ;};

// GetContainingPdfObject returns the container of the PdfAcroForm (indirect object).
func (_gdaf *PdfAcroForm )GetContainingPdfObject ()_bgg .PdfObject {return _gdaf ._gfffc };

// ParsePdfObject parses input pdf object into given output intent.
func (_cceg *PdfOutputIntent )ParsePdfObject (object _bgg .PdfObject )error {_bcae ,_cfec :=_bgg .GetDict (object );if !_cfec {_dcf .Log .Error ("\u0055\u006e\u006bno\u0077\u006e\u0020\u0074\u0079\u0070\u0065\u003a\u0020%\u0054 \u0066o\u0072 \u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074",object );
return _ag .New ("\u0075\u006e\u006b\u006e\u006fw\u006e\u0020\u0070\u0064\u0066\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020t\u0079\u0070\u0065\u0020\u0066\u006f\u0072\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0069\u006e\u0074\u0065\u006e\u0074");
};_cceg ._faace =_bcae ;_cceg .Type ,_ =_bcae .GetString ("\u0054\u0079\u0070\u0065");_gaaed ,_cfec :=_bcae .GetString ("\u0053");if _cfec {switch _gaaed {case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411":_cceg .S =PdfOutputIntentTypeA1 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00412":_cceg .S =PdfOutputIntentTypeA2 ;
case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00413":_cceg .S =PdfOutputIntentTypeA3 ;case "\u0047T\u0053\u005f\u0050\u0044\u0046\u00414":_cceg .S =PdfOutputIntentTypeA4 ;case "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058":_cceg .S =PdfOutputIntentTypeX ;
};};_cceg .OutputCondition ,_ =_bcae .GetString ("\u004fu\u0074p\u0075\u0074\u0043\u006f\u006e\u0064\u0069\u0074\u0069\u006f\u006e");_cceg .OutputConditionIdentifier ,_ =_bcae .GetString ("\u004fu\u0074\u0070\u0075\u0074C\u006f\u006e\u0064\u0069\u0074i\u006fn\u0049d\u0065\u006e\u0074\u0069\u0066\u0069\u0065r");
_cceg .RegistryName ,_ =_bcae .GetString ("\u0052\u0065\u0067i\u0073\u0074\u0072\u0079\u004e\u0061\u006d\u0065");_cceg .Info ,_ =_bcae .GetString ("\u0049\u006e\u0066\u006f");if _fcedg ,_ecaea :=_bgg .GetStream (_bcae .Get ("\u0044\u0065\u0073\u0074\u004f\u0075\u0074\u0070\u0075\u0074\u0050\u0072o\u0066\u0069\u006c\u0065"));
_ecaea {_cceg .ColorComponents ,_ =_bgg .GetIntVal (_fcedg .Get ("\u004e"));_bgfge ,_edaag :=_bgg .DecodeStream (_fcedg );if _edaag !=nil {return _edaag ;};_cceg .DestOutputProfile =_bgfge ;};return nil ;};

// PdfAnnotationUnderline represents Underline annotations.
// (Section 12.5.6.10).
type PdfAnnotationUnderline struct{*PdfAnnotation ;*PdfAnnotationMarkup ;QuadPoints _bgg .PdfObject ;};

// GetContext returns a reference to the subshading entry as represented by PdfShadingType1-7.
func (_gbbed *PdfShading )GetContext ()PdfModel {return _gbbed ._efbed };func (_ggefcc *PdfWriter )writeBytes (_gabcb []byte ){if _ggefcc ._bbdfff !=nil {return ;};_ecdae ,_fddd :=_ggefcc ._eggab .Write (_gabcb );_ggefcc ._ebdcg +=int64 (_ecdae );_ggefcc ._bbdfff =_fddd ;
};

// PdfColorspaceSpecialSeparation is a Separation colorspace.
// At the moment the colour space is set to a Separation space, the conforming reader shall determine whether the
// device has an available colorant (e.g. dye) corresponding to the name of the requested space. If so, the conforming
// reader shall ignore the alternateSpace and tintTransform parameters; subsequent painting operations within the
// space shall apply the designated colorant directly, according to the tint values supplied.
//
// Format: [/Separation name alternateSpace tintTransform]
type PdfColorspaceSpecialSeparation struct{ColorantName *_bgg .PdfObjectName ;AlternateSpace PdfColorspace ;TintTransform PdfFunction ;_aabb *_bgg .PdfIndirectObject ;};

// ToPdfObject implements interface PdfModel.
func (_fdbb *PdfAnnotation3D )ToPdfObject ()_bgg .PdfObject {_fdbb .PdfAnnotation .ToPdfObject ();_aec :=_fdbb ._gec ;_ceaf :=_aec .PdfObject .(*_bgg .PdfObjectDictionary );_ceaf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0033\u0044"));
_ceaf .SetIfNotNil ("\u0033\u0044\u0044",_fdbb .T3DD );_ceaf .SetIfNotNil ("\u0033\u0044\u0056",_fdbb .T3DV );_ceaf .SetIfNotNil ("\u0033\u0044\u0041",_fdbb .T3DA );_ceaf .SetIfNotNil ("\u0033\u0044\u0049",_fdbb .T3DI );_ceaf .SetIfNotNil ("\u0033\u0044\u0042",_fdbb .T3DB );
return _aec ;};

// GetContainingPdfObject implements interface PdfModel.
func (_ecgd *PdfSignature )GetContainingPdfObject ()_bgg .PdfObject {return _ecgd ._ddfdc };

// AcroFormNeedsRepair returns true if the document contains widget annotations
// linked to fields which are not referenced in the AcroForm. The AcroForm can
// be repaired using the RepairAcroForm method of the reader.
func (_fefea *PdfReader )AcroFormNeedsRepair ()(bool ,error ){var _fgac []*PdfField ;if _fefea .AcroForm !=nil {_fgac =_fefea .AcroForm .AllFields ();};_gdcac :=make (map[*PdfField ]struct{},len (_fgac ));for _ ,_cdfd :=range _fgac {_gdcac [_cdfd ]=struct{}{};
};for _ ,_fdbdd :=range _fefea .PageList {_caddc ,_ebfgb :=_fdbdd .GetAnnotations ();if _ebfgb !=nil {return false ,_ebfgb ;};for _ ,_egca :=range _caddc {_acfce ,_bfccf :=_egca .GetContext ().(*PdfAnnotationWidget );if !_bfccf {continue ;};_cdgea :=_acfce .Field ();
if _cdgea ==nil {return true ,nil ;};if _ ,_eebg :=_gdcac [_cdgea ];!_eebg {return true ,nil ;};};};return false ,nil ;};func _bcbaf (_dabcd *_bgg .PdfObjectDictionary ,_deccf *fontCommon ,_ebgge _cc .TextEncoder )(*pdfFontSimple ,error ){_cgfe :=_aedag (_deccf );
_cgfe ._aaef =_ebgge ;if _ebgge ==nil {_edge :=_dabcd .Get ("\u0046i\u0072\u0073\u0074\u0043\u0068\u0061r");if _edge ==nil {_edge =_bgg .MakeInteger (0);};_cgfe .FirstChar =_edge ;_dfae ,_gafgd :=_bgg .GetIntVal (_edge );if !_gafgd {_dcf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064 \u0046i\u0072s\u0074C\u0068\u0061\u0072\u0020\u0074\u0079\u0070\u0065\u0020\u0028\u0025\u0054\u0029",_edge );
return nil ,_bgg .ErrTypeError ;};_cecff :=_cc .CharCode (_dfae );_edge =_dabcd .Get ("\u004c\u0061\u0073\u0074\u0043\u0068\u0061\u0072");if _edge ==nil {_edge =_bgg .MakeInteger (255);};_cgfe .LastChar =_edge ;_dfae ,_gafgd =_bgg .GetIntVal (_edge );if !_gafgd {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u004c\u0061\u0073\u0074\u0043h\u0061\u0072\u0020\u0074\u0079\u0070\u0065 \u0028\u0025\u0054\u0029",_edge );
return nil ,_bgg .ErrTypeError ;};_gcee :=_cc .CharCode (_dfae );_cgfe ._dcbe =make (map[_cc .CharCode ]float64 );_edge =_dabcd .Get ("\u0057\u0069\u0064\u0074\u0068\u0073");if _edge !=nil {_cgfe .Widths =_edge ;_gbece ,_daca :=_bgg .GetArray (_edge );
if !_daca {_dcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020W\u0069\u0064t\u0068\u0073\u0020\u0061\u0074\u0074\u0072\u0069b\u0075\u0074\u0065\u0020\u0021\u003d\u0020\u0061\u0072\u0072\u0061\u0079 \u0028\u0025\u0054\u0029",_edge );return nil ,_bgg .ErrTypeError ;
};_ccbb ,_deabg :=_gbece .ToFloat64Array ();if _deabg !=nil {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0063\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0077\u0069d\u0074\u0068\u0073\u0020\u0074\u006f\u0020a\u0072\u0072\u0061\u0079");
return nil ,_deabg ;};if len (_ccbb )!=int (_gcee -_cecff +1){_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069d\u0020\u0077\u0069\u0064\u0074\u0068s\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0025\u0064 \u0028\u0025\u0064\u0029",_gcee -_cecff +1,len (_ccbb ));
return nil ,_bgg .ErrRangeError ;};for _cffc ,_geece :=range _ccbb {_cgfe ._dcbe [_cecff +_cc .CharCode (_cffc )]=_geece ;};};};_cgfe .Encoding =_bgg .TraceToDirectObject (_dabcd .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));return _cgfe ,nil ;
};

// IsEncrypted returns true if the PDF file is encrypted.
func (_efbeg *PdfReader )IsEncrypted ()(bool ,error ){return _efbeg ._ebdgc .IsEncrypted ()};var _fggd =_da .MustCompile ("\u005b\\\u006e\u005c\u0072\u005d\u002b");

// SetDSS sets the DSS dictionary (ETSI TS 102 778-4 V1.1.1) of the current
// document revision.
func (_degc *PdfAppender )SetDSS (dss *DSS ){if dss !=nil {_degc .updateObjectsDeep (dss .ToPdfObject (),nil );};_degc ._ebdc =dss ;};

// PdfActionMovie represents a movie action.
type PdfActionMovie struct{*PdfAction ;Annotation _bgg .PdfObject ;T _bgg .PdfObject ;Operation _bgg .PdfObject ;};func _acefeg ()string {_abfga .Lock ();defer _abfga .Unlock ();return _fedg };

// ToPdfObject implements interface PdfModel.
func (_dadb *PdfAnnotationFreeText )ToPdfObject ()_bgg .PdfObject {_dadb .PdfAnnotation .ToPdfObject ();_aedb :=_dadb ._gec ;_fcbf :=_aedb .PdfObject .(*_bgg .PdfObjectDictionary );_dadb .PdfAnnotationMarkup .appendToPdfDictionary (_fcbf );_fcbf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0046\u0072\u0065\u0065\u0054\u0065\u0078\u0074"));
_fcbf .SetIfNotNil ("\u0044\u0041",_dadb .DA );_fcbf .SetIfNotNil ("\u0051",_dadb .Q );_fcbf .SetIfNotNil ("\u0052\u0043",_dadb .RC );_fcbf .SetIfNotNil ("\u0044\u0053",_dadb .DS );_fcbf .SetIfNotNil ("\u0043\u004c",_dadb .CL );_fcbf .SetIfNotNil ("\u0049\u0054",_dadb .IT );
_fcbf .SetIfNotNil ("\u0042\u0045",_dadb .BE );_fcbf .SetIfNotNil ("\u0052\u0044",_dadb .RD );_fcbf .SetIfNotNil ("\u0042\u0053",_dadb .BS );_fcbf .SetIfNotNil ("\u004c\u0045",_dadb .LE );return _aedb ;};

// HasXObjectByName checks if has XObject resource by name.
func (_faadf *PdfPage )HasXObjectByName (name _bgg .PdfObjectName )bool {_cdcfd ,_fcddf :=_faadf .Resources .XObject .(*_bgg .PdfObjectDictionary );if !_fcddf {return false ;};if _bacb :=_cdcfd .Get (name );_bacb !=nil {return true ;};return false ;};

// NewGrayImageFromGoImage creates a new grayscale unidoc Image from a golang Image.
func (_ddfdb DefaultImageHandler )NewGrayImageFromGoImage (goimg _dc .Image )(*Image ,error ){_eeabb :=goimg .Bounds ();_caafe :=&Image {Width :int64 (_eeabb .Dx ()),Height :int64 (_eeabb .Dy ()),ColorComponents :1,BitsPerComponent :8};switch _dcbbg :=goimg .(type ){case *_dc .Gray :if len (_dcbbg .Pix )!=_eeabb .Dx ()*_eeabb .Dy (){_dgaa ,_gfag :=_dcg .GrayConverter .Convert (goimg );
if _gfag !=nil {return nil ,_gfag ;};_caafe .Data =_dgaa .Pix ();}else {_caafe .Data =_dcbbg .Pix ;};case *_dc .Gray16 :_caafe .BitsPerComponent =16;if len (_dcbbg .Pix )!=_eeabb .Dx ()*_eeabb .Dy ()*2{_adeg ,_efcdb :=_dcg .Gray16Converter .Convert (goimg );
if _efcdb !=nil {return nil ,_efcdb ;};_caafe .Data =_adeg .Pix ();}else {_caafe .Data =_dcbbg .Pix ;};case _dcg .Image :_fbec :=_dcbbg .Base ();if _fbec .ColorComponents ==1{_caafe .BitsPerComponent =int64 (_fbec .BitsPerComponent );_caafe .Data =_fbec .Data ;
return _caafe ,nil ;};_dcgbd ,_eaffg :=_dcg .GrayConverter .Convert (goimg );if _eaffg !=nil {return nil ,_eaffg ;};_caafe .Data =_dcgbd .Pix ();default:_eaagbd ,_edde :=_dcg .GrayConverter .Convert (goimg );if _edde !=nil {return nil ,_edde ;};_caafe .Data =_eaagbd .Pix ();
};return _caafe ,nil ;};const (BorderEffectNoEffect BorderEffect =iota ;BorderEffectCloudy BorderEffect =iota ;);

// HasExtGState checks whether a font is defined by the specified keyName.
func (_cdeca *PdfPageResources )HasExtGState (keyName _bgg .PdfObjectName )bool {_ ,_fbdac :=_cdeca .GetFontByName (keyName );return _fbdac ;};

// GetContainingPdfObject implements interface PdfModel.
func (_bc *PdfAction )GetContainingPdfObject ()_bgg .PdfObject {return _bc ._ddf };func (_geeb *PdfReader )newPdfActionTransFromDict (_egbd *_bgg .PdfObjectDictionary )(*PdfActionTrans ,error ){return &PdfActionTrans {Trans :_egbd .Get ("\u0054\u0072\u0061n\u0073")},nil ;
};

// Permissions specify a permissions dictionary (PDF 1.5).
// (Section 12.8.4, Table 258 - Entries in a permissions dictionary p. 477 in PDF32000_2008).
type Permissions struct{DocMDP *PdfSignature ;_ffcaa *_bgg .PdfObjectDictionary ;};

// ToPdfObject implements interface PdfModel.
func (_bbdb *PdfAnnotationPolygon )ToPdfObject ()_bgg .PdfObject {_bbdb .PdfAnnotation .ToPdfObject ();_afeag :=_bbdb ._gec ;_fgd :=_afeag .PdfObject .(*_bgg .PdfObjectDictionary );_bbdb .PdfAnnotationMarkup .appendToPdfDictionary (_fgd );_fgd .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0050o\u006c\u0079\u0067\u006f\u006e"));
_fgd .SetIfNotNil ("\u0056\u0065\u0072\u0074\u0069\u0063\u0065\u0073",_bbdb .Vertices );_fgd .SetIfNotNil ("\u004c\u0045",_bbdb .LE );_fgd .SetIfNotNil ("\u0042\u0053",_bbdb .BS );_fgd .SetIfNotNil ("\u0049\u0043",_bbdb .IC );_fgd .SetIfNotNil ("\u0042\u0045",_bbdb .BE );
_fgd .SetIfNotNil ("\u0049\u0054",_bbdb .IT );_fgd .SetIfNotNil ("\u004de\u0061\u0073\u0075\u0072\u0065",_bbdb .Measure );return _afeag ;};

// StdFontName represents name of a standard font.
type StdFontName =_dad .StdFontName ;

// ToPdfObject implements interface PdfModel.
func (_cadc *PdfActionJavaScript )ToPdfObject ()_bgg .PdfObject {_cadc .PdfAction .ToPdfObject ();_efc :=_cadc ._ddf ;_ffg :=_efc .PdfObject .(*_bgg .PdfObjectDictionary );_ffg .SetIfNotNil ("\u0053",_bgg .MakeName (string (ActionTypeJavaScript )));_ffg .SetIfNotNil ("\u004a\u0053",_cadc .JS );
return _efc ;};

// SetNameDictionary sets the Names entry in the PDF catalog.
// See section 7.7.4 "Name Dictionary" (p. 80 PDF32000_2008).
func (_aadc *PdfWriter )SetNameDictionary (names _bgg .PdfObject )error {if names ==nil {return nil ;};_dcf .Log .Trace ("\u0053e\u0074\u0074\u0069\u006e\u0067\u0020\u0063\u0061\u0074\u0061\u006co\u0067\u0020\u004e\u0061\u006d\u0065\u0073\u002e\u002e\u002e");
_aadc ._ffbb .Set ("\u004e\u0061\u006de\u0073",names );return _aadc .addObjects (names );};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 3 for a Lab device.
func (_ggedd *PdfColorspaceLab )GetNumComponents ()int {return 3};

// NewPdfActionGoToR returns a new "go to remote" action.
func NewPdfActionGoToR ()*PdfActionGoToR {_gfg :=NewPdfAction ();_geb :=&PdfActionGoToR {};_geb .PdfAction =_gfg ;_gfg .SetContext (_geb );return _geb ;};

// Fill populates `form` with values provided by `provider`.
func (_acdfc *PdfAcroForm )Fill (provider FieldValueProvider )error {return _acdfc .fill (provider ,nil )};

// AddCustomInfo adds a custom info into document info dictionary.
func (_dabcg *PdfInfo )AddCustomInfo (name string ,value string )error {if _dabcg ._fdaag ==nil {_dabcg ._fdaag =_bgg .MakeDict ();};if _ ,_bdee :=_baaf [name ];_bdee {return _e .Errorf ("\u0063\u0061\u006e\u006e\u006ft\u0020\u0075\u0073\u0065\u0020\u0073\u0074\u0061\u006e\u0064\u0061\u0072\u0064 \u0069\u006e\u0066\u006f\u0020\u006b\u0065\u0079\u0020\u0025\u0073\u0020\u0061\u0073\u0020\u0063\u0075\u0073\u0074\u006f\u006d\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u006b\u0065y",name );
};_dabcg ._fdaag .SetIfNotNil (*_bgg .MakeName (name ),_bgg .MakeString (value ));return nil ;};func _facf (_gdfdfa *PdfField ,_egcdb _bgg .PdfObject )error {switch _gdfdfa .GetContext ().(type ){case *PdfFieldText :switch _fcafc :=_egcdb .(type ){case *_bgg .PdfObjectName :_dfbc :=_fcafc ;
_dcf .Log .Debug ("\u0055\u006e\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u003a\u0020\u0047\u006f\u0074 \u0056\u0020\u0061\u0073\u0020\u006e\u0061\u006d\u0065\u0020\u002d\u003e\u0020c\u006f\u006e\u0076\u0065\u0072\u0074\u0069\u006e\u0067\u0020\u0074\u006f s\u0074\u0072\u0069\u006e\u0067\u0020\u0027\u0025\u0073\u0027",_dfbc .String ());
_gdfdfa .V =_bgg .MakeEncodedString (_fcafc .String (),true );case *_bgg .PdfObjectString :_gdfdfa .V =_bgg .MakeEncodedString (_fcafc .String (),true );default:_dcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0074\u0065\u0078\u0074\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0056\u0020\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0054\u0020\u0028\u0025\u0023\u0076\u0029",_fcafc ,_fcafc );
};case *PdfFieldButton :switch _egcdb .(type ){case *_bgg .PdfObjectName :if len (_egcdb .String ())> 0{_gdfdfa .V =_egcdb ;_bcbg (_gdfdfa ,_egcdb );};case *_bgg .PdfObjectString :if len (_egcdb .String ())> 0{_gdfdfa .V =_bgg .MakeName (_egcdb .String ());
_bcbg (_gdfdfa ,_gdfdfa .V );};default:_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_gdfdfa .PartialName (),_egcdb );_gdfdfa .V =_egcdb ;
};case *PdfFieldChoice :switch _egcdb .(type ){case *_bgg .PdfObjectName :if len (_egcdb .String ())> 0{_gdfdfa .V =_bgg .MakeString (_egcdb .String ());_bcbg (_gdfdfa ,_egcdb );};case *_bgg .PdfObjectString :if len (_egcdb .String ())> 0{_gdfdfa .V =_egcdb ;
_bcbg (_gdfdfa ,_bgg .MakeName (_egcdb .String ()));};default:_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0055\u004e\u0045\u0058P\u0045\u0043\u0054\u0045\u0044\u0020\u0025\u0073\u0020\u002d>\u0020\u0025\u0076",_gdfdfa .PartialName (),_egcdb );
_gdfdfa .V =_egcdb ;};case *PdfFieldSignature :_dcf .Log .Debug ("\u0054\u004f\u0044\u004f\u003a \u0053\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0061\u0070\u0070e\u0061\u0072\u0061\u006e\u0063\u0065\u0020\u006e\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0079\u0065\u0074\u003a\u0020\u0025\u0073\u002f\u0025v",_gdfdfa .PartialName (),_egcdb );
};return nil ;};func (_beedf *PdfWriter )optimizeDocument ()error {if _beedf ._dabfc ==nil {return nil ;};_aecca ,_cegfdb :=_bgg .GetDict (_beedf ._eeged );if !_cegfdb {return _ag .New ("\u0061\u006e\u0020in\u0066\u006f\u0020\u006f\u0062\u006a\u0065\u0063\u0074 \u0069s\u0020n\u006ft\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_gdgfc :=_cg .Document {ID :[2]string {_beedf ._gcege ,_beedf ._dafd },Version :_beedf ._ffgff ,Objects :_beedf ._eddge ,Info :_aecca ,Crypt :_beedf ._dfade ,UseHashBasedID :_beedf ._aefd };if _faabb :=_beedf ._dabfc .ApplyStandard (&_gdgfc );_faabb !=nil {return _faabb ;
};_beedf ._gcege ,_beedf ._dafd =_gdgfc .ID [0],_gdgfc .ID [1];_beedf ._ffgff =_gdgfc .Version ;_beedf ._eddge =_gdgfc .Objects ;_beedf ._eeged .PdfObject =_gdgfc .Info ;_beedf ._aefd =_gdgfc .UseHashBasedID ;_beedf ._dfade =_gdgfc .Crypt ;_adgee :=make (map[_bgg .PdfObject ]struct{},len (_beedf ._eddge ));
for _ ,_fgggd :=range _beedf ._eddge {_adgee [_fgggd ]=struct{}{};};_beedf ._gbfd =_adgee ;return nil ;};

// PdfModel is a higher level PDF construct which can be collapsed into a PdfObject.
// Each PdfModel has an underlying PdfObject and vice versa (one-to-one).
// Under normal circumstances there should only be one copy of each.
// Copies can be made, but care must be taken to do it properly.
type PdfModel interface{ToPdfObject ()_bgg .PdfObject ;GetContainingPdfObject ()_bgg .PdfObject ;};func _bccb (_degae *PdfPage ){_gaada :=_dba .GetLicenseKey ();if _gaada !=nil &&_gaada .IsLicensed (){return ;};_befgb :=_bgg .PdfObjectName ("\u0055\u0046\u0031");
if !_degae .Resources .HasFontByName (_befgb ){_degae .Resources .SetFontByName (_befgb ,DefaultFont ().ToPdfObject ());};var _cfebg []string ;_cfebg =append (_cfebg ,"\u0071");_cfebg =append (_cfebg ,"\u0042\u0054");_cfebg =append (_cfebg ,_e .Sprintf ("\u002f%\u0073\u0020\u0031\u0034\u0020\u0054f",_befgb .String ()));
_cfebg =append (_cfebg ,"\u0031\u0020\u0030\u0020\u0030\u0020\u0072\u0067");_cfebg =append (_cfebg ,"\u0031\u0030\u0020\u0031\u0030\u0020\u0054\u0064");_egbaa :="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064\u0020\u0055\u006e\u0069\u0044o\u0063\u0020\u002d\u0020\u0047\u0065\u0074\u0020\u0061\u0020\u006c\u0069\u0063e\u006e\u0073\u0065\u0020\u006f\u006e\u0020\u0068\u0074\u0074\u0070\u0073:/\u002f\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f";
_cfebg =append (_cfebg ,_e .Sprintf ("\u0028%\u0073\u0029\u0020\u0054\u006a",_egbaa ));_cfebg =append (_cfebg ,"\u0045\u0054");_cfebg =append (_cfebg ,"\u0051");_afcec :=_ba .Join (_cfebg ,"\u000a");_degae .AddContentStreamByString (_afcec );_degae .ToPdfObject ();
};

// FillWithAppearance populates `form` with values provided by `provider`.
// If not nil, `appGen` is used to generate appearance dictionaries for the
// field annotations, based on the specified settings. Otherwise, appearance
// generation is skipped.
// e.g.: appGen := annotator.FieldAppearance{OnlyIfMissing: true, RegenerateTextFields: true}
// NOTE: In next major version this functionality will be part of Fill. (v4)
func (_eaeg *PdfAcroForm )FillWithAppearance (provider FieldValueProvider ,appGen FieldAppearanceGenerator )error {_egba :=_eaeg .fill (provider ,appGen );if _egba !=nil {return _egba ;};if _ ,_agage :=provider .(FieldImageProvider );_agage {_egba =_eaeg .fillImageWithAppearance (provider .(FieldImageProvider ),appGen );
};return _egba ;};

// GetXObjectImageByName returns the XObjectImage with the specified name from the
// page resources, if it exists.
func (_eafga *PdfPageResources )GetXObjectImageByName (keyName _bgg .PdfObjectName )(*XObjectImage ,error ){_fdfegg ,_ecaae :=_eafga .GetXObjectByName (keyName );if _fdfegg ==nil {return nil ,nil ;};if _ecaae !=XObjectTypeImage {return nil ,_ag .New ("\u006e\u006f\u0074 \u0061\u006e\u0020\u0069\u006d\u0061\u0067\u0065");
};_afgbd ,_dfcge :=NewXObjectImageFromStream (_fdfegg );if _dfcge !=nil {return nil ,_dfcge ;};return _afgbd ,nil ;};

// SetLocation sets the `Location` field of the signature.
func (_gfee *PdfSignature )SetLocation (location string ){_gfee .Location =_bgg .MakeString (location )};

// SetDocInfo set document info.
// This will overwrite any globally declared document info.
func (_eeede *PdfWriter )SetDocInfo (info *PdfInfo ){_eeede .setDocInfo (info .ToPdfObject ())};

// NewPdfAnnotationStrikeOut returns a new text strikeout annotation.
func NewPdfAnnotationStrikeOut ()*PdfAnnotationStrikeOut {_ecd :=NewPdfAnnotation ();_bafc :=&PdfAnnotationStrikeOut {};_bafc .PdfAnnotation =_ecd ;_bafc .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ecd .SetContext (_bafc );return _bafc ;};func (_caced *PdfWriter )getPdfVersion ()string {return _e .Sprintf ("\u0025\u0064\u002e%\u0064",_caced ._ffgff .Major ,_caced ._ffgff .Minor );
};

// PdfInfoTrapped specifies pdf trapped information.
type PdfInfoTrapped string ;

// NewPdfAnnotationPolyLine returns a new polyline annotation.
func NewPdfAnnotationPolyLine ()*PdfAnnotationPolyLine {_cgg :=NewPdfAnnotation ();_caa :=&PdfAnnotationPolyLine {};_caa .PdfAnnotation =_cgg ;_caa .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_cgg .SetContext (_caa );return _caa ;};

// PdfColorCalGray represents a CalGray colorspace.
type PdfColorCalGray float64 ;func (_faccc *DSS )addCerts (_ceda [][]byte )([]*_bgg .PdfObjectStream ,error ){return _faccc .add (&_faccc .Certs ,_faccc ._dbfe ,_ceda );};

// NewPdfPageResourcesColorspaces returns a new PdfPageResourcesColorspaces object.
func NewPdfPageResourcesColorspaces ()*PdfPageResourcesColorspaces {_dggebd :=&PdfPageResourcesColorspaces {};_dggebd .Names =[]string {};_dggebd .Colorspaces =map[string ]PdfColorspace {};_dggebd ._abaa =&_bgg .PdfIndirectObject {};return _dggebd ;};

// AnnotFilterFunc represents a PDF annotation filtering function. If the function
// returns true, the annotation is kept, otherwise it is discarded.
type AnnotFilterFunc func (*PdfAnnotation )bool ;

// ToPdfObject returns the choice field dictionary within an indirect object (container).
func (_efda *PdfFieldChoice )ToPdfObject ()_bgg .PdfObject {_efda .PdfField .ToPdfObject ();_gffag :=_efda ._fagb ;_eaad :=_gffag .PdfObject .(*_bgg .PdfObjectDictionary );_eaad .Set ("\u0046\u0054",_bgg .MakeName ("\u0043\u0068"));if _efda .Opt !=nil {_eaad .Set ("\u004f\u0070\u0074",_efda .Opt );
};if _efda .TI !=nil {_eaad .Set ("\u0054\u0049",_efda .TI );};if _efda .I !=nil {_eaad .Set ("\u0049",_efda .I );};return _gffag ;};

// ToPdfObject implements interface PdfModel.
func (_dcge *PdfAnnotationStrikeOut )ToPdfObject ()_bgg .PdfObject {_dcge .PdfAnnotation .ToPdfObject ();_fade :=_dcge ._gec ;_acede :=_fade .PdfObject .(*_bgg .PdfObjectDictionary );_dcge .PdfAnnotationMarkup .appendToPdfDictionary (_acede );_acede .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0053t\u0072\u0069\u006b\u0065\u004f\u0075t"));
_acede .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dcge .QuadPoints );return _fade ;};func (_fdfe *PdfReader )newPdfActionMovieFromDict (_fac *_bgg .PdfObjectDictionary )(*PdfActionMovie ,error ){return &PdfActionMovie {Annotation :_fac .Get ("\u0041\u006e\u006e\u006f\u0074\u0061\u0074\u0069\u006f\u006e"),T :_fac .Get ("\u0054"),Operation :_fac .Get ("\u004fp\u0065\u0072\u0061\u0074\u0069\u006fn")},nil ;
};

// NewPdfFilespec returns an initialized generic PDF filespec model.
func NewPdfFilespec ()*PdfFilespec {_ebgbe :=&PdfFilespec {};_ebgbe ._efde =_bgg .MakeIndirectObject (_bgg .MakeDict ());return _ebgbe ;};

// SetPdfCreator sets the Creator attribute of the output PDF.
func SetPdfCreator (creator string ){_abfga .Lock ();defer _abfga .Unlock ();_aecbg =creator };

// ToPdfObject returns the PDF representation of the pattern.
func (_faag *PdfPattern )ToPdfObject ()_bgg .PdfObject {_acedg :=_faag .getDict ();_acedg .Set ("\u0054\u0079\u0070\u0065",_bgg .MakeName ("\u0050a\u0074\u0074\u0065\u0072\u006e"));_acedg .Set ("P\u0061\u0074\u0074\u0065\u0072\u006e\u0054\u0079\u0070\u0065",_bgg .MakeInteger (_faag .PatternType ));
return _faag ._aebfe ;};

// Compress is yet to be implemented.
// Should be able to compress in terms of JPEG quality parameter,
// and DPI threshold (need to know bounding area dimensions).
func (_gdacf DefaultImageHandler )Compress (input *Image ,quality int64 )(*Image ,error ){return input ,nil ;};

// ToPdfObject recursively builds the Outline tree PDF object.
func (_cabd *PdfOutline )ToPdfObject ()_bgg .PdfObject {_ccdfg :=_cabd ._aeag ;_babae :=_ccdfg .PdfObject .(*_bgg .PdfObjectDictionary );_babae .Set ("\u0054\u0079\u0070\u0065",_bgg .MakeName ("\u004f\u0075\u0074\u006c\u0069\u006e\u0065\u0073"));if _cabd .First !=nil {_babae .Set ("\u0046\u0069\u0072s\u0074",_cabd .First .ToPdfObject ());
};if _cabd .Last !=nil {_babae .Set ("\u004c\u0061\u0073\u0074",_cabd .Last .GetContext ().GetContainingPdfObject ());};if _cabd .Parent !=nil {_babae .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_cabd .Parent .GetContext ().GetContainingPdfObject ());
};if _cabd .Count !=nil {_babae .Set ("\u0043\u006f\u0075n\u0074",_bgg .MakeInteger (*_cabd .Count ));};return _ccdfg ;};

// NewPdfColorLab returns a new Lab color.
func NewPdfColorLab (l ,a ,b float64 )*PdfColorLab {_cggf :=PdfColorLab {l ,a ,b };return &_cggf };

// Image interface is a basic representation of an image used in PDF.
// The colorspace is not specified, but must be known when handling the image.
type Image struct{Width int64 ;Height int64 ;BitsPerComponent int64 ;ColorComponents int ;Data []byte ;_bfcec []byte ;_ddaa []float64 ;};func (_efdaf *LTV )getCerts (_adcae []*_dd .Certificate )([][]byte ,error ){_afaeg :=make ([][]byte ,0,len (_adcae ));
for _ ,_gbba :=range _adcae {_afaeg =append (_afaeg ,_gbba .Raw );};return _afaeg ,nil ;};

// PdfField contains the common attributes of a form field. The context object contains the specific field data
// which can represent a button, text, choice or signature.
// The PdfField is typically not used directly, but is encapsulated by the more specific field types such as
// PdfFieldButton etc (i.e. the context attribute).
type PdfField struct{_afag PdfModel ;_fagb *_bgg .PdfIndirectObject ;Parent *PdfField ;Annotations []*PdfAnnotationWidget ;Kids []*PdfField ;FT *_bgg .PdfObjectName ;T *_bgg .PdfObjectString ;TU *_bgg .PdfObjectString ;TM *_bgg .PdfObjectString ;Ff *_bgg .PdfObjectInteger ;
V _bgg .PdfObject ;DV _bgg .PdfObject ;AA _bgg .PdfObject ;VariableText *VariableText ;};func _ecgf (_efgd *_bgg .PdfObjectDictionary ,_dcfff *fontCommon )(*pdfFontType0 ,error ){_deadf ,_afgea :=_bgg .GetArray (_efgd .Get ("\u0044e\u0073c\u0065\u006e\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073"));
if !_afgea {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0049n\u0076\u0061\u006cid\u0020\u0044\u0065\u0073\u0063\u0065n\u0064\u0061\u006e\u0074\u0046\u006f\u006e\u0074\u0073\u0020\u002d\u0020\u006e\u006f\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079 \u0025\u0073",_dcfff );
return nil ,_bgg .ErrRangeError ;};if _deadf .Len ()!=1{_dcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0041\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u0020\u0021\u003d\u0020\u0031\u0020(%\u0064\u0029",_deadf .Len ());
return nil ,_bgg .ErrRangeError ;};_gfaf ,_bgag :=_bfac (_deadf .Get (0),false );if _bgag !=nil {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046a\u0069\u006c\u0065d \u006c\u006f\u0061\u0064\u0069\u006eg\u0020\u0064\u0065\u0073\u0063\u0065\u006e\u0064\u0061\u006e\u0074\u0020\u0066\u006f\u006et\u003a\u0020\u0065\u0072\u0072\u003d\u0025\u0076 \u0025\u0073",_bgag ,_dcfff );
return nil ,_bgag ;};_bcdaf :=_cdafd (_dcfff );_bcdaf .DescendantFont =_gfaf ;_bebd ,_afgea :=_bgg .GetNameVal (_efgd .Get ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067"));if _afgea {if _bebd =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0048"||_bebd =="\u0049\u0064\u0065\u006e\u0074\u0069\u0074\u0079\u002d\u0056"{_bcdaf ._dfbdd =_cc .NewIdentityTextEncoder (_bebd );
}else if _fbb .IsPredefinedCMap (_bebd ){_bcdaf ._gdcdb ,_bgag =_fbb .LoadPredefinedCMap (_bebd );if _bgag !=nil {_dcf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020l\u006f\u0061\u0064\u0020\u0070\u0072\u0065\u0064\u0065\u0066\u0069\u006e\u0065\u0064\u0020\u0043\u004d\u0061\u0070\u0020\u0025\u0073\u003a\u0020\u0025\u0076",_bebd ,_bgag );
};}else {_dcf .Log .Debug ("\u0055\u006e\u0068\u0061\u006e\u0064\u006c\u0065\u0064\u0020\u0063\u006da\u0070\u0020\u0025\u0071",_bebd );};};if _aacc :=_gfaf .baseFields ()._ffed ;_aacc !=nil {if _adbc :=_aacc .Name ();_adbc =="\u0041d\u006fb\u0065\u002d\u0043\u004e\u0053\u0031\u002d\u0055\u0043\u0053\u0032"||_adbc =="\u0041\u0064\u006f\u0062\u0065\u002d\u0047\u0042\u0031-\u0055\u0043\u0053\u0032"||_adbc =="\u0041\u0064\u006f\u0062\u0065\u002d\u004a\u0061\u0070\u0061\u006e\u0031-\u0055\u0043\u0053\u0032"||_adbc =="\u0041\u0064\u006f\u0062\u0065\u002d\u004b\u006f\u0072\u0065\u0061\u0031-\u0055\u0043\u0053\u0032"{_bcdaf ._dfbdd =_cc .NewCMapEncoder (_bebd ,_bcdaf ._gdcdb ,_aacc );
};};return _bcdaf ,nil ;};var _bbebg =false ;

// DecodeArray returns the range of color component values in DeviceGray colorspace.
func (_gcdf *PdfColorspaceDeviceGray )DecodeArray ()[]float64 {return []float64 {0,1.0}};

// Val returns the value of the color.
func (_ebcc *PdfColorCalGray )Val ()float64 {return float64 (*_ebcc )};func (_cdag *PdfAcroForm )filteredFields (_fdaf FieldFilterFunc ,_cdad bool )[]*PdfField {if _cdag ==nil {return nil ;};return _bebca (_cdag .Fields ,_fdaf ,_cdad );};

// GetContentStream returns the pattern cell's content stream
func (_bbded *PdfTilingPattern )GetContentStream ()([]byte ,error ){_edged ,_ ,_deaba :=_bbded .GetContentStreamWithEncoder ();return _edged ,_deaba ;};

// NewPdfActionHide returns a new "hide" action.
func NewPdfActionHide ()*PdfActionHide {_fbd :=NewPdfAction ();_fg :=&PdfActionHide {};_fg .PdfAction =_fbd ;_fbd .SetContext (_fg );return _fg ;};

// NewPdfAnnotationProjection returns a new projection annotation.
func NewPdfAnnotationProjection ()*PdfAnnotationProjection {_ebac :=NewPdfAnnotation ();_afe :=&PdfAnnotationProjection {};_afe .PdfAnnotation =_ebac ;_afe .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_ebac .SetContext (_afe );return _afe ;};

// NewStandard14FontMustCompile returns the standard 14 font named `basefont` as a *PdfFont.
// If `basefont` is one of the 14 Standard14Font values defined above then NewStandard14FontMustCompile
// is guaranteed to succeed.
func NewStandard14FontMustCompile (basefont StdFontName )*PdfFont {_ebaegb ,_gacfd :=NewStandard14Font (basefont );if _gacfd !=nil {panic (_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0053\u0074\u0061n\u0064\u0061\u0072\u0064\u0031\u0034\u0046\u006f\u006e\u0074 \u0025\u0023\u0071",basefont ));
};return _ebaegb ;};func _aefac (_abdaf _bgg .PdfObject )(PdfFunction ,error ){_abdaf =_bgg .ResolveReference (_abdaf );if _efgdc ,_cfgece :=_abdaf .(*_bgg .PdfObjectStream );_cfgece {_bacca :=_efgdc .PdfObjectDictionary ;_efac ,_afeca :=_bacca .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bgg .PdfObjectInteger );
if !_afeca {_dcf .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ag .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_efac ==0{return _cdfg (_efgdc );}else if *_efac ==4{return _baeaf (_efgdc );}else {return nil ,_ag .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _ebacd ,_gbeb :=_abdaf .(*_bgg .PdfIndirectObject );
_gbeb {_fcdbgg ,_affd :=_ebacd .PdfObject .(*_bgg .PdfObjectDictionary );if !_affd {_dcf .Log .Error ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0049\u006e\u0064\u0069\u0072\u0065\u0063\u0074\u0020o\u0062\u006a\u0065\u0063\u0074\u0020\u006eo\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0069\u006eg\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
return nil ,_ag .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};_fedc ,_affd :=_fcdbgg .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bgg .PdfObjectInteger );
if !_affd {_dcf .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");return nil ,_ag .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");
};if *_fedc ==2{return _bdff (_ebacd );}else if *_fedc ==3{return _gdgfd (_ebacd );}else {return nil ,_ag .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else if _ccdbg ,_dbdae :=_abdaf .(*_bgg .PdfObjectDictionary );
_dbdae {_deaec ,_gfdedc :=_ccdbg .Get ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065").(*_bgg .PdfObjectInteger );if !_gfdedc {_dcf .Log .Error ("F\u0075\u006e\u0063\u0074\u0069\u006fn\u0054\u0079\u0070\u0065\u0020\u006e\u0075\u006d\u0062e\u0072\u0020\u006di\u0073s\u0069\u006e\u0067");
return nil ,_ag .New ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u0070\u0061\u0072\u0061\u006d\u0065\u0074e\u0072 \u006f\u0072\u0020\u006d\u0069\u0073\u0073i\u006e\u0067");};if *_deaec ==2{return _bdff (_ccdbg );}else if *_deaec ==3{return _gdgfd (_ccdbg );
}else {return nil ,_ag .New ("i\u006e\u0076\u0061\u006cid\u0020f\u0075\u006e\u0063\u0074\u0069o\u006e\u0020\u0074\u0079\u0070\u0065");};}else {_dcf .Log .Debug ("\u0046u\u006e\u0063\u0074\u0069\u006f\u006e\u0020\u0054\u0079\u0070\u0065 \u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0023\u0076",_abdaf );
return nil ,_ag .New ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};};func _gfbdd (_dccc _bgg .PdfObject )(*PdfColorspaceSpecialIndexed ,error ){_geafc :=NewPdfColorspaceSpecialIndexed ();if _gdfgg ,_bbfag :=_dccc .(*_bgg .PdfIndirectObject );
_bbfag {_geafc ._addbe =_gdfgg ;};_dccc =_bgg .TraceToDirectObject (_dccc );_fgfg ,_dbaf :=_dccc .(*_bgg .PdfObjectArray );if !_dbaf {return nil ,_e .Errorf ("\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072");};if _fgfg .Len ()!=4{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069\u006e\u0076a\u006ci\u0064\u0020\u0061\u0072\u0072\u0061\u0079\u0020\u006c\u0065\u006e\u0067\u0074\u0068");
};_dccc =_fgfg .Get (0);_adfa ,_dbaf :=_dccc .(*_bgg .PdfObjectName );if !_dbaf {return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};if *_adfa !="\u0049n\u0064\u0065\u0078\u0065\u0064"{return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065xe\u0064\u0020\u0043\u0053\u003a\u0020\u0077\u0072\u006f\u006e\u0067\u0020\u006e\u0061m\u0065");
};_dccc =_fgfg .Get (1);_bgee ,_dbda :=DetermineColorspaceNameFromPdfObject (_dccc );if _dbda !=nil {return nil ,_dbda ;};if _bgee =="\u0049n\u0064\u0065\u0078\u0065\u0064"||_bgee =="\u0050a\u0074\u0074\u0065\u0072\u006e"{_dcf .Log .Debug ("E\u0072\u0072o\u0072\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0063\u006f\u006c\u006f\u0072\u0073\u0070\u0061\u0063e\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0049\u006e\u0064e\u0078\u0065\u0064\u002f\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043S\u0020\u0061\u0073\u0020\u0062\u0061\u0073\u0065\u0020\u0028\u0025v\u0029",_bgee );
return nil ,_ecaa ;};_bdfe ,_dbda :=NewPdfColorspaceFromPdfObject (_dccc );if _dbda !=nil {return nil ,_dbda ;};_geafc .Base =_bdfe ;_dccc =_fgfg .Get (2);_dacee ,_dbda :=_bgg .GetNumberAsInt64 (_dccc );if _dbda !=nil {return nil ,_dbda ;};if _dacee > 255{return nil ,_e .Errorf ("\u0069n\u0064\u0065\u0078\u0065d\u0020\u0043\u0053\u003a\u0020I\u006ev\u0061l\u0069\u0064\u0020\u0068\u0069\u0076\u0061l");
};_geafc .HiVal =int (_dacee );_dccc =_fgfg .Get (3);_geafc .Lookup =_dccc ;_dccc =_bgg .TraceToDirectObject (_dccc );var _effgd []byte ;if _ggfa ,_aaege :=_dccc .(*_bgg .PdfObjectString );_aaege {_effgd =_ggfa .Bytes ();_dcf .Log .Trace ("\u0049\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0073\u0074r\u0069\u006e\u0067\u0020\u0063\u006f\u006co\u0072\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0020\u0064",_effgd );
}else if _gbfc ,_eccdc :=_dccc .(*_bgg .PdfObjectStream );_eccdc {_dcf .Log .Trace ("\u0049n\u0064e\u0078\u0065\u0064\u0020\u0073t\u0072\u0065a\u006d\u003a\u0020\u0025\u0073",_dccc .String ());_dcf .Log .Trace ("\u0045\u006e\u0063\u006fde\u0064\u0020\u0028\u0025\u0064\u0029\u0020\u003a\u0020\u0025\u0023\u0020\u0078",len (_gbfc .Stream ),_gbfc .Stream );
_ceagd ,_egbfe :=_bgg .DecodeStream (_gbfc );if _egbfe !=nil {return nil ,_egbfe ;};_dcf .Log .Trace ("\u0044e\u0063o\u0064\u0065\u0064\u0020\u0028%\u0064\u0029 \u003a\u0020\u0025\u0020\u0058",len (_ceagd ),_ceagd );_effgd =_ceagd ;}else {_dcf .Log .Debug ("\u0054\u0079\u0070\u0065\u003a\u0020\u0025\u0054",_dccc );
return nil ,_e .Errorf ("\u0069\u006e\u0064\u0065\u0078\u0065\u0064\u0020\u0043\u0053\u003a\u0020\u0049\u006e\u0076a\u006ci\u0064\u0020\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};if len (_effgd )< _geafc .Base .GetNumComponents ()*(_geafc .HiVal +1){_dcf .Log .Debug ("\u0050\u0044\u0046\u0020\u0049\u006e\u0063o\u006d\u0070\u0061t\u0069\u0062\u0069\u006ci\u0074\u0079\u003a\u0020\u0049\u006e\u0064\u0065\u0078\u0020\u0073\u0074\u0072\u0065\u0061\u006d\u0020\u0074\u006f\u006f\u0020\u0073\u0068\u006f\u0072\u0074");
_dcf .Log .Debug ("\u0046\u0061i\u006c\u002c\u0020\u006c\u0065\u006e\u0028\u0064\u0061\u0074\u0061\u0029\u003a\u0020\u0025\u0064\u002c\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0064\u002c\u0020\u0068\u0069\u0056\u0061\u006c\u003a\u0020\u0025\u0064",len (_effgd ),_geafc .Base .GetNumComponents (),_geafc .HiVal );
}else {_effgd =_effgd [:_geafc .Base .GetNumComponents ()*(_geafc .HiVal +1)];};_geafc ._cdfe =_effgd ;return _geafc ,nil ;};

// ToPdfObject return the CalGray colorspace as a PDF object (name dictionary).
func (_bbfb *PdfColorspaceCalGray )ToPdfObject ()_bgg .PdfObject {_dfebg :=&_bgg .PdfObjectArray {};_dfebg .Append (_bgg .MakeName ("\u0043a\u006c\u0047\u0072\u0061\u0079"));_gggg :=_bgg .MakeDict ();if _bbfb .WhitePoint !=nil {_gggg .Set ("\u0057\u0068\u0069\u0074\u0065\u0050\u006f\u0069\u006e\u0074",_bgg .MakeArray (_bgg .MakeFloat (_bbfb .WhitePoint [0]),_bgg .MakeFloat (_bbfb .WhitePoint [1]),_bgg .MakeFloat (_bbfb .WhitePoint [2])));
}else {_dcf .Log .Error ("\u0043\u0061\u006c\u0047\u0072\u0061\u0079\u003a\u0020\u004d\u0069\u0073\u0073\u0069\u006e\u0067\u0020\u0057\u0068\u0069\u0074\u0065\u0050\u006fi\u006e\u0074\u0020\u0028\u0052e\u0071\u0075i\u0072\u0065\u0064\u0029");};if _bbfb .BlackPoint !=nil {_gggg .Set ("\u0042\u006c\u0061\u0063\u006b\u0050\u006f\u0069\u006e\u0074",_bgg .MakeArray (_bgg .MakeFloat (_bbfb .BlackPoint [0]),_bgg .MakeFloat (_bbfb .BlackPoint [1]),_bgg .MakeFloat (_bbfb .BlackPoint [2])));
};_gggg .Set ("\u0047\u0061\u006dm\u0061",_bgg .MakeFloat (_bbfb .Gamma ));_dfebg .Append (_gggg );if _bbfb ._ffbc !=nil {_bbfb ._ffbc .PdfObject =_dfebg ;return _bbfb ._ffbc ;};return _dfebg ;};

// ToPdfObject returns colorspace in a PDF object format [name stream]
func (_bgce *PdfColorspaceICCBased )ToPdfObject ()_bgg .PdfObject {_baefg :=&_bgg .PdfObjectArray {};_baefg .Append (_bgg .MakeName ("\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064"));var _abddag *_bgg .PdfObjectStream ;if _bgce ._fdedb !=nil {_abddag =_bgce ._fdedb ;
}else {_abddag =&_bgg .PdfObjectStream {};};_fagd :=_bgg .MakeDict ();_fagd .Set ("\u004e",_bgg .MakeInteger (int64 (_bgce .N )));if _bgce .Alternate !=nil {_fagd .Set ("\u0041l\u0074\u0065\u0072\u006e\u0061\u0074e",_bgce .Alternate .ToPdfObject ());};
if _bgce .Metadata !=nil {_fagd .Set ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_bgce .Metadata );};if _bgce .Range !=nil {var _aedf []_bgg .PdfObject ;for _ ,_fegca :=range _bgce .Range {_aedf =append (_aedf ,_bgg .MakeFloat (_fegca ));};_fagd .Set ("\u0052\u0061\u006eg\u0065",_bgg .MakeArray (_aedf ...));
};_fagd .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bgg .MakeInteger (int64 (len (_bgce .Data ))));_abddag .Stream =_bgce .Data ;_abddag .PdfObjectDictionary =_fagd ;_baefg .Append (_abddag );if _bgce ._caad !=nil {_bgce ._caad .PdfObject =_baefg ;return _bgce ._caad ;
};return _baefg ;};

// SetContentStreams sets the content streams based on a string array. Will make
// 1 object stream for each string and reference from the page Contents.
// Each stream will be encoded using the encoding specified by the StreamEncoder,
// if empty, will use identity encoding (raw data).
func (_befa *PdfPage )SetContentStreams (cStreams []string ,encoder _bgg .StreamEncoder )error {if len (cStreams )==0{_befa .Contents =nil ;return nil ;};if encoder ==nil {encoder =_bgg .NewRawEncoder ();};var _bade []*_bgg .PdfObjectStream ;for _ ,_afbge :=range cStreams {_gcga :=&_bgg .PdfObjectStream {};
_gcgad :=encoder .MakeStreamDict ();_ggea ,_fdcba :=encoder .EncodeBytes ([]byte (_afbge ));if _fdcba !=nil {return _fdcba ;};_gcgad .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bgg .MakeInteger (int64 (len (_ggea ))));_gcga .PdfObjectDictionary =_gcgad ;
_gcga .Stream =_ggea ;_bade =append (_bade ,_gcga );};if len (_bade )==1{_befa .Contents =_bade [0];}else {_ebacb :=_bgg .MakeArray ();for _ ,_ddfac :=range _bade {_ebacb .Append (_ddfac );};_befa .Contents =_ebacb ;};return nil ;};func (_agb *PdfReader )newPdfAnnotationInkFromDict (_aad *_bgg .PdfObjectDictionary )(*PdfAnnotationInk ,error ){_gcd :=PdfAnnotationInk {};
_fdbd ,_gbfb :=_agb .newPdfAnnotationMarkupFromDict (_aad );if _gbfb !=nil {return nil ,_gbfb ;};_gcd .PdfAnnotationMarkup =_fdbd ;_gcd .InkList =_aad .Get ("\u0049n\u006b\u004c\u0069\u0073\u0074");_gcd .BS =_aad .Get ("\u0042\u0053");return &_gcd ,nil ;
};type pdfFontSimple struct{fontCommon ;_fefb *_bgg .PdfIndirectObject ;_dcbe map[_cc .CharCode ]float64 ;_bfced _cc .TextEncoder ;_aaef _cc .TextEncoder ;_dcbg *PdfFontDescriptor ;

// Encoding is subject to limitations that are described in 9.6.6, "Character Encoding".
// BaseFont is derived differently.
FirstChar _bgg .PdfObject ;LastChar _bgg .PdfObject ;Widths _bgg .PdfObject ;Encoding _bgg .PdfObject ;_ebfec *_dad .RuneCharSafeMap ;};

// Evaluate runs the function on the passed in slice and returns the results.
func (_cdgf *PdfFunctionType0 )Evaluate (x []float64 )([]float64 ,error ){if len (x )!=_cdgf .NumInputs {_dcf .Log .Error ("\u004eu\u006d\u0062e\u0072\u0020\u006f\u0066 \u0069\u006e\u0070u\u0074\u0073\u0020\u006e\u006f\u0074\u0020\u006d\u0061tc\u0068\u0069\u006eg\u0020\u0077h\u0061\u0074\u0020\u0069\u0073\u0020n\u0065\u0065d\u0065\u0064");
return nil ,_ag .New ("\u0072\u0061\u006e\u0067\u0065\u0020\u0063\u0068\u0065\u0063\u006b\u0020e\u0072\u0072\u006f\u0072");};if _cdgf ._dcbed ==nil {_fccb :=_cdgf .processSamples ();if _fccb !=nil {return nil ,_fccb ;};};_gbdbf :=_cdgf .Encode ;if _gbdbf ==nil {_gbdbf =[]float64 {};
for _gcbee :=0;_gcbee < len (_cdgf .Size );_gcbee ++{_gbdbf =append (_gbdbf ,0);_gbdbf =append (_gbdbf ,float64 (_cdgf .Size [_gcbee ]-1));};};_dabag :=_cdgf .Decode ;if _dabag ==nil {_dabag =_cdgf .Range ;};_aagef :=make ([]int ,len (x ));for _daag :=0;
_daag < len (x );_daag ++{_ebaa :=x [_daag ];_agee :=_db .Min (_db .Max (_ebaa ,_cdgf .Domain [2*_daag ]),_cdgf .Domain [2*_daag +1]);_bbdecd :=_dcg .LinearInterpolate (_agee ,_cdgf .Domain [2*_daag ],_cdgf .Domain [2*_daag +1],_gbdbf [2*_daag ],_gbdbf [2*_daag +1]);
_geagc :=_db .Min (_db .Max (_bbdecd ,0),float64 (_cdgf .Size [_daag ]-1));_cdae :=int (_db .Floor (_geagc +0.5));if _cdae < 0{_cdae =0;}else if _cdae > _cdgf .Size [_daag ]{_cdae =_cdgf .Size [_daag ]-1;};_aagef [_daag ]=_cdae ;};_dgbaa :=_aagef [0];for _acff :=1;
_acff < _cdgf .NumInputs ;_acff ++{_daac :=_aagef [_acff ];for _gggf :=0;_gggf < _acff ;_gggf ++{_daac *=_cdgf .Size [_gggf ];};_dgbaa +=_daac ;};_dgbaa *=_cdgf .NumOutputs ;var _cbcag []float64 ;for _acgb :=0;_acgb < _cdgf .NumOutputs ;_acgb ++{_agabg :=_dgbaa +_acgb ;
if _agabg >=len (_cdgf ._dcbed ){_dcf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a \u006e\u006ft\u0020\u0065\u006eo\u0075\u0067\u0068\u0020\u0069\u006ep\u0075\u0074\u0020sa\u006dp\u006c\u0065\u0073\u0020\u0074\u006f\u0020d\u0065\u0074\u0065\u0072\u006d\u0069\u006e\u0065\u0020\u006f\u0075\u0074\u0070\u0075\u0074\u0020\u0076\u0061lu\u0065\u0073\u002e\u0020\u004f\u0075\u0074\u0070\u0075\u0074\u0020\u006d\u0061\u0079\u0020\u0062\u0065\u0020\u0069\u006e\u0063\u006f\u0072\u0072\u0065\u0063\u0074\u002e");
continue ;};_dfac :=_cdgf ._dcbed [_agabg ];_dfeccd :=_dcg .LinearInterpolate (float64 (_dfac ),0,_db .Pow (2,float64 (_cdgf .BitsPerSample )),_dabag [2*_acgb ],_dabag [2*_acgb +1]);_fbff :=_db .Min (_db .Max (_dfeccd ,_cdgf .Range [2*_acgb ]),_cdgf .Range [2*_acgb +1]);
_cbcag =append (_cbcag ,_fbff );};return _cbcag ,nil ;};

// GetNumComponents returns the number of color components of the colorspace device.
// Returns 1 for a grayscale device.
func (_aeddc *PdfColorspaceDeviceGray )GetNumComponents ()int {return 1};func (_gfgbb PdfFont )actualFont ()pdfFont {if _gfgbb ._efdec ==nil {_dcf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0061\u0063\u0074\u0075\u0061\u006c\u0046\u006f\u006e\u0074\u002e\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c.\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_gfgbb );
};return _gfgbb ._efdec ;};

// GetType returns the button field type which returns one of the following
// - PdfFieldButtonPush for push button fields
// - PdfFieldButtonCheckbox for checkbox fields
// - PdfFieldButtonRadio for radio button fields
func (_gfbfb *PdfFieldButton )GetType ()ButtonType {_deaag :=ButtonTypeCheckbox ;if _gfbfb .Ff !=nil {if (uint32 (*_gfbfb .Ff )&FieldFlagPushbutton .Mask ())> 0{_deaag =ButtonTypePush ;}else if (uint32 (*_gfbfb .Ff )&FieldFlagRadio .Mask ())> 0{_deaag =ButtonTypeRadio ;
};};return _deaag ;};

// Has checks if flag fl is set in flag and returns true if so, false otherwise.
func (_bafe FieldFlag )Has (fl FieldFlag )bool {return (_bafe .Mask ()&fl .Mask ())> 0};

// GetSamples converts the raw byte slice into samples which are stored in a uint32 bit array.
// Each sample is represented by BitsPerComponent consecutive bits in the raw data.
// NOTE: The method resamples the image byte data before returning the result and
// this could lead to high memory usage, especially on large images. It should
// be avoided, when possible. It is recommended to access the Data field of the
// image directly or use the ColorAt method to extract individual pixels.
func (_beafe *Image )GetSamples ()[]uint32 {_dbecc :=_ceg .ResampleBytes (_beafe .Data ,int (_beafe .BitsPerComponent ));if _beafe .BitsPerComponent < 8{_dbecc =_beafe .samplesTrimPadding (_dbecc );};_adbg :=int (_beafe .Width )*int (_beafe .Height )*_beafe .ColorComponents ;
if len (_dbecc )< _adbg {_dcf .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u0066\u0065\u0077\u0020\u0073a\u006d\u0070\u006c\u0065\u0073\u0020(\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078\u0070e\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064\u0029",len (_dbecc ),_adbg );
return _dbecc ;}else if len (_dbecc )> _adbg {_dcf .Log .Debug ("\u0045r\u0072\u006fr\u003a\u0020\u0054o\u006f\u0020\u006d\u0061\u006e\u0079\u0020s\u0061\u006d\u0070\u006c\u0065\u0073 \u0028\u0067\u006f\u0074\u0020\u0025\u0064\u002c\u0020\u0065\u0078p\u0065\u0063\u0074\u0069\u006e\u0067\u0020\u0025\u0064",len (_dbecc ),_adbg );
_dbecc =_dbecc [:_adbg ];};return _dbecc ;};

// NewPdfAnnotationSquare returns a new square annotation.
func NewPdfAnnotationSquare ()*PdfAnnotationSquare {_deaa :=NewPdfAnnotation ();_cbda :=&PdfAnnotationSquare {};_cbda .PdfAnnotation =_deaa ;_cbda .PdfAnnotationMarkup =&PdfAnnotationMarkup {};_deaa .SetContext (_cbda );return _cbda ;};func (_bfaef *PdfReader )newPdfPageFromDict (_faccg *_bgg .PdfObjectDictionary )(*PdfPage ,error ){_ebdbg :=NewPdfPage ();
_ebdbg ._gdbeb =_faccg ;_dffde :=*_faccg ;_bcgff ,_debc :=_dffde .Get ("\u0054\u0079\u0070\u0065").(*_bgg .PdfObjectName );if !_debc {return nil ,_ag .New ("\u006d\u0069ss\u0069\u006e\u0067/\u0069\u006e\u0076\u0061lid\u0020Pa\u0067\u0065\u0020\u0064\u0069\u0063\u0074io\u006e\u0061\u0072\u0079\u0020\u0054\u0079p\u0065");
};if *_bcgff !="\u0050\u0061\u0067\u0065"{return nil ,_ag .New ("\u0070\u0061\u0067\u0065 \u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0054y\u0070\u0065\u0020\u0021\u003d\u0020\u0050a\u0067\u0065");};if _fgfcf :=_dffde .Get ("\u0050\u0061\u0072\u0065\u006e\u0074");
_fgfcf !=nil {_ebdbg .Parent =_fgfcf ;};if _defd :=_dffde .Get ("\u004c\u0061\u0073t\u004d\u006f\u0064\u0069\u0066\u0069\u0065\u0064");_defd !=nil {_abef ,_efcaa :=_bgg .GetString (_defd );if !_efcaa {return nil ,_ag .New ("\u0070\u0061\u0067\u0065\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u004c\u0061\u0073\u0074\u004d\u006f\u0064\u0069f\u0069\u0065\u0064\u0020\u0021=\u0020\u0073t\u0072\u0069\u006e\u0067");
};_bggbb ,_cggad :=NewPdfDate (_abef .Str ());if _cggad !=nil {return nil ,_cggad ;};_ebdbg .LastModified =&_bggbb ;};if _gbaee :=_dffde .Get ("\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s");_gbaee !=nil &&!_bgg .IsNullObject (_gbaee ){_deec ,_aafga :=_bgg .GetDict (_gbaee );
if !_aafga {return nil ,_e .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063e\u0020d\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0028\u0025\u0054\u0029",_gbaee );};var _dfdg error ;_ebdbg .Resources ,_dfdg =NewPdfPageResourcesFromDict (_deec );
if _dfdg !=nil {return nil ,_dfdg ;};}else {_ebbdafd ,_gaedc :=_ebdbg .getParentResources ();if _gaedc !=nil {return nil ,_gaedc ;};if _ebbdafd ==nil {_ebbdafd =NewPdfPageResources ();};_ebdbg .Resources =_ebbdafd ;};if _egaf :=_dffde .Get ("\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078");
_egaf !=nil {_ggcgdg ,_agba :=_bgg .GetArray (_egaf );if !_agba {return nil ,_ag .New ("\u0070\u0061\u0067\u0065\u0020\u004d\u0065\u0064\u0069\u0061\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");};var _fdee error ;
_ebdbg .MediaBox ,_fdee =NewPdfRectangle (*_ggcgdg );if _fdee !=nil {return nil ,_fdee ;};};if _adedc :=_dffde .Get ("\u0043r\u006f\u0070\u0042\u006f\u0078");_adedc !=nil {_degcb ,_aacd :=_bgg .GetArray (_adedc );if !_aacd {return nil ,_ag .New ("\u0070a\u0067\u0065\u0020\u0043r\u006f\u0070\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _cabeb error ;_ebdbg .CropBox ,_cabeb =NewPdfRectangle (*_degcb );if _cabeb !=nil {return nil ,_cabeb ;};};if _gacda :=_dffde .Get ("\u0042\u006c\u0065\u0065\u0064\u0042\u006f\u0078");_gacda !=nil {_cagdd ,_bgaaf :=_bgg .GetArray (_gacda );if !_bgaaf {return nil ,_ag .New ("\u0070\u0061\u0067\u0065\u0020\u0042\u006c\u0065\u0065\u0064\u0042o\u0078\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079");
};var _eddde error ;_ebdbg .BleedBox ,_eddde =NewPdfRectangle (*_cagdd );if _eddde !=nil {return nil ,_eddde ;};};if _cdafc :=_dffde .Get ("\u0054r\u0069\u006d\u0042\u006f\u0078");_cdafc !=nil {_feca ,_cafg :=_bgg .GetArray (_cdafc );if !_cafg {return nil ,_ag .New ("\u0070a\u0067\u0065\u0020\u0054r\u0069\u006d\u0042\u006f\u0078 \u006eo\u0074 \u0061\u006e\u0020\u0061\u0072\u0072\u0061y");
};var _edag error ;_ebdbg .TrimBox ,_edag =NewPdfRectangle (*_feca );if _edag !=nil {return nil ,_edag ;};};if _cffa :=_dffde .Get ("\u0041\u0072\u0074\u0042\u006f\u0078");_cffa !=nil {_eccbac ,_beafg :=_bgg .GetArray (_cffa );if !_beafg {return nil ,_ag .New ("\u0070a\u0067\u0065\u0020\u0041\u0072\u0074\u0042\u006f\u0078\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0061\u0072\u0072\u0061\u0079");
};var _afeef error ;_ebdbg .ArtBox ,_afeef =NewPdfRectangle (*_eccbac );if _afeef !=nil {return nil ,_afeef ;};};if _cagaf :=_dffde .Get ("\u0042\u006f\u0078C\u006f\u006c\u006f\u0072\u0049\u006e\u0066\u006f");_cagaf !=nil {_ebdbg .BoxColorInfo =_cagaf ;
};if _cccd :=_dffde .Get ("\u0043\u006f\u006e\u0074\u0065\u006e\u0074\u0073");_cccd !=nil {_ebdbg .Contents =_cccd ;};if _baega :=_dffde .Get ("\u0052\u006f\u0074\u0061\u0074\u0065");_baega !=nil {_cgbed ,_bbgf :=_bgg .GetNumberAsInt64 (_baega );if _bbgf !=nil {return nil ,_ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0067e\u0020\u0052\u006f\u0074\u0061\u0074\u0065\u0020\u006f\u0062j\u0065\u0063\u0074");
};_ebdbg .Rotate =&_cgbed ;};if _cbfef :=_dffde .Get ("\u0047\u0072\u006fu\u0070");_cbfef !=nil {_ebdbg .Group =_cbfef ;};if _beafa :=_dffde .Get ("\u0054\u0068\u0075m\u0062");_beafa !=nil {_ebdbg .Thumb =_beafa ;};if _ebded :=_dffde .Get ("\u0042");_ebded !=nil {_ebdbg .B =_ebded ;
};if _eaecf :=_dffde .Get ("\u0044\u0075\u0072");_eaecf !=nil {_ebdbg .Dur =_eaecf ;};if _gecdc :=_dffde .Get ("\u0054\u0072\u0061n\u0073");_gecdc !=nil {_ebdbg .Trans =_gecdc ;};if _cbcg :=_dffde .Get ("\u0041\u0041");_cbcg !=nil {_ebdbg .AA =_cbcg ;};
if _adag :=_dffde .Get ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061");_adag !=nil {_ebdbg .Metadata =_adag ;};if _gffad :=_dffde .Get ("\u0050i\u0065\u0063\u0065\u0049\u006e\u0066o");_gffad !=nil {_ebdbg .PieceInfo =_gffad ;};if _bdcgg :=_dffde .Get ("\u0053\u0074\u0072\u0075\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074\u0073");
_bdcgg !=nil {_ebdbg .StructParents =_bdcgg ;};if _cagcg :=_dffde .Get ("\u0049\u0044");_cagcg !=nil {_ebdbg .ID =_cagcg ;};if _aeaa :=_dffde .Get ("\u0050\u005a");_aeaa !=nil {_ebdbg .PZ =_aeaa ;};if _fceac :=_dffde .Get ("\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006fn\u0049\u006e\u0066\u006f");
_fceac !=nil {_ebdbg .SeparationInfo =_fceac ;};if _gegbf :=_dffde .Get ("\u0054\u0061\u0062\u0073");_gegbf !=nil {_ebdbg .Tabs =_gegbf ;};if _bfgd :=_dffde .Get ("T\u0065m\u0070\u006c\u0061\u0074\u0065\u0049\u006e\u0073t\u0061\u006e\u0074\u0069at\u0065\u0064");
_bfgd !=nil {_ebdbg .TemplateInstantiated =_bfgd ;};if _dggde :=_dffde .Get ("\u0050r\u0065\u0073\u0053\u0074\u0065\u0070s");_dggde !=nil {_ebdbg .PresSteps =_dggde ;};if _bccc :=_dffde .Get ("\u0055\u0073\u0065\u0072\u0055\u006e\u0069\u0074");_bccc !=nil {_ebdbg .UserUnit =_bccc ;
};if _fcgd :=_dffde .Get ("\u0056\u0050");_fcgd !=nil {_ebdbg .VP =_fcgd ;};if _dcdga :=_dffde .Get ("\u0041\u006e\u006e\u006f\u0074\u0073");_dcdga !=nil {_ebdbg .Annots =_dcdga ;};_ebdbg ._afbaa =_bfaef ;return _ebdbg ,nil ;};func _afaf (_fecbe ,_eeeca string )string {if _ba .Contains (_fecbe ,"\u002b"){_bagag :=_ba .Split (_fecbe ,"\u002b");
if len (_bagag )==2{_fecbe =_bagag [1];};};return _eeeca +"\u002b"+_fecbe ;};

// GetRuneMetrics returns the char metrics for a rune.
// TODO(peterwilliams97) There is nothing callers can do if no CharMetrics are found so we might as
//                       well give them 0 width. There is no need for the bool return.
func (_dgga *PdfFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_degcg :=_dgga .actualFont ();if _degcg ==nil {_dcf .Log .Debug ("ER\u0052\u004fR\u003a\u0020\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061\u0072\u004d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u004e\u006f\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074\u0065\u0064\u0020f\u006fr\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079p\u0065=\u0025\u0023T",_dgga ._efdec );
return _dad .CharMetrics {},false ;};if _fbdgbf ,_dbdag :=_degcg .GetRuneMetrics (r );_dbdag {return _fbdgbf ,true ;};if _faede ,_gacdb :=_dgga .GetFontDescriptor ();_gacdb ==nil &&_faede !=nil {return _dad .CharMetrics {Wx :_faede ._dgac },true ;};_dcf .Log .Debug ("\u0047\u0065\u0074\u0047\u006c\u0079\u0070h\u0043\u0068\u0061r\u004d\u0065\u0074\u0072i\u0063\u0073\u003a\u0020\u004e\u006f\u0020\u006d\u0065\u0074\u0072\u0069\u0063\u0073\u0020\u0066\u006f\u0072\u0020\u0066\u006f\u006e\u0074\u003d\u0025\u0073",_dgga );
return _dad .CharMetrics {},false ;};

// EncryptionAlgorithm is used in EncryptOptions to change the default algorithm used to encrypt the document.
type EncryptionAlgorithm int ;func (_abbf *PdfAppender )addNewObject (_ececa _bgg .PdfObject ){if _ ,_gcgg :=_abbf ._eccg [_ececa ];!_gcgg {_abbf ._dfgd =append (_abbf ._dfgd ,_ececa );_abbf ._eccg [_ececa ]=struct{}{};};};

// NewPdfAnnotation3D returns a new 3d annotation.
func NewPdfAnnotation3D ()*PdfAnnotation3D {_bdaf :=NewPdfAnnotation ();_dcfg :=&PdfAnnotation3D {};_dcfg .PdfAnnotation =_bdaf ;_bdaf .SetContext (_dcfg );return _dcfg ;};const (XObjectTypeUndefined XObjectType =iota ;XObjectTypeImage ;XObjectTypeForm ;
XObjectTypePS ;XObjectTypeUnknown ;);

// NewPdfColorspaceDeviceGray returns a new grayscale colorspace.
func NewPdfColorspaceDeviceGray ()*PdfColorspaceDeviceGray {return &PdfColorspaceDeviceGray {}};

// ToPdfObject implements interface PdfModel.
func (_ca *PdfActionLaunch )ToPdfObject ()_bgg .PdfObject {_ca .PdfAction .ToPdfObject ();_cad :=_ca ._ddf ;_gee :=_cad .PdfObject .(*_bgg .PdfObjectDictionary );_gee .SetIfNotNil ("\u0053",_bgg .MakeName (string (ActionTypeLaunch )));if _ca .F !=nil {_gee .Set ("\u0046",_ca .F .ToPdfObject ());
};_gee .SetIfNotNil ("\u0057\u0069\u006e",_ca .Win );_gee .SetIfNotNil ("\u004d\u0061\u0063",_ca .Mac );_gee .SetIfNotNil ("\u0055\u006e\u0069\u0078",_ca .Unix );_gee .SetIfNotNil ("\u004ee\u0077\u0057\u0069\u006e\u0064\u006fw",_ca .NewWindow );return _cad ;
};func (_ffaf *PdfReader )newPdfAnnotationMovieFromDict (_bece *_bgg .PdfObjectDictionary )(*PdfAnnotationMovie ,error ){_dfbd :=PdfAnnotationMovie {};_dfbd .T =_bece .Get ("\u0054");_dfbd .Movie =_bece .Get ("\u004d\u006f\u0076i\u0065");_dfbd .A =_bece .Get ("\u0041");
return &_dfbd ,nil ;};

// SetXObjectFormByName adds the provided XObjectForm to the page resources.
// The added XObjectForm is identified by the specified name.
func (_ecfge *PdfPageResources )SetXObjectFormByName (keyName _bgg .PdfObjectName ,xform *XObjectForm )error {_debgc :=xform .ToPdfObject ().(*_bgg .PdfObjectStream );_eefa :=_ecfge .SetXObjectByName (keyName ,_debgc );return _eefa ;};

// NewPdfFieldSignature returns an initialized signature field.
func NewPdfFieldSignature (signature *PdfSignature )*PdfFieldSignature {_efbbfc :=&PdfFieldSignature {};_efbbfc .PdfField =NewPdfField ();_efbbfc .PdfField .SetContext (_efbbfc );_efbbfc .PdfAnnotationWidget =NewPdfAnnotationWidget ();_efbbfc .PdfAnnotationWidget .SetContext (_efbbfc );
_efbbfc .PdfAnnotationWidget ._gec =_efbbfc .PdfField ._fagb ;_efbbfc .T =_bgg .MakeString ("");_efbbfc .F =_bgg .MakeInteger (132);_efbbfc .V =signature ;return _efbbfc ;};func (_geff *Image )samplesAddPadding (_bdecg []uint32 )[]uint32 {_gfffff :=_dcg .BytesPerLine (int (_geff .Width ),int (_geff .BitsPerComponent ),_geff .ColorComponents )*(8/int (_geff .BitsPerComponent ));
_adfd :=_gfffff *int (_geff .Height );if len (_bdecg )==_adfd {return _bdecg ;};_fddb :=make ([]uint32 ,_adfd );_cbacb :=int (_geff .Width )*_geff .ColorComponents ;for _gcabf :=0;_gcabf < int (_geff .Height );_gcabf ++{_abfcd :=_gcabf *int (_geff .Width );
_fdcge :=_gcabf *_gfffff ;for _ddfg :=0;_ddfg < _cbacb ;_ddfg ++{_fddb [_fdcge +_ddfg ]=_bdecg [_abfcd +_ddfg ];};};return _fddb ;};

// ToPdfObject implements interface PdfModel.
func (_cbdd *PdfAnnotationWidget )ToPdfObject ()_bgg .PdfObject {_cbdd .PdfAnnotation .ToPdfObject ();_befe :=_cbdd ._gec ;_geee :=_befe .PdfObject .(*_bgg .PdfObjectDictionary );if _cbdd ._aga {return _befe ;};_cbdd ._aga =true ;_geee .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0057\u0069\u0064\u0067\u0065\u0074"));
_geee .SetIfNotNil ("\u0048",_cbdd .H );_geee .SetIfNotNil ("\u004d\u004b",_cbdd .MK );_geee .SetIfNotNil ("\u0041",_cbdd .A );_geee .SetIfNotNil ("\u0041\u0041",_cbdd .AA );_geee .SetIfNotNil ("\u0042\u0053",_cbdd .BS );_ecc :=_cbdd .Parent ;if _cbdd ._aaa !=nil {if _cbdd ._aaa ._fagb ==_cbdd ._gec {_cbdd ._aaa .ToPdfObject ();
};_ecc =_cbdd ._aaa .GetContainingPdfObject ();};if _ecc !=_befe {_geee .SetIfNotNil ("\u0050\u0061\u0072\u0065\u006e\u0074",_ecc );};_cbdd ._aga =false ;return _befe ;};

// Sign signs a specific page with a digital signature.
// The signature field parameter must have a valid signature dictionary
// specified by its V field.
func (_dbdf *PdfAppender )Sign (pageNum int ,field *PdfFieldSignature )error {if field ==nil {return _ag .New ("\u0073\u0069g\u006e\u0061\u0074\u0075\u0072\u0065\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065 n\u0069\u006c");
};_gbe :=field .V ;if _gbe ==nil {return _ag .New ("\u0073\u0069\u0067na\u0074\u0075\u0072\u0065\u0020\u0064\u0069\u0063\u0074i\u006fn\u0061r\u0079 \u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");};_gcdc :=pageNum -1;if _gcdc < 0||_gcdc > len (_dbdf ._daab )-1{return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064",pageNum );
};_efdc :=_dbdf .Reader .PageList [_gcdc ];field .P =_efdc .ToPdfObject ();if field .T ==nil ||field .T .String ()==""{field .T =_bgg .MakeString (_e .Sprintf ("\u0053\u0069\u0067n\u0061\u0074\u0075\u0072\u0065\u0020\u0025\u0064",pageNum ));};_efdc .AddAnnotation (field .PdfAnnotationWidget .PdfAnnotation );
if _dbdf ._fgbb ==_dbdf ._bded .AcroForm {_dbdf ._fgbb =_dbdf .Reader .AcroForm ;};_abcgc :=_dbdf ._fgbb ;if _abcgc ==nil {_abcgc =NewPdfAcroForm ();};_abcgc .SigFlags =_bgg .MakeInteger (3);_ecb :=append (_abcgc .AllFields (),field .PdfField );_abcgc .Fields =&_ecb ;
_dbdf .ReplaceAcroForm (_abcgc );_dbdf .UpdatePage (_efdc );_dbdf ._daab [_gcdc ]=_efdc ;if _ ,_dbac :=field .V .GetDocMDPPermission ();_dbac {_dbdf ._ddcg =NewPermissions (field .V );};return nil ;};func (_dgccd *PdfColorspaceSpecialPattern )String ()string {return "\u0050a\u0074\u0074\u0065\u0072\u006e";
};

// PdfActionImportData represents a importData action.
type PdfActionImportData struct{*PdfAction ;F *PdfFilespec ;};func _dgbec (_faec *_bgg .PdfObjectDictionary )(*PdfShadingType6 ,error ){_fbffe :=PdfShadingType6 {};_ggdc :=_faec .Get ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006f\u0072\u0064i\u006e\u0061\u0074\u0065");
if _ggdc ==nil {_dcf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064 \u0061\u0074\u0074\u0072\u0069\u0062\u0075t\u0065\u0020\u006d\u0069\u0073\u0073i\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065\u0072C\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065");
return nil ,ErrRequiredAttributeMissing ;};_fbgdf ,_afdda :=_ggdc .(*_bgg .PdfObjectInteger );if !_afdda {_dcf .Log .Debug ("\u0042\u0069\u0074\u0073\u0050e\u0072\u0043\u006f\u006f\u0072\u0064\u0069\u006e\u0061\u0074\u0065\u0020\u006eo\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025\u0054\u0029",_ggdc );
return nil ,_bgg .ErrTypeError ;};_fbffe .BitsPerCoordinate =_fbgdf ;_ggdc =_faec .Get ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074");if _ggdc ==nil {_dcf .Log .Debug ("\u0052e\u0071\u0075i\u0072\u0065\u0064\u0020a\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006d\u0069\u0073\u0073in\u0067\u003a\u0020B\u0069\u0074s\u0050\u0065\u0072\u0043\u006f\u006dp\u006f\u006ee\u006e\u0074");
return nil ,ErrRequiredAttributeMissing ;};_fbgdf ,_afdda =_ggdc .(*_bgg .PdfObjectInteger );if !_afdda {_dcf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065r \u0028\u0067\u006ft\u0020%\u0054\u0029",_ggdc );
return nil ,_bgg .ErrTypeError ;};_fbffe .BitsPerComponent =_fbgdf ;_ggdc =_faec .Get ("B\u0069\u0074\u0073\u0050\u0065\u0072\u0046\u006c\u0061\u0067");if _ggdc ==nil {_dcf .Log .Debug ("\u0052\u0065\u0071\u0075\u0069\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072i\u0062\u0075\u0074\u0065\u0020\u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0042\u0069\u0074\u0073\u0050\u0065r\u0046\u006c\u0061\u0067");
return nil ,ErrRequiredAttributeMissing ;};_fbgdf ,_afdda =_ggdc .(*_bgg .PdfObjectInteger );if !_afdda {_dcf .Log .Debug ("B\u0069\u0074\u0073\u0050\u0065\u0072F\u006c\u0061\u0067\u0020\u006e\u006ft\u0020\u0061\u006e\u0020\u0069\u006e\u0074e\u0067\u0065\u0072\u0020\u0028\u0067\u006f\u0074\u0020\u0025T\u0029",_ggdc );
return nil ,_bgg .ErrTypeError ;};_fbffe .BitsPerComponent =_fbgdf ;_ggdc =_faec .Get ("\u0044\u0065\u0063\u006f\u0064\u0065");if _ggdc ==nil {_dcf .Log .Debug ("\u0052\u0065\u0071ui\u0072\u0065\u0064\u0020\u0061\u0074\u0074\u0072\u0069b\u0075t\u0065 \u006di\u0073\u0073\u0069\u006e\u0067\u003a\u0020\u0044\u0065\u0063\u006f\u0064\u0065");
return nil ,ErrRequiredAttributeMissing ;};_ffdg ,_afdda :=_ggdc .(*_bgg .PdfObjectArray );if !_afdda {_dcf .Log .Debug ("\u0044\u0065\u0063\u006fd\u0065\u0020\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072a\u0079\u0020\u0028\u0067\u006f\u0074\u0020%\u0054\u0029",_ggdc );
return nil ,_bgg .ErrTypeError ;};_fbffe .Decode =_ffdg ;if _ebcg :=_faec .Get ("\u0046\u0075\u006e\u0063\u0074\u0069\u006f\u006e");_ebcg !=nil {_fbffe .Function =[]PdfFunction {};if _eccf ,_bbafg :=_ebcg .(*_bgg .PdfObjectArray );_bbafg {for _ ,_ddecg :=range _eccf .Elements (){_gegc ,_dafgge :=_aefac (_ddecg );
if _dafgge !=nil {_dcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_dafgge );return nil ,_dafgge ;};_fbffe .Function =append (_fbffe .Function ,_gegc );
};}else {_bbdge ,_aceb :=_aefac (_ebcg );if _aceb !=nil {_dcf .Log .Debug ("\u0045\u0072\u0072\u006f\u0072\u0020\u0070\u0061\u0072\u0073\u0069n\u0067\u0020\u0066\u0075\u006e\u0063\u0074\u0069\u006f\u006e:\u0020\u0025\u0076",_aceb );return nil ,_aceb ;};
_fbffe .Function =append (_fbffe .Function ,_bbdge );};};return &_fbffe ,nil ;};

// GetOutlines returns a high-level Outline object, based on the outline tree
// of the reader.
func (_fgbgg *PdfReader )GetOutlines ()(*Outline ,error ){if _fgbgg ==nil {return nil ,_ag .New ("\u0063\u0061n\u006e\u006f\u0074\u0020c\u0072\u0065a\u0074\u0065\u0020\u006f\u0075\u0074\u006c\u0069n\u0065\u0020\u0066\u0072\u006f\u006d\u0020\u006e\u0069\u006c\u0020\u0072e\u0061\u0064\u0065\u0072");
};_acgdcc :=_fgbgg .GetOutlineTree ();if _acgdcc ==nil {return nil ,_ag .New ("\u0074\u0068\u0065\u0020\u0073\u0070\u0065\u0063\u0069\u0066\u0069\u0065\u0064\u0020\u0072\u0065\u0061\u0064e\u0072\u0020\u0064\u006f\u0065\u0073\u0020n\u006f\u0074\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u006e\u0020o\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0074\u0072\u0065\u0065");
};var _egdde func (_bbaf *PdfOutlineTreeNode ,_ccda *[]*OutlineItem );_egdde =func (_fegbe *PdfOutlineTreeNode ,_dfbgfg *[]*OutlineItem ){if _fegbe ==nil {return ;};if _fegbe ._ebbf ==nil {_dcf .Log .Debug ("\u0045\u0052RO\u0052\u003a\u0020m\u0069\u0073\u0073\u0069ng \u006fut\u006c\u0069\u006e\u0065\u0020\u0065\u006etr\u0079\u0020\u0063\u006f\u006e\u0074\u0065x\u0074");
return ;};var _dggba *OutlineItem ;if _gcbcb ,_afdfg :=_fegbe ._ebbf .(*PdfOutlineItem );_afdfg {_egec :=_gcbcb .Dest ;if (_egec ==nil ||_bgg .IsNullObject (_egec ))&&_gcbcb .A !=nil {if _bbefe ,_bbeegf :=_bgg .GetDict (_gcbcb .A );_bbeegf {if _feefc ,_acdaf :=_bgg .GetArray (_bbefe .Get ("\u0044"));
_acdaf {_egec =_feefc ;}else {_ddggf ,_daadf :=_bgg .GetString (_bbefe .Get ("\u0044"));if !_daadf {return ;};_gabgb ,_daadf :=_fgbgg ._gaebb .Get ("\u004e\u0061\u006de\u0073").(*_bgg .PdfObjectReference );if !_daadf {return ;};_geeba ,_bdag :=_fgbgg ._ebdgc .LookupByReference (*_gabgb );
if _bdag !=nil {_dcf .Log .Debug ("\u0045\u0052\u0052O\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u006e\u0061\u006d\u0065\u0073\u0020\u0072\u0065\u0066\u0065\u0072e\u006e\u0063\u0065\u0020\u0028\u0025\u0073\u0029",_bdag .Error ());
return ;};_aeefb ,_daadf :=_geeba .(*_bgg .PdfIndirectObject );if !_daadf {return ;};_gbaae :=map[_bgg .PdfObject ]struct{}{};_bdag =_fgbgg .buildNameNodes (_aeefb ,_gbaae );if _bdag !=nil {_dcf .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0074\u006f\u0020\u0062\u0075\u0069\u006c\u0064\u0020\u006ea\u006d\u0065\u0020\u006e\u006fd\u0065\u0073 \u0028\u0025\u0073\u0029",_bdag .Error ());
return ;};for _cdbfe :=range _gbaae {_ecfc ,_cgcdf :=_bgg .GetDict (_cdbfe );if !_cgcdf {continue ;};_eddab ,_cgcdf :=_bgg .GetArray (_ecfc .Get ("\u004e\u0061\u006de\u0073"));if !_cgcdf {continue ;};for _accga ,_gbfbcb :=range _eddab .Elements (){switch _gbfbcb .(type ){case *_bgg .PdfObjectString :if _gbfbcb .String ()==_ddggf .String (){if _cfgb :=_eddab .Get (_accga +1);
_cfgb !=nil {if _aedcga ,_cgbfg :=_bgg .GetDict (_cfgb );_cgbfg {_egec =_aedcga .Get ("\u0044");break ;};};};};};};};};};var _faffc OutlineDest ;if _egec !=nil &&!_bgg .IsNullObject (_egec ){if _agea ,_abcae :=_aefgg (_egec ,_fgbgg );_abcae ==nil {_faffc =*_agea ;
}else {_dcf .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0063o\u0075\u006c\u0064 \u006e\u006f\u0074\u0020p\u0061\u0072\u0073\u0065\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065\u0020\u0064\u0065\u0073\u0074\u0020\u0028\u0025\u0076\u0029\u003a\u0020\u0025\u0076",_egec ,_abcae );
};};_dggba =NewOutlineItem (_gcbcb .Title .Decoded (),_faffc );*_dfbgfg =append (*_dfbgfg ,_dggba );if _gcbcb .Next !=nil {_egdde (_gcbcb .Next ,_dfbgfg );};};if _fegbe .First !=nil {if _dggba !=nil {_dfbgfg =&_dggba .Entries ;};_egdde (_fegbe .First ,_dfbgfg );
};};_bgada :=NewOutline ();_egdde (_acgdcc ,&_bgada .Entries );return _bgada ,nil ;};

// PdfShadingType7 is a Tensor-product patch mesh.
type PdfShadingType7 struct{*PdfShading ;BitsPerCoordinate *_bgg .PdfObjectInteger ;BitsPerComponent *_bgg .PdfObjectInteger ;BitsPerFlag *_bgg .PdfObjectInteger ;Decode *_bgg .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject implements interface PdfModel.
func (_eceag *PdfTransformParamsDocMDP )ToPdfObject ()_bgg .PdfObject {_faafd :=_bgg .MakeDict ();_faafd .SetIfNotNil ("\u0054\u0079\u0070\u0065",_eceag .Type );_faafd .SetIfNotNil ("\u0056",_eceag .V );_faafd .SetIfNotNil ("\u0050",_eceag .P );return _faafd ;
};

// NewPdfFontFromPdfObject loads a PdfFont from the dictionary `fontObj`.  If there is a problem an
// error is returned.
func NewPdfFontFromPdfObject (fontObj _bgg .PdfObject )(*PdfFont ,error ){return _bfac (fontObj ,true )};

// ToPdfObject implements interface PdfModel.
func (_cgd *PdfActionTrans )ToPdfObject ()_bgg .PdfObject {_cgd .PdfAction .ToPdfObject ();_ggc :=_cgd ._ddf ;_aag :=_ggc .PdfObject .(*_bgg .PdfObjectDictionary );_aag .SetIfNotNil ("\u0053",_bgg .MakeName (string (ActionTypeTrans )));_aag .SetIfNotNil ("\u0054\u0072\u0061n\u0073",_cgd .Trans );
return _ggc ;};func _ebfg (_ebbdaf _bgg .PdfObject )(*PdfColorspaceSpecialPattern ,error ){_dcf .Log .Trace ("\u004e\u0065\u0077\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020\u0043\u0053\u0020\u0066\u0072\u006fm\u0020\u006f\u0062\u006a\u003a\u0020\u0025\u0073\u0020\u0025\u0054",_ebbdaf .String (),_ebbdaf );
_ceeg :=NewPdfColorspaceSpecialPattern ();if _gdbcc ,_cgggb :=_ebbdaf .(*_bgg .PdfIndirectObject );_cgggb {_ceeg ._gfdg =_gdbcc ;};_ebbdaf =_bgg .TraceToDirectObject (_ebbdaf );if _fadad ,_bffb :=_ebbdaf .(*_bgg .PdfObjectName );_bffb {if *_fadad !="\u0050a\u0074\u0074\u0065\u0072\u006e"{return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");
};return _ceeg ,nil ;};_deaac ,_ebfda :=_ebbdaf .(*_bgg .PdfObjectArray );if !_ebfda {_dcf .Log .Error ("\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061t\u0074\u0065\u0072\u006e\u0020\u0043\u0053 \u004f\u0062\u006a\u0065\u0063\u0074\u003a\u0020\u0025\u0023\u0076",_ebbdaf );
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069d\u0020\u0050\u0061\u0074\u0074e\u0072n\u0020C\u0053\u0020\u006f\u0062\u006a\u0065\u0063t");};if _deaac .Len ()!=1&&_deaac .Len ()!=2{_dcf .Log .Error ("\u0049\u006ev\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079\u003a %\u0023\u0076",_deaac );
return nil ,_e .Errorf ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065r\u006e\u0020\u0043\u0053\u0020\u0061\u0072\u0072\u0061\u0079");};_ebbdaf =_deaac .Get (0);if _aabfa ,_ebba :=_ebbdaf .(*_bgg .PdfObjectName );_ebba {if *_aabfa !="\u0050a\u0074\u0074\u0065\u0072\u006e"{_dcf .Log .Error ("\u0049\u006e\u0076al\u0069\u0064\u0020\u0050\u0061\u0074\u0074\u0065\u0072n\u0020C\u0053 \u0061r\u0072\u0061\u0079\u0020\u006e\u0061\u006d\u0065\u003a\u0020\u0025\u0023\u0076",_aabfa );
return nil ,_e .Errorf ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u006e\u0061\u006d\u0065");};};if _deaac .Len ()> 1{_ebbdaf =_deaac .Get (1);_ebbdaf =_bgg .TraceToDirectObject (_ebbdaf );_gfde ,_cagcc :=NewPdfColorspaceFromPdfObject (_ebbdaf );if _cagcc !=nil {return nil ,_cagcc ;
};_ceeg .UnderlyingCS =_gfde ;};_dcf .Log .Trace ("R\u0065\u0074\u0075\u0072\u006e\u0069\u006e\u0067\u0020\u0050\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0077i\u0074\u0068\u0020\u0075\u006e\u0064\u0065\u0072\u006c\u0079in\u0067\u0020\u0063s\u003a \u0025\u0054",_ceeg .UnderlyingCS );
return _ceeg ,nil ;};

// GetNumComponents returns the number of color components (3 for RGB).
func (_eddg *PdfColorDeviceRGB )GetNumComponents ()int {return 3};

// OutlineDest represents the destination of an outline item.
// It holds the page and the position on the page an outline item points to.
type OutlineDest struct{PageObj *_bgg .PdfIndirectObject `json:"-"`;Page int64 `json:"page"`;Mode string `json:"mode"`;X float64 `json:"x"`;Y float64 `json:"y"`;Zoom float64 `json:"zoom"`;};

// ToPdfObject implements interface PdfModel.
func (_dfceb *PdfAnnotationSquiggly )ToPdfObject ()_bgg .PdfObject {_dfceb .PdfAnnotation .ToPdfObject ();_eda :=_dfceb ._gec ;_fda :=_eda .PdfObject .(*_bgg .PdfObjectDictionary );_dfceb .PdfAnnotationMarkup .appendToPdfDictionary (_fda );_fda .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0053\u0071\u0075\u0069\u0067\u0067\u006c\u0079"));
_fda .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_dfceb .QuadPoints );return _eda ;};

// GetContentStream returns the XObject Form's content stream.
func (_dagbgd *XObjectForm )GetContentStream ()([]byte ,error ){_beeba ,_ddggd :=_bgg .DecodeStream (_dagbgd ._eaeegc );if _ddggd !=nil {return nil ,_ddggd ;};return _beeba ,nil ;};

// String returns string value of output intent for given type
// ISO_19005-2 6.2.3: GTS_PDFA1 value should be used for PDF/A-1, A-2 and A-3 at least
func (_dcfab PdfOutputIntentType )String ()string {switch _dcfab {case PdfOutputIntentTypeA1 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA2 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeA3 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";
case PdfOutputIntentTypeA4 :return "\u0047T\u0053\u005f\u0050\u0044\u0046\u00411";case PdfOutputIntentTypeX :return "\u0047\u0054\u0053\u005f\u0050\u0044\u0046\u0058";default:return "\u0055N\u0044\u0045\u0046\u0049\u004e\u0045D";};};

// FontDescriptor returns font's PdfFontDescriptor. This may be a builtin descriptor for standard 14
// fonts but must be an explicit descriptor for other fonts.
func (_bacc *PdfFont )FontDescriptor ()*PdfFontDescriptor {if _bacc .baseFields ()._abdg !=nil {return _bacc .baseFields ()._abdg ;};if _ceeb :=_bacc ._efdec .getFontDescriptor ();_ceeb !=nil {return _ceeb ;};_dcf .Log .Error ("\u0041\u006cl \u0066\u006f\u006et\u0073\u0020\u0068\u0061ve \u0061 D\u0065\u0073\u0063\u0072\u0069\u0070\u0074or\u002e\u0020\u0066\u006f\u006e\u0074\u003d%\u0073",_bacc );
return nil ;};

// Enable LTV enables the specified signature. The signing certificate
// chain is extracted from the signature dictionary. Optionally, additional
// certificates can be specified through the `extraCerts` parameter.
// The LTV client attempts to build the certificate chain up to a trusted root
// by downloading any missing certificates.
func (_bfdfb *LTV )Enable (sig *PdfSignature ,extraCerts []*_dd .Certificate )error {if _ggbf :=_bfdfb .validateSig (sig );_ggbf !=nil {return _ggbf ;};_daecd ,_gceg :=_bfdfb .generateVRIKey (sig );if _gceg !=nil {return _gceg ;};if _ ,_abfda :=_bfdfb ._ebce .VRI [_daecd ];
_abfda &&_bfdfb .SkipExisting {return nil ;};_daabda ,_gceg :=sig .GetCerts ();if _gceg !=nil {return _gceg ;};return _bfdfb .enable (_daabda ,extraCerts ,_daecd );};

// PdfFieldChoice represents a choice field which includes scrollable list boxes and combo boxes.
type PdfFieldChoice struct{*PdfField ;Opt *_bgg .PdfObjectArray ;TI *_bgg .PdfObjectInteger ;I *_bgg .PdfObjectArray ;};func (_bddac *PdfWriter )writeObjectsInStreams (_bfbbb map[_bgg .PdfObject ]bool )error {for _ ,_ggefbb :=range _bddac ._eddge {if _fagef :=_bfbbb [_ggefbb ];
_fagef {continue ;};_ccgfg :=int64 (0);switch _fffcb :=_ggefbb .(type ){case *_bgg .PdfIndirectObject :_ccgfg =_fffcb .ObjectNumber ;case *_bgg .PdfObjectStream :_ccgfg =_fffcb .ObjectNumber ;case *_bgg .PdfObjectStreams :_ccgfg =_fffcb .ObjectNumber ;
default:_dcf .Log .Debug ("\u0045R\u0052\u004fR\u003a\u0020\u0055n\u0073\u0075\u0070\u0070\u006f\u0072\u0074e\u0064\u0020\u0074\u0079\u0070\u0065 \u0069\u006e\u0020\u0077\u0072\u0069\u0074\u0065\u0072\u0020\u006fb\u006a\u0065\u0063\u0074\u0073\u003a\u0020\u0025\u0054",_ggefbb );
return ErrTypeCheck ;};if _bddac ._dfade !=nil &&_ggefbb !=_bddac ._baefd {_ffagc :=_bddac ._dfade .Encrypt (_ggefbb ,_ccgfg ,0);if _ffagc !=nil {_dcf .Log .Debug ("\u0045\u0052R\u004f\u0052\u003a\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u0020\u0065\u006e\u0063\u0072\u0079\u0070\u0074\u0069\u006e\u0067\u0020(%\u0073\u0029",_ffagc );
return _ffagc ;};};_bddac .writeObject (int (_ccgfg ),_ggefbb );};return nil ;};type fontCommon struct{_dbbc string ;_dadgd string ;_afge string ;_fdded _bgg .PdfObject ;_ffed *_fbb .CMap ;_abdg *PdfFontDescriptor ;_dggfe int64 ;};

// ToPdfObject returns the PDF representation of the shading pattern.
func (_bacaf *PdfShadingPattern )ToPdfObject ()_bgg .PdfObject {_bacaf .PdfPattern .ToPdfObject ();_bdgcdc :=_bacaf .getDict ();if _bacaf .Shading !=nil {_bdgcdc .Set ("\u0053h\u0061\u0064\u0069\u006e\u0067",_bacaf .Shading .ToPdfObject ());};if _bacaf .Matrix !=nil {_bdgcdc .Set ("\u004d\u0061\u0074\u0072\u0069\u0078",_bacaf .Matrix );
};if _bacaf .ExtGState !=nil {_bdgcdc .Set ("\u0045x\u0074\u0047\u0053\u0074\u0061\u0074e",_bacaf .ExtGState );};return _bacaf ._aebfe ;};

// ToPdfObject implements interface PdfModel.
func (_edd *PdfAnnotationLink )ToPdfObject ()_bgg .PdfObject {_edd .PdfAnnotation .ToPdfObject ();_gged :=_edd ._gec ;_gggdf :=_gged .PdfObject .(*_bgg .PdfObjectDictionary );_gggdf .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u004c\u0069\u006e\u006b"));
if _edd ._fce !=nil &&_edd ._fce ._adc !=nil {_gggdf .Set ("\u0041",_edd ._fce ._adc .ToPdfObject ());}else if _edd .A !=nil {_gggdf .Set ("\u0041",_edd .A );};_gggdf .SetIfNotNil ("\u0044\u0065\u0073\u0074",_edd .Dest );_gggdf .SetIfNotNil ("\u0048",_edd .H );
_gggdf .SetIfNotNil ("\u0050\u0041",_edd .PA );_gggdf .SetIfNotNil ("\u0051\u0075\u0061\u0064\u0050\u006f\u0069\u006e\u0074\u0073",_edd .QuadPoints );_gggdf .SetIfNotNil ("\u0042\u0053",_edd .BS );return _gged ;};func _egcfe (_gbcf _bgg .PdfObject )(string ,error ){_gbcf =_bgg .TraceToDirectObject (_gbcf );
switch _ffgddg :=_gbcf .(type ){case *_bgg .PdfObjectString :return _ffgddg .Str (),nil ;case *_bgg .PdfObjectStream :_cabdc ,_fgeaa :=_bgg .DecodeStream (_ffgddg );if _fgeaa !=nil {return "",_fgeaa ;};return string (_cabdc ),nil ;};return "",_e .Errorf ("\u0069\u006e\u0076\u0061\u006ci\u0064\u0020\u0063\u006f\u006e\u0074\u0065\u006e\u0074\u0020\u0073\u0074\u0072e\u0061\u006d\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0068\u006f\u006c\u0064\u0065\u0072\u0020\u0028\u0025\u0054\u0029",_gbcf );
};type pdfFontType0 struct{fontCommon ;_ecea *_bgg .PdfIndirectObject ;_dfbdd _cc .TextEncoder ;Encoding _bgg .PdfObject ;DescendantFont *PdfFont ;_gdcdb *_fbb .CMap ;};

// PdfShadingType4 is a Free-form Gouraud-shaded triangle mesh.
type PdfShadingType4 struct{*PdfShading ;BitsPerCoordinate *_bgg .PdfObjectInteger ;BitsPerComponent *_bgg .PdfObjectInteger ;BitsPerFlag *_bgg .PdfObjectInteger ;Decode *_bgg .PdfObjectArray ;Function []PdfFunction ;};

// ToPdfObject implements interface PdfModel.
func (_dfa *PdfActionSound )ToPdfObject ()_bgg .PdfObject {_dfa .PdfAction .ToPdfObject ();_eafb :=_dfa ._ddf ;_gef :=_eafb .PdfObject .(*_bgg .PdfObjectDictionary );_gef .SetIfNotNil ("\u0053",_bgg .MakeName (string (ActionTypeSound )));_gef .SetIfNotNil ("\u0053\u006f\u0075n\u0064",_dfa .Sound );
_gef .SetIfNotNil ("\u0056\u006f\u006c\u0075\u006d\u0065",_dfa .Volume );_gef .SetIfNotNil ("S\u0079\u006e\u0063\u0068\u0072\u006f\u006e\u006f\u0075\u0073",_dfa .Synchronous );_gef .SetIfNotNil ("\u0052\u0065\u0070\u0065\u0061\u0074",_dfa .Repeat );_gef .SetIfNotNil ("\u004d\u0069\u0078",_dfa .Mix );
return _eafb ;};func (_fcfa *pdfFontType0 )bytesToCharcodes (_ebdaa []byte )([]_cc .CharCode ,bool ){if _fcfa ._gdcdb ==nil {return nil ,false ;};_gbgga ,_efecg :=_fcfa ._gdcdb .BytesToCharcodes (_ebdaa );if !_efecg {return nil ,false ;};_cafb :=make ([]_cc .CharCode ,len (_gbgga ));
for _cddba ,_eecgf :=range _gbgga {_cafb [_cddba ]=_cc .CharCode (_eecgf );};return _cafb ,true ;};func _dfgda ()_g .Time {_abfga .Lock ();defer _abfga .Unlock ();return _bgebb };

// ToPdfObject implements interface PdfModel.
func (_cdc *PdfActionSubmitForm )ToPdfObject ()_bgg .PdfObject {_cdc .PdfAction .ToPdfObject ();_dfd :=_cdc ._ddf ;_bgf :=_dfd .PdfObject .(*_bgg .PdfObjectDictionary );_bgf .SetIfNotNil ("\u0053",_bgg .MakeName (string (ActionTypeSubmitForm )));if _cdc .F !=nil {_bgf .Set ("\u0046",_cdc .F .ToPdfObject ());
};_bgf .SetIfNotNil ("\u0046\u0069\u0065\u006c\u0064\u0073",_cdc .Fields );_bgf .SetIfNotNil ("\u0046\u006c\u0061g\u0073",_cdc .Flags );return _dfd ;};

// ToInteger convert to an integer format.
func (_aadd *PdfColorCalGray )ToInteger (bits int )uint32 {_feeb :=_db .Pow (2,float64 (bits ))-1;return uint32 (_feeb *_aadd .Val ());};

// PdfActionLaunch represents a launch action.
type PdfActionLaunch struct{*PdfAction ;F *PdfFilespec ;Win _bgg .PdfObject ;Mac _bgg .PdfObject ;Unix _bgg .PdfObject ;NewWindow _bgg .PdfObject ;};

// RemovePage removes a page by number.
func (_abcf *PdfAppender )RemovePage (pageNum int ){_dgdd :=pageNum -1;_abcf ._daab =append (_abcf ._daab [0:_dgdd ],_abcf ._daab [pageNum :]...);};

// ConvertToBinary converts current image into binary (bi-level) format.
// Binary images are composed of single bits per pixel (only black or white).
// If provided image has more color components, then it would be converted into binary image using
// histogram auto threshold function.
func (_dafa *Image )ConvertToBinary ()error {if _dafa .ColorComponents ==1&&_dafa .BitsPerComponent ==1{return nil ;};_eegcc ,_caefb :=_dafa .ToGoImage ();if _caefb !=nil {return _caefb ;};_eaed ,_caefb :=_dcg .MonochromeConverter .Convert (_eegcc );if _caefb !=nil {return _caefb ;
};_dafa .Data =_eaed .Base ().Data ;_dafa ._bfcec ,_caefb =_dcg .ScaleAlphaToMonochrome (_dafa ._bfcec ,int (_dafa .Width ),int (_dafa .Height ));if _caefb !=nil {return _caefb ;};_dafa .BitsPerComponent =1;_dafa .ColorComponents =1;_dafa ._ddaa =nil ;
return nil ;};

// ApplyStandard is used to apply changes required on the document to match the rules required by the input standard.
// The writer's content would be changed after all the document parts are already established during the Write method.
// A good example of the StandardApplier could be a PDF/A Profile (i.e.: pdfa.Profile1A). In such a case PdfWriter would
// set up all rules required by that Profile.
func (_afafe *PdfWriter )ApplyStandard (optimizer StandardApplier ){_afafe ._dabfc =optimizer };

// ToPdfObject returns a stream object.
func (_geebb *XObjectImage )ToPdfObject ()_bgg .PdfObject {_edabg :=_geebb ._cfcfd ;_abaf :=_edabg .PdfObjectDictionary ;if _geebb .Filter !=nil {_abaf =_geebb .Filter .MakeStreamDict ();_edabg .PdfObjectDictionary =_abaf ;};_abaf .Set ("\u0054\u0079\u0070\u0065",_bgg .MakeName ("\u0058O\u0062\u006a\u0065\u0063\u0074"));
_abaf .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0049\u006d\u0061g\u0065"));_abaf .Set ("\u0057\u0069\u0064t\u0068",_bgg .MakeInteger (*(_geebb .Width )));_abaf .Set ("\u0048\u0065\u0069\u0067\u0068\u0074",_bgg .MakeInteger (*(_geebb .Height )));
if _geebb .BitsPerComponent !=nil {_abaf .Set ("\u0042\u0069t\u0073\u0050\u0065r\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074",_bgg .MakeInteger (*(_geebb .BitsPerComponent )));};if _geebb .ColorSpace !=nil {_abaf .SetIfNotNil ("\u0043\u006f\u006c\u006f\u0072\u0053\u0070\u0061\u0063\u0065",_geebb .ColorSpace .ToPdfObject ());
};_abaf .SetIfNotNil ("\u0049\u006e\u0074\u0065\u006e\u0074",_geebb .Intent );_abaf .SetIfNotNil ("\u0049m\u0061\u0067\u0065\u004d\u0061\u0073k",_geebb .ImageMask );_abaf .SetIfNotNil ("\u004d\u0061\u0073\u006b",_geebb .Mask );_bbabe :=_abaf .Get ("\u0044\u0065\u0063\u006f\u0064\u0065")!=nil ;
if _geebb .Decode ==nil &&_bbabe {_abaf .Remove ("\u0044\u0065\u0063\u006f\u0064\u0065");}else if _geebb .Decode !=nil {_abaf .Set ("\u0044\u0065\u0063\u006f\u0064\u0065",_geebb .Decode );};_abaf .SetIfNotNil ("I\u006e\u0074\u0065\u0072\u0070\u006f\u006c\u0061\u0074\u0065",_geebb .Interpolate );
_abaf .SetIfNotNil ("\u0041\u006c\u0074e\u0072\u006e\u0061\u0074\u0069\u0076\u0065\u0073",_geebb .Alternatives );_abaf .SetIfNotNil ("\u0053\u004d\u0061s\u006b",_geebb .SMask );_abaf .SetIfNotNil ("S\u004d\u0061\u0073\u006b\u0049\u006e\u0044\u0061\u0074\u0061",_geebb .SMaskInData );
_abaf .SetIfNotNil ("\u004d\u0061\u0074t\u0065",_geebb .Matte );_abaf .SetIfNotNil ("\u004e\u0061\u006d\u0065",_geebb .Name );_abaf .SetIfNotNil ("\u0053\u0074\u0072u\u0063\u0074\u0050\u0061\u0072\u0065\u006e\u0074",_geebb .StructParent );_abaf .SetIfNotNil ("\u0049\u0044",_geebb .ID );
_abaf .SetIfNotNil ("\u004f\u0050\u0049",_geebb .OPI );_abaf .SetIfNotNil ("\u004d\u0065\u0074\u0061\u0064\u0061\u0074\u0061",_geebb .Metadata );_abaf .SetIfNotNil ("\u004f\u0043",_geebb .OC );_abaf .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bgg .MakeInteger (int64 (len (_geebb .Stream ))));
_edabg .Stream =_geebb .Stream ;return _edabg ;};

// PdfDate represents a date, which is a PDF string of the form:
// (D:YYYYMMDDHHmmSSOHH'mm)
type PdfDate struct{_efgaf int64 ;_dbbdb int64 ;_aeafb int64 ;_bcfac int64 ;_aacdg int64 ;_ebbae int64 ;_eefc byte ;_geeab int64 ;_cegbf int64 ;};

// AddPage adds a page to the PDF file. The new page should be an indirect object.
func (_ebgbb *PdfWriter )AddPage (page *PdfPage )error {const _bdbdf ="\u006d\u006f\u0064el\u003a\u0050\u0064\u0066\u0057\u0072\u0069\u0074\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_bccb (page );_gecgd :=page .ToPdfObject ();_dcf .Log .Trace ("\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d");
_dcf .Log .Trace ("\u0041p\u0070\u0065\u006e\u0064i\u006e\u0067\u0020\u0074\u006f \u0070a\u0067e\u0020\u006c\u0069\u0073\u0074\u0020\u0025T",_gecgd );_gefd ,_cfbaa :=_bgg .GetIndirect (_gecgd );if !_cfbaa {return _ag .New ("\u0070\u0061\u0067\u0065\u0020\u0073h\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0061\u006e\u0020\u0069\u006ed\u0069\u0072\u0065\u0063\u0074\u0020\u006fb\u006a\u0065\u0063\u0074");
};_dcf .Log .Trace ("\u0025\u0073",_gefd );_dcf .Log .Trace ("\u0025\u0073",_gefd .PdfObject );_deaeaf ,_cfbaa :=_bgg .GetDict (_gefd .PdfObject );if !_cfbaa {return _ag .New ("\u0070\u0061\u0067e \u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0073\u0068o\u0075l\u0064 \u0062e\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_degcbb ,_cfbaa :=_bgg .GetName (_deaeaf .Get ("\u0054\u0079\u0070\u0065"));if !_cfbaa {return _e .Errorf ("\u0070\u0061\u0067\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0068\u0061\u0076\u0065\u0020\u0061\u0020\u0054y\u0070\u0065\u0020\u006b\u0065\u0079\u0020\u0077\u0069t\u0068\u0020\u0061\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006f\u0066\u0020t\u0079\u0070\u0065\u0020\u006e\u0061m\u0065\u0020\u0028%\u0054\u0029",_deaeaf .Get ("\u0054\u0079\u0070\u0065"));
};if _degcbb .String ()!="\u0050\u0061\u0067\u0065"{return _ag .New ("\u0066\u0069e\u006c\u0064\u0020\u0054\u0079\u0070\u0065\u0020\u0021\u003d\u0020\u0050\u0061\u0067\u0065\u0020\u0028\u0052\u0065\u0071\u0075\u0069re\u0064\u0029");};_bgdef :=[]_bgg .PdfObjectName {"\u0052e\u0073\u006f\u0075\u0072\u0063\u0065s","\u004d\u0065\u0064\u0069\u0061\u0042\u006f\u0078","\u0043r\u006f\u0070\u0042\u006f\u0078","\u0052\u006f\u0074\u0061\u0074\u0065"};
_ceagb ,_aggc :=_bgg .GetIndirect (_deaeaf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));_dcf .Log .Trace ("P\u0061g\u0065\u0020\u0050\u0061\u0072\u0065\u006e\u0074:\u0020\u0025\u0054\u0020(%\u0076\u0029",_deaeaf .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"),_aggc );
for _aggc {_dcf .Log .Trace ("\u0050a\u0067e\u0020\u0050\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_ceagb );_cbed ,_aefggf :=_bgg .GetDict (_ceagb .PdfObject );if !_aefggf {return _ag .New ("i\u006e\u0076\u0061\u006cid\u0020P\u0061\u0072\u0065\u006e\u0074 \u006f\u0062\u006a\u0065\u0063\u0074");
};for _ ,_fedbb :=range _bgdef {_dcf .Log .Trace ("\u0046\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_fedbb );if _deaeaf .Get (_fedbb )!=nil {_dcf .Log .Trace ("\u002d \u0070a\u0067\u0065\u0020\u0068\u0061s\u0020\u0061l\u0072\u0065\u0061\u0064\u0079");
continue ;};if _adcgg :=_cbed .Get (_fedbb );_adcgg !=nil {_dcf .Log .Trace ("\u0049\u006e\u0068\u0065ri\u0074\u0069\u006e\u0067\u0020\u0066\u0069\u0065\u006c\u0064\u0020\u0025\u0073",_fedbb );_deaeaf .Set (_fedbb ,_adcgg );};};_ceagb ,_aggc =_bgg .GetIndirect (_cbed .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));
_dcf .Log .Trace ("\u004ee\u0078t\u0020\u0070\u0061\u0072\u0065\u006e\u0074\u003a\u0020\u0025\u0054",_cbed .Get ("\u0050\u0061\u0072\u0065\u006e\u0074"));};_dcf .Log .Trace ("\u0054\u0072\u0061\u0076\u0065\u0072\u0073\u0061\u006c \u0064\u006f\u006e\u0065");
_deaeaf .Set ("\u0050\u0061\u0072\u0065\u006e\u0074",_ebgbb ._deeaf );_gefd .PdfObject =_deaeaf ;_bcced ,_cfbaa :=_bgg .GetDict (_ebgbb ._deeaf .PdfObject );if !_cfbaa {return _ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0050\u0061g\u0065\u0073\u0020\u006f\u0062\u006a\u0020(\u006e\u006f\u0074\u0020\u0061\u0020\u0064\u0069\u0063\u0074\u0029");
};_bcdbc ,_cfbaa :=_bgg .GetArray (_bcced .Get ("\u004b\u0069\u0064\u0073"));if !_cfbaa {return _ag .New ("\u0069\u006ev\u0061\u006c\u0069\u0064 \u0050\u0061g\u0065\u0073\u0020\u004b\u0069\u0064\u0073\u0020o\u0062\u006a\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0061r\u0072\u0061\u0079\u0029");
};_bcdbc .Append (_gefd );_ebgbb ._bgab [_deaeaf ]=struct{}{};_decce ,_cfbaa :=_bgg .GetInt (_bcced .Get ("\u0043\u006f\u0075n\u0074"));if !_cfbaa {return _ag .New ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064 \u0050\u0061\u0067e\u0073\u0020\u0043\u006fu\u006e\u0074\u0020\u006f\u0062\u006a\u0065\u0063\u0074\u0020\u0028\u006e\u006f\u0074\u0020\u0061\u006e\u0020\u0069\u006e\u0074\u0065\u0067\u0065\u0072\u0029");
};*_decce =*_decce +1;if page ._afbaa ==nil {_gagde :=_dba .Track (_ebgbb ._dffcg ,_bdbdf );if _gagde !=nil {return _gagde ;};}else {_egedc :=_dba .Track (page ._afbaa ._eegac ,_bdbdf );if _egedc !=nil {return _egedc ;};};_ebgbb .addObject (_gefd );_bgbae :=_ebgbb .addObjects (_deaeaf );
if _bgbae !=nil {return _bgbae ;};return nil ;};

// Initialize initializes the PdfSignature.
func (_bdaadd *PdfSignature )Initialize ()error {if _bdaadd .Handler ==nil {return _ag .New ("\u0073\u0069\u0067n\u0061\u0074\u0075\u0072e\u0020\u0068\u0061\u006e\u0064\u006c\u0065r\u0020\u0063\u0061\u006e\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u006e\u0069\u006c");
};return _bdaadd .Handler .InitSignature (_bdaadd );};

// Items returns all children outline items.
func (_afca *OutlineItem )Items ()[]*OutlineItem {return _afca .Entries };

// NewPdfAnnotationRichMedia returns a new rich media annotation.
func NewPdfAnnotationRichMedia ()*PdfAnnotationRichMedia {_eagc :=NewPdfAnnotation ();_fea :=&PdfAnnotationRichMedia {};_fea .PdfAnnotation =_eagc ;_eagc .SetContext (_fea );return _fea ;};func (_agcfg *pdfFontSimple )getFontDescriptor ()*PdfFontDescriptor {if _cbbaf :=_agcfg ._abdg ;
_cbbaf !=nil {return _cbbaf ;};return _agcfg ._dcbg ;};

// NewOutlineBookmark returns an initialized PdfOutlineItem for a given bookmark title and page.
func NewOutlineBookmark (title string ,page *_bgg .PdfIndirectObject )*PdfOutlineItem {_dabf :=PdfOutlineItem {};_dabf ._ebbf =&_dabf ;_dabf .Title =_bgg .MakeString (title );_fgdde :=_bgg .MakeArray ();_fgdde .Append (page );_fgdde .Append (_bgg .MakeName ("\u0046\u0069\u0074"));
_dabf .Dest =_fgdde ;return &_dabf ;};

// ToPdfObject implements interface PdfModel.
func (_fegeg *PdfAnnotationFileAttachment )ToPdfObject ()_bgg .PdfObject {_fegeg .PdfAnnotation .ToPdfObject ();_fbcg :=_fegeg ._gec ;_eegb :=_fbcg .PdfObject .(*_bgg .PdfObjectDictionary );_fegeg .PdfAnnotationMarkup .appendToPdfDictionary (_eegb );_eegb .SetIfNotNil ("\u0053u\u0062\u0074\u0079\u0070\u0065",_bgg .MakeName ("\u0046\u0069\u006c\u0065\u0041\u0074\u0074\u0061\u0063h\u006d\u0065\u006e\u0074"));
_eegb .SetIfNotNil ("\u0046\u0053",_fegeg .FS );_eegb .SetIfNotNil ("\u004e\u0061\u006d\u0065",_fegeg .Name );return _fbcg ;};func (_eafc *PdfReader )newPdfAnnotationPrinterMarkFromDict (_ffgg *_bgg .PdfObjectDictionary )(*PdfAnnotationPrinterMark ,error ){_ceee :=PdfAnnotationPrinterMark {};
_ceee .MN =_ffgg .Get ("\u004d\u004e");return &_ceee ,nil ;};

// NewPdfAcroForm returns a new PdfAcroForm with an intialized container (indirect object).
func NewPdfAcroForm ()*PdfAcroForm {return &PdfAcroForm {Fields :&[]*PdfField {},_gfffc :_bgg .MakeIndirectObject (_bgg .MakeDict ())};};func (_cfe *PdfReader )newPdfAnnotationProjectionFromDict (_bcde *_bgg .PdfObjectDictionary )(*PdfAnnotationProjection ,error ){_dabg :=&PdfAnnotationProjection {};
_ceb ,_daaec :=_cfe .newPdfAnnotationMarkupFromDict (_bcde );if _daaec !=nil {return nil ,_daaec ;};_dabg .PdfAnnotationMarkup =_ceb ;return _dabg ,nil ;};

// NewPdfSignatureReferenceDocMDP returns PdfSignatureReference for the transformParams.
func NewPdfSignatureReferenceDocMDP (transformParams *PdfTransformParamsDocMDP )*PdfSignatureReference {return &PdfSignatureReference {Type :_bgg .MakeName ("\u0053\u0069\u0067\u0052\u0065\u0066"),TransformMethod :_bgg .MakeName ("\u0044\u006f\u0063\u004d\u0044\u0050"),TransformParams :transformParams .ToPdfObject ()};
};func _faaf (_gfad *PdfPage )map[_bgg .PdfObjectName ]_bgg .PdfObject {_bdac :=make (map[_bgg .PdfObjectName ]_bgg .PdfObject );if _gfad .Resources ==nil {return _bdac ;};if _gfad .Resources .Font !=nil {if _cbdc ,_efad :=_bgg .GetDict (_gfad .Resources .Font );
_efad {for _ ,_dede :=range _cbdc .Keys (){_bdac [_dede ]=_cbdc .Get (_dede );};};};if _gfad .Resources .ExtGState !=nil {if _abed ,_bcad :=_bgg .GetDict (_gfad .Resources .ExtGState );_bcad {for _ ,_cebf :=range _abed .Keys (){_bdac [_cebf ]=_abed .Get (_cebf );
};};};if _gfad .Resources .XObject !=nil {if _adabd ,_fgdb :=_bgg .GetDict (_gfad .Resources .XObject );_fgdb {for _ ,_aabg :=range _adabd .Keys (){_bdac [_aabg ]=_adabd .Get (_aabg );};};};if _gfad .Resources .Pattern !=nil {if _cbcee ,_ccaf :=_bgg .GetDict (_gfad .Resources .Pattern );
_ccaf {for _ ,_bfdg :=range _cbcee .Keys (){_bdac [_bfdg ]=_cbcee .Get (_bfdg );};};};if _gfad .Resources .Shading !=nil {if _bebc ,_dccf :=_bgg .GetDict (_gfad .Resources .Shading );_dccf {for _ ,_eaba :=range _bebc .Keys (){_bdac [_eaba ]=_bebc .Get (_eaba );
};};};if _gfad .Resources .ProcSet !=nil {if _fafe ,_ffeg :=_bgg .GetDict (_gfad .Resources .ProcSet );_ffeg {for _ ,_aefg :=range _fafe .Keys (){_bdac [_aefg ]=_fafe .Get (_aefg );};};};if _gfad .Resources .Properties !=nil {if _gccc ,_aaeaa :=_bgg .GetDict (_gfad .Resources .Properties );
_aaeaa {for _ ,_bggf :=range _gccc .Keys (){_bdac [_bggf ]=_gccc .Get (_bggf );};};};return _bdac ;};

// ToPdfObject returns the PDF representation of the function.
func (_fabdd *PdfFunctionType0 )ToPdfObject ()_bgg .PdfObject {if _fabdd ._eada ==nil {_fabdd ._eada =&_bgg .PdfObjectStream {};};_bdebg :=_bgg .MakeDict ();_bdebg .Set ("\u0046\u0075\u006ec\u0074\u0069\u006f\u006e\u0054\u0079\u0070\u0065",_bgg .MakeInteger (0));
_gbab :=&_bgg .PdfObjectArray {};for _ ,_gcda :=range _fabdd .Domain {_gbab .Append (_bgg .MakeFloat (_gcda ));};_bdebg .Set ("\u0044\u006f\u006d\u0061\u0069\u006e",_gbab );_gcea :=&_bgg .PdfObjectArray {};for _ ,_ecegd :=range _fabdd .Range {_gcea .Append (_bgg .MakeFloat (_ecegd ));
};_bdebg .Set ("\u0052\u0061\u006eg\u0065",_gcea );_gcfca :=&_bgg .PdfObjectArray {};for _ ,_cbadg :=range _fabdd .Size {_gcfca .Append (_bgg .MakeInteger (int64 (_cbadg )));};_bdebg .Set ("\u0053\u0069\u007a\u0065",_gcfca );_bdebg .Set ("\u0042\u0069\u0074\u0073\u0050\u0065\u0072\u0053\u0061\u006d\u0070\u006c\u0065",_bgg .MakeInteger (int64 (_fabdd .BitsPerSample )));
if _fabdd .Order !=1{_bdebg .Set ("\u004f\u0072\u0064e\u0072",_bgg .MakeInteger (int64 (_fabdd .Order )));};_bdebg .Set ("\u004c\u0065\u006e\u0067\u0074\u0068",_bgg .MakeInteger (int64 (len (_fabdd ._fdgca ))));_fabdd ._eada .Stream =_fabdd ._fdgca ;_fabdd ._eada .PdfObjectDictionary =_bdebg ;
return _fabdd ._eada ;};func (_afed *PdfFont )baseFields ()*fontCommon {if _afed ._efdec ==nil {_dcf .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0062\u0061\u0073\u0065\u0046\u0069\u0065l\u0064s\u002e \u0063o\u006e\u0074\u0065\u0078\u0074\u0020\u0069\u0073\u0020\u006e\u0069\u006c\u002e");
return nil ;};return _afed ._efdec .baseFields ();};

// GetCapHeight returns the CapHeight of the font `descriptor`.
func (_aabbg *PdfFontDescriptor )GetCapHeight ()(float64 ,error ){return _bgg .GetNumberAsFloat (_aabbg .CapHeight );};

// ImageToRGB converts an image with samples in Separation CS to an image with samples specified in
// DeviceRGB CS.
func (_ccab *PdfColorspaceSpecialSeparation )ImageToRGB (img Image )(Image ,error ){_bcgae :=_ceg .NewReader (img .getBase ());_dccbc :=_dcg .NewImageBase (int (img .Width ),int (img .Height ),int (img .BitsPerComponent ),_ccab .AlternateSpace .GetNumComponents (),nil ,img ._bfcec ,nil );
_egeg :=_ceg .NewWriter (_dccbc );_dfbg :=_db .Pow (2,float64 (img .BitsPerComponent ))-1;_dcf .Log .Trace ("\u0053\u0065\u0070a\u0072\u0061\u0074\u0069\u006f\u006e\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u0073\u0070\u0061\u0063\u0065\u0020\u002d\u003e\u0020\u0054\u006f\u0052\u0047\u0042\u0020\u0063o\u006e\u0076\u0065\u0072\u0073\u0069\u006f\u006e");
_dcf .Log .Trace ("\u0054i\u006et\u0054\u0072\u0061\u006e\u0073f\u006f\u0072m\u003a\u0020\u0025\u002b\u0076",_ccab .TintTransform );_cagf :=_ccab .AlternateSpace .DecodeArray ();var (_dgbfe uint32 ;_fbbb error ;);for {_dgbfe ,_fbbb =_bcgae .ReadSample ();
if _fbbb ==_gb .EOF {break ;};if _fbbb !=nil {return img ,_fbbb ;};_gfacb :=float64 (_dgbfe )/_dfbg ;_abcd ,_cfgd :=_ccab .TintTransform .Evaluate ([]float64 {_gfacb });if _cfgd !=nil {return img ,_cfgd ;};for _cdfb ,_cfcg :=range _abcd {_dfcf :=_dcg .LinearInterpolate (_cfcg ,_cagf [_cdfb *2],_cagf [_cdfb *2+1],0,1);
if _cfgd =_egeg .WriteSample (uint32 (_dfcf *_dfbg ));_cfgd !=nil {return img ,_cfgd ;};};};return _ccab .AlternateSpace .ImageToRGB (_ddccc (&_dccbc ));};

// GetDocMDPPermission returns the DocMDP level of the restrictions
func (_fddcd *PdfSignature )GetDocMDPPermission ()(_bg .DocMDPPermission ,bool ){for _ ,_fdefa :=range _fddcd .Reference .Elements (){if _cgaeeb ,_fdceg :=_bgg .GetDict (_fdefa );_fdceg {if _ggddc ,_efdcab :=_bgg .GetNameVal (_cgaeeb .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u004d\u0065\u0074\u0068\u006f\u0064"));
_efdcab &&_ggddc =="\u0044\u006f\u0063\u004d\u0044\u0050"{if _acfe ,_eabee :=_bgg .GetDict (_cgaeeb .Get ("\u0054r\u0061n\u0073\u0066\u006f\u0072\u006d\u0050\u0061\u0072\u0061\u006d\u0073"));_eabee {if P ,_fgeg :=_bgg .GetIntVal (_acfe .Get ("\u0050"));
_fgeg {return _bg .DocMDPPermission (P ),true ;};};};};};return 0,false ;};

// ReaderToWriterOpts options used to generate a PdfWriter.
type ReaderToWriterOpts struct{SkipAcroForm bool ;SkipInfo bool ;SkipNameDictionary bool ;SkipNamedDests bool ;SkipOCProperties bool ;SkipOutlines bool ;SkipPageLabels bool ;SkipRotation bool ;SkipMetadata bool ;PageProcessCallback PageProcessCallback ;


// Deprecated: will be removed in v4. Use PageProcessCallback instead.
PageCallback PageCallback ;};

// SetAction sets the PDF action for the annotation link.
func (_cgaf *PdfAnnotationLink )SetAction (action *PdfAction ){_cgaf ._fce =action ;if action ==nil {_cgaf .A =nil ;};};func (_gga *PdfReader )newPdfActionURIFromDict (_bad *_bgg .PdfObjectDictionary )(*PdfActionURI ,error ){return &PdfActionURI {URI :_bad .Get ("\u0055\u0052\u0049"),IsMap :_bad .Get ("\u0049\u0073\u004da\u0070")},nil ;
};

// NewReaderOpts generates a default `ReaderOpts` instance.
func NewReaderOpts ()*ReaderOpts {return &ReaderOpts {Password :"",LazyLoad :true }};

// NewPdfAction returns an initialized generic PDF action model.
func NewPdfAction ()*PdfAction {_ga :=&PdfAction {};_ga ._ddf =_bgg .MakeIndirectObject (_bgg .MakeDict ());return _ga ;};

// ColorToRGB converts a CalGray color to an RGB color.
func (_caec *PdfColorspaceCalGray )ColorToRGB (color PdfColor )(PdfColor ,error ){_bccg ,_gcfc :=color .(*PdfColorCalGray );if !_gcfc {_dcf .Log .Debug ("\u0049n\u0070\u0075\u0074\u0020\u0063\u006f\u006c\u006f\u0072\u0020\u006eo\u0074\u0020\u0063\u0061\u006c\u0020\u0067\u0072\u0061\u0079");
return nil ,_ag .New ("\u0074\u0079p\u0065\u0020\u0063h\u0065\u0063\u006b\u0020\u0065\u0072\u0072\u006f\u0072");};ANorm :=_bccg .Val ();X :=_caec .WhitePoint [0]*_db .Pow (ANorm ,_caec .Gamma );Y :=_caec .WhitePoint [1]*_db .Pow (ANorm ,_caec .Gamma );
Z :=_caec .WhitePoint [2]*_db .Pow (ANorm ,_caec .Gamma );_daec :=3.240479*X +-1.537150*Y +-0.498535*Z ;_agade :=-0.969256*X +1.875992*Y +0.041556*Z ;_afeg :=0.055648*X +-0.204043*Y +1.057311*Z ;_daec =_db .Min (_db .Max (_daec ,0),1.0);_agade =_db .Min (_db .Max (_agade ,0),1.0);
_afeg =_db .Min (_db .Max (_afeg ,0),1.0);return NewPdfColorDeviceRGB (_daec ,_agade ,_afeg ),nil ;};

// AddPages adds pages to be appended to the end of the source PDF.
func (_dfbdf *PdfAppender )AddPages (pages ...*PdfPage ){for _ ,_edg :=range pages {_edg =_edg .Duplicate ();_bccb (_edg );_dfbdf ._daab =append (_dfbdf ._daab ,_edg );};};

// NewPdfColorspaceFromPdfObject loads a PdfColorspace from a PdfObject.  Returns an error if there is
// a failure in loading.
func NewPdfColorspaceFromPdfObject (obj _bgg .PdfObject )(PdfColorspace ,error ){if obj ==nil {return nil ,nil ;};var _eade *_bgg .PdfIndirectObject ;var _eead *_bgg .PdfObjectName ;var _cggde *_bgg .PdfObjectArray ;if _dcfac ,_ccga :=obj .(*_bgg .PdfIndirectObject );
_ccga {_eade =_dcfac ;};obj =_bgg .TraceToDirectObject (obj );switch _baefe :=obj .(type ){case *_bgg .PdfObjectArray :_cggde =_baefe ;case *_bgg .PdfObjectName :_eead =_baefe ;};if _eead !=nil {switch *_eead {case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":return NewPdfColorspaceDeviceGray (),nil ;
case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":return NewPdfColorspaceDeviceRGB (),nil ;case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":return NewPdfColorspaceDeviceCMYK (),nil ;case "\u0050a\u0074\u0074\u0065\u0072\u006e":return NewPdfColorspaceSpecialPattern (),nil ;
default:_dcf .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020c\u006fl\u006f\u0072\u0073\u0070\u0061\u0063\u0065 \u0025\u0073",*_eead );return nil ,_ecaa ;};};if _cggde !=nil &&_cggde .Len ()> 0{var _cgba _bgg .PdfObject =_eade ;
if _eade ==nil {_cgba =_cggde ;};if _agcd ,_fbda :=_bgg .GetName (_cggde .Get (0));_fbda {switch _agcd .String (){case "\u0044\u0065\u0076\u0069\u0063\u0065\u0047\u0072\u0061\u0079":if _cggde .Len ()==1{return NewPdfColorspaceDeviceGray (),nil ;};case "\u0044e\u0076\u0069\u0063\u0065\u0052\u0047B":if _cggde .Len ()==1{return NewPdfColorspaceDeviceRGB (),nil ;
};case "\u0044\u0065\u0076\u0069\u0063\u0065\u0043\u004d\u0059\u004b":if _cggde .Len ()==1{return NewPdfColorspaceDeviceCMYK (),nil ;};case "\u0043a\u006c\u0047\u0072\u0061\u0079":return _bagg (_cgba );case "\u0043\u0061\u006c\u0052\u0047\u0042":return _gaage (_cgba );
case "\u004c\u0061\u0062":return _fegf (_cgba );case "\u0049\u0043\u0043\u0042\u0061\u0073\u0065\u0064":return _dggf (_cgba );case "\u0050a\u0074\u0074\u0065\u0072\u006e":return _ebfg (_cgba );case "\u0049n\u0064\u0065\u0078\u0065\u0064":return _gfbdd (_cgba );
case "\u0053\u0065\u0070\u0061\u0072\u0061\u0074\u0069\u006f\u006e":return _abae (_cgba );case "\u0044e\u0076\u0069\u0063\u0065\u004e":return _dcbbb (_cgba );default:_dcf .Log .Debug ("A\u0072\u0072\u0061\u0079\u0020\u0077i\u0074\u0068\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u006e\u0061m\u0065:\u0020\u0025\u0073",*_agcd );
};};};_dcf .Log .Debug ("\u0050\u0044\u0046\u0020\u0046i\u006c\u0065\u0020\u0045\u0072\u0072\u006f\u0072\u003a\u0020\u0043\u006f\u006co\u0072\u0073\u0070\u0061\u0063\u0065\u0020\u0074\u0079\u0070\u0065\u0020\u0065\u0072\u0072\u006f\u0072\u003a\u0020\u0025\u0073",obj .String ());
return nil ,ErrTypeCheck ;};

// PageFromIndirectObject returns the PdfPage and page number for a given indirect object.
func (_ebbe *PdfReader )PageFromIndirectObject (ind *_bgg .PdfIndirectObject )(*PdfPage ,int ,error ){if len (_ebbe .PageList )!=len (_ebbe ._ebbfg ){return nil ,0,_ag .New ("\u0070\u0061\u0067\u0065\u0020\u006c\u0069\u0073\u0074\u0020\u0069\u006ev\u0061\u006c\u0069\u0064");
};for _dffcb ,_egce :=range _ebbe ._ebbfg {if _egce ==ind {return _ebbe .PageList [_dffcb ],_dffcb +1,nil ;};};return nil ,0,_ag .New ("\u0070\u0061\u0067\u0065\u0020\u006e\u006f\u0074\u0020f\u006f\u0075\u006e\u0064");};

// Items returns all children outline items.
func (_acbae *Outline )Items ()[]*OutlineItem {return _acbae .Entries };
//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package fonts ;import (_e "bytes";_gc "encoding/binary";_cf "errors";_c "fmt";_cbe "github.com/unidoc/unipdf/v3/common";_age "github.com/unidoc/unipdf/v3/core";_d "github.com/unidoc/unipdf/v3/internal/cmap";_gg "github.com/unidoc/unipdf/v3/internal/textencoding";
_gb "golang.org/x/xerrors";_fe "io";_cb "os";_ag "regexp";_a "sort";_g "strings";_ce "sync";);var _ Font =StdFont {};func _cac ()StdFont {_fae .Do (_aff );_fcd :=Descriptor {Name :CourierName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0021,BBox :[4]float64 {-23,-250,715,805},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_fcd ,_fbe );};type GlyphName =_gg .GlyphName ;func MakeRuneCharSafeMap (length int )*RuneCharSafeMap {return &RuneCharSafeMap {_bb :make (map[rune ]CharMetrics ,length )};};func (_dd *RuneCharSafeMap )Range (f func (_bag rune ,_fd CharMetrics )(_ae bool )){_dd ._cg .RLock ();
defer _dd ._cg .RUnlock ();for _ge ,_de :=range _dd ._bb {if f (_ge ,_de ){break ;};};};func _efd ()StdFont {_fae .Do (_aff );_fdg :=Descriptor {Name :CourierBoldObliqueName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0061,BBox :[4]float64 {-57,-250,869,801},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_fdg ,_ceg );};func (_ddc *ttfParser )ParseHead ()error {if _bfb :=_ddc .Seek ("\u0068\u0065\u0061\u0064");_bfb !=nil {return _bfb ;};_ddc .Skip (3*4);_eba :=_ddc .ReadULong ();if _eba !=0x5F0F3CF5{_cbe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0049\u006e\u0063\u006fr\u0072e\u0063\u0074\u0020\u006d\u0061\u0067\u0069\u0063\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u002e\u0020\u0046\u006fn\u0074\u0020\u006d\u0061\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0069\u0073\u0070\u006c\u0061\u0079\u0020\u0063\u006f\u0072\u0072\u0065\u0063t\u006c\u0079\u002e\u0020\u0025\u0073",_ddc );
};_ddc .Skip (2);_ddc ._ecc .UnitsPerEm =_ddc .ReadUShort ();_ddc .Skip (2*8);_ddc ._ecc .Xmin =_ddc .ReadShort ();_ddc ._ecc .Ymin =_ddc .ReadShort ();_ddc ._ecc .Xmax =_ddc .ReadShort ();_ddc ._ecc .Ymax =_ddc .ReadShort ();return nil ;};func (_ddcd *ttfParser )ParseOS2 ()error {if _eeee :=_ddcd .Seek ("\u004f\u0053\u002f\u0032");
_eeee !=nil {return _eeee ;};_gagab :=_ddcd .ReadUShort ();_ddcd .Skip (4*2);_ddcd .Skip (11*2+10+4*4+4);_ged :=_ddcd .ReadUShort ();_ddcd ._ecc .Bold =(_ged &32)!=0;_ddcd .Skip (2*2);_ddcd ._ecc .TypoAscender =_ddcd .ReadShort ();_ddcd ._ecc .TypoDescender =_ddcd .ReadShort ();
if _gagab >=2{_ddcd .Skip (3*2+2*4+2);_ddcd ._ecc .CapHeight =_ddcd .ReadShort ();}else {_ddcd ._ecc .CapHeight =0;};return nil ;};func _eef ()StdFont {_cff .Do (_cgcc );_agbf :=Descriptor {Name :HelveticaBoldObliqueName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-174,-228,1114,962},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_agbf ,_gfe );};func IsStdFont (name StdFontName )bool {_ ,_be :=_ea .read (name );return _be };func NewStdFontByName (name StdFontName )(StdFont ,bool ){_agb ,_fa :=_ea .read (name );if !_fa {return StdFont {},false ;};return _agb (),true ;
};var _dfa *RuneCharSafeMap ;func (_edf *ttfParser )parseCmapSubtable10 (_eacc int64 )error {if _edf ._ecc .Chars ==nil {_edf ._ecc .Chars =make (map[rune ]GID );};_edf ._gcff .Seek (int64 (_edf ._fegb ["\u0063\u006d\u0061\u0070"])+_eacc ,_fe .SeekStart );
var _baga ,_ecd uint32 ;_add :=_edf .ReadUShort ();if _add < 8{_baga =uint32 (_edf .ReadUShort ());_ecd =uint32 (_edf .ReadUShort ());}else {_edf .ReadUShort ();_baga =_edf .ReadULong ();_ecd =_edf .ReadULong ();};_cbe .Log .Trace ("\u0070\u0061r\u0073\u0065\u0043\u006d\u0061p\u0053\u0075\u0062\u0074\u0061b\u006c\u0065\u0031\u0030\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064\u0020\u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067\u0075\u0061\u0067\u0065\u003d\u0025\u0064",_add ,_baga ,_ecd );
if _add !=0{return _cf .New ("\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063\u006d\u0061p\u0020s\u0075\u0062\u0074\u0061\u0062\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_ecb ,_adag :=_edf .ReadStr (256);if _adag !=nil {return _adag ;
};_adc :=[]byte (_ecb );for _ffe ,_afff :=range _adc {_edf ._ecc .Chars [rune (_ffe )]=GID (_afff );if _afff !=0{_c .Printf ("\u0009\u0030\u0078\u002502\u0078\u0020\u279e\u0020\u0030\u0078\u0025\u0030\u0032\u0078\u003d\u0025\u0063\u000a",_ffe ,_afff ,rune (_afff ));
};};return nil ;};func _dbc (_bce map[string ]uint32 )string {var _dca []string ;for _fgb :=range _bce {_dca =append (_dca ,_fgb );};_a .Slice (_dca ,func (_fag ,_gfa int )bool {return _bce [_dca [_fag ]]< _bce [_dca [_gfa ]]});_ade :=[]string {_c .Sprintf ("\u0054\u0072\u0075\u0065Ty\u0070\u0065\u0020\u0074\u0061\u0062\u006c\u0065\u0073\u003a\u0020\u0025\u0064",len (_bce ))};
for _ ,_ff :=range _dca {_ade =append (_ade ,_c .Sprintf ("\u0009%\u0071\u0020\u0025\u0035\u0064",_ff ,_bce [_ff ]));};return _g .Join (_ade ,"\u000a");};var _dfaa =[]GlyphName {"\u002en\u006f\u0074\u0064\u0065\u0066","\u002e\u006e\u0075l\u006c","\u006e\u006fn\u006d\u0061\u0072k\u0069\u006e\u0067\u0072\u0065\u0074\u0075\u0072\u006e","\u0073\u0070\u0061c\u0065","\u0065\u0078\u0063\u006c\u0061\u006d","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c","\u006e\u0075\u006d\u0062\u0065\u0072\u0073\u0069\u0067\u006e","\u0064\u006f\u006c\u006c\u0061\u0072","\u0070e\u0072\u0063\u0065\u006e\u0074","\u0061m\u0070\u0065\u0072\u0073\u0061\u006ed","q\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067\u006c\u0065","\u0070a\u0072\u0065\u006e\u006c\u0065\u0066t","\u0070\u0061\u0072\u0065\u006e\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0074\u0065\u0072\u0069\u0073\u006b","\u0070\u006c\u0075\u0073","\u0063\u006f\u006dm\u0061","\u0068\u0079\u0070\u0068\u0065\u006e","\u0070\u0065\u0072\u0069\u006f\u0064","\u0073\u006c\u0061s\u0068","\u007a\u0065\u0072\u006f","\u006f\u006e\u0065","\u0074\u0077\u006f","\u0074\u0068\u0072e\u0065","\u0066\u006f\u0075\u0072","\u0066\u0069\u0076\u0065","\u0073\u0069\u0078","\u0073\u0065\u0076e\u006e","\u0065\u0069\u0067h\u0074","\u006e\u0069\u006e\u0065","\u0063\u006f\u006co\u006e","\u0073e\u006d\u0069\u0063\u006f\u006c\u006fn","\u006c\u0065\u0073\u0073","\u0065\u0071\u0075a\u006c","\u0067r\u0065\u0061\u0074\u0065\u0072","\u0071\u0075\u0065\u0073\u0074\u0069\u006f\u006e","\u0061\u0074","\u0041","\u0042","\u0043","\u0044","\u0045","\u0046","\u0047","\u0048","\u0049","\u004a","\u004b","\u004c","\u004d","\u004e","\u004f","\u0050","\u0051","\u0052","\u0053","\u0054","\u0055","\u0056","\u0057","\u0058","\u0059","\u005a","b\u0072\u0061\u0063\u006b\u0065\u0074\u006c\u0065\u0066\u0074","\u0062a\u0063\u006b\u0073\u006c\u0061\u0073h","\u0062\u0072\u0061c\u006b\u0065\u0074\u0072\u0069\u0067\u0068\u0074","a\u0073\u0063\u0069\u0069\u0063\u0069\u0072\u0063\u0075\u006d","\u0075\u006e\u0064\u0065\u0072\u0073\u0063\u006f\u0072\u0065","\u0067\u0072\u0061v\u0065","\u0061","\u0062","\u0063","\u0064","\u0065","\u0066","\u0067","\u0068","\u0069","\u006a","\u006b","\u006c","\u006d","\u006e","\u006f","\u0070","\u0071","\u0072","\u0073","\u0074","\u0075","\u0076","\u0077","\u0078","\u0079","\u007a","\u0062r\u0061\u0063\u0065\u006c\u0065\u0066t","\u0062\u0061\u0072","\u0062\u0072\u0061\u0063\u0065\u0072\u0069\u0067\u0068\u0074","\u0061\u0073\u0063\u0069\u0069\u0074\u0069\u006c\u0064\u0065","\u0041d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0041\u0072\u0069n\u0067","\u0043\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0045\u0061\u0063\u0075\u0074\u0065","\u004e\u0074\u0069\u006c\u0064\u0065","\u004fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u0055d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0061\u0063\u0075\u0074\u0065","\u0061\u0067\u0072\u0061\u0076\u0065","a\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0061\u0074\u0069\u006c\u0064\u0065","\u0061\u0072\u0069n\u0067","\u0063\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0065\u0061\u0063\u0075\u0074\u0065","\u0065\u0067\u0072\u0061\u0076\u0065","e\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0065d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0069\u0061\u0063\u0075\u0074\u0065","\u0069\u0067\u0072\u0061\u0076\u0065","i\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0069d\u0069\u0065\u0072\u0065\u0073\u0069s","\u006e\u0074\u0069\u006c\u0064\u0065","\u006f\u0061\u0063\u0075\u0074\u0065","\u006f\u0067\u0072\u0061\u0076\u0065","o\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u006fd\u0069\u0065\u0072\u0065\u0073\u0069s","\u006f\u0074\u0069\u006c\u0064\u0065","\u0075\u0061\u0063\u0075\u0074\u0065","\u0075\u0067\u0072\u0061\u0076\u0065","u\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0075d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0064\u0061\u0067\u0067\u0065\u0072","\u0064\u0065\u0067\u0072\u0065\u0065","\u0063\u0065\u006e\u0074","\u0073\u0074\u0065\u0072\u006c\u0069\u006e\u0067","\u0073e\u0063\u0074\u0069\u006f\u006e","\u0062\u0075\u006c\u006c\u0065\u0074","\u0070a\u0072\u0061\u0067\u0072\u0061\u0070h","\u0067\u0065\u0072\u006d\u0061\u006e\u0064\u0062\u006c\u0073","\u0072\u0065\u0067\u0069\u0073\u0074\u0065\u0072\u0065\u0064","\u0063o\u0070\u0079\u0072\u0069\u0067\u0068t","\u0074r\u0061\u0064\u0065\u006d\u0061\u0072k","\u0061\u0063\u0075t\u0065","\u0064\u0069\u0065\u0072\u0065\u0073\u0069\u0073","\u006e\u006f\u0074\u0065\u0071\u0075\u0061\u006c","\u0041\u0045","\u004f\u0073\u006c\u0061\u0073\u0068","\u0069\u006e\u0066\u0069\u006e\u0069\u0074\u0079","\u0070l\u0075\u0073\u006d\u0069\u006e\u0075s","\u006ce\u0073\u0073\u0065\u0071\u0075\u0061l","\u0067\u0072\u0065a\u0074\u0065\u0072\u0065\u0071\u0075\u0061\u006c","\u0079\u0065\u006e","\u006d\u0075","p\u0061\u0072\u0074\u0069\u0061\u006c\u0064\u0069\u0066\u0066","\u0073u\u006d\u006d\u0061\u0074\u0069\u006fn","\u0070r\u006f\u0064\u0075\u0063\u0074","\u0070\u0069","\u0069\u006e\u0074\u0065\u0067\u0072\u0061\u006c","o\u0072\u0064\u0066\u0065\u006d\u0069\u006e\u0069\u006e\u0065","\u006f\u0072\u0064m\u0061\u0073\u0063\u0075\u006c\u0069\u006e\u0065","\u004f\u006d\u0065g\u0061","\u0061\u0065","\u006f\u0073\u006c\u0061\u0073\u0068","\u0071\u0075\u0065s\u0074\u0069\u006f\u006e\u0064\u006f\u0077\u006e","\u0065\u0078\u0063\u006c\u0061\u006d\u0064\u006f\u0077\u006e","\u006c\u006f\u0067\u0069\u0063\u0061\u006c\u006e\u006f\u0074","\u0072a\u0064\u0069\u0063\u0061\u006c","\u0066\u006c\u006f\u0072\u0069\u006e","a\u0070\u0070\u0072\u006f\u0078\u0065\u0071\u0075\u0061\u006c","\u0044\u0065\u006ct\u0061","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u006c\u0065\u006d\u006f\u0074r\u0069\u0067\u0068\u0074","\u0065\u006c\u006c\u0069\u0070\u0073\u0069\u0073","\u006e\u006fn\u0062\u0072\u0065a\u006b\u0069\u006e\u0067\u0073\u0070\u0061\u0063\u0065","\u0041\u0067\u0072\u0061\u0076\u0065","\u0041\u0074\u0069\u006c\u0064\u0065","\u004f\u0074\u0069\u006c\u0064\u0065","\u004f\u0045","\u006f\u0065","\u0065\u006e\u0064\u0061\u0073\u0068","\u0065\u006d\u0064\u0061\u0073\u0068","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u006c\u0065\u0066\u0074","\u0071\u0075\u006f\u0074\u0065\u0064\u0062\u006c\u0072\u0069\u0067\u0068\u0074","\u0071u\u006f\u0074\u0065\u006c\u0065\u0066t","\u0071\u0075\u006f\u0074\u0065\u0072\u0069\u0067\u0068\u0074","\u0064\u0069\u0076\u0069\u0064\u0065","\u006co\u007a\u0065\u006e\u0067\u0065","\u0079d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0059d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0066\u0072\u0061\u0063\u0074\u0069\u006f\u006e","\u0063\u0075\u0072\u0072\u0065\u006e\u0063\u0079","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006c\u006c\u0065\u0066\u0074","\u0067\u0075\u0069\u006c\u0073\u0069\u006e\u0067\u006cr\u0069\u0067\u0068\u0074","\u0066\u0069","\u0066\u006c","\u0064a\u0067\u0067\u0065\u0072\u0064\u0062l","\u0070\u0065\u0072\u0069\u006f\u0064\u0063\u0065\u006et\u0065\u0072\u0065\u0064","\u0071\u0075\u006f\u0074\u0065\u0073\u0069\u006e\u0067l\u0062\u0061\u0073\u0065","\u0071\u0075\u006ft\u0065\u0064\u0062\u006c\u0062\u0061\u0073\u0065","p\u0065\u0072\u0074\u0068\u006f\u0075\u0073\u0061\u006e\u0064","A\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","E\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0041\u0061\u0063\u0075\u0074\u0065","\u0045d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0045\u0067\u0072\u0061\u0076\u0065","\u0049\u0061\u0063\u0075\u0074\u0065","I\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0049d\u0069\u0065\u0072\u0065\u0073\u0069s","\u0049\u0067\u0072\u0061\u0076\u0065","\u004f\u0061\u0063\u0075\u0074\u0065","O\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0061\u0070\u0070l\u0065","\u004f\u0067\u0072\u0061\u0076\u0065","\u0055\u0061\u0063\u0075\u0074\u0065","U\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0055\u0067\u0072\u0061\u0076\u0065","\u0064\u006f\u0074\u006c\u0065\u0073\u0073\u0069","\u0063\u0069\u0072\u0063\u0075\u006d\u0066\u006c\u0065\u0078","\u0074\u0069\u006cd\u0065","\u006d\u0061\u0063\u0072\u006f\u006e","\u0062\u0072\u0065v\u0065","\u0064o\u0074\u0061\u0063\u0063\u0065\u006et","\u0072\u0069\u006e\u0067","\u0063e\u0064\u0069\u006c\u006c\u0061","\u0068\u0075\u006eg\u0061\u0072\u0075\u006d\u006c\u0061\u0075\u0074","\u006f\u0067\u006f\u006e\u0065\u006b","\u0063\u0061\u0072o\u006e","\u004c\u0073\u006c\u0061\u0073\u0068","\u006c\u0073\u006c\u0061\u0073\u0068","\u0053\u0063\u0061\u0072\u006f\u006e","\u0073\u0063\u0061\u0072\u006f\u006e","\u005a\u0063\u0061\u0072\u006f\u006e","\u007a\u0063\u0061\u0072\u006f\u006e","\u0062r\u006f\u006b\u0065\u006e\u0062\u0061r","\u0045\u0074\u0068","\u0065\u0074\u0068","\u0059\u0061\u0063\u0075\u0074\u0065","\u0079\u0061\u0063\u0075\u0074\u0065","\u0054\u0068\u006fr\u006e","\u0074\u0068\u006fr\u006e","\u006d\u0069\u006eu\u0073","\u006d\u0075\u006c\u0074\u0069\u0070\u006c\u0079","o\u006e\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","t\u0077\u006f\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u0074\u0068\u0072\u0065\u0065\u0073\u0075\u0070\u0065\u0072\u0069\u006f\u0072","\u006fn\u0065\u0068\u0061\u006c\u0066","\u006f\u006e\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072","\u0074\u0068\u0072\u0065\u0065\u0071\u0075\u0061\u0072\u0074\u0065\u0072\u0073","\u0066\u0072\u0061n\u0063","\u0047\u0062\u0072\u0065\u0076\u0065","\u0067\u0062\u0072\u0065\u0076\u0065","\u0049\u0064\u006f\u0074\u0061\u0063\u0063\u0065\u006e\u0074","\u0053\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0073\u0063\u0065\u0064\u0069\u006c\u006c\u0061","\u0043\u0061\u0063\u0075\u0074\u0065","\u0063\u0061\u0063\u0075\u0074\u0065","\u0043\u0063\u0061\u0072\u006f\u006e","\u0063\u0063\u0061\u0072\u006f\u006e","\u0064\u0063\u0072\u006f\u0061\u0074"};
var _cfe =[]int16 {667,1000,667,667,667,667,667,667,667,667,667,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,500,667,667,556,556,556,556,556,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,667,556,556,469,584,389,1015,556,556,278,260,334,334,278,278,333,260,350,500,500,333,500,500,333,556,333,278,278,250,737,556,556,556,556,643,556,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,556,278,333,278,500,556,500,556,556,167,556,556,556,611,333,584,549,556,556,333,333,556,333,333,222,278,278,278,278,278,222,222,500,500,222,222,299,222,584,549,584,471,222,833,333,584,556,584,556,556,556,556,556,549,556,556,556,556,556,556,944,333,556,556,556,556,834,834,333,370,365,611,556,556,537,333,333,476,889,278,278,1000,584,584,556,556,611,355,333,333,333,222,222,222,191,333,333,453,333,333,737,333,500,500,500,500,500,556,278,556,556,278,278,556,600,278,317,278,556,556,834,333,333,1000,556,333,556,556,556,556,556,556,556,556,556,556,500,722,500,500,500,500,556,500,500,500,500,556};
var _ea =&fontMap {_bad :make (map[StdFontName ]func ()StdFont )};func (_eff *ttfParser )parseCmapFormat12 ()error {_dggg :=_eff .ReadULong ();_cbe .Log .Trace ("\u0070\u0061\u0072se\u0043\u006d\u0061\u0070\u0046\u006f\u0072\u006d\u0061t\u00312\u003a \u0025s\u0020\u006e\u0075\u006d\u0047\u0072\u006f\u0075\u0070\u0073\u003d\u0025\u0064",_eff ._ecc .String (),_dggg );
for _acg :=uint32 (0);_acg < _dggg ;_acg ++{_gdga :=_eff .ReadULong ();_gaga :=_eff .ReadULong ();_abb :=_eff .ReadULong ();if _gdga > 0x0010FFFF||(0xD800<=_gdga &&_gdga <=0xDFFF){return _cf .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");
};if _gaga < _gdga ||_gaga > 0x0010FFFF||(0xD800<=_gaga &&_gaga <=0xDFFF){return _cf .New ("\u0069n\u0076\u0061\u006c\u0069\u0064\u0020\u0063\u0068\u0061\u0072\u0061c\u0074\u0065\u0072\u0073\u0020\u0063\u006f\u0064\u0065\u0073");};for _fcga :=_gdga ;_fcga <=_gaga ;
_fcga ++{if _fcga > 0x10FFFF{_cbe .Log .Debug ("\u0046\u006fr\u006d\u0061\u0074\u0020\u0031\u0032\u0020\u0063\u006d\u0061\u0070\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0073\u0020\u0063\u0068\u0061\u0072\u0061\u0063\u0074\u0065\u0072\u0020\u0062\u0065\u0079\u006f\u006e\u0064\u0020\u0055\u0043\u0053\u002d\u0034");
};_eff ._ecc .Chars [rune (_fcga )]=GID (_abb );_abb ++;};};return nil ;};type TtfType struct{UnitsPerEm uint16 ;PostScriptName string ;Bold bool ;ItalicAngle float64 ;IsFixedPitch bool ;TypoAscender int16 ;TypoDescender int16 ;UnderlinePosition int16 ;
UnderlineThickness int16 ;Xmin ,Ymin ,Xmax ,Ymax int16 ;CapHeight int16 ;Widths []uint16 ;Chars map[rune ]GID ;GlyphNames []GlyphName ;};const (CourierName =StdFontName ("\u0043o\u0075\u0072\u0069\u0065\u0072");CourierBoldName =StdFontName ("\u0043\u006f\u0075r\u0069\u0065\u0072\u002d\u0042\u006f\u006c\u0064");
CourierObliqueName =StdFontName ("\u0043o\u0075r\u0069\u0065\u0072\u002d\u004f\u0062\u006c\u0069\u0071\u0075\u0065");CourierBoldObliqueName =StdFontName ("\u0043\u006f\u0075\u0072ie\u0072\u002d\u0042\u006f\u006c\u0064\u004f\u0062\u006c\u0069\u0071\u0075\u0065");
);func (_bc StdFont )Name ()string {return string (_bc ._eac .Name )};func (_fgg *ttfParser )parseCmapVersion (_eedf int64 )error {_cbe .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006da\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a \u006f\u0066\u0066s\u0065t\u003d\u0025\u0064",_eedf );
if _fgg ._ecc .Chars ==nil {_fgg ._ecc .Chars =make (map[rune ]GID );};_fgg ._gcff .Seek (int64 (_fgg ._fegb ["\u0063\u006d\u0061\u0070"])+_eedf ,_fe .SeekStart );var _dcg ,_gffg uint32 ;_dfc :=_fgg .ReadUShort ();if _dfc < 8{_dcg =uint32 (_fgg .ReadUShort ());
_gffg =uint32 (_fgg .ReadUShort ());}else {_fgg .ReadUShort ();_dcg =_fgg .ReadULong ();_gffg =_fgg .ReadULong ();};_cbe .Log .Debug ("\u0070\u0061\u0072\u0073\u0065\u0043m\u0061\u0070\u0056\u0065\u0072\u0073\u0069\u006f\u006e\u003a\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u003d\u0025\u0064 \u006c\u0065\u006e\u0067\u0074\u0068\u003d\u0025\u0064\u0020\u006c\u0061\u006e\u0067u\u0061g\u0065\u003d\u0025\u0064",_dfc ,_dcg ,_gffg );
switch _dfc {case 0:return _fgg .parseCmapFormat0 ();case 6:return _fgg .parseCmapFormat6 ();case 12:return _fgg .parseCmapFormat12 ();default:_cbe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a \u0055\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0063m\u0061\u0070\u0020\u0066\u006f\u0072\u006da\u0074\u003d\u0025\u0064",_dfc );
return nil ;};};func _fed ()StdFont {_cff .Do (_cgcc );_eed :=Descriptor {Name :HelveticaObliqueName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-170,-225,1116,931},ItalicAngle :-12,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_eed ,_gagg );};var _eace =[]int16 {667,944,667,667,667,667,667,667,667,667,667,667,667,667,667,667,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,667,722,722,722,778,389,389,389,389,389,389,389,389,500,667,667,611,611,611,611,611,889,722,722,722,722,722,722,944,722,722,722,722,722,722,722,722,611,722,667,667,667,667,556,556,556,556,556,611,611,611,611,722,722,722,722,722,722,722,722,722,667,889,667,611,611,611,611,611,611,611,500,500,500,500,333,500,722,500,500,778,500,500,570,570,500,832,500,500,278,220,348,348,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,500,500,500,608,500,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,389,389,333,556,500,556,500,500,167,500,500,500,500,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,278,500,500,278,278,382,278,570,549,606,494,278,778,333,606,576,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,266,300,500,500,500,500,333,333,494,833,250,250,1000,570,570,500,500,500,555,500,500,500,333,333,333,278,389,389,549,389,389,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,366,278,500,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,444,667,500,444,444,444,500,389,389,389,389,500};
func (_bedb *ttfParser )ParseName ()error {if _gee :=_bedb .Seek ("\u006e\u0061\u006d\u0065");_gee !=nil {return _gee ;};_dfg ,_ :=_bedb ._gcff .Seek (0,_fe .SeekCurrent );_bedb ._ecc .PostScriptName ="";_bedb .Skip (2);_fac :=_bedb .ReadUShort ();_dde :=_bedb .ReadUShort ();
for _ffb :=uint16 (0);_ffb < _fac &&_bedb ._ecc .PostScriptName =="";_ffb ++{_bedb .Skip (3*2);_eadf :=_bedb .ReadUShort ();_cegc :=_bedb .ReadUShort ();_gfee :=_bedb .ReadUShort ();if _eadf ==6{_bedb ._gcff .Seek (_dfg +int64 (_dde )+int64 (_gfee ),_fe .SeekStart );
_gbc ,_fgc :=_bedb .ReadStr (int (_cegc ));if _fgc !=nil {return _fgc ;};_gbc =_g .Replace (_gbc ,"\u0000","",-1);_ebeg ,_fgc :=_ag .Compile ("\u005b\u0028\u0029\u007b\u007d\u003c\u003e\u0020\u002f%\u005b\u005c\u005d\u005d");if _fgc !=nil {return _fgc ;
};_bedb ._ecc .PostScriptName =_ebeg .ReplaceAllString (_gbc ,"");};};if _bedb ._ecc .PostScriptName ==""{_cbe .Log .Debug ("\u0050a\u0072\u0073e\u004e\u0061\u006de\u003a\u0020\u0054\u0068\u0065\u0020\u006ea\u006d\u0065\u0020\u0050\u006f\u0073t\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u0077\u0061\u0073\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e");
};return nil ;};func (_fdc StdFont )GetRuneMetrics (r rune )(CharMetrics ,bool ){_bfd ,_ad :=_fdc ._cc .Read (r );return _bfd ,_ad ;};func (_fbaa *ttfParser )readByte ()(_fge uint8 ){_gc .Read (_fbaa ._gcff ,_gc .BigEndian ,&_fge );return _fge ;};func _cgcc (){_bbg =MakeRuneCharSafeMap (len (_bd ));
_adg =MakeRuneCharSafeMap (len (_bd ));for _gff ,_dbg :=range _bd {_bbg .Write (_dbg ,CharMetrics {Wx :float64 (_cfe [_gff ])});_adg .Write (_dbg ,CharMetrics {Wx :float64 (_gaa [_gff ])});};_gagg =_bbg .Copy ();_gfe =_adg .Copy ();};type Font interface{Encoder ()_gg .TextEncoder ;
GetRuneMetrics (_b rune )(CharMetrics ,bool );};const (FontWeightMedium FontWeight =iota ;FontWeightBold ;FontWeightRoman ;);func (_dbae *ttfParser )parseCmapFormat0 ()error {_afa ,_ffd :=_dbae .ReadStr (256);if _ffd !=nil {return _ffd ;};_bda :=[]byte (_afa );
_cbe .Log .Trace ("\u0070a\u0072\u0073e\u0043\u006d\u0061p\u0046\u006f\u0072\u006d\u0061\u0074\u0030:\u0020\u0025\u0073\u000a\u0064\u0061t\u0061\u0053\u0074\u0072\u003d\u0025\u002b\u0071\u000a\u0064\u0061t\u0061\u003d\u005b\u0025\u0020\u0030\u0032\u0078\u005d",_dbae ._ecc .String (),_afa ,_bda );
for _gbgb ,_eee :=range _bda {_dbae ._ecc .Chars [rune (_gbgb )]=GID (_eee );};return nil ;};func (_bf *RuneCharSafeMap )Write (b rune ,r CharMetrics ){_bf ._cg .Lock ();defer _bf ._cg .Unlock ();_bf ._bb [b ]=r ;};func init (){RegisterStdFont (CourierName ,_cac ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u0043\u006f\u0075\u0072\u0069e\u0072\u004e\u0065\u0077","\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077");
RegisterStdFont (CourierBoldName ,_gce ,"\u0043o\u0075r\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (CourierObliqueName ,_caf ,"\u0043\u006f\u0075\u0072\u0069\u0065\u0072\u004e\u0065\u0077\u002c\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (CourierBoldObliqueName ,_efd ,"C\u006f\u0075\u0072\u0069er\u004ee\u0077\u002c\u0042\u006f\u006cd\u0049\u0074\u0061\u006c\u0069\u0063");};func (_bff *ttfParser )Parse ()(TtfType ,error ){_fec ,_abf :=_bff .ReadStr (4);if _abf !=nil {return TtfType {},_abf ;
};if _fec =="\u004f\u0054\u0054\u004f"{return TtfType {},_gb .Errorf ("\u0066\u006f\u006e\u0074s\u0020\u0062\u0061\u0073\u0065\u0064\u0020\u006f\u006e \u0050\u006f\u0073\u0074\u0053\u0063\u0072\u0069\u0070\u0074\u0020\u006f\u0075\u0074\u006c\u0069\u006e\u0065s\u0020\u0061\u0072\u0065\u0020n\u006f\u0074\u0020\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065\u0064\u0020\u0028\u0025\u0077\u0029",_age .ErrNotSupported );
};if _fec !="\u0000\u0001\u0000\u0000"&&_fec !="\u0074\u0072\u0075\u0065"{_cbe .Log .Debug ("\u0055n\u0072\u0065c\u006f\u0067\u006ei\u007a\u0065\u0064\u0020\u0054\u0072\u0075e\u0054\u0079\u0070\u0065\u0020\u0066i\u006c\u0065\u0020\u0066\u006f\u0072\u006d\u0061\u0074\u002e\u0020v\u0065\u0072\u0073\u0069\u006f\u006e\u003d\u0025\u0071",_fec );
};_bed :=int (_bff .ReadUShort ());_bff .Skip (3*2);_bff ._fegb =make (map[string ]uint32 );var _ded string ;for _cea :=0;_cea < _bed ;_cea ++{_ded ,_abf =_bff .ReadStr (4);if _abf !=nil {return TtfType {},_abf ;};_bff .Skip (4);_cgd :=_bff .ReadULong ();
_bff .Skip (4);_bff ._fegb [_ded ]=_cgd ;};_cbe .Log .Trace (_dbc (_bff ._fegb ));if _abf =_bff .ParseComponents ();_abf !=nil {return TtfType {},_abf ;};return _bff ._ecc ,nil ;};var _bca =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,667,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,500,611,778,778,778,778,389,389,389,389,389,389,389,389,500,778,778,667,667,667,667,667,944,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,611,778,722,722,722,722,556,556,556,556,556,667,667,667,611,722,722,722,722,722,722,722,722,722,722,1000,722,722,722,722,667,667,667,667,500,500,500,500,333,500,722,500,500,833,500,500,581,520,500,930,500,556,278,220,394,394,333,333,333,220,350,444,444,333,444,444,333,500,333,333,250,250,747,500,556,500,500,672,556,400,333,570,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,570,500,333,333,333,556,500,556,500,500,167,500,500,500,556,333,570,549,500,500,333,333,556,333,333,278,278,278,278,278,278,278,333,556,556,278,278,394,278,570,549,570,494,278,833,333,570,556,570,556,556,556,556,500,549,556,500,500,500,500,500,722,333,500,500,500,500,750,750,300,300,330,500,500,556,540,333,333,494,1000,250,250,1000,570,570,556,500,500,555,500,500,500,333,333,333,278,444,444,549,444,444,747,333,389,389,389,389,389,500,333,500,500,278,250,500,600,333,416,333,556,500,750,300,333,1000,500,300,556,556,556,556,556,556,556,500,556,556,500,722,500,500,500,500,500,444,444,444,444,500};
func _fdd ()StdFont {_eaa .Do (_adaa );_agbg :=Descriptor {Name :TimesRomanName ,Family :_dba ,Weight :FontWeightRoman ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,898},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :662,XHeight :450,StemV :84,StemH :28};
return NewStdFont (_agbg ,_dgac );};func _gd ()StdFont {_cff .Do (_cgcc );_bgc :=Descriptor {Name :HelveticaName ,Family :string (HelveticaName ),Weight :FontWeightMedium ,Flags :0x0020,BBox :[4]float64 {-166,-225,1000,931},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :523,StemV :88,StemH :76};
return NewStdFont (_bgc ,_bbg );};var _gfe *RuneCharSafeMap ;var _gagg *RuneCharSafeMap ;func _aef ()StdFont {_gcea :=_gg .NewSymbolEncoder ();_fbbd :=Descriptor {Name :SymbolName ,Family :string (SymbolName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-180,-293,1090,1010},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :85,StemH :92};
return NewStdFontWithEncoding (_fbbd ,_afg ,_gcea );};func (_ebe StdFont )Descriptor ()Descriptor {return _ebe ._eac };func TtfParse (r _fe .ReadSeeker )(TtfType ,error ){_bge :=&ttfParser {_gcff :r };return _bge .Parse ()};func (_fdga *TtfType )NewEncoder ()_gg .TextEncoder {return _gg .NewTrueTypeFontEncoder (_fdga .Chars )};
const (SymbolName =StdFontName ("\u0053\u0079\u006d\u0062\u006f\u006c");ZapfDingbatsName =StdFontName ("\u005a\u0061\u0070f\u0044\u0069\u006e\u0067\u0062\u0061\u0074\u0073"););func init (){RegisterStdFont (HelveticaName ,_gd ,"\u0041\u0072\u0069a\u006c");
RegisterStdFont (HelveticaBoldName ,_ada ,"\u0041\u0072\u0069\u0061\u006c\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (HelveticaObliqueName ,_fed ,"\u0041\u0072\u0069a\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063");RegisterStdFont (HelveticaBoldObliqueName ,_eef ,"\u0041\u0072i\u0061\u006c\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_ef *fontMap )write (_fc StdFontName ,_dg func ()StdFont ){_ef .Lock ();defer _ef .Unlock ();_ef ._bad [_fc ]=_dg ;};func _adaa (){_dgac =MakeRuneCharSafeMap (len (_bd ));_dae =MakeRuneCharSafeMap (len (_bd ));_gdg =MakeRuneCharSafeMap (len (_bd ));
_gfea =MakeRuneCharSafeMap (len (_bd ));for _dfe ,_fcg :=range _bd {_dgac .Write (_fcg ,CharMetrics {Wx :float64 (_fgd [_dfe ])});_dae .Write (_fcg ,CharMetrics {Wx :float64 (_bca [_dfe ])});_gdg .Write (_fcg ,CharMetrics {Wx :float64 (_eace [_dfe ])});
_gfea .Write (_fcg ,CharMetrics {Wx :float64 (_gcec [_dfe ])});};};var _ceg *RuneCharSafeMap ;var _ebd *RuneCharSafeMap ;func (_bbge *ttfParser )Seek (tag string )error {_acf ,_adga :=_bbge ._fegb [tag ];if !_adga {return _c .Errorf ("\u0074\u0061\u0062\u006ce \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u003a\u0020\u0025\u0073",tag );
};_bbge ._gcff .Seek (int64 (_acf ),_fe .SeekStart );return nil ;};type ttfParser struct{_ecc TtfType ;_gcff _fe .ReadSeeker ;_fegb map[string ]uint32 ;_bab uint16 ;_efb uint16 ;};func TtfParseFile (fileStr string )(TtfType ,error ){_bfc ,_bbb :=_cb .Open (fileStr );
if _bbb !=nil {return TtfType {},_bbb ;};defer _bfc .Close ();return TtfParse (_bfc );};func (_ddec *ttfParser )ReadULong ()(_gcedf uint32 ){_gc .Read (_ddec ._gcff ,_gc .BigEndian ,&_gcedf );return _gcedf ;};func NewStdFont (desc Descriptor ,metrics *RuneCharSafeMap )StdFont {return NewStdFontWithEncoding (desc ,metrics ,_gg .NewStandardEncoder ());
};func (_adac *ttfParser )ParseCmap ()error {var _adcd int64 ;if _fagcb :=_adac .Seek ("\u0063\u006d\u0061\u0070");_fagcb !=nil {return _fagcb ;};_cbe .Log .Trace ("\u0050a\u0072\u0073\u0065\u0043\u006d\u0061p");_adac .ReadUShort ();_gca :=int (_adac .ReadUShort ());
_bea :=int64 (0);_fcfg :=int64 (0);_cde :=int64 (0);for _dbgb :=0;_dbgb < _gca ;_dbgb ++{_dgf :=_adac .ReadUShort ();_cag :=_adac .ReadUShort ();_adcd =int64 (_adac .ReadULong ());if _dgf ==3&&_cag ==1{_fcfg =_adcd ;}else if _dgf ==3&&_cag ==10{_cde =_adcd ;
}else if _dgf ==1&&_cag ==0{_bea =_adcd ;};};if _bea !=0{if _edb :=_adac .parseCmapVersion (_bea );_edb !=nil {return _edb ;};};if _fcfg !=0{if _fead :=_adac .parseCmapSubtable31 (_fcfg );_fead !=nil {return _fead ;};};if _cde !=0{if _cdga :=_adac .parseCmapVersion (_cde );
_cdga !=nil {return _cdga ;};};if _fcfg ==0&&_bea ==0&&_cde ==0{_cbe .Log .Debug ("\u0074\u0074\u0066P\u0061\u0072\u0073\u0065\u0072\u002e\u0050\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u002e\u0020\u004e\u006f\u0020\u0033\u0031\u002c\u0020\u0031\u0030\u002c\u0020\u00331\u0030\u0020\u0074\u0061\u0062\u006c\u0065\u002e");
};return nil ;};var _gfea *RuneCharSafeMap ;func (_gbb *ttfParser )parseCmapSubtable31 (_fbc int64 )error {_gbd :=make ([]rune ,0,8);_eacb :=make ([]rune ,0,8);_gaab :=make ([]int16 ,0,8);_bgb :=make ([]uint16 ,0,8);_gbb ._ecc .Chars =make (map[rune ]GID );
_gbb ._gcff .Seek (int64 (_gbb ._fegb ["\u0063\u006d\u0061\u0070"])+_fbc ,_fe .SeekStart );_eag :=_gbb .ReadUShort ();if _eag !=4{return _gb .Errorf ("u\u006e\u0065\u0078\u0070\u0065\u0063t\u0065\u0064\u0020\u0073\u0075\u0062t\u0061\u0062\u006c\u0065\u0020\u0066\u006fr\u006d\u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0028\u0025w\u0029",_eag ,_age .ErrNotSupported );
};_gbb .Skip (2*2);_bcea :=int (_gbb .ReadUShort ()/2);_gbb .Skip (3*2);for _gea :=0;_gea < _bcea ;_gea ++{_eacb =append (_eacb ,rune (_gbb .ReadUShort ()));};_gbb .Skip (2);for _bcca :=0;_bcca < _bcea ;_bcca ++{_gbd =append (_gbd ,rune (_gbb .ReadUShort ()));
};for _cbac :=0;_cbac < _bcea ;_cbac ++{_gaab =append (_gaab ,_gbb .ReadShort ());};_eccf ,_ :=_gbb ._gcff .Seek (int64 (0),_fe .SeekCurrent );for _cae :=0;_cae < _bcea ;_cae ++{_bgb =append (_bgb ,_gbb .ReadUShort ());};for _cafb :=0;_cafb < _bcea ;_cafb ++{_ed :=_gbd [_cafb ];
_efba :=_eacb [_cafb ];_fagc :=_gaab [_cafb ];_agde :=_bgb [_cafb ];if _agde > 0{_gbb ._gcff .Seek (_eccf +2*int64 (_cafb )+int64 (_agde ),_fe .SeekStart );};for _bcg :=_ed ;_bcg <=_efba ;_bcg ++{if _bcg ==0xFFFF{break ;};var _fbee int32 ;if _agde > 0{_fbee =int32 (_gbb .ReadUShort ());
if _fbee > 0{_fbee +=int32 (_fagc );};}else {_fbee =_bcg +int32 (_fagc );};if _fbee >=65536{_fbee -=65536;};if _fbee > 0{_gbb ._ecc .Chars [_bcg ]=GID (_fbee );};};};return nil ;};const (_dba ="\u0054\u0069\u006de\u0073";TimesRomanName =StdFontName ("T\u0069\u006d\u0065\u0073\u002d\u0052\u006f\u006d\u0061\u006e");
TimesBoldName =StdFontName ("\u0054\u0069\u006d\u0065\u0073\u002d\u0042\u006f\u006c\u0064");TimesItalicName =StdFontName ("\u0054\u0069\u006de\u0073\u002d\u0049\u0074\u0061\u006c\u0069\u0063");TimesBoldItalicName =StdFontName ("\u0054\u0069m\u0065\u0073\u002dB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
);func init (){RegisterStdFont (SymbolName ,_aef ,"\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0049\u0074\u0061\u006c\u0069\u0063","S\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064","\u0053\u0079\u006d\u0062\u006f\u006c\u002c\u0042\u006f\u006c\u0064\u0049t\u0061\u006c\u0069\u0063");
RegisterStdFont (ZapfDingbatsName ,_dga );};func (_fba *ttfParser )ParseHhea ()error {if _bcc :=_fba .Seek ("\u0068\u0068\u0065\u0061");_bcc !=nil {return _bcc ;};_fba .Skip (4+15*2);_fba ._bab =_fba .ReadUShort ();return nil ;};var _fgd =[]int16 {722,889,722,722,722,722,722,722,722,722,722,667,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,556,722,722,722,722,333,333,333,333,333,333,333,333,389,722,722,611,611,611,611,611,889,722,722,722,722,722,722,889,722,722,722,722,722,722,722,722,556,722,667,667,667,667,556,556,556,556,556,611,611,611,556,722,722,722,722,722,722,722,722,722,722,944,722,722,722,722,611,611,611,611,444,444,444,444,333,444,667,444,444,778,444,444,469,541,500,921,444,500,278,200,480,480,333,333,333,200,350,444,444,333,444,444,333,500,333,278,250,250,760,500,500,500,500,588,500,400,333,564,500,333,278,444,444,444,444,444,444,444,500,1000,444,1000,500,444,564,500,333,333,333,556,500,556,500,500,167,500,500,500,500,333,564,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,500,500,278,278,344,278,564,549,564,471,278,778,333,564,500,564,500,500,500,500,500,549,500,500,500,500,500,500,722,333,500,500,500,500,750,750,300,276,310,500,500,500,453,333,333,476,833,250,250,1000,564,564,500,444,444,408,444,444,444,333,333,333,180,333,333,453,333,333,760,333,389,389,389,389,389,500,278,500,500,278,250,500,600,278,326,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,500,722,500,500,500,500,500,444,444,444,444,500};
func (_cd StdFont )ToPdfObject ()_age .PdfObject {_da :=_age .MakeDict ();_da .Set ("\u0054\u0079\u0070\u0065",_age .MakeName ("\u0046\u006f\u006e\u0074"));_da .Set ("\u0053u\u0062\u0074\u0079\u0070\u0065",_age .MakeName ("\u0054\u0079\u0070e\u0031"));
_da .Set ("\u0042\u0061\u0073\u0065\u0046\u006f\u006e\u0074",_age .MakeName (_cd .Name ()));_da .Set ("\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067",_cd ._fb .ToPdfObject ());return _age .MakeIndirectObject (_da );};func _dc ()StdFont {_eaa .Do (_adaa );
_gdc :=Descriptor {Name :TimesItalicName ,Family :_dba ,Weight :FontWeightMedium ,Flags :0x0060,BBox :[4]float64 {-169,-217,1010,883},ItalicAngle :-15.5,Ascent :683,Descent :-217,CapHeight :653,XHeight :441,StemV :76,StemH :32};return NewStdFont (_gdc ,_gfea );
};func (_aefg *ttfParser )ParseHmtx ()error {if _bdff :=_aefg .Seek ("\u0068\u006d\u0074\u0078");_bdff !=nil {return _bdff ;};_aefg ._ecc .Widths =make ([]uint16 ,0,8);for _cgcd :=uint16 (0);_cgcd < _aefg ._bab ;_cgcd ++{_aefg ._ecc .Widths =append (_aefg ._ecc .Widths ,_aefg .ReadUShort ());
_aefg .Skip (2);};if _aefg ._bab < _aefg ._efb &&_aefg ._bab > 0{_gfc :=_aefg ._ecc .Widths [_aefg ._bab -1];for _deda :=_aefg ._bab ;_deda < _aefg ._efb ;_deda ++{_aefg ._ecc .Widths =append (_aefg ._ecc .Widths ,_gfc );};};return nil ;};func init (){RegisterStdFont (TimesRomanName ,_fdd ,"\u0054\u0069\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e","\u0054\u0069\u006de\u0073");
RegisterStdFont (TimesBoldName ,_gceb ,"\u0054i\u006de\u0073\u004e\u0065\u0077\u0052o\u006d\u0061n\u002c\u0042\u006f\u006c\u0064","\u0054\u0069\u006d\u0065\u0073\u002c\u0042\u006f\u006c\u0064");RegisterStdFont (TimesItalicName ,_dc ,"T\u0069m\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006da\u006e\u002c\u0049\u0074al\u0069\u0063","\u0054\u0069\u006de\u0073\u002c\u0049\u0074\u0061\u006c\u0069\u0063");
RegisterStdFont (TimesBoldItalicName ,_afed ,"\u0054i\u006d\u0065\u0073\u004e\u0065\u0077\u0052\u006f\u006d\u0061\u006e,\u0042\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063","\u0054\u0069m\u0065\u0073\u002cB\u006f\u006c\u0064\u0049\u0074\u0061\u006c\u0069\u0063");
};func (_cef *fontMap )read (_ca StdFontName )(func ()StdFont ,bool ){_cef .Lock ();defer _cef .Unlock ();_ec ,_bfe :=_cef ._bad [_ca ];return _ec ,_bfe ;};var _dae *RuneCharSafeMap ;var _gcec =[]int16 {611,889,611,611,611,611,611,611,611,611,611,611,667,667,667,667,722,722,722,612,611,611,611,611,611,611,611,611,611,722,500,611,722,722,722,722,333,333,333,333,333,333,333,333,444,667,667,556,556,611,556,556,833,667,667,667,667,667,722,944,722,722,722,722,722,722,722,722,611,722,611,611,611,611,500,500,500,500,500,556,556,556,611,722,722,722,722,722,722,722,722,722,611,833,611,556,556,556,556,556,556,556,500,500,500,500,333,500,667,500,500,778,500,500,422,541,500,920,500,500,278,275,400,400,389,389,333,275,350,444,444,333,444,444,333,500,333,333,250,250,760,500,500,500,500,544,500,400,333,675,500,333,278,444,444,444,444,444,444,444,500,889,444,889,500,444,675,500,333,389,278,500,500,500,500,500,167,500,500,500,500,333,675,549,500,500,333,333,500,333,333,278,278,278,278,278,278,278,278,444,444,278,278,300,278,675,549,675,471,278,722,333,675,500,675,500,500,500,500,500,549,500,500,500,500,500,500,667,333,500,500,500,500,750,750,300,276,310,500,500,500,523,333,333,476,833,250,250,1000,675,675,500,500,500,420,556,556,556,333,333,333,214,389,389,453,389,389,760,333,389,389,389,389,389,500,333,500,500,278,250,500,600,278,300,278,500,500,750,300,333,980,500,300,500,500,500,500,500,500,500,500,500,500,444,667,444,444,444,444,500,389,389,389,389,500};
func (_agd *RuneCharSafeMap )Copy ()*RuneCharSafeMap {_feg :=MakeRuneCharSafeMap (_agd .Length ());_agd .Range (func (_eb rune ,_ba CharMetrics )(_aa bool ){_feg ._bb [_eb ]=_ba ;return false });return _feg ;};var _gdg *RuneCharSafeMap ;func (_gcaa *ttfParser )ReadShort ()(_gab int16 ){_gc .Read (_gcaa ._gcff ,_gc .BigEndian ,&_gab );
return _gab ;};type CharMetrics struct{Wx float64 ;Wy float64 ;};func _dga ()StdFont {_dgg :=_gg .NewZapfDingbatsEncoder ();_bdf :=Descriptor {Name :ZapfDingbatsName ,Family :string (ZapfDingbatsName ),Weight :FontWeightMedium ,Flags :0x0004,BBox :[4]float64 {-1,-143,981,820},ItalicAngle :0,Ascent :0,Descent :0,CapHeight :0,XHeight :0,StemV :90,StemH :28};
return NewStdFontWithEncoding (_bdf ,_afe ,_dgg );};func (_fcdd *TtfType )MakeEncoder ()(_gg .SimpleEncoder ,error ){_gfb :=make (map[_gg .CharCode ]GlyphName );for _bdd :=_gg .CharCode (0);_bdd <=256;_bdd ++{_eaad :=rune (_bdd );_gdb ,_gga :=_fcdd .Chars [_eaad ];
if !_gga {continue ;};var _cgg GlyphName ;if int (_gdb )>=0&&int (_gdb )< len (_fcdd .GlyphNames ){_cgg =_fcdd .GlyphNames [_gdb ];}else {_agc :=rune (_gdb );if _ege ,_efda :=_gg .RuneToGlyph (_agc );_efda {_cgg =_ege ;};};if _cgg !=""{_gfb [_bdd ]=_cgg ;
};};if len (_gfb )==0{_cbe .Log .Debug ("WA\u0052\u004eI\u004e\u0047\u003a\u0020\u005a\u0065\u0072\u006f\u0020l\u0065\u006e\u0067\u0074\u0068\u0020\u0054\u0072\u0075\u0065\u0054\u0079\u0070\u0065\u0020\u0065\u006e\u0063\u006f\u0064\u0069\u006e\u0067\u002e\u0020\u0074\u0074\u0066=\u0025s\u0020\u0043\u0068\u0061\u0072\u0073\u003d\u005b%\u00200\u0032\u0078]",_fcdd ,_fcdd .Chars );
};return _gg .NewCustomSimpleTextEncoder (_gfb ,nil );};func _gce ()StdFont {_fae .Do (_aff );_fdca :=Descriptor {Name :CourierBoldName ,Family :string (CourierName ),Weight :FontWeightBold ,Flags :0x0021,BBox :[4]float64 {-113,-250,749,801},ItalicAngle :0,Ascent :629,Descent :-157,CapHeight :562,XHeight :439,StemV :106,StemH :84};
return NewStdFont (_fdca ,_ebd );};func (_cbb *ttfParser )Read32Fixed ()float64 {_aadf :=float64 (_cbb .ReadShort ());_cfd :=float64 (_cbb .ReadUShort ())/65536.0;return _aadf +_cfd ;};var _fbe *RuneCharSafeMap ;type fontMap struct{_ce .Mutex ;_bad map[StdFontName ]func ()StdFont ;
};var _adg *RuneCharSafeMap ;var _eaa _ce .Once ;type StdFontName string ;func _ada ()StdFont {_cff .Do (_cgcc );_fde :=Descriptor {Name :HelveticaBoldName ,Family :string (HelveticaName ),Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-170,-228,1003,962},ItalicAngle :0,Ascent :718,Descent :-207,CapHeight :718,XHeight :532,StemV :140,StemH :118};
return NewStdFont (_fde ,_adg );};const (HelveticaName =StdFontName ("\u0048e\u006c\u0076\u0065\u0074\u0069\u0063a");HelveticaBoldName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061-\u0042\u006f\u006c\u0064");HelveticaObliqueName =StdFontName ("\u0048\u0065\u006c\u0076\u0065\u0074\u0069\u0063\u0061\u002d\u004f\u0062l\u0069\u0071\u0075\u0065");
HelveticaBoldObliqueName =StdFontName ("H\u0065\u006c\u0076\u0065ti\u0063a\u002d\u0042\u006f\u006c\u0064O\u0062\u006c\u0069\u0071\u0075\u0065"););var _bbg *RuneCharSafeMap ;func (_bdag *ttfParser )ReadStr (length int )(string ,error ){_eadg :=make ([]byte ,length );
_geec ,_dgfd :=_bdag ._gcff .Read (_eadg );if _dgfd !=nil {return "",_dgfd ;}else if _geec !=length {return "",_c .Errorf ("\u0075\u006e\u0061bl\u0065\u0020\u0074\u006f\u0020\u0072\u0065\u0061\u0064\u0020\u0025\u0064\u0020\u0062\u0079\u0074\u0065\u0073",length );
};return string (_eadg ),nil ;};func (_aaa StdFont )Encoder ()_gg .TextEncoder {return _aaa ._fb };func (_db *RuneCharSafeMap )Length ()int {_db ._cg .RLock ();defer _db ._cg .RUnlock ();return len (_db ._bb );};type Descriptor struct{Name StdFontName ;
Family string ;Weight FontWeight ;Flags uint ;BBox [4]float64 ;ItalicAngle float64 ;Ascent float64 ;Descent float64 ;CapHeight float64 ;XHeight float64 ;StemV float64 ;StemH float64 ;};func (_bccd *ttfParser )Skip (n int ){_bccd ._gcff .Seek (int64 (n ),_fe .SeekCurrent )};
func (_aae *ttfParser )ParseComponents ()error {if _aad :=_aae .ParseHead ();_aad !=nil {return _aad ;};if _gaag :=_aae .ParseHhea ();_gaag !=nil {return _gaag ;};if _gfeb :=_aae .ParseMaxp ();_gfeb !=nil {return _gfeb ;};if _ddd :=_aae .ParseHmtx ();_ddd !=nil {return _ddd ;
};if _ ,_fea :=_aae ._fegb ["\u006e\u0061\u006d\u0065"];_fea {if _gage :=_aae .ParseName ();_gage !=nil {return _gage ;};};if _ ,_dcb :=_aae ._fegb ["\u004f\u0053\u002f\u0032"];_dcb {if _bcab :=_aae .ParseOS2 ();_bcab !=nil {return _bcab ;};};if _ ,_agbfd :=_aae ._fegb ["\u0070\u006f\u0073\u0074"];
_agbfd {if _aaf :=_aae .ParsePost ();_aaf !=nil {return _aaf ;};};if _ ,_cba :=_aae ._fegb ["\u0063\u006d\u0061\u0070"];_cba {if _acb :=_aae .ParseCmap ();_acb !=nil {return _acb ;};};return nil ;};type FontWeight int ;func (_fdb *ttfParser )ReadUShort ()(_gceg uint16 ){_gc .Read (_fdb ._gcff ,_gc .BigEndian ,&_gceg );
return _gceg ;};func (_gag StdFont )GetMetricsTable ()*RuneCharSafeMap {return _gag ._cc };func NewStdFontWithEncoding (desc Descriptor ,metrics *RuneCharSafeMap ,encoder _gg .TextEncoder )StdFont {var _gcf rune =0xA0;if _ ,_ddg :=metrics .Read (_gcf );
!_ddg {_df ,_ :=metrics .Read (0x20);metrics .Write (_gcf ,_df );};return StdFont {_eac :desc ,_cc :metrics ,_fb :encoder };};func (_cgc *RuneCharSafeMap )Read (b rune )(CharMetrics ,bool ){_cgc ._cg .RLock ();defer _cgc ._cg .RUnlock ();_ga ,_af :=_cgc ._bb [b ];
return _ga ,_af ;};func (_aed *ttfParser )ParsePost ()error {if _egb :=_aed .Seek ("\u0070\u006f\u0073\u0074");_egb !=nil {return _egb ;};_agf :=_aed .Read32Fixed ();_aed ._ecc .ItalicAngle =_aed .Read32Fixed ();_aed ._ecc .UnderlinePosition =_aed .ReadShort ();
_aed ._ecc .UnderlineThickness =_aed .ReadShort ();_aed ._ecc .IsFixedPitch =_aed .ReadULong ()!=0;_aed .ReadULong ();_aed .ReadULong ();_aed .ReadULong ();_aed .ReadULong ();_cbe .Log .Trace ("\u0050a\u0072\u0073\u0065\u0050\u006f\u0073\u0074\u003a\u0020\u0066\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065\u003d\u0025\u0066",_agf );
switch _agf {case 1.0:_aed ._ecc .GlyphNames =_dfaa ;case 2.0:_aegb :=int (_aed .ReadUShort ());_baf :=make ([]int ,_aegb );_aed ._ecc .GlyphNames =make ([]GlyphName ,_aegb );_fcdb :=-1;for _dcac :=0;_dcac < _aegb ;_dcac ++{_fff :=int (_aed .ReadUShort ());
_baf [_dcac ]=_fff ;if _fff <=0x7fff&&_fff > _fcdb {_fcdb =_fff ;};};var _bbfg []GlyphName ;if _fcdb >=len (_dfaa ){_bbfg =make ([]GlyphName ,_fcdb -len (_dfaa )+1);for _efdb :=0;_efdb < _fcdb -len (_dfaa )+1;_efdb ++{_gef :=int (_aed .readByte ());_fcgf ,_cagd :=_aed .ReadStr (_gef );
if _cagd !=nil {return _cagd ;};_bbfg [_efdb ]=GlyphName (_fcgf );};};for _cfb :=0;_cfb < _aegb ;_cfb ++{_ceab :=_baf [_cfb ];if _ceab < len (_dfaa ){_aed ._ecc .GlyphNames [_cfb ]=_dfaa [_ceab ];}else if _ceab >=len (_dfaa )&&_ceab <=32767{_aed ._ecc .GlyphNames [_cfb ]=_bbfg [_ceab -len (_dfaa )];
}else {_aed ._ecc .GlyphNames [_cfb ]="\u002e\u0075\u006e\u0064\u0065\u0066\u0069\u006e\u0065\u0064";};};case 2.5:_fbae :=make ([]int ,_aed ._efb );for _cgce :=0;_cgce < len (_fbae );_cgce ++{_dbgd :=int (_aed .ReadSByte ());_fbae [_cgce ]=_cgce +1+_dbgd ;
};_aed ._ecc .GlyphNames =make ([]GlyphName ,len (_fbae ));for _efbe :=0;_efbe < len (_aed ._ecc .GlyphNames );_efbe ++{_fgca :=_dfaa [_fbae [_efbe ]];_aed ._ecc .GlyphNames [_efbe ]=_fgca ;};case 3.0:_cbe .Log .Debug ("\u004e\u006f\u0020\u0050\u006f\u0073t\u0053\u0063\u0072i\u0070\u0074\u0020n\u0061\u006d\u0065\u0020\u0069\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020is\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0066\u006f\u006e\u0074\u002e");
default:_cbe .Log .Debug ("\u0045\u0052\u0052\u004fR\u003a\u0020\u0055\u006e\u006b\u006e\u006f\u0077\u006e\u0020f\u006fr\u006d\u0061\u0074\u0054\u0079\u0070\u0065=\u0025\u0066",_agf );};return nil ;};type RuneCharSafeMap struct{_bb map[rune ]CharMetrics ;
_cg _ce .RWMutex ;};var _gaa =[]int16 {722,1000,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,722,612,667,667,667,667,667,667,667,667,667,722,556,611,778,778,778,722,278,278,278,278,278,278,278,278,556,722,722,611,611,611,611,611,833,722,722,722,722,722,778,1000,778,778,778,778,778,778,778,778,667,778,722,722,722,722,667,667,667,667,667,611,611,611,667,722,722,722,722,722,722,722,722,722,667,944,667,667,667,667,611,611,611,611,556,556,556,556,333,556,889,556,556,722,556,556,584,584,389,975,556,611,278,280,389,389,333,333,333,280,350,556,556,333,556,556,333,556,333,333,278,250,737,556,611,556,556,743,611,400,333,584,556,333,278,556,556,556,556,556,556,556,556,1000,556,1000,556,556,584,611,333,333,333,611,556,611,556,556,167,611,611,611,611,333,584,549,556,556,333,333,611,333,333,278,278,278,278,278,278,278,278,556,556,278,278,400,278,584,549,584,494,278,889,333,584,611,584,611,611,611,611,556,549,611,556,611,611,611,611,944,333,611,611,611,556,834,834,333,370,365,611,611,611,556,333,333,494,889,278,278,1000,584,584,611,611,611,474,500,500,500,278,278,278,238,389,389,549,389,389,737,333,556,556,556,556,556,556,333,556,556,278,278,556,600,333,389,333,611,556,834,333,333,1000,556,333,611,611,611,611,611,611,611,556,611,611,556,778,556,556,556,556,556,500,500,500,500,556};
var _afe =&RuneCharSafeMap {_bb :map[rune ]CharMetrics {' ':{Wx :278},'→':{Wx :838},'↔':{Wx :1016},'↕':{Wx :458},'①':{Wx :788},'②':{Wx :788},'③':{Wx :788},'④':{Wx :788},'⑤':{Wx :788},'⑥':{Wx :788},'⑦':{Wx :788},'⑧':{Wx :788},'⑨':{Wx :788},'⑩':{Wx :788},'■':{Wx :761},'▲':{Wx :892},'▼':{Wx :892},'◆':{Wx :788},'●':{Wx :791},'◗':{Wx :438},'★':{Wx :816},'☎':{Wx :719},'☛':{Wx :960},'☞':{Wx :939},'♠':{Wx :626},'♣':{Wx :776},'♥':{Wx :694},'♦':{Wx :595},'✁':{Wx :974},'✂':{Wx :961},'✃':{Wx :974},'✄':{Wx :980},'✆':{Wx :789},'✇':{Wx :790},'✈':{Wx :791},'✉':{Wx :690},'✌':{Wx :549},'✍':{Wx :855},'✎':{Wx :911},'✏':{Wx :933},'✐':{Wx :911},'✑':{Wx :945},'✒':{Wx :974},'✓':{Wx :755},'✔':{Wx :846},'✕':{Wx :762},'✖':{Wx :761},'✗':{Wx :571},'✘':{Wx :677},'✙':{Wx :763},'✚':{Wx :760},'✛':{Wx :759},'✜':{Wx :754},'✝':{Wx :494},'✞':{Wx :552},'✟':{Wx :537},'✠':{Wx :577},'✡':{Wx :692},'✢':{Wx :786},'✣':{Wx :788},'✤':{Wx :788},'✥':{Wx :790},'✦':{Wx :793},'✧':{Wx :794},'✩':{Wx :823},'✪':{Wx :789},'✫':{Wx :841},'✬':{Wx :823},'✭':{Wx :833},'✮':{Wx :816},'✯':{Wx :831},'✰':{Wx :923},'✱':{Wx :744},'✲':{Wx :723},'✳':{Wx :749},'✴':{Wx :790},'✵':{Wx :792},'✶':{Wx :695},'✷':{Wx :776},'✸':{Wx :768},'✹':{Wx :792},'✺':{Wx :759},'✻':{Wx :707},'✼':{Wx :708},'✽':{Wx :682},'✾':{Wx :701},'✿':{Wx :826},'❀':{Wx :815},'❁':{Wx :789},'❂':{Wx :789},'❃':{Wx :707},'❄':{Wx :687},'❅':{Wx :696},'❆':{Wx :689},'❇':{Wx :786},'❈':{Wx :787},'❉':{Wx :713},'❊':{Wx :791},'❋':{Wx :785},'❍':{Wx :873},'❏':{Wx :762},'❐':{Wx :762},'❑':{Wx :759},'❒':{Wx :759},'❖':{Wx :784},'❘':{Wx :138},'❙':{Wx :277},'❚':{Wx :415},'❛':{Wx :392},'❜':{Wx :392},'❝':{Wx :668},'❞':{Wx :668},'❡':{Wx :732},'❢':{Wx :544},'❣':{Wx :544},'❤':{Wx :910},'❥':{Wx :667},'❦':{Wx :760},'❧':{Wx :760},'❶':{Wx :788},'❷':{Wx :788},'❸':{Wx :788},'❹':{Wx :788},'❺':{Wx :788},'❻':{Wx :788},'❼':{Wx :788},'❽':{Wx :788},'❾':{Wx :788},'❿':{Wx :788},'➀':{Wx :788},'➁':{Wx :788},'➂':{Wx :788},'➃':{Wx :788},'➄':{Wx :788},'➅':{Wx :788},'➆':{Wx :788},'➇':{Wx :788},'➈':{Wx :788},'➉':{Wx :788},'➊':{Wx :788},'➋':{Wx :788},'➌':{Wx :788},'➍':{Wx :788},'➎':{Wx :788},'➏':{Wx :788},'➐':{Wx :788},'➑':{Wx :788},'➒':{Wx :788},'➓':{Wx :788},'➔':{Wx :894},'➘':{Wx :748},'➙':{Wx :924},'➚':{Wx :748},'➛':{Wx :918},'➜':{Wx :927},'➝':{Wx :928},'➞':{Wx :928},'➟':{Wx :834},'➠':{Wx :873},'➡':{Wx :828},'➢':{Wx :924},'➣':{Wx :924},'➤':{Wx :917},'➥':{Wx :930},'➦':{Wx :931},'➧':{Wx :463},'➨':{Wx :883},'➩':{Wx :836},'➪':{Wx :836},'➫':{Wx :867},'➬':{Wx :867},'➭':{Wx :696},'➮':{Wx :696},'➯':{Wx :874},'➱':{Wx :874},'➲':{Wx :760},'➳':{Wx :946},'➴':{Wx :771},'➵':{Wx :865},'➶':{Wx :771},'➷':{Wx :888},'➸':{Wx :967},'➹':{Wx :888},'➺':{Wx :831},'➻':{Wx :873},'➼':{Wx :927},'➽':{Wx :970},'➾':{Wx :918},'\uf8d7':{Wx :390},'\uf8d8':{Wx :390},'\uf8d9':{Wx :317},'\uf8da':{Wx :317},'\uf8db':{Wx :276},'\uf8dc':{Wx :276},'\uf8dd':{Wx :509},'\uf8de':{Wx :509},'\uf8df':{Wx :410},'\uf8e0':{Wx :410},'\uf8e1':{Wx :234},'\uf8e2':{Wx :234},'\uf8e3':{Wx :334},'\uf8e4':{Wx :334}}};
func _aff (){const _fef =600;_fbe =MakeRuneCharSafeMap (len (_bd ));for _ ,_gbg :=range _bd {_fbe .Write (_gbg ,CharMetrics {Wx :_fef });};_ebd =_fbe .Copy ();_ceg =_fbe .Copy ();_dfa =_fbe .Copy ();};func (_cdg *TtfType )MakeToUnicode ()*_d .CMap {_bac :=make (map[_d .CharCode ]rune );
if len (_cdg .GlyphNames )==0{return _d .NewToUnicodeCMap (_bac );};for _fee ,_ebdg :=range _cdg .Chars {_cad :=_d .CharCode (_fee );_bef :=_cdg .GlyphNames [_ebdg ];_bbf ,_fcf :=_gg .GlyphToRune (_bef );if !_fcf {_cbe .Log .Debug ("\u004e\u006f \u0072\u0075\u006e\u0065\u002e\u0020\u0063\u006f\u0064\u0065\u003d\u0030\u0078\u0025\u0030\u0034\u0078\u0020\u0067\u006c\u0079\u0070h=\u0025\u0071",_fee ,_bef );
_bbf =_gg .MissingCodeRune ;};_bac [_cad ]=_bbf ;};return _d .NewToUnicodeCMap (_bac );};var _afg =&RuneCharSafeMap {_bb :map[rune ]CharMetrics {' ':{Wx :250},'!':{Wx :333},'#':{Wx :500},'%':{Wx :833},'&':{Wx :778},'(':{Wx :333},')':{Wx :333},'+':{Wx :549},',':{Wx :250},'.':{Wx :250},'/':{Wx :278},'0':{Wx :500},'1':{Wx :500},'2':{Wx :500},'3':{Wx :500},'4':{Wx :500},'5':{Wx :500},'6':{Wx :500},'7':{Wx :500},'8':{Wx :500},'9':{Wx :500},':':{Wx :278},';':{Wx :278},'<':{Wx :549},'=':{Wx :549},'>':{Wx :549},'?':{Wx :444},'[':{Wx :333},']':{Wx :333},'_':{Wx :500},'{':{Wx :480},'|':{Wx :200},'}':{Wx :480},'¬':{Wx :713},'°':{Wx :400},'±':{Wx :549},'µ':{Wx :576},'×':{Wx :549},'÷':{Wx :549},'ƒ':{Wx :500},'Α':{Wx :722},'Β':{Wx :667},'Γ':{Wx :603},'Ε':{Wx :611},'Ζ':{Wx :611},'Η':{Wx :722},'Θ':{Wx :741},'Ι':{Wx :333},'Κ':{Wx :722},'Λ':{Wx :686},'Μ':{Wx :889},'Ν':{Wx :722},'Ξ':{Wx :645},'Ο':{Wx :722},'Π':{Wx :768},'Ρ':{Wx :556},'Σ':{Wx :592},'Τ':{Wx :611},'Υ':{Wx :690},'Φ':{Wx :763},'Χ':{Wx :722},'Ψ':{Wx :795},'α':{Wx :631},'β':{Wx :549},'γ':{Wx :411},'δ':{Wx :494},'ε':{Wx :439},'ζ':{Wx :494},'η':{Wx :603},'θ':{Wx :521},'ι':{Wx :329},'κ':{Wx :549},'λ':{Wx :549},'ν':{Wx :521},'ξ':{Wx :493},'ο':{Wx :549},'π':{Wx :549},'ρ':{Wx :549},'ς':{Wx :439},'σ':{Wx :603},'τ':{Wx :439},'υ':{Wx :576},'φ':{Wx :521},'χ':{Wx :549},'ψ':{Wx :686},'ω':{Wx :686},'ϑ':{Wx :631},'ϒ':{Wx :620},'ϕ':{Wx :603},'ϖ':{Wx :713},'•':{Wx :460},'…':{Wx :1000},'′':{Wx :247},'″':{Wx :411},'⁄':{Wx :167},'€':{Wx :750},'ℑ':{Wx :686},'℘':{Wx :987},'ℜ':{Wx :795},'Ω':{Wx :768},'ℵ':{Wx :823},'←':{Wx :987},'↑':{Wx :603},'→':{Wx :987},'↓':{Wx :603},'↔':{Wx :1042},'↵':{Wx :658},'⇐':{Wx :987},'⇑':{Wx :603},'⇒':{Wx :987},'⇓':{Wx :603},'⇔':{Wx :1042},'∀':{Wx :713},'∂':{Wx :494},'∃':{Wx :549},'∅':{Wx :823},'∆':{Wx :612},'∇':{Wx :713},'∈':{Wx :713},'∉':{Wx :713},'∋':{Wx :439},'∏':{Wx :823},'∑':{Wx :713},'−':{Wx :549},'∗':{Wx :500},'√':{Wx :549},'∝':{Wx :713},'∞':{Wx :713},'∠':{Wx :768},'∧':{Wx :603},'∨':{Wx :603},'∩':{Wx :768},'∪':{Wx :768},'∫':{Wx :274},'∴':{Wx :863},'∼':{Wx :549},'≅':{Wx :549},'≈':{Wx :549},'≠':{Wx :549},'≡':{Wx :549},'≤':{Wx :549},'≥':{Wx :549},'⊂':{Wx :713},'⊃':{Wx :713},'⊄':{Wx :713},'⊆':{Wx :713},'⊇':{Wx :713},'⊕':{Wx :768},'⊗':{Wx :768},'⊥':{Wx :658},'⋅':{Wx :250},'⌠':{Wx :686},'⌡':{Wx :686},'〈':{Wx :329},'〉':{Wx :329},'◊':{Wx :494},'♠':{Wx :753},'♣':{Wx :753},'♥':{Wx :753},'♦':{Wx :753},'\uf6d9':{Wx :790},'\uf6da':{Wx :790},'\uf6db':{Wx :890},'\uf8e5':{Wx :500},'\uf8e6':{Wx :603},'\uf8e7':{Wx :1000},'\uf8e8':{Wx :790},'\uf8e9':{Wx :790},'\uf8ea':{Wx :786},'\uf8eb':{Wx :384},'\uf8ec':{Wx :384},'\uf8ed':{Wx :384},'\uf8ee':{Wx :384},'\uf8ef':{Wx :384},'\uf8f0':{Wx :384},'\uf8f1':{Wx :494},'\uf8f2':{Wx :494},'\uf8f3':{Wx :494},'\uf8f4':{Wx :494},'\uf8f5':{Wx :686},'\uf8f6':{Wx :384},'\uf8f7':{Wx :384},'\uf8f8':{Wx :384},'\uf8f9':{Wx :384},'\uf8fa':{Wx :384},'\uf8fb':{Wx :384},'\uf8fc':{Wx :494},'\uf8fd':{Wx :494},'\uf8fe':{Wx :494},'\uf8ff':{Wx :790}}};
func _gceb ()StdFont {_eaa .Do (_adaa );_ebf :=Descriptor {Name :TimesBoldName ,Family :_dba ,Weight :FontWeightBold ,Flags :0x0020,BBox :[4]float64 {-168,-218,1000,935},ItalicAngle :0,Ascent :683,Descent :-217,CapHeight :676,XHeight :461,StemV :139,StemH :44};
return NewStdFont (_ebf ,_dae );};func (_gge CharMetrics )String ()string {return _c .Sprintf ("<\u0025\u002e\u0031\u0066\u002c\u0025\u002e\u0031\u0066\u003e",_gge .Wx ,_gge .Wy );};func NewFontFile2FromPdfObject (obj _age .PdfObject )(TtfType ,error ){obj =_age .TraceToDirectObject (obj );
_dfeg ,_gdcf :=obj .(*_age .PdfObjectStream );if !_gdcf {_cbe .Log .Debug ("\u0045\u0052\u0052\u004f\u0052\u003a\u0020\u0046\u006f\u006e\u0074\u0046\u0069\u006c\u0065\u0032\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065 \u0061\u0020\u0073\u0074\u0072e\u0061\u006d \u0028\u0025\u0054\u0029",obj );
return TtfType {},_age .ErrTypeError ;};_eeda ,_cgb :=_age .DecodeStream (_dfeg );if _cgb !=nil {return TtfType {},_cgb ;};_bfg :=ttfParser {_gcff :_e .NewReader (_eeda )};return _bfg .Parse ();};func (_gced *ttfParser )parseCmapFormat6 ()error {_beb :=int (_gced .ReadUShort ());
_ead :=int (_gced .ReadUShort ());_cbe .Log .Trace ("p\u0061\u0072\u0073\u0065\u0043\u006d\u0061\u0070\u0046o\u0072\u006d\u0061\u0074\u0036\u003a\u0020%s\u0020\u0066\u0069\u0072s\u0074\u0043\u006f\u0064\u0065\u003d\u0025\u0064\u0020en\u0074\u0072y\u0043\u006f\u0075\u006e\u0074\u003d\u0025\u0064",_gced ._ecc .String (),_beb ,_ead );
for _dcad :=0;_dcad < _ead ;_dcad ++{_gfef :=GID (_gced .ReadUShort ());_gced ._ecc .Chars [rune (_dcad +_beb )]=_gfef ;};return nil ;};func _afed ()StdFont {_eaa .Do (_adaa );_gaac :=Descriptor {Name :TimesBoldItalicName ,Family :_dba ,Weight :FontWeightBold ,Flags :0x0060,BBox :[4]float64 {-200,-218,996,921},ItalicAngle :-15,Ascent :683,Descent :-217,CapHeight :669,XHeight :462,StemV :121,StemH :42};
return NewStdFont (_gaac ,_gdg );};func (_dcgd *ttfParser )ReadSByte ()(_gcb int8 ){_gc .Read (_dcgd ._gcff ,_gc .BigEndian ,&_gcb );return _gcb ;};func _caf ()StdFont {_fae .Do (_aff );_bg :=Descriptor {Name :CourierObliqueName ,Family :string (CourierName ),Weight :FontWeightMedium ,Flags :0x0061,BBox :[4]float64 {-27,-250,849,805},ItalicAngle :-12,Ascent :629,Descent :-157,CapHeight :562,XHeight :426,StemV :51,StemH :51};
return NewStdFont (_bg ,_dfa );};type StdFont struct{_eac Descriptor ;_cc *RuneCharSafeMap ;_fb _gg .TextEncoder ;};var _fae _ce .Once ;var _bd =[]rune {'A','Æ','Á','Ă','Â','Ä','À','Ā','Ą','Å','Ã','B','C','Ć','Č','Ç','D','Ď','Đ','∆','E','É','Ě','Ê','Ë','Ė','È','Ē','Ę','Ð','€','F','G','Ğ','Ģ','H','I','Í','Î','Ï','İ','Ì','Ī','Į','J','K','Ķ','L','Ĺ','Ľ','Ļ','Ł','M','N','Ń','Ň','Ņ','Ñ','O','Œ','Ó','Ô','Ö','Ò','Ő','Ō','Ø','Õ','P','Q','R','Ŕ','Ř','Ŗ','S','Ś','Š','Ş','Ș','T','Ť','Ţ','Þ','U','Ú','Û','Ü','Ù','Ű','Ū','Ų','Ů','V','W','X','Y','Ý','Ÿ','Z','Ź','Ž','Ż','a','á','ă','â','´','ä','æ','à','ā','&','ą','å','^','~','*','@','ã','b','\\','|','{','}','[',']','˘','¦','•','c','ć','ˇ','č','ç','¸','¢','ˆ',':',',','\uf6c3','©','¤','d','†','‡','ď','đ','°','¨','÷','$','˙','ı','e','é','ě','ê','ë','ė','è','8','…','ē','—','–','ę','=','ð','!','¡','f','ﬁ','5','ﬂ','ƒ','4','⁄','g','ğ','ģ','ß','`','>','≥','«','»','‹','›','h','˝','-','i','í','î','ï','ì','ī','į','j','k','ķ','l','ĺ','ľ','ļ','<','≤','¬','◊','ł','m','¯','−','µ','×','n','ń','ň','ņ','9','≠','ñ','#','o','ó','ô','ö','œ','˛','ò','ő','ō','1','½','¼','¹','ª','º','ø','õ','p','¶','(',')','∂','%','.','·','‰','+','±','q','?','¿','"','„','“','”','‘','’','‚','\'','r','ŕ','√','ř','ŗ','®','˚','s','ś','š','ş','ș','§',';','7','6','/',' ','£','∑','t','ť','ţ','þ','3','¾','³','˜','™','2','²','u','ú','û','ü','ù','ű','ū','_','ų','ů','v','w','x','y','ý','ÿ','¥','z','ź','ž','ż','0'};
var _cff _ce .Once ;type GID =_gg .GID ;func RegisterStdFont (name StdFontName ,fnc func ()StdFont ,aliases ...StdFontName ){if _ ,_fce :=_ea .read (name );_fce {panic ("\u0066o\u006e\u0074\u0020\u0061l\u0072\u0065\u0061\u0064\u0079 \u0072e\u0067i\u0073\u0074\u0065\u0072\u0065\u0064\u003a "+string (name ));
};_ea .write (name ,fnc );for _ ,_afd :=range aliases {RegisterStdFont (_afd ,fnc );};};func (_afc *TtfType )String ()string {return _c .Sprintf ("\u0046\u004fN\u0054\u005f\u0046\u0049\u004cE\u0032\u007b\u0025\u0023\u0071 \u0055\u006e\u0069\u0074\u0073\u0050\u0065\u0072\u0045\u006d\u003d\u0025\u0064\u0020\u0042\u006f\u006c\u0064\u003d\u0025\u0074\u0020\u0049\u0074\u0061\u006c\u0069\u0063\u0041\u006e\u0067\u006c\u0065\u003d\u0025\u0066\u0020"+"\u0043\u0061pH\u0065\u0069\u0067h\u0074\u003d\u0025\u0064 Ch\u0061rs\u003d\u0025\u0064\u0020\u0047\u006c\u0079ph\u004e\u0061\u006d\u0065\u0073\u003d\u0025d\u007d",_afc .PostScriptName ,_afc .UnitsPerEm ,_afc .Bold ,_afc .ItalicAngle ,_afc .CapHeight ,len (_afc .Chars ),len (_afc .GlyphNames ));
};func (_cgde *ttfParser )ParseMaxp ()error {if _dab :=_cgde .Seek ("\u006d\u0061\u0078\u0070");_dab !=nil {return _dab ;};_cgde .Skip (4);_cgde ._efb =_cgde .ReadUShort ();return nil ;};var _dgac *RuneCharSafeMap ;
//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package license ;import (_fb "bytes";_g "compress/gzip";_bf "crypto";_a "crypto/aes";_fg "crypto/cipher";_gdc "crypto/rand";_beg "crypto/rsa";_gea "crypto/sha512";_be "crypto/x509";_gd "encoding/base64";_gb "encoding/hex";_gdg "encoding/json";_fc "encoding/pem";
_ed "errors";_eda "fmt";_ag "github.com/unidoc/unipdf/v3/common";_e "io";_bb "io/ioutil";_ge "net";_f "net/http";_gfg "os";_gf "path/filepath";_c "sort";_bc "strings";_d "sync";_db "time";);var _ab =_db .Date (2010,1,1,0,0,0,0,_db .UTC );func _fgd (_cb string ,_geba string ,_af bool )error {if _aef ==nil {return _ed .New ("\u006e\u006f\u0020\u006c\u0069\u0063\u0065\u006e\u0073e\u0020\u006b\u0065\u0079");
};if !_aef ._gbg ||len (_aef ._eeb )==0{return nil ;};if len (_cb )==0&&!_af {return _ed .New ("\u0064\u006f\u0063\u004b\u0065\u0079\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");};_cee .Lock ();defer _cee .Unlock ();if _bacb ==nil {_bacb =map[string ]struct{}{};
};if _eea ==nil {_eea =map[string ]int {};};_fdac :=0;if !_af {_ ,_dce :=_bacb [_cb ];if !_dce {_bacb [_cb ]=struct{}{};_fdac ++;};if _fdac ==0{return nil ;};_eea [_geba ]++;};_ecad :=_db .Now ();_gcca ,_afa :=_bga .loadState (_aef ._eeb );if _afa !=nil {_ag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_afa );
return _afa ;};if _gcca .Usage ==nil {_gcca .Usage =map[string ]int {};};for _cag ,_gdge :=range _eea {_gcca .Usage [_cag ]+=_gdge ;};_eea =nil ;const _cfa =24*_db .Hour ;const _eaa =3*24*_db .Hour ;if len (_gcca .Instance )==0||_ecad .Sub (_gcca .LastReported )> _cfa ||(_gcca .LimitDocs &&_gcca .RemainingDocs <=_gcca .Docs +int64 (_fdac ))||_af {_fgg ,_bge :=_gfg .Hostname ();
if _bge !=nil {return _bge ;};_faa :=_gcca .Docs ;_gcb ,_fge ,_bge :=_eae ();if _bge !=nil {_ag .Log .Debug ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u006c\u006fc\u0061\u006c\u0020\u0061\u0064\u0064\u0072\u0065\u0073\u0073\u003a\u0020\u0025\u0073",_bge .Error ());
_gcb =append (_gcb ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");_fge =append (_fge ,"\u0069n\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0020n\u006ft\u0020a\u0076\u0061\u0069\u006c\u0061\u0062\u006ce");
}else {_c .Strings (_fge );_c .Strings (_gcb );_agcf ,_bda :=_ebc ();if _bda !=nil {return _bda ;};_baeb :=false ;for _ ,_acgd :=range _fge {if _acgd ==_agcf .String (){_baeb =true ;};};if !_baeb {_fge =append (_fge ,_agcf .String ());};};_decg :=_bfc ();
_decg ._cff =_aef ._eeb ;_faa +=int64 (_fdac );_acb :=meteredUsageCheckinForm {Instance :_gcca .Instance ,Next :_gcca .Next ,UsageNumber :int (_faa ),NumFailed :_gcca .NumErrors ,Hostname :_fgg ,LocalIP :_bc .Join (_fge ,"\u002c\u0020"),MacAddress :_bc .Join (_gcb ,"\u002c\u0020"),Package :"\u0075\u006e\u0069\u0070\u0064\u0066",PackageVersion :_ag .Version ,Usage :_gcca .Usage };
if len (_gcb )==0{_acb .MacAddress ="\u006e\u006f\u006e\u0065";};_dbc :=int64 (0);_fab :=_gcca .NumErrors ;_gdd :=_ecad ;_cbg :=0;_cdeg :=_gcca .LimitDocs ;_gfeg ,_bge :=_decg .checkinUsage (_acb );if _bge !=nil {if _ecad .Sub (_gcca .LastReported )> _eaa {return _ed .New ("\u0074\u006f\u006f\u0020\u006c\u006f\u006e\u0067\u0020\u0073\u0069\u006e\u0063\u0065\u0020\u006c\u0061\u0073\u0074\u0020\u0073\u0075\u0063\u0063e\u0073\u0073\u0066\u0075\u006c \u0063\u0068e\u0063\u006b\u0069\u006e");
};_dbc =_faa ;_fab ++;_gdd =_gcca .LastReported ;}else {_cdeg =_gfeg .LimitDocs ;_cbg =_gfeg .RemainingDocs ;_fab =0;};if len (_gfeg .Instance )==0{_gfeg .Instance =_acb .Instance ;};if len (_gfeg .Next )==0{_gfeg .Next =_acb .Next ;};_bge =_bga .updateState (_decg ._cff ,_gfeg .Instance ,_gfeg .Next ,int (_dbc ),_cdeg ,_cbg ,int (_fab ),_gdd ,nil );
if _bge !=nil {return _bge ;};if !_gfeg .Success {return _eda .Errorf ("\u0065r\u0072\u006f\u0072\u003a\u0020\u0025s",_gfeg .Message );};}else {_afa =_bga .updateState (_aef ._eeb ,_gcca .Instance ,_gcca .Next ,int (_gcca .Docs )+_fdac ,_gcca .LimitDocs ,int (_gcca .RemainingDocs ),int (_gcca .NumErrors ),_gcca .LastReported ,_gcca .Usage );
if _afa !=nil {return _afa ;};};return nil ;};func (_fgc *meteredClient )getStatus ()(meteredStatusResp ,error ){var _ddf meteredStatusResp ;_ggba :=_fgc ._gc +"\u002fm\u0065t\u0065\u0072\u0065\u0064\u002f\u0073\u0074\u0061\u0074\u0075\u0073";var _edc meteredStatusForm ;
_ddb ,_ga :=_gdg .Marshal (_edc );if _ga !=nil {return _ddf ,_ga ;};_geg ,_ga :=_gfa (_ddb );if _ga !=nil {return _ddf ,_ga ;};_agc ,_ga :=_f .NewRequest ("\u0050\u004f\u0053\u0054",_ggba ,_geg );if _ga !=nil {return _ddf ,_ga ;};_agc .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_agc .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_agc .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_agc .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_fgc ._cff );_bae ,_ga :=_fgc ._cdf .Do (_agc );if _ga !=nil {return _ddf ,_ga ;};defer _bae .Body .Close ();if _bae .StatusCode !=200{return _ddf ,_eda .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_bae .StatusCode );
};_cfg ,_ga :=_bdaa (_bae );if _ga !=nil {return _ddf ,_ga ;};_ga =_gdg .Unmarshal (_cfg ,&_ddf );if _ga !=nil {return _ddf ,_ga ;};return _ddf ,nil ;};var _cee =&_d .Mutex {};func (_fgb *LicenseKey )TypeToString ()string {if _fgb ._gbg {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};if _fgb .Tier ==LicenseTierUnlicensed {return "\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";};if _fgb .Tier ==LicenseTierCommunity {return "\u0041\u0047PL\u0076\u0033\u0020O\u0070\u0065\u006e\u0020Sou\u0072ce\u0020\u0043\u006f\u006d\u006d\u0075\u006eit\u0079\u0020\u004c\u0069\u0063\u0065\u006es\u0065";
};if _fgb .Tier ==LicenseTierIndividual ||_fgb .Tier =="\u0069\u006e\u0064i\u0065"{return "\u0043\u006f\u006dm\u0065\u0072\u0063\u0069a\u006c\u0020\u004c\u0069\u0063\u0065\u006es\u0065\u0020\u002d\u0020\u0049\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
};return "\u0043\u006fm\u006d\u0065\u0072\u0063\u0069\u0061\u006c\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u002d\u0020\u0042\u0075\u0073\u0069ne\u0073\u0073";};type meteredStatusResp struct{Valid bool `json:"valid"`;OrgCredits int64 `json:"org_credits"`;
OrgUsed int64 `json:"org_used"`;OrgRemaining int64 `json:"org_remaining"`;};const _beae ="\u000a\u002d\u002d\u002d\u002d\u002d\u0042\u0045\u0047\u0049\u004e \u0050\u0055\u0042\u004c\u0049\u0043\u0020\u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\u000a\u004d\u0049I\u0042\u0049\u006a\u0041NB\u0067\u006b\u0071\u0068\u006b\u0069G\u0039\u0077\u0030\u0042\u0041\u0051\u0045\u0046A\u0041\u004f\u0043\u0041\u0051\u0038\u0041\u004d\u0049\u0049\u0042\u0043\u0067\u004b\u0043\u0041\u0051\u0045A\u006dF\u0055\u0069\u0079\u0064\u0037\u0062\u0035\u0058\u006a\u0070\u006b\u0050\u0035\u0052\u0061\u0070\u0034\u0077\u000a\u0044\u0063\u0031d\u0079\u007a\u0049\u0051\u0034\u004c\u0065\u006b\u0078\u0072\u0076\u0079\u0074\u006e\u0045\u004d\u0070\u004e\u0055\u0062\u006f\u0036i\u0041\u0037\u0034\u0056\u0038\u0072\u0075\u005a\u004f\u0076\u0072\u0053\u0063\u0073\u0066\u0032\u0051\u0065\u004e9\u002f\u0071r\u0055\u0047\u0038\u0071\u0045\u0062\u0055\u0057\u0064\u006f\u0045\u0059\u0071+\u000a\u006f\u0074\u0046\u004e\u0041\u0046N\u0078\u006c\u0047\u0062\u0078\u0062\u0044\u0048\u0063\u0064\u0047\u0056\u0061\u004d\u0030\u004f\u0058\u0064\u0058g\u0044y\u004c5\u0061\u0049\u0045\u0061\u0067\u004c\u0030\u0063\u0035\u0070\u0077\u006a\u0049\u0064\u0050G\u0049\u006e\u0034\u0036\u0066\u0037\u0038\u0065\u004d\u004a\u002b\u004a\u006b\u0064\u0063\u0070\u0044\n\u0044\u004a\u0061\u0071\u0059\u0058d\u0072\u007a5\u004b\u0065\u0073\u0068\u006aS\u0069\u0049\u0061\u0061\u0037\u006d\u0065\u006e\u0042\u0049\u0041\u0058\u0053\u0034\u0055\u0046\u0078N\u0066H\u0068\u004e\u0030\u0048\u0043\u0059\u005a\u0059\u0071\u0051\u0047\u0037\u0062K+\u0073\u0035\u0072R\u0048\u006f\u006e\u0079\u0064\u004eW\u0045\u0047\u000a\u0048\u0038M\u0079\u0076\u00722\u0070\u0079\u0061\u0032K\u0072\u004d\u0075m\u0066\u006d\u0041\u0078\u0055\u0042\u0036\u0066\u0065\u006e\u0043\u002f4\u004f\u0030\u0057\u00728\u0067\u0066\u0050\u004f\u0055\u0038R\u0069\u0074\u006d\u0062\u0044\u0076\u0051\u0050\u0049\u0052\u0058\u004fL\u0034\u0076\u0054B\u0072\u0042\u0064\u0062a\u0041\u000a9\u006e\u0077\u004e\u0050\u002b\u0069\u002f\u002f\u0032\u0030\u004d\u00542\u0062\u0078\u006d\u0065\u0057\u0042\u002b\u0067\u0070\u0063\u0045\u0068G\u0070\u0058\u005a7\u0033\u0033\u0061\u007a\u0051\u0078\u0072\u0043\u0033\u004a\u0034\u0076\u0033C\u005a\u006d\u0045\u004eS\u0074\u0044\u004b\u002f\u004b\u0044\u0053\u0050\u004b\u0055\u0047\u0066\u00756\u000a\u0066\u0077I\u0044\u0041\u0051\u0041\u0042\u000a\u002d\u002d\u002d\u002d\u002dE\u004e\u0044\u0020\u0050\u0055\u0042\u004c\u0049\u0043 \u004b\u0045Y\u002d\u002d\u002d\u002d\u002d\n";
func (_gbad defaultStateHolder )loadState (_caf string )(reportState ,error ){_gbe :=_caab ();if len (_gbe )==0{return reportState {},_ed .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_efd :=_gf .Join (_gbe ,"\u002eu\u006e\u0069\u0064\u006f\u0063");
_gbc :=_gfg .MkdirAll (_efd ,0777);if _gbc !=nil {return reportState {},_gbc ;};if len (_caf )< 20{return reportState {},_ed .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_aca :=[]byte (_caf );_fed :=_gea .Sum512_256 (_aca [:20]);
_fceg :=_gb .EncodeToString (_fed [:]);_fcce :=_gf .Join (_efd ,_fceg );_egda ,_gbc :=_bb .ReadFile (_fcce );if _gbc !=nil {if _gfg .IsNotExist (_gbc ){return reportState {},nil ;};_ag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_gbc );
return reportState {},_ed .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");};const _ccc ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_egda ,_gbc =_fde ([]byte (_ccc ),_egda );if _gbc !=nil {return reportState {},_gbc ;
};var _egg reportState ;_gbc =_gdg .Unmarshal (_egda ,&_egg );if _gbc !=nil {_ag .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0049\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061\u003a\u0020\u0025\u0076",_gbc );return reportState {},_ed .New ("\u0069\u006e\u0076a\u006c\u0069\u0064\u0020\u0064\u0061\u0074\u0061");
};return _egg ,nil ;};func GetLicenseKey ()*LicenseKey {if _aef ==nil {return nil ;};_gbgg :=*_aef ;return &_gbgg ;};func _bdaa (_bgecf *_f .Response )([]byte ,error ){var _aeb []byte ;_ebge ,_efb :=_decga (_bgecf );if _efb !=nil {return _aeb ,_efb ;};
return _bb .ReadAll (_ebge );};func (_aab *LicenseKey )isExpired ()bool {return _aab .getExpiryDateToCompare ().After (*_aab .ExpiresAt )};const (_bfe ="\u002d\u002d\u002d--\u0042\u0045\u0047\u0049\u004e\u0020\u0055\u004e\u0049D\u004fC\u0020L\u0049C\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";
_gfe ="\u002d\u002d\u002d\u002d\u002d\u0045\u004e\u0044\u0020\u0055\u004e\u0049\u0044\u004f\u0043 \u004cI\u0043\u0045\u004e\u0053\u0045\u0020\u004b\u0045\u0059\u002d\u002d\u002d\u002d\u002d";);func SetMeteredKey (apiKey string )error {if len (apiKey )==0{_ag .Log .Error ("\u004d\u0065\u0074\u0065\u0072e\u0064\u0020\u004c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0041\u0050\u0049 \u004b\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079");
_ag .Log .Error ("\u002d\u0020\u0047\u0072\u0061\u0062\u0020\u006f\u006e\u0065\u0020\u0069\u006e\u0020\u0074h\u0065\u0020\u0046\u0072\u0065\u0065\u0020\u0054\u0069\u0065\u0072\u0020\u0061t\u0020\u0068\u0074\u0074\u0070\u0073\u003a\u002f\u002f\u0063\u006c\u006fud\u002e\u0075\u006e\u0069\u0064\u006f\u0063\u002e\u0069\u006f");
return _eda .Errorf ("\u006de\u0074\u0065\u0072e\u0064\u0020\u006ci\u0063en\u0073\u0065\u0020\u0061\u0070\u0069\u0020k\u0065\u0079\u0020\u006d\u0075\u0073\u0074\u0020\u006e\u006f\u0074\u0020\u0062\u0065\u0020\u0065\u006d\u0070\u0074\u0079\u003a\u0020\u0063\u0072\u0065\u0061\u0074\u0065 o\u006ee\u0020\u0061\u0074\u0020\u0068\u0074t\u0070\u0073\u003a\u002f\u002fc\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069\u0064\u006f\u0063.\u0069\u006f");
};if _aef !=nil &&(_aef ._gbg ||_aef .Tier !=LicenseTierUnlicensed ){_ag .Log .Error ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0043\u0061\u006e\u006eo\u0074 \u0073\u0065\u0074\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0074\u0077\u0069c\u0065\u0020\u002d\u0020\u0053\u0068\u006f\u0075\u006c\u0064\u0020\u006a\u0075\u0073\u0074\u0020\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0069z\u0065\u0020\u006f\u006e\u0063\u0065");
return _ed .New ("\u006c\u0069\u0063en\u0073\u0065\u0020\u006b\u0065\u0079\u0020\u0061\u006c\u0072\u0065\u0061\u0064\u0079\u0020\u0073\u0065\u0074");};_bfec :=_bfc ();_bfec ._cff =apiKey ;_eeff ,_agf :=_bfec .getStatus ();if _agf !=nil {return _agf ;};
if !_eeff .Valid {return _ed .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");};_cg :=&LicenseKey {_gbg :true ,_eeb :apiKey };_aef =_cg ;return nil ;};var _ae =_db .Date (2020,1,1,0,0,0,0,_db .UTC );type meteredClient struct{_gc string ;
_cff string ;_cdf *_f .Client ;};func (_fce *LicenseKey )getExpiryDateToCompare ()_db .Time {if _fce .Trial {return _db .Now ().UTC ();};return _ag .ReleasedAt ;};var _bga stateLoader =defaultStateHolder {};type meteredUsageCheckinForm struct{Instance string `json:"inst"`;
Next string `json:"next"`;UsageNumber int `json:"usage_number"`;NumFailed int64 `json:"num_failed"`;Hostname string `json:"hostname"`;LocalIP string `json:"local_ip"`;MacAddress string `json:"mac_address"`;Package string `json:"package"`;PackageVersion string `json:"package_version"`;
Usage map[string ]int `json:"u"`;};func _edgb (_bfac string )(LicenseKey ,error ){var _ba LicenseKey ;_egd ,_ee :=_df (_bfe ,_gfe ,_bfac );if _ee !=nil {return _ba ,_ee ;};_ffb ,_ee :=_bcg (_beae ,_egd );if _ee !=nil {return _ba ,_ee ;};_ee =_gdg .Unmarshal (_ffb ,&_ba );
if _ee !=nil {return _ba ,_ee ;};_ba .CreatedAt =_db .Unix (_ba .CreatedAtInt ,0);if _ba .ExpiresAtInt > 0{_ffc :=_db .Unix (_ba .ExpiresAtInt ,0);_ba .ExpiresAt =&_ffc ;};return _ba ,nil ;};func _fde (_fdd ,_agge []byte )([]byte ,error ){_fgbe :=make ([]byte ,_gd .URLEncoding .DecodedLen (len (_agge )));
_fcg ,_adc :=_gd .URLEncoding .Decode (_fgbe ,_agge );if _adc !=nil {return nil ,_adc ;};_fgbe =_fgbe [:_fcg ];_eeg ,_adc :=_a .NewCipher (_fdd );if _adc !=nil {return nil ,_adc ;};if len (_fgbe )< _a .BlockSize {return nil ,_ed .New ("c\u0069p\u0068\u0065\u0072\u0074\u0065\u0078\u0074\u0020t\u006f\u006f\u0020\u0073ho\u0072\u0074");
};_gec :=_fgbe [:_a .BlockSize ];_fgbe =_fgbe [_a .BlockSize :];_afc :=_fg .NewCFBDecrypter (_eeg ,_gec );_afc .XORKeyStream (_fgbe ,_fgbe );return _fgbe ,nil ;};func _bg (_fd string ,_edg []byte )(string ,error ){_ac ,_ :=_fc .Decode ([]byte (_fd ));if _ac ==nil {return "",_eda .Errorf ("\u0050\u0072\u0069\u0076\u004b\u0065\u0079\u0020\u0066a\u0069\u006c\u0065\u0064");
};_dc ,_eg :=_be .ParsePKCS1PrivateKey (_ac .Bytes );if _eg !=nil {return "",_eg ;};_ea :=_gea .New ();_ea .Write (_edg );_ca :=_ea .Sum (nil );_age ,_eg :=_beg .SignPKCS1v15 (_gdc .Reader ,_dc ,_bf .SHA512 ,_ca );if _eg !=nil {return "",_eg ;};_fda :=_gd .StdEncoding .EncodeToString (_edg );
_fda +="\u000a\u002b\u000a";_fda +=_gd .StdEncoding .EncodeToString (_age );return _fda ,nil ;};func (_fga *LicenseKey )ToString ()string {if _fga ._gbg {return "M\u0065t\u0065\u0072\u0065\u0064\u0020\u0073\u0075\u0062s\u0063\u0072\u0069\u0070ti\u006f\u006e";
};_eb :=_eda .Sprintf ("\u004ci\u0063e\u006e\u0073\u0065\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_fga .LicenseId );_eb +=_eda .Sprintf ("\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u0049\u0064\u003a\u0020\u0025\u0073\u000a",_fga .CustomerId );
_eb +=_eda .Sprintf ("\u0043u\u0073t\u006f\u006d\u0065\u0072\u0020N\u0061\u006de\u003a\u0020\u0025\u0073\u000a",_fga .CustomerName );_eb +=_eda .Sprintf ("\u0054i\u0065\u0072\u003a\u0020\u0025\u0073\n",_fga .Tier );_eb +=_eda .Sprintf ("\u0043r\u0065a\u0074\u0065\u0064\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_ag .UtcTimeFormat (_fga .CreatedAt ));
if _fga .ExpiresAt ==nil {_eb +="\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041t\u003a\u0020N\u0065\u0076\u0065\u0072\u000a";}else {_eb +=_eda .Sprintf ("\u0045x\u0070i\u0072\u0065\u0073\u0020\u0041\u0074\u003a\u0020\u0025\u0073\u000a",_ag .UtcTimeFormat (*_fga .ExpiresAt ));
};_eb +=_eda .Sprintf ("\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u003a\u0020\u0025\u0073\u0020<\u0025\u0073\u003e\u000a",_fga .CreatorName ,_fga .CreatorEmail );return _eb ;};var _aef =MakeUnlicensedKey ();type MeteredStatus struct{OK bool ;Credits int64 ;
Used int64 ;};func _df (_fcc string ,_cf string ,_dd string )(string ,error ){_ddc :=_bc .Index (_dd ,_fcc );if _ddc ==-1{return "",_eda .Errorf ("\u0068\u0065a\u0064\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_ce :=_bc .Index (_dd ,_cf );
if _ce ==-1{return "",_eda .Errorf ("\u0066\u006fo\u0074\u0065\u0072 \u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064");};_ggb :=_ddc +len (_fcc )+1;return _dd [_ggb :_ce -1],nil ;};func _dbe (_efde ,_cdg []byte )([]byte ,error ){_ebd ,_ffg :=_a .NewCipher (_efde );
if _ffg !=nil {return nil ,_ffg ;};_aae :=make ([]byte ,_a .BlockSize +len (_cdg ));_dbbcf :=_aae [:_a .BlockSize ];if _ ,_egf :=_e .ReadFull (_gdc .Reader ,_dbbcf );_egf !=nil {return nil ,_egf ;};_cdda :=_fg .NewCFBEncrypter (_ebd ,_dbbcf );_cdda .XORKeyStream (_aae [_a .BlockSize :],_cdg );
_ffcc :=make ([]byte ,_gd .URLEncoding .EncodedLen (len (_aae )));_gd .URLEncoding .Encode (_ffcc ,_aae );return _ffcc ,nil ;};func _ebc ()(_ge .IP ,error ){_dg ,_ebgb :=_ge .Dial ("\u0075\u0064\u0070","\u0038\u002e\u0038\u002e\u0038\u002e\u0038\u003a\u0038\u0030");
if _ebgb !=nil {return nil ,_ebgb ;};defer _dg .Close ();_gedg :=_dg .LocalAddr ().(*_ge .UDPAddr );return _gedg .IP ,nil ;};type meteredStatusForm struct{};func _caab ()string {_ced :=_gfg .Getenv ("\u0048\u004f\u004d\u0045");if len (_ced )==0{_ced ,_ =_gfg .UserHomeDir ();
};return _ced ;};type stateLoader interface{loadState (_gccb string )(reportState ,error );updateState (_fbe ,_acg ,_dfg string ,_fbeg int ,_cfb bool ,_gfc int ,_ef int ,_cec _db .Time ,_bfae map[string ]int )error ;};var _abf =_db .Date (2019,6,6,0,0,0,0,_db .UTC );
func Track (docKey string ,useKey string )error {return _fgd (docKey ,useKey ,false )};type defaultStateHolder struct{};type reportState struct{Instance string `json:"inst"`;Next string `json:"n"`;Docs int64 `json:"d"`;NumErrors int64 `json:"e"`;LimitDocs bool `json:"ld"`;
RemainingDocs int64 `json:"rd"`;LastReported _db .Time `json:"lr"`;LastWritten _db .Time `json:"lw"`;Usage map[string ]int `json:"u"`;};func (_de *LicenseKey )IsLicensed ()bool {return _de .Tier !=LicenseTierUnlicensed ||_de ._gbg };func _eae ()([]string ,[]string ,error ){_bacc ,_bgec :=_ge .Interfaces ();
if _bgec !=nil {return nil ,nil ,_bgec ;};var _ceb []string ;var _ffbd []string ;for _ ,_eabe :=range _bacc {if _eabe .Flags &_ge .FlagUp ==0||_fb .Equal (_eabe .HardwareAddr ,nil ){continue ;};_baef ,_ega :=_eabe .Addrs ();if _ega !=nil {return nil ,nil ,_ega ;
};_da :=0;for _ ,_afb :=range _baef {var _abc _ge .IP ;switch _egc :=_afb .(type ){case *_ge .IPNet :_abc =_egc .IP ;case *_ge .IPAddr :_abc =_egc .IP ;};if _abc .IsLoopback (){continue ;};if _abc .To4 ()==nil {continue ;};_ffbd =append (_ffbd ,_abc .String ());
_da ++;};_ecf :=_eabe .HardwareAddr .String ();if _ecf !=""&&_da > 0{_ceb =append (_ceb ,_ecf );};};return _ceb ,_ffbd ,nil ;};func TrackUse (useKey string ){if _aef ==nil {return ;};if !_aef ._gbg ||len (_aef ._eeb )==0{return ;};if len (useKey )==0{return ;
};_cee .Lock ();defer _cee .Unlock ();if _eea ==nil {_eea =map[string ]int {};};_eea [useKey ]++;};type LicenseKey struct{LicenseId string `json:"license_id"`;CustomerId string `json:"customer_id"`;CustomerName string `json:"customer_name"`;Tier string `json:"tier"`;
CreatedAt _db .Time `json:"-"`;CreatedAtInt int64 `json:"created_at"`;ExpiresAt *_db .Time `json:"-"`;ExpiresAtInt int64 `json:"expires_at"`;CreatedBy string `json:"created_by"`;CreatorName string `json:"creator_name"`;CreatorEmail string `json:"creator_email"`;
UniPDF bool `json:"unipdf"`;UniOffice bool `json:"unioffice"`;UniHTML bool `json:"unihtml"`;Trial bool `json:"trial"`;_gbg bool ;_eeb string ;};func MakeUnlicensedKey ()*LicenseKey {_fa :=LicenseKey {};_fa .CustomerName ="\u0055\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";
_fa .Tier =LicenseTierUnlicensed ;_fa .CreatedAt =_db .Now ().UTC ();_fa .CreatedAtInt =_fa .CreatedAt .Unix ();return &_fa ;};const _cdfd ="U\u004eI\u0050\u0044\u0046\u005f\u0043\u0055\u0053\u0054O\u004d\u0045\u0052\u005fNA\u004d\u0045";type meteredUsageCheckinResp struct{Instance string `json:"inst"`;
Next string `json:"next"`;Success bool `json:"success"`;Message string `json:"message"`;RemainingDocs int `json:"rd"`;LimitDocs bool `json:"ld"`;};const _gbd ="\u0055\u004e\u0049\u0050DF\u005f\u004c\u0049\u0043\u0045\u004e\u0053\u0045\u005f\u0050\u0041\u0054\u0048";
func (_eeba defaultStateHolder )updateState (_bec ,_bac ,_ecg string ,_fbg int ,_bgd bool ,_bcdd int ,_ead int ,_ddg _db .Time ,_geb map[string ]int )error {_ebg :=_caab ();if len (_ebg )==0{return _ed .New ("\u0068\u006fm\u0065\u0020\u0064i\u0072\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};_fgcf :=_gf .Join (_ebg ,"\u002eu\u006e\u0069\u0064\u006f\u0063");_gac :=_gfg .MkdirAll (_fgcf ,0777);if _gac !=nil {return _gac ;};if len (_bec )< 20{return _ed .New ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006b\u0065\u0079");};_gga :=[]byte (_bec );
_gdf :=_gea .Sum512_256 (_gga [:20]);_dec :=_gb .EncodeToString (_gdf [:]);_ad :=_gf .Join (_fgcf ,_dec );var _bfd reportState ;_bfd .Docs =int64 (_fbg );_bfd .NumErrors =int64 (_ead );_bfd .LimitDocs =_bgd ;_bfd .RemainingDocs =int64 (_bcdd );_bfd .LastWritten =_db .Now ().UTC ();
_bfd .LastReported =_ddg ;_bfd .Instance =_bac ;_bfd .Next =_ecg ;_bfd .Usage =_geb ;_eed ,_gac :=_gdg .Marshal (_bfd );if _gac !=nil {return _gac ;};const _cdd ="\u0068\u00619\u004e\u004b\u0038]\u0052\u0062\u004c\u002a\u006d\u0034\u004c\u004b\u0057";_eed ,_gac =_dbe ([]byte (_cdd ),_eed );
if _gac !=nil {return _gac ;};_gac =_bb .WriteFile (_ad ,_eed ,0600);if _gac !=nil {return _gac ;};return nil ;};func (_ccd *meteredClient )checkinUsage (_gcc meteredUsageCheckinForm )(meteredUsageCheckinResp ,error ){_gcc .Package ="\u0075\u006e\u0069\u0070\u0064\u0066";
_gcc .PackageVersion =_ag .Version ;var _agec meteredUsageCheckinResp ;_agg :=_ccd ._gc +"\u002f\u006d\u0065\u0074er\u0065\u0064\u002f\u0075\u0073\u0061\u0067\u0065\u005f\u0063\u0068\u0065\u0063\u006bi\u006e";_bcd ,_gba :=_gdg .Marshal (_gcc );if _gba !=nil {return _agec ,_gba ;
};_dbb ,_gba :=_gfa (_bcd );if _gba !=nil {return _agec ,_gba ;};_eab ,_gba :=_f .NewRequest ("\u0050\u004f\u0053\u0054",_agg ,_dbb );if _gba !=nil {return _agec ,_gba ;};_eab .Header .Add ("\u0043\u006f\u006et\u0065\u006e\u0074\u002d\u0054\u0079\u0070\u0065","\u0061\u0070p\u006c\u0069\u0063a\u0074\u0069\u006f\u006e\u002f\u006a\u0073\u006f\u006e");
_eab .Header .Add ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");_eab .Header .Add ("\u0041c\u0063e\u0070\u0074\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067","\u0067\u007a\u0069\u0070");
_eab .Header .Add ("\u0058-\u0041\u0050\u0049\u002d\u004b\u0045Y",_ccd ._cff );_ggc ,_gba :=_ccd ._cdf .Do (_eab );if _gba !=nil {return _agec ,_gba ;};defer _ggc .Body .Close ();if _ggc .StatusCode !=200{return _agec ,_eda .Errorf ("\u0066\u0061i\u006c\u0065\u0064\u0020t\u006f\u0020c\u0068\u0065\u0063\u006b\u0069\u006e\u002c\u0020s\u0074\u0061\u0074\u0075\u0073\u0020\u0063\u006f\u0064\u0065\u0020\u0069s\u003a\u0020\u0025\u0064",_ggc .StatusCode );
};_eef ,_gba :=_bdaa (_ggc );if _gba !=nil {return _agec ,_gba ;};_gba =_gdg .Unmarshal (_eef ,&_agec );if _gba !=nil {return _agec ,_gba ;};return _agec ,nil ;};func _decga (_bee *_f .Response )(_e .ReadCloser ,error ){var _ecac error ;var _bab _e .ReadCloser ;
switch _bc .ToLower (_bee .Header .Get ("\u0043\u006fn\u0074\u0065\u006et\u002d\u0045\u006e\u0063\u006f\u0064\u0069\u006e\u0067")){case "\u0067\u007a\u0069\u0070":_bab ,_ecac =_g .NewReader (_bee .Body );if _ecac !=nil {return _bab ,_ecac ;};defer _bab .Close ();
default:_bab =_bee .Body ;};return _bab ,nil ;};func _gfa (_bbe []byte )(_e .Reader ,error ){_dca :=new (_fb .Buffer );_fae :=_g .NewWriter (_dca );_fae .Write (_bbe );_fbf :=_fae .Close ();if _fbf !=nil {return nil ,_fbf ;};return _dca ,nil ;};func _bfc ()*meteredClient {_abe :=meteredClient {_gc :"h\u0074\u0074\u0070\u0073\u003a\u002f/\u0063\u006c\u006f\u0075\u0064\u002e\u0075\u006e\u0069d\u006f\u0063\u002ei\u006f/\u0061\u0070\u0069",_cdf :&_f .Client {Timeout :30*_db .Second }};
if _ged :=_gfg .Getenv ("\u0055N\u0049\u0044\u004f\u0043_\u004c\u0049\u0043\u0045\u004eS\u0045_\u0053E\u0052\u0056\u0045\u0052\u005f\u0055\u0052L");_bc .HasPrefix (_ged ,"\u0068\u0074\u0074\u0070"){_abe ._gc =_ged ;};return &_abe ;};func init (){_dfc :=_gfg .Getenv (_gbd );
_cecc :=_gfg .Getenv (_cdfd );if len (_dfc )==0||len (_cecc )==0{return ;};_cad ,_fbb :=_bb .ReadFile (_dfc );if _fbb !=nil {_ag .Log .Error ("\u0055\u006eab\u006c\u0065\u0020t\u006f\u0020\u0072\u0065ad \u006cic\u0065\u006e\u0073\u0065\u0020\u0063\u006fde\u0020\u0066\u0069\u006c\u0065\u003a\u0020%\u0076",_fbb );
return ;};_fbb =SetLicenseKey (string (_cad ),_cecc );if _fbb !=nil {_ag .Log .Error ("\u0055\u006e\u0061b\u006c\u0065\u0020\u0074o\u0020\u006c\u006f\u0061\u0064\u0020\u006ci\u0063\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u003a\u0020\u0025\u0076",_fbb );
return ;};};func _bcg (_aa string ,_gde string )([]byte ,error ){var (_ff int ;_aag string ;);for _ ,_aag =range []string {"\u000a\u002b\u000a","\u000d\u000a\u002b\r\u000a","\u0020\u002b\u0020"}{if _ff =_bc .Index (_gde ,_aag );_ff !=-1{break ;};};if _ff ==-1{return nil ,_eda .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u002c \u0073i\u0067n\u0061t\u0075\u0072\u0065\u0020\u0073\u0065\u0070\u0061\u0072\u0061\u0074\u006f\u0072");
};_egb :=_gde [:_ff ];_bfa :=_ff +len (_aag );_cde :=_gde [_bfa :];if _egb ==""||_cde ==""{return nil ,_eda .Errorf ("\u0069n\u0076\u0061l\u0069\u0064\u0020\u0069n\u0070\u0075\u0074,\u0020\u006d\u0069\u0073\u0073\u0069\u006e\u0067\u0020or\u0069\u0067\u0069n\u0061\u006c \u006f\u0072\u0020\u0073\u0069\u0067n\u0061\u0074u\u0072\u0065");
};_ffd ,_eca :=_gd .StdEncoding .DecodeString (_egb );if _eca !=nil {return nil ,_eda .Errorf ("\u0069\u006e\u0076\u0061li\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u006f\u0072\u0069\u0067\u0069\u006ea\u006c");};_cc ,_eca :=_gd .StdEncoding .DecodeString (_cde );
if _eca !=nil {return nil ,_eda .Errorf ("\u0069\u006e\u0076al\u0069\u0064\u0020\u0069\u006e\u0070\u0075\u0074\u0020\u0073\u0069\u0067\u006e\u0061\u0074\u0075\u0072\u0065");};_bd ,_ :=_fc .Decode ([]byte (_aa ));if _bd ==nil {return nil ,_eda .Errorf ("\u0050\u0075\u0062\u004b\u0065\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_aad ,_eca :=_be .ParsePKIXPublicKey (_bd .Bytes );if _eca !=nil {return nil ,_eca ;};_fe :=_aad .(*_beg .PublicKey );if _fe ==nil {return nil ,_eda .Errorf ("\u0050u\u0062\u004b\u0065\u0079\u0020\u0063\u006f\u006e\u0076\u0065\u0072s\u0069\u006f\u006e\u0020\u0066\u0061\u0069\u006c\u0065\u0064");
};_bcgc :=_gea .New ();_bcgc .Write (_ffd );_gg :=_bcgc .Sum (nil );_eca =_beg .VerifyPKCS1v15 (_fe ,_bf .SHA512 ,_gg ,_cc );if _eca !=nil {return nil ,_eca ;};return _ffd ,nil ;};var _eea map[string ]int ;var _bacb map[string ]struct{};func GetMeteredState ()(MeteredStatus ,error ){if _aef ==nil {return MeteredStatus {},_ed .New ("\u006c\u0069\u0063\u0065ns\u0065\u0020\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");
};if !_aef ._gbg ||len (_aef ._eeb )==0{return MeteredStatus {},_ed .New ("\u0061p\u0069 \u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0073\u0065\u0074");};_dbbc ,_aadd :=_bga .loadState (_aef ._eeb );if _aadd !=nil {_ag .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0025v",_aadd );
return MeteredStatus {},_aadd ;};if _dbbc .Docs > 0{_cac :=_fgd ("","",true );if _cac !=nil {return MeteredStatus {},_cac ;};};_cee .Lock ();defer _cee .Unlock ();_bcgcf :=_bfc ();_bcgcf ._cff =_aef ._eeb ;_bed ,_aadd :=_bcgcf .getStatus ();if _aadd !=nil {return MeteredStatus {},_aadd ;
};if !_bed .Valid {return MeteredStatus {},_ed .New ("\u006b\u0065\u0079\u0020\u006e\u006f\u0074\u0020\u0076\u0061\u006c\u0069\u0064");};_bbg :=MeteredStatus {OK :true ,Credits :_bed .OrgCredits ,Used :_bed .OrgUsed };return _bbg ,nil ;};func (_eag *LicenseKey )Validate ()error {if _eag ._gbg {return nil ;
};if len (_eag .LicenseId )< 10{return _eda .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020L\u0069\u0063\u0065n\u0073e\u0020\u0049\u0064");};if len (_eag .CustomerId )< 10{return _eda .Errorf ("\u0069\u006e\u0076\u0061l\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020C\u0075\u0073\u0074\u006f\u006d\u0065\u0072 \u0049\u0064");
};if len (_eag .CustomerName )< 1{return _eda .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043u\u0073\u0074\u006f\u006d\u0065\u0072\u0020\u004e\u0061\u006d\u0065");};if _ab .After (_eag .CreatedAt ){return _eda .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064 \u0041\u0074\u0020\u0069\u0073 \u0069\u006ev\u0061\u006c\u0069\u0064");
};if _eag .ExpiresAt ==nil {_beb :=_eag .CreatedAt .AddDate (1,0,0);if _ae .After (_beb ){_beb =_ae ;};_eag .ExpiresAt =&_beb ;};if _eag .CreatedAt .After (*_eag .ExpiresAt ){return _eda .Errorf ("i\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u0065\u0064\u0020\u0041\u0074 \u0063a\u006e\u006e\u006f\u0074 \u0062\u0065 \u0047\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061\u006e\u0020\u0045\u0078\u0070\u0069\u0072\u0065\u0073\u0020\u0041\u0074");
};if _eag .isExpired (){return _eda .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020l\u0069\u0063\u0065ns\u0065\u003a\u0020\u0054\u0068\u0065 \u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0020\u0068\u0061\u0073\u0020\u0061\u006c\u0072e\u0061\u0064\u0079\u0020\u0065\u0078\u0070\u0069r\u0065\u0064");
};if len (_eag .CreatorName )< 1{return _eda .Errorf ("\u0069\u006ev\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u003a\u0020\u0043\u0072\u0065\u0061\u0074\u006f\u0072\u0020na\u006d\u0065");};if len (_eag .CreatorEmail )< 1{return _eda .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069c\u0065\u006e\u0073\u0065\u003a\u0020\u0043r\u0065\u0061\u0074\u006f\u0072\u0020\u0065\u006d\u0061\u0069\u006c");
};if _eag .CreatedAt .After (_abf ){if !_eag .UniPDF {return _eda .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u006c\u0069\u0063\u0065\u006e\u0073\u0065:\u0020\u0054\u0068\u0069\u0073\u0020\u0055\u006e\u0069\u0044\u006f\u0063\u0020k\u0065\u0079\u0020\u0069\u0073\u0020\u0069\u006e\u0076\u0061\u006c\u0069d \u0066\u006f\u0072\u0020\u0055\u006e\u0069\u0050\u0044\u0046");
};};return nil ;};func SetLicenseKey (content string ,customerName string )error {_bgeca ,_afac :=_edgb (content );if _afac !=nil {_ag .Log .Error ("\u004c\u0069c\u0065\u006e\u0073\u0065\u0020\u0063\u006f\u0064\u0065\u0020\u0064\u0065\u0063\u006f\u0064\u0065\u0020\u0065\u0072\u0072\u006f\u0072: \u0025\u0076",_afac );
return _afac ;};if !_bc .EqualFold (_bgeca .CustomerName ,customerName ){_ag .Log .Error ("L\u0069ce\u006es\u0065 \u0063\u006f\u0064\u0065\u0020i\u0073\u0073\u0075e\u0020\u002d\u0020\u0043\u0075s\u0074\u006f\u006de\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006da\u0074\u0063\u0068, e\u0078\u0070\u0065\u0063\u0074\u0065d\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067o\u0074 \u0027\u0025\u0073\u0027",customerName ,_bgeca .CustomerName );
return _eda .Errorf ("\u0063\u0075\u0073\u0074\u006fm\u0065\u0072\u0020\u006e\u0061\u006d\u0065\u0020\u006d\u0069\u0073\u006d\u0061t\u0063\u0068\u002c\u0020\u0065\u0078\u0070\u0065\u0063\u0074\u0065\u0064\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u0062\u0075\u0074\u0020\u0067\u006f\u0074\u0020\u0027\u0025\u0073'",customerName ,_bgeca .CustomerName );
};_afac =_bgeca .Validate ();if _afac !=nil {_ag .Log .Error ("\u004c\u0069\u0063\u0065\u006e\u0073e\u0020\u0063\u006f\u0064\u0065\u0020\u0076\u0061\u006c\u0069\u0064\u0061\u0074i\u006f\u006e\u0020\u0065\u0072\u0072\u006fr\u003a\u0020\u0025\u0076",_afac );
return _afac ;};_aef =&_bgeca ;return nil ;};const (LicenseTierUnlicensed ="\u0075\u006e\u006c\u0069\u0063\u0065\u006e\u0073\u0065\u0064";LicenseTierCommunity ="\u0063o\u006d\u006d\u0075\u006e\u0069\u0074y";LicenseTierIndividual ="\u0069\u006e\u0064\u0069\u0076\u0069\u0064\u0075\u0061\u006c";
LicenseTierBusiness ="\u0062\u0075\u0073\u0069\u006e\u0065\u0073\u0073";);
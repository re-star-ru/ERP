//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package segments ;import (_bf "encoding/binary";_fd "errors";_ff "fmt";_eg "github.com/unidoc/unipdf/v3/common";_d "github.com/unidoc/unipdf/v3/internal/bitwise";_dc "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_gc "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";
_a "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/arithmetic";_ad "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/huffman";_cg "github.com/unidoc/unipdf/v3/internal/jbig2/decoder/mmr";_cca "github.com/unidoc/unipdf/v3/internal/jbig2/encoder/arithmetic";
_ccc "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_ge "github.com/unidoc/unipdf/v3/internal/jbig2/internal";_cc "golang.org/x/xerrors";_b "image";_e "io";_g "math";_cb "strings";_c "time";);func (_bfec *TextRegion )decodeRdx ()(int64 ,error ){const _defd ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064x";
if _bfec .IsHuffmanEncoded {if _bfec .SbHuffRDX ==3{if _bfec ._cbced ==nil {var (_efbaa int ;_gdca error ;);if _bfec .SbHuffFS ==3{_efbaa ++;};if _bfec .SbHuffDS ==3{_efbaa ++;};if _bfec .SbHuffDT ==3{_efbaa ++;};if _bfec .SbHuffRDWidth ==3{_efbaa ++;};
if _bfec .SbHuffRDHeight ==3{_efbaa ++;};_bfec ._cbced ,_gdca =_bfec .getUserTable (_efbaa );if _gdca !=nil {return 0,_ccc .Wrap (_gdca ,_defd ,"");};};return _bfec ._cbced .Decode (_bfec ._bdgd );};_agca ,_gcfa :=_ad .GetStandardTable (14+int (_bfec .SbHuffRDX ));
if _gcfa !=nil {return 0,_ccc .Wrap (_gcfa ,_defd ,"");};return _agca .Decode (_bfec ._bdgd );};_dagba ,_ffg :=_bfec ._fffd .DecodeInt (_bfec ._fcf );if _ffg !=nil {return 0,_ccc .Wrap (_ffg ,_defd ,"");};return int64 (_dagba ),nil ;};func (_faff *TextRegion )decodeCurrentT ()(int64 ,error ){if _faff .SbStrips !=1{if _faff .IsHuffmanEncoded {_cbgb ,_bbaf :=_faff ._bdgd .ReadBits (byte (_faff .LogSBStrips ));
return int64 (_cbgb ),_bbaf ;};_aedc ,_aacd :=_faff ._fffd .DecodeInt (_faff ._ddaf );if _aacd !=nil {return 0,_aacd ;};return int64 (_aedc ),nil ;};return 0,nil ;};func (_fcgd *HalftoneRegion )checkInput ()error {if _fcgd .IsMMREncoded {if _fcgd .HTemplate !=0{_eg .Log .Debug ("\u0048\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030",_fcgd .HTemplate );
};if _fcgd .HSkipEnabled {_eg .Log .Debug ("\u0048\u0053\u006b\u0069\u0070\u0045\u006e\u0061\u0062\u006c\u0065\u0064\u0020\u0030\u0020\u0025\u0076\u0020(\u0073\u0068\u006f\u0075\u006c\u0064\u0020c\u006f\u006e\u0074\u0061\u0069\u006e\u0020\u0074\u0068\u0065\u0020v\u0061\u006c\u0075\u0065\u0020\u0066\u0061\u006c\u0073\u0065\u0029",_fcgd .HSkipEnabled );
};};return nil ;};func (_eec *PageInformationSegment )readCombinationOperator ()error {_aeab ,_faaf :=_eec ._feg .ReadBits (2);if _faaf !=nil {return _faaf ;};_eec ._cfdg =_gc .CombinationOperator (int (_aeab ));return nil ;};func (_feca *SymbolDictionary )readAtPixels (_bbfg int )error {_feca .SdATX =make ([]int8 ,_bbfg );
_feca .SdATY =make ([]int8 ,_bbfg );var (_gbea byte ;_eaad error ;);for _acbea :=0;_acbea < _bbfg ;_acbea ++{_gbea ,_eaad =_feca ._dbcd .ReadByte ();if _eaad !=nil {return _eaad ;};_feca .SdATX [_acbea ]=int8 (_gbea );_gbea ,_eaad =_feca ._dbcd .ReadByte ();
if _eaad !=nil {return _eaad ;};_feca .SdATY [_acbea ]=int8 (_gbea );};return nil ;};func (_gec *GenericRegion )String ()string {_aca :=&_cb .Builder {};_aca .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_aca .WriteString (_gec .RegionSegment .String ()+"\u000a");_aca .WriteString (_ff .Sprintf ("\u0009\u002d\u0020Us\u0065\u0045\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_gec .UseExtTemplates ));_aca .WriteString (_ff .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0044\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_gec .IsTPGDon ));
_aca .WriteString (_ff .Sprintf ("\u0009-\u0020G\u0042\u0054\u0065\u006d\u0070l\u0061\u0074e\u003a\u0020\u0025\u0064\u000a",_gec .GBTemplate ));_aca .WriteString (_ff .Sprintf ("\t\u002d \u0049\u0073\u004d\u004d\u0052\u0045\u006e\u0063o\u0064\u0065\u0064\u003a %\u0076\u000a",_gec .IsMMREncoded ));
_aca .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_gec .GBAtX ));_aca .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0047\u0042\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_gec .GBAtY ));
_aca .WriteString (_ff .Sprintf ("\t\u002d \u0047\u0042\u0041\u0074\u004f\u0076\u0065\u0072r\u0069\u0064\u0065\u003a %\u0076\u000a",_gec .GBAtOverride ));return _aca .String ();};func (_eff *GenericRegion )InitEncode (bm *_gc .Bitmap ,xLoc ,yLoc ,template int ,duplicateLineRemoval bool )error {const _bfd ="\u0047e\u006e\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069\u006f\u006e.\u0049\u006e\u0069\u0074\u0045\u006e\u0063\u006f\u0064\u0065";
if bm ==nil {return _ccc .Error (_bfd ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if xLoc < 0||yLoc < 0{return _ccc .Error (_bfd ,"\u0078\u0020\u0061\u006e\u0064\u0020\u0079\u0020\u006c\u006f\u0063\u0061\u0074i\u006f\u006e\u0020\u006d\u0075\u0073t\u0020\u0062\u0065\u0020\u0067\u0072\u0065\u0061\u0074\u0065\u0072\u0020\u0074h\u0061\u006e\u0020\u0030");
};_eff .Bitmap =bm ;_eff .GBTemplate =byte (template );switch _eff .GBTemplate {case 0:_eff .GBAtX =[]int8 {3,-3,2,-2};_eff .GBAtY =[]int8 {-1,-1,-2,-2};case 1:_eff .GBAtX =[]int8 {3};_eff .GBAtY =[]int8 {-1};case 2,3:_eff .GBAtX =[]int8 {2};_eff .GBAtY =[]int8 {-1};
default:return _ccc .Errorf (_bfd ,"\u0070\u0072o\u0076\u0069\u0064\u0065\u0064 \u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0076\u0061\u006c\u0069\u0064\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u007b\u0030\u002c\u0031\u002c\u0032\u002c\u0033\u007d",template );
};_eff .RegionSegment =&RegionSegment {BitmapHeight :uint32 (bm .Height ),BitmapWidth :uint32 (bm .Width ),XLocation :uint32 (xLoc ),YLocation :uint32 (yLoc )};_eff .IsTPGDon =duplicateLineRemoval ;return nil ;};func (_egaa *GenericRegion )getPixel (_fag ,_ece int )int8 {if _fag < 0||_fag >=_egaa .Bitmap .Width {return 0;
};if _ece < 0||_ece >=_egaa .Bitmap .Height {return 0;};if _egaa .Bitmap .GetPixel (_fag ,_ece ){return 1;};return 0;};func (_gce *PatternDictionary )computeSegmentDataStructure ()error {_gce .DataOffset =_gce ._ccf .StreamPosition ();_gce .DataHeaderLength =_gce .DataOffset -_gce .DataHeaderOffset ;
_gce .DataLength =int64 (_gce ._ccf .Length ())-_gce .DataHeaderLength ;return nil ;};func (_beg *GenericRegion )parseHeader ()(_gfc error ){_eg .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052I\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0050\u0061\u0072s\u0069\u006e\u0067\u0048\u0065\u0061\u0064e\u0072\u002e\u002e\u002e");
defer func (){if _gfc !=nil {_eg .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049\u004f\u004e]\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065r\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0077\u0069th\u0020\u0065\u0072\u0072\u006f\u0072\u002e\u0020\u0025\u0076",_gfc );
}else {_eg .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049C\u002d\u0052\u0045G\u0049\u004f\u004e]\u0020\u0050a\u0072\u0073\u0069\u006e\u0067\u0048e\u0061de\u0072\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u0020\u0053\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079\u002e\u002e\u002e");
};}();var (_efaf int ;_bge uint64 ;);if _gfc =_beg .RegionSegment .parseHeader ();_gfc !=nil {return _gfc ;};if _ ,_gfc =_beg ._dga .ReadBits (3);_gfc !=nil {return _gfc ;};_efaf ,_gfc =_beg ._dga .ReadBit ();if _gfc !=nil {return _gfc ;};if _efaf ==1{_beg .UseExtTemplates =true ;
};_efaf ,_gfc =_beg ._dga .ReadBit ();if _gfc !=nil {return _gfc ;};if _efaf ==1{_beg .IsTPGDon =true ;};_bge ,_gfc =_beg ._dga .ReadBits (2);if _gfc !=nil {return _gfc ;};_beg .GBTemplate =byte (_bge &0xf);_efaf ,_gfc =_beg ._dga .ReadBit ();if _gfc !=nil {return _gfc ;
};if _efaf ==1{_beg .IsMMREncoded =true ;};if !_beg .IsMMREncoded {_eeg :=1;if _beg .GBTemplate ==0{_eeg =4;if _beg .UseExtTemplates {_eeg =12;};};if _gfc =_beg .readGBAtPixels (_eeg );_gfc !=nil {return _gfc ;};};if _gfc =_beg .computeSegmentDataStructure ();
_gfc !=nil {return _gfc ;};_eg .Log .Trace ("\u0025\u0073",_beg );return nil ;};func (_gbde *TextRegion )GetRegionBitmap ()(*_gc .Bitmap ,error ){if _gbde .RegionBitmap !=nil {return _gbde .RegionBitmap ,nil ;};if !_gbde .IsHuffmanEncoded {if _bfee :=_gbde .setCodingStatistics ();
_bfee !=nil {return nil ,_bfee ;};};if _aabd :=_gbde .createRegionBitmap ();_aabd !=nil {return nil ,_aabd ;};if _edgf :=_gbde .decodeSymbolInstances ();_edgf !=nil {return nil ,_edgf ;};return _gbde .RegionBitmap ,nil ;};func (_dfdc *PatternDictionary )GetDictionary ()([]*_gc .Bitmap ,error ){if _dfdc .Patterns !=nil {return _dfdc .Patterns ,nil ;
};if !_dfdc .IsMMREncoded {_dfdc .setGbAtPixels ();};_abecd :=NewGenericRegion (_dfdc ._ccf );_abecd .setParametersMMR (_dfdc .IsMMREncoded ,_dfdc .DataOffset ,_dfdc .DataLength ,uint32 (_dfdc .HdpHeight ),(_dfdc .GrayMax +1)*uint32 (_dfdc .HdpWidth ),_dfdc .HDTemplate ,false ,false ,_dfdc .GBAtX ,_dfdc .GBAtY );
_aeec ,_caaf :=_abecd .GetRegionBitmap ();if _caaf !=nil {return nil ,_caaf ;};if _caaf =_dfdc .extractPatterns (_aeec );_caaf !=nil {return nil ,_caaf ;};return _dfdc .Patterns ,nil ;};func (_ggga *TextRegion )decodeIb (_efdf ,_bfcdc int64 )(*_gc .Bitmap ,error ){const _bdae ="\u0064\u0065\u0063\u006f\u0064\u0065\u0049\u0062";
var (_fadg error ;_cbba *_gc .Bitmap ;);if _efdf ==0{if int (_bfcdc )> len (_ggga .Symbols )-1{return nil ,_ccc .Error (_bdae ,"\u0064\u0065\u0063\u006f\u0064\u0069\u006e\u0067\u0020\u0049\u0042\u0020\u0062\u0069\u0074\u006d\u0061\u0070\u002e\u0020\u0069\u006e\u0064\u0065x\u0020\u006f\u0075\u0074\u0020o\u0066\u0020r\u0061\u006e\u0067\u0065");
};return _ggga .Symbols [int (_bfcdc )],nil ;};var _dggc ,_ddfc ,_agbe ,_dfebc int64 ;_dggc ,_fadg =_ggga .decodeRdw ();if _fadg !=nil {return nil ,_ccc .Wrap (_fadg ,_bdae ,"");};_ddfc ,_fadg =_ggga .decodeRdh ();if _fadg !=nil {return nil ,_ccc .Wrap (_fadg ,_bdae ,"");
};_agbe ,_fadg =_ggga .decodeRdx ();if _fadg !=nil {return nil ,_ccc .Wrap (_fadg ,_bdae ,"");};_dfebc ,_fadg =_ggga .decodeRdy ();if _fadg !=nil {return nil ,_ccc .Wrap (_fadg ,_bdae ,"");};if _ggga .IsHuffmanEncoded {if _ ,_fadg =_ggga .decodeSymInRefSize ();
_fadg !=nil {return nil ,_ccc .Wrap (_fadg ,_bdae ,"");};_ggga ._bdgd .Align ();};_gbgfb :=_ggga .Symbols [_bfcdc ];_dbdfa :=uint32 (_gbgfb .Width );_abag :=uint32 (_gbgfb .Height );_cfegf :=int32 (uint32 (_dggc )>>1)+int32 (_agbe );_ccbf :=int32 (uint32 (_ddfc )>>1)+int32 (_dfebc );
if _ggga ._eabad ==nil {_ggga ._eabad =_acdc (_ggga ._bdgd ,nil );};_ggga ._eabad .setParameters (_ggga ._fddb ,_ggga ._fffd ,_ggga .SbrTemplate ,_dbdfa +uint32 (_dggc ),_abag +uint32 (_ddfc ),_gbgfb ,_cfegf ,_ccbf ,false ,_ggga .SbrATX ,_ggga .SbrATY );
_cbba ,_fadg =_ggga ._eabad .GetRegionBitmap ();if _fadg !=nil {return nil ,_ccc .Wrap (_fadg ,_bdae ,"\u0067\u0072\u0066");};if _ggga .IsHuffmanEncoded {_ggga ._bdgd .Align ();};return _cbba ,nil ;};func (_ccaa *GenericRefinementRegion )decodeTypicalPredictedLine (_bdc ,_bce ,_add ,_ccd ,_ebg ,_gbe int )error {_cgcd :=_bdc -int (_ccaa .ReferenceDY );
_bca :=_ccaa .ReferenceBitmap .GetByteIndex (0,_cgcd );_aed :=_ccaa .RegionBitmap .GetByteIndex (0,_bdc );var _agd error ;switch _ccaa .TemplateID {case 0:_agd =_ccaa .decodeTypicalPredictedLineTemplate0 (_bdc ,_bce ,_add ,_ccd ,_ebg ,_gbe ,_aed ,_cgcd ,_bca );
case 1:_agd =_ccaa .decodeTypicalPredictedLineTemplate1 (_bdc ,_bce ,_add ,_ccd ,_ebg ,_gbe ,_aed ,_cgcd ,_bca );};return _agd ;};func (_ecga *TextRegion )setParameters (_efag *_a .Decoder ,_dfce ,_egfc bool ,_dgee ,_bddag uint32 ,_fcfd uint32 ,_cagcf int8 ,_eaeb uint32 ,_egb int8 ,_cega _gc .CombinationOperator ,_fgbde int8 ,_fegc int16 ,_dgecc ,_decbg ,_gfea ,_agbf ,_dffde ,_fdge ,_cdcb ,_ebeg ,_gcfd ,_febe int8 ,_gaag ,_gbbg []int8 ,_fbag []*_gc .Bitmap ,_egeb int8 ){_ecga ._fffd =_efag ;
_ecga .IsHuffmanEncoded =_dfce ;_ecga .UseRefinement =_egfc ;_ecga .RegionInfo .BitmapWidth =_dgee ;_ecga .RegionInfo .BitmapHeight =_bddag ;_ecga .NumberOfSymbolInstances =_fcfd ;_ecga .SbStrips =_cagcf ;_ecga .NumberOfSymbols =_eaeb ;_ecga .DefaultPixel =_egb ;
_ecga .CombinationOperator =_cega ;_ecga .IsTransposed =_fgbde ;_ecga .ReferenceCorner =_fegc ;_ecga .SbDsOffset =_dgecc ;_ecga .SbHuffFS =_decbg ;_ecga .SbHuffDS =_gfea ;_ecga .SbHuffDT =_agbf ;_ecga .SbHuffRDWidth =_dffde ;_ecga .SbHuffRDHeight =_fdge ;
_ecga .SbHuffRSize =_gcfd ;_ecga .SbHuffRDX =_cdcb ;_ecga .SbHuffRDY =_ebeg ;_ecga .SbrTemplate =_febe ;_ecga .SbrATX =_gaag ;_ecga .SbrATY =_gbbg ;_ecga .Symbols =_fbag ;_ecga ._afde =_egeb ;};func (_fgbd *Header )writeSegmentDataLength (_cace _d .BinaryWriter )(_fead int ,_edfg error ){_eacb :=make ([]byte ,4);
_bf .BigEndian .PutUint32 (_eacb ,uint32 (_fgbd .SegmentDataLength ));if _fead ,_edfg =_cace .Write (_eacb );_edfg !=nil {return 0,_ccc .Wrap (_edfg ,"\u0048\u0065a\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u004c\u0065ng\u0074\u0068","");
};return _fead ,nil ;};func (_geda *PatternDictionary )setGbAtPixels (){if _geda .HDTemplate ==0{_geda .GBAtX =make ([]int8 ,4);_geda .GBAtY =make ([]int8 ,4);_geda .GBAtX [0]=-int8 (_geda .HdpWidth );_geda .GBAtY [0]=0;_geda .GBAtX [1]=-3;_geda .GBAtY [1]=-1;
_geda .GBAtX [2]=2;_geda .GBAtY [2]=-2;_geda .GBAtX [3]=-2;_geda .GBAtY [3]=-2;}else {_geda .GBAtX =[]int8 {-int8 (_geda .HdpWidth )};_geda .GBAtY =[]int8 {0};};};func (_bebc *SymbolDictionary )checkInput ()error {if _bebc .SdHuffDecodeHeightSelection ==2{_eg .Log .Debug ("\u0053\u0079\u006d\u0062\u006fl\u0020\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u0053e\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0070\u0065r\u006d\u0069\u0074\u0074\u0065\u0064",_bebc .SdHuffDecodeHeightSelection );
};if _bebc .SdHuffDecodeWidthSelection ==2{_eg .Log .Debug ("\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0044\u0065\u0063\u006f\u0064\u0065\u0020\u0057\u0069\u0064t\u0068\u0020\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0064\u0020\u0076\u0061l\u0075\u0065\u0020\u006e\u006f\u0074 \u0070\u0065r\u006d\u0069t\u0074e\u0064",_bebc .SdHuffDecodeWidthSelection );
};if _bebc .IsHuffmanEncoded {if _bebc .SdTemplate !=0{_eg .Log .Debug ("\u0053\u0044T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062e \u0030\u0029",_bebc .SdTemplate );
};if !_bebc .UseRefinementAggregation {if !_bebc .UseRefinementAggregation {if _bebc ._bfgfe {_eg .Log .Debug ("\u0049\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074ex\u0074\u0052\u0065\u0074\u0061\u0069n\u0065\u0064\u0020\u003d\u0020\u0074\u0072\u0075\u0065\u0020\u0028\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0066\u0061\u006cs\u0065\u0029");
_bebc ._bfgfe =false ;};if _bebc ._fcce {_eg .Log .Debug ("\u0069s\u0043\u006fd\u0069\u006e\u0067\u0043o\u006e\u0074\u0065x\u0074\u0055\u0073\u0065\u0064\u0020\u003d\u0020\u0074ru\u0065\u0020\u0028s\u0068\u006fu\u006c\u0064\u0020\u0062\u0065\u0020f\u0061\u006cs\u0065\u0029");
_bebc ._fcce =false ;};};};}else {if _bebc .SdHuffBMSizeSelection !=0{_eg .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066B\u004d\u0053\u0069\u007a\u0065\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_bebc .SdHuffBMSizeSelection =0;};if _bebc .SdHuffDecodeWidthSelection !=0{_eg .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068\u0053\u0065\u006c\u0065\u0063\u0074\u0069o\u006e\u0020\u0073\u0068\u006fu\u006c\u0064 \u0062\u0065\u0020\u0030");
_bebc .SdHuffDecodeWidthSelection =0;};if _bebc .SdHuffDecodeHeightSelection !=0{_eg .Log .Debug ("\u0053\u0064\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0048e\u0069\u0067\u0068\u0074\u0053\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u0062\u0065\u0020\u0030");
_bebc .SdHuffDecodeHeightSelection =0;};};if !_bebc .UseRefinementAggregation {if _bebc .SdrTemplate !=0{_eg .Log .Debug ("\u0053\u0044\u0052\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u003d\u0020\u0025\u0064\u0020\u0028s\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_bebc .SdrTemplate );
_bebc .SdrTemplate =0;};};if !_bebc .IsHuffmanEncoded ||!_bebc .UseRefinementAggregation {if _bebc .SdHuffAggInstanceSelection {_eg .Log .Debug ("\u0053d\u0048\u0075f\u0066\u0041\u0067g\u0049\u006e\u0073\u0074\u0061\u006e\u0063e\u0053\u0065\u006c\u0065\u0063\u0074i\u006f\u006e\u0020\u003d\u0020\u0025\u0064\u0020\u0028\u0073\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030\u0029",_bebc .SdHuffAggInstanceSelection );
};};return nil ;};func (_ddd *GenericRegion )overrideAtTemplate1 (_ggc ,_beb ,_eaea ,_ceeg ,_afe int )int {_ggc &=0x1FF7;if _ddd .GBAtY [0]==0&&_ddd .GBAtX [0]>=-int8 (_afe ){_ggc |=(_ceeg >>uint (7-(int8 (_afe )+_ddd .GBAtX [0]))&0x1)<<3;}else {_ggc |=int (_ddd .getPixel (_beb +int (_ddd .GBAtX [0]),_eaea +int (_ddd .GBAtY [0])))<<3;
};return _ggc ;};func (_fcee *Header )Encode (w _d .BinaryWriter )(_dfe int ,_deee error ){const _fcdf ="\u0048\u0065\u0061d\u0065\u0072\u002e\u0057\u0072\u0069\u0074\u0065";var _cbd _d .BinaryWriter ;_eg .Log .Trace ("\u005b\u0053\u0045G\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045\u0052\u005d[\u0045\u004e\u0043\u004f\u0044\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");
defer func (){if _deee !=nil {_eg .Log .Trace ("[\u0053\u0045\u0047\u004d\u0045\u004eT\u002d\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0045\u004e\u0043\u004f\u0044E\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020%\u0076",_deee );}else {_eg .Log .Trace ("\u005b\u0053\u0045\u0047ME\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0025\u0076",_fcee );
_eg .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045N\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u005b\u0045\u004e\u0043O\u0044\u0045\u005d\u0020\u0046\u0069\u006ei\u0073\u0068\u0065\u0064");};}();w .FinishByte ();if _fcee .SegmentData !=nil {_fdgb ,_cbb :=_fcee .SegmentData .(SegmentEncoder );
if !_cbb {return 0,_ccc .Errorf (_fcdf ,"\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u003a\u0020\u0025\u0054\u0020\u0064\u006f\u0065s\u006e\u0027\u0074\u0020\u0069\u006d\u0070\u006c\u0065\u006d\u0065\u006e\u0074 \u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0045\u006e\u0063\u006f\u0064er\u0020\u0069\u006e\u0074\u0065\u0072\u0066\u0061\u0063\u0065",_fcee .SegmentData );
};_cbd =_d .BufferedMSB ();_dfe ,_deee =_fdgb .Encode (_cbd );if _deee !=nil {return 0,_ccc .Wrap (_deee ,_fcdf ,"");};_fcee .SegmentDataLength =uint64 (_dfe );};if _fcee .pageSize ()==4{_fcee .PageAssociationFieldSize =true ;};var _abec int ;_abec ,_deee =_fcee .writeSegmentNumber (w );
if _deee !=nil {return 0,_ccc .Wrap (_deee ,_fcdf ,"");};_dfe +=_abec ;if _deee =_fcee .writeFlags (w );_deee !=nil {return _dfe ,_ccc .Wrap (_deee ,_fcdf ,"");};_dfe ++;_abec ,_deee =_fcee .writeReferredToCount (w );if _deee !=nil {return 0,_ccc .Wrap (_deee ,_fcdf ,"");
};_dfe +=_abec ;_abec ,_deee =_fcee .writeReferredToSegments (w );if _deee !=nil {return 0,_ccc .Wrap (_deee ,_fcdf ,"");};_dfe +=_abec ;_abec ,_deee =_fcee .writeSegmentPageAssociation (w );if _deee !=nil {return 0,_ccc .Wrap (_deee ,_fcdf ,"");};_dfe +=_abec ;
_abec ,_deee =_fcee .writeSegmentDataLength (w );if _deee !=nil {return 0,_ccc .Wrap (_deee ,_fcdf ,"");};_dfe +=_abec ;_fcee .HeaderLength =int64 (_dfe )-int64 (_fcee .SegmentDataLength );if _cbd !=nil {if _ ,_deee =w .Write (_cbd .Data ());_deee !=nil {return _dfe ,_ccc .Wrap (_deee ,_fcdf ,"\u0077r\u0069t\u0065\u0020\u0073\u0065\u0067m\u0065\u006et\u0020\u0064\u0061\u0074\u0061");
};};return _dfe ,nil ;};func (_aceg *Header )writeFlags (_caf _d .BinaryWriter )(_dgdf error ){const _bfe ="\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u0077\u0072\u0069\u0074\u0065F\u006c\u0061\u0067\u0073";_ebfb :=byte (_aceg .Type );if _dgdf =_caf .WriteByte (_ebfb );
_dgdf !=nil {return _ccc .Wrap (_dgdf ,_bfe ,"\u0077\u0072\u0069ti\u006e\u0067\u0020\u0073\u0065\u0067\u006d\u0065\u006et\u0020t\u0079p\u0065 \u006e\u0075\u006d\u0062\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064");};if !_aceg .RetainFlag &&!_aceg .PageAssociationFieldSize {return nil ;
};if _dgdf =_caf .SkipBits (-8);_dgdf !=nil {return _ccc .Wrap (_dgdf ,_bfe ,"\u0073\u006bi\u0070\u0070\u0069\u006e\u0067\u0020\u0062\u0061\u0063\u006b\u0020\u0074\u0068\u0065\u0020\u0062\u0069\u0074\u0073\u0020\u0066\u0061il\u0065\u0064");};var _afeg int ;
if _aceg .RetainFlag {_afeg =1;};if _dgdf =_caf .WriteBit (_afeg );_dgdf !=nil {return _ccc .Wrap (_dgdf ,_bfe ,"\u0072\u0065\u0074\u0061in\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067\u0073");};_afeg =0;if _aceg .PageAssociationFieldSize {_afeg =1;
};if _dgdf =_caf .WriteBit (_afeg );_dgdf !=nil {return _ccc .Wrap (_dgdf ,_bfe ,"p\u0061\u0067\u0065\u0020as\u0073o\u0063\u0069\u0061\u0074\u0069o\u006e\u0020\u0066\u006c\u0061\u0067");};_caf .FinishByte ();return nil ;};func (_gff *template1 )form (_ebef ,_cgag ,_cab ,_cee ,_dcb int16 )int16 {return ((_ebef &0x02)<<8)|(_cgag <<6)|((_cab &0x03)<<4)|(_cee <<1)|_dcb ;
};func (_dbc *GenericRegion )Encode (w _d .BinaryWriter )(_aeg int ,_cdf error ){const _fea ="G\u0065n\u0065\u0072\u0069\u0063\u0052\u0065\u0067\u0069o\u006e\u002e\u0045\u006eco\u0064\u0065";if _dbc .Bitmap ==nil {return 0,_ccc .Error (_fea ,"\u0070\u0072\u006f\u0076id\u0065\u0064\u0020\u006e\u0069\u006c\u0020\u0062\u0069\u0074\u006d\u0061\u0070");
};_afd ,_cdf :=_dbc .RegionSegment .Encode (w );if _cdf !=nil {return 0,_ccc .Wrap (_cdf ,_fea ,"\u0052\u0065\u0067\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074");};_aeg +=_afd ;if _cdf =w .SkipBits (4);_cdf !=nil {return _aeg ,_ccc .Wrap (_cdf ,_fea ,"\u0073k\u0069p\u0020\u0072\u0065\u0073\u0065r\u0076\u0065d\u0020\u0062\u0069\u0074\u0073");
};var _bada int ;if _dbc .IsTPGDon {_bada =1;};if _cdf =w .WriteBit (_bada );_cdf !=nil {return _aeg ,_ccc .Wrap (_cdf ,_fea ,"\u0074\u0070\u0067\u0064\u006f\u006e");};_bada =0;if _cdf =w .WriteBit (int (_dbc .GBTemplate >>1)&0x01);_cdf !=nil {return _aeg ,_ccc .Wrap (_cdf ,_fea ,"f\u0069r\u0073\u0074\u0020\u0067\u0062\u0074\u0065\u006dp\u006c\u0061\u0074\u0065 b\u0069\u0074");
};if _cdf =w .WriteBit (int (_dbc .GBTemplate )&0x01);_cdf !=nil {return _aeg ,_ccc .Wrap (_cdf ,_fea ,"s\u0065\u0063\u006f\u006ed \u0067b\u0074\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u0062\u0069\u0074");};if _dbc .UseMMR {_bada =1;};if _cdf =w .WriteBit (_bada );
_cdf !=nil {return _aeg ,_ccc .Wrap (_cdf ,_fea ,"u\u0073\u0065\u0020\u004d\u004d\u0052\u0020\u0062\u0069\u0074");};_aeg ++;if _afd ,_cdf =_dbc .writeGBAtPixels (w );_cdf !=nil {return _aeg ,_ccc .Wrap (_cdf ,_fea ,"");};_aeg +=_afd ;_egcd :=_cca .New ();
if _cdf =_egcd .EncodeBitmap (_dbc .Bitmap ,_dbc .IsTPGDon );_cdf !=nil {return _aeg ,_ccc .Wrap (_cdf ,_fea ,"");};_egcd .Final ();var _dac int64 ;if _dac ,_cdf =_egcd .WriteTo (w );_cdf !=nil {return _aeg ,_ccc .Wrap (_cdf ,_fea ,"");};_aeg +=int (_dac );
return _aeg ,nil ;};type Segmenter interface{Init (_dcbc *Header ,_befe _d .StreamReader )error ;};func (_cdg *PageInformationSegment )Encode (w _d .BinaryWriter )(_dfcd int ,_gbbb error ){const _ddbe ="\u0050\u0061g\u0065\u0049\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u002e\u0045\u006eco\u0064\u0065";
_cfc :=make ([]byte ,4);_bf .BigEndian .PutUint32 (_cfc ,uint32 (_cdg .PageBMWidth ));_dfcd ,_gbbb =w .Write (_cfc );if _gbbb !=nil {return _dfcd ,_ccc .Wrap (_gbbb ,_ddbe ,"\u0077\u0069\u0064t\u0068");};_bf .BigEndian .PutUint32 (_cfc ,uint32 (_cdg .PageBMHeight ));
var _ccdgf int ;_ccdgf ,_gbbb =w .Write (_cfc );if _gbbb !=nil {return _ccdgf +_dfcd ,_ccc .Wrap (_gbbb ,_ddbe ,"\u0068\u0065\u0069\u0067\u0068\u0074");};_dfcd +=_ccdgf ;_bf .BigEndian .PutUint32 (_cfc ,uint32 (_cdg .ResolutionX ));_ccdgf ,_gbbb =w .Write (_cfc );
if _gbbb !=nil {return _ccdgf +_dfcd ,_ccc .Wrap (_gbbb ,_ddbe ,"\u0078\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");};_dfcd +=_ccdgf ;_bf .BigEndian .PutUint32 (_cfc ,uint32 (_cdg .ResolutionY ));if _ccdgf ,_gbbb =w .Write (_cfc );_gbbb !=nil {return _ccdgf +_dfcd ,_ccc .Wrap (_gbbb ,_ddbe ,"\u0079\u0020\u0072e\u0073\u006f\u006c\u0075\u0074\u0069\u006f\u006e");
};_dfcd +=_ccdgf ;if _gbbb =_cdg .encodeFlags (w );_gbbb !=nil {return _dfcd ,_ccc .Wrap (_gbbb ,_ddbe ,"");};_dfcd ++;if _ccdgf ,_gbbb =_cdg .encodeStripingInformation (w );_gbbb !=nil {return _dfcd ,_ccc .Wrap (_gbbb ,_ddbe ,"");};_dfcd +=_ccdgf ;return _dfcd ,nil ;
};func (_fgde *HalftoneRegion )shiftAndFill (_aeea int )int {_aeea >>=8;if _aeea < 0{_eabf :=int (_g .Log (float64 (_cacb (_aeea )))/_g .Log (2));_dec :=31-_eabf ;for _gbb :=1;_gbb < _dec ;_gbb ++{_aeea |=1<<uint (31-_gbb );};};return _aeea ;};func (_fccea *SymbolDictionary )GetDictionary ()([]*_gc .Bitmap ,error ){_eg .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c-\u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){_eg .Log .Trace ("\u005b\u0053\u0059M\u0042\u004f\u004c\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079 \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
_eg .Log .Trace ("\u005b\u0053Y\u004d\u0042\u004f\u004c\u002dD\u0049\u0043\u0054\u0049\u004fN\u0041\u0052\u0059\u005d\u0020\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0020\u000a\u0045\u0078\u003a\u0020\u0027\u0025\u0073\u0027\u002c\u0020\u000a\u006e\u0065\u0077\u003a\u0027\u0025\u0073\u0027",_fccea ._gbgg ,_fccea ._bccb );
}();if _fccea ._gbgg ==nil {var _edfgd error ;if _fccea .UseRefinementAggregation {_fccea ._fded =_fccea .getSbSymCodeLen ();};if !_fccea .IsHuffmanEncoded {if _edfgd =_fccea .setCodingStatistics ();_edfgd !=nil {return nil ,_edfgd ;};};_fccea ._bccb =make ([]*_gc .Bitmap ,_fccea .NumberOfNewSymbols );
var _dbef []int ;if _fccea .IsHuffmanEncoded &&!_fccea .UseRefinementAggregation {_dbef =make ([]int ,_fccea .NumberOfNewSymbols );};if _edfgd =_fccea .setSymbolsArray ();_edfgd !=nil {return nil ,_edfgd ;};var _gfff ,_ddgc int64 ;_fccea ._bdfb =0;for _fccea ._bdfb < _fccea .NumberOfNewSymbols {_ddgc ,_edfgd =_fccea .decodeHeightClassDeltaHeight ();
if _edfgd !=nil {return nil ,_edfgd ;};_gfff +=_ddgc ;var _gbgd ,_eccb uint32 ;_aeff :=int64 (_fccea ._bdfb );for {var _gbbf int64 ;_gbbf ,_edfgd =_fccea .decodeDifferenceWidth ();if _cc .Is (_edfgd ,_ge .ErrOOB ){break ;};if _edfgd !=nil {return nil ,_edfgd ;
};if _fccea ._bdfb >=_fccea .NumberOfNewSymbols {break ;};_gbgd +=uint32 (_gbbf );_eccb +=_gbgd ;if !_fccea .IsHuffmanEncoded ||_fccea .UseRefinementAggregation {if !_fccea .UseRefinementAggregation {_edfgd =_fccea .decodeDirectlyThroughGenericRegion (_gbgd ,uint32 (_gfff ));
if _edfgd !=nil {return nil ,_edfgd ;};}else {_edfgd =_fccea .decodeAggregate (_gbgd ,uint32 (_gfff ));if _edfgd !=nil {return nil ,_edfgd ;};};}else if _fccea .IsHuffmanEncoded &&!_fccea .UseRefinementAggregation {_dbef [_fccea ._bdfb ]=int (_gbgd );};
_fccea ._bdfb ++;};if _fccea .IsHuffmanEncoded &&!_fccea .UseRefinementAggregation {var _fge int64 ;if _fccea .SdHuffBMSizeSelection ==0{var _fceb _ad .Tabler ;_fceb ,_edfgd =_ad .GetStandardTable (1);if _edfgd !=nil {return nil ,_edfgd ;};_fge ,_edfgd =_fceb .Decode (_fccea ._dbcd );
if _edfgd !=nil {return nil ,_edfgd ;};}else {_fge ,_edfgd =_fccea .huffDecodeBmSize ();if _edfgd !=nil {return nil ,_edfgd ;};};_fccea ._dbcd .Align ();var _cbgdf *_gc .Bitmap ;_cbgdf ,_edfgd =_fccea .decodeHeightClassCollectiveBitmap (_fge ,uint32 (_gfff ),_eccb );
if _edfgd !=nil {return nil ,_edfgd ;};_edfgd =_fccea .decodeHeightClassBitmap (_cbgdf ,_aeff ,int (_gfff ),_dbef );if _edfgd !=nil {return nil ,_edfgd ;};};};_dead ,_edfgd :=_fccea .getToExportFlags ();if _edfgd !=nil {return nil ,_edfgd ;};_fccea .setExportedSymbols (_dead );
};return _fccea ._gbgg ,nil ;};var _ SegmentEncoder =&GenericRegion {};func (_ggca *Header )CleanSegmentData (){if _ggca .SegmentData !=nil {_ggca .SegmentData =nil ;};};func (_bfca *PageInformationSegment )parseHeader ()(_dcbg error ){_eg .Log .Trace ("\u005b\u0050\u0061\u0067\u0065I\u006e\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065\u0067m\u0065\u006e\u0074\u005d\u0020\u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065\u0061\u0064\u0065\u0072\u002e\u002e\u002e");
defer func (){var _bbcb ="[\u0050\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072m\u0061\u0074\u0069\u006f\u006e\u0053\u0065gm\u0065\u006e\u0074\u005d \u0050\u0061\u0072\u0073\u0069\u006e\u0067\u0048\u0065ad\u0065\u0072 \u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064";
if _dcbg !=nil {_bbcb +="\u0020\u0077\u0069t\u0068\u0020\u0065\u0072\u0072\u006f\u0072\u0020"+_dcbg .Error ();}else {_bbcb +="\u0020\u0073\u0075\u0063\u0063\u0065\u0073\u0073\u0066\u0075\u006c\u006c\u0079";};_eg .Log .Trace (_bbcb );}();if _dcbg =_bfca .readWidthAndHeight ();
_dcbg !=nil {return _dcbg ;};if _dcbg =_bfca .readResolution ();_dcbg !=nil {return _dcbg ;};_ ,_dcbg =_bfca ._feg .ReadBit ();if _dcbg !=nil {return _dcbg ;};if _dcbg =_bfca .readCombinationOperatorOverrideAllowed ();_dcbg !=nil {return _dcbg ;};if _dcbg =_bfca .readRequiresAuxiliaryBuffer ();
_dcbg !=nil {return _dcbg ;};if _dcbg =_bfca .readCombinationOperator ();_dcbg !=nil {return _dcbg ;};if _dcbg =_bfca .readDefaultPixelValue ();_dcbg !=nil {return _dcbg ;};if _dcbg =_bfca .readContainsRefinement ();_dcbg !=nil {return _dcbg ;};if _dcbg =_bfca .readIsLossless ();
_dcbg !=nil {return _dcbg ;};if _dcbg =_bfca .readIsStriped ();_dcbg !=nil {return _dcbg ;};if _dcbg =_bfca .readMaxStripeSize ();_dcbg !=nil {return _dcbg ;};if _dcbg =_bfca .checkInput ();_dcbg !=nil {return _dcbg ;};_eg .Log .Trace ("\u0025\u0073",_bfca );
return nil ;};func (_bfb *GenericRefinementRegion )GetRegionBitmap ()(*_gc .Bitmap ,error ){var _gd error ;_eg .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _gd !=nil {_eg .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0047\u0065\u0074R\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006dap\u0020\u0066a\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_gd );
}else {_eg .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0047\u0065\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u0042\u0069\u0074\u006d\u0061\u0070\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _bfb .RegionBitmap !=nil {return _bfb .RegionBitmap ,nil ;};_daf :=0;if _bfb .ReferenceBitmap ==nil {_bfb .ReferenceBitmap ,_gd =_bfb .getGrReference ();if _gd !=nil {return nil ,_gd ;};};if _bfb ._cbc ==nil {_bfb ._cbc ,_gd =_a .New (_bfb ._dg );
if _gd !=nil {return nil ,_gd ;};};if _bfb ._fdd ==nil {_bfb ._fdd =_a .NewStats (8192,1);};_bfb .RegionBitmap =_gc .New (int (_bfb .RegionInfo .BitmapWidth ),int (_bfb .RegionInfo .BitmapHeight ));if _bfb .TemplateID ==0{if _gd =_bfb .updateOverride ();
_gd !=nil {return nil ,_gd ;};};_ce :=(_bfb .RegionBitmap .Width +7)&-8;var _cgc int ;if _bfb .IsTPGROn {_cgc =int (-_bfb .ReferenceDY )*_bfb .ReferenceBitmap .RowStride ;};_caa :=_cgc +1;for _gb :=0;_gb < _bfb .RegionBitmap .Height ;_gb ++{if _bfb .IsTPGROn {_cae ,_de :=_bfb .decodeSLTP ();
if _de !=nil {return nil ,_de ;};_daf ^=_cae ;};if _daf ==0{_gd =_bfb .decodeOptimized (_gb ,_bfb .RegionBitmap .Width ,_bfb .RegionBitmap .RowStride ,_bfb .ReferenceBitmap .RowStride ,_ce ,_cgc ,_caa );if _gd !=nil {return nil ,_gd ;};}else {_gd =_bfb .decodeTypicalPredictedLine (_gb ,_bfb .RegionBitmap .Width ,_bfb .RegionBitmap .RowStride ,_bfb .ReferenceBitmap .RowStride ,_ce ,_cgc );
if _gd !=nil {return nil ,_gd ;};};};return _bfb .RegionBitmap ,nil ;};func (_efdbe *TextRegion )decodeRdh ()(int64 ,error ){const _geec ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064h";if _efdbe .IsHuffmanEncoded {if _efdbe .SbHuffRDHeight ==3{if _efdbe ._cgg ==nil {var (_dbacf int ;
_agfb error ;);if _efdbe .SbHuffFS ==3{_dbacf ++;};if _efdbe .SbHuffDS ==3{_dbacf ++;};if _efdbe .SbHuffDT ==3{_dbacf ++;};if _efdbe .SbHuffRDWidth ==3{_dbacf ++;};_efdbe ._cgg ,_agfb =_efdbe .getUserTable (_dbacf );if _agfb !=nil {return 0,_ccc .Wrap (_agfb ,_geec ,"");
};};return _efdbe ._cgg .Decode (_efdbe ._bdgd );};_bdcd ,_dcaba :=_ad .GetStandardTable (14+int (_efdbe .SbHuffRDHeight ));if _dcaba !=nil {return 0,_ccc .Wrap (_dcaba ,_geec ,"");};return _bdcd .Decode (_efdbe ._bdgd );};_fccb ,_dcec :=_efdbe ._fffd .DecodeInt (_efdbe ._dddd );
if _dcec !=nil {return 0,_ccc .Wrap (_dcec ,_geec ,"");};return int64 (_fccb ),nil ;};var (_ Regioner =&TextRegion {};_ Segmenter =&TextRegion {};);func (_dff *HalftoneRegion )GetPatterns ()([]*_gc .Bitmap ,error ){var (_bfgb []*_gc .Bitmap ;_bbf error ;
);for _ ,_aceb :=range _dff ._eabg .RTSegments {var _cbgc Segmenter ;_cbgc ,_bbf =_aceb .GetSegmentData ();if _bbf !=nil {_eg .Log .Debug ("\u0047e\u0074\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061 \u0066a\u0069\u006c\u0065\u0064\u003a\u0020\u0025v",_bbf );
return nil ,_bbf ;};_dcf ,_ceb :=_cbgc .(*PatternDictionary );if !_ceb {_bbf =_ff .Errorf ("\u0072e\u006c\u0061t\u0065\u0064\u0020\u0073e\u0067\u006d\u0065n\u0074\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0070at\u0074\u0065\u0072n\u0020\u0064i\u0063\u0074\u0069\u006f\u006e\u0061r\u0079\u003a \u0025\u0054",_cbgc );
return nil ,_bbf ;};var _cgad []*_gc .Bitmap ;_cgad ,_bbf =_dcf .GetDictionary ();if _bbf !=nil {_eg .Log .Debug ("\u0070\u0061\u0074\u0074\u0065\u0072\u006e\u0020\u0047\u0065\u0074\u0044\u0069\u0063\u0074i\u006fn\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_bbf );
return nil ,_bbf ;};_bfgb =append (_bfgb ,_cgad ...);};return _bfgb ,nil ;};func (_cea *GenericRegion )decodeTemplate3 (_eadb ,_dcbb ,_egf int ,_cddb ,_eebb int )(_cgd error ){const _deg ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0033";
var (_edf ,_ddc int ;_dbbe int ;_aggg byte ;_afaa ,_dbea int ;);if _eadb >=1{_aggg ,_cgd =_cea .Bitmap .GetByte (_eebb );if _cgd !=nil {return _ccc .Wrap (_cgd ,_deg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_dbbe =int (_aggg );};_edf =(_dbbe >>1)&0x70;
for _gabd :=0;_gabd < _egf ;_gabd =_afaa {var (_ebc byte ;_aeba int ;);_afaa =_gabd +8;if _dbccf :=_dcbb -_gabd ;_dbccf > 8{_aeba =8;}else {_aeba =_dbccf ;};if _eadb >=1{_dbbe <<=8;if _afaa < _dcbb {_aggg ,_cgd =_cea .Bitmap .GetByte (_eebb +1);if _cgd !=nil {return _ccc .Wrap (_cgd ,_deg ,"\u0069\u006e\u006e\u0065\u0072\u0020\u002d\u0020\u006c\u0069\u006e\u0065 \u003e\u003d\u0020\u0031");
};_dbbe |=int (_aggg );};};for _gaaa :=0;_gaaa < _aeba ;_gaaa ++{if _cea ._eee {_ddc =_cea .overrideAtTemplate3 (_edf ,_gabd +_gaaa ,_eadb ,int (_ebc ),_gaaa );_cea ._ffed .SetIndex (int32 (_ddc ));}else {_cea ._ffed .SetIndex (int32 (_edf ));};_dbea ,_cgd =_cea ._abgc .DecodeBit (_cea ._ffed );
if _cgd !=nil {return _ccc .Wrap (_cgd ,_deg ,"");};_ebc |=byte (_dbea )<<byte (7-_gaaa );_edf =((_edf &0x1f7)<<1)|_dbea |((_dbbe >>uint (8-_gaaa ))&0x010);};if _bdbb :=_cea .Bitmap .SetByte (_cddb ,_ebc );_bdbb !=nil {return _ccc .Wrap (_bdbb ,_deg ,"");
};_cddb ++;_eebb ++;};return nil ;};func (_bbc *GenericRegion )setParametersMMR (_dgae bool ,_daff ,_begg int64 ,_cdeb ,_gbgf uint32 ,_fgac byte ,_cbee ,_ecda bool ,_gac ,_aegf []int8 ){_bbc .DataOffset =_daff ;_bbc .DataLength =_begg ;_bbc .RegionSegment =&RegionSegment {};
_bbc .RegionSegment .BitmapHeight =_cdeb ;_bbc .RegionSegment .BitmapWidth =_gbgf ;_bbc .GBTemplate =_fgac ;_bbc .IsMMREncoded =_dgae ;_bbc .IsTPGDon =_cbee ;_bbc .GBAtX =_gac ;_bbc .GBAtY =_aegf ;};const (TSymbolDictionary Type =0;TIntermediateTextRegion Type =4;
TImmediateTextRegion Type =6;TImmediateLosslessTextRegion Type =7;TPatternDictionary Type =16;TIntermediateHalftoneRegion Type =20;TImmediateHalftoneRegion Type =22;TImmediateLosslessHalftoneRegion Type =23;TIntermediateGenericRegion Type =36;TImmediateGenericRegion Type =38;
TImmediateLosslessGenericRegion Type =39;TIntermediateGenericRefinementRegion Type =40;TImmediateGenericRefinementRegion Type =42;TImmediateLosslessGenericRefinementRegion Type =43;TPageInformation Type =48;TEndOfPage Type =49;TEndOfStrip Type =50;TEndOfFile Type =51;
TProfiles Type =52;TTables Type =53;TExtension Type =62;TBitmap Type =70;);type GenericRefinementRegion struct{_eb templater ;_cd templater ;_dg _d .StreamReader ;_da *Header ;RegionInfo *RegionSegment ;IsTPGROn bool ;TemplateID int8 ;Template templater ;
GrAtX []int8 ;GrAtY []int8 ;RegionBitmap *_gc .Bitmap ;ReferenceBitmap *_gc .Bitmap ;ReferenceDX int32 ;ReferenceDY int32 ;_cbc *_a .Decoder ;_fdd *_a .DecoderStats ;_ea bool ;_gge []bool ;};func (_fddgg *TextRegion )decodeRdy ()(int64 ,error ){const _cegec ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064y";
if _fddgg .IsHuffmanEncoded {if _fddgg .SbHuffRDY ==3{if _fddgg ._cbde ==nil {var (_aeeab int ;_affca error ;);if _fddgg .SbHuffFS ==3{_aeeab ++;};if _fddgg .SbHuffDS ==3{_aeeab ++;};if _fddgg .SbHuffDT ==3{_aeeab ++;};if _fddgg .SbHuffRDWidth ==3{_aeeab ++;
};if _fddgg .SbHuffRDHeight ==3{_aeeab ++;};if _fddgg .SbHuffRDX ==3{_aeeab ++;};_fddgg ._cbde ,_affca =_fddgg .getUserTable (_aeeab );if _affca !=nil {return 0,_ccc .Wrap (_affca ,_cegec ,"");};};return _fddgg ._cbde .Decode (_fddgg ._bdgd );};_gaeb ,_bgceb :=_ad .GetStandardTable (14+int (_fddgg .SbHuffRDY ));
if _bgceb !=nil {return 0,_bgceb ;};return _gaeb .Decode (_fddgg ._bdgd );};_cadeg ,_bbafb :=_fddgg ._fffd .DecodeInt (_fddgg ._gcdd );if _bbafb !=nil {return 0,_ccc .Wrap (_bbafb ,_cegec ,"");};return int64 (_cadeg ),nil ;};func NewHeader (d Documenter ,r _d .StreamReader ,offset int64 ,organizationType OrganizationType )(*Header ,error ){_cdae :=&Header {Reader :r };
if _ccae :=_cdae .parse (d ,r ,offset ,organizationType );_ccae !=nil {return nil ,_ccc .Wrap (_ccae ,"\u004ee\u0077\u0048\u0065\u0061\u0064\u0065r","");};return _cdae ,nil ;};var _ templater =&template0 {};func _ffgd (_bbeb _d .StreamReader ,_gdcc *Header )*TextRegion {_gccc :=&TextRegion {_bdgd :_bbeb ,Header :_gdcc ,RegionInfo :NewRegionSegment (_bbeb )};
return _gccc ;};func (_dggf *PageInformationSegment )readWidthAndHeight ()error {_gga ,_bbad :=_dggf ._feg .ReadBits (32);if _bbad !=nil {return _bbad ;};_dggf .PageBMWidth =int (_gga &_g .MaxInt32 );_gga ,_bbad =_dggf ._feg .ReadBits (32);if _bbad !=nil {return _bbad ;
};_dggf .PageBMHeight =int (_gga &_g .MaxInt32 );return nil ;};func (_ffbb *PatternDictionary )Init (h *Header ,r _d .StreamReader )error {_ffbb ._ccf =r ;return _ffbb .parseHeader ();};func (_dgd *HalftoneRegion )combineGrayscalePlanes (_dcg []*_gc .Bitmap ,_gaf int )error {_afc :=0;
for _gdd :=0;_gdd < _dcg [_gaf ].Height ;_gdd ++{for _egfg :=0;_egfg < _dcg [_gaf ].Width ;_egfg +=8{_abcfe ,_ffba :=_dcg [_gaf +1].GetByte (_afc );if _ffba !=nil {return _ffba ;};_eaag ,_ffba :=_dcg [_gaf ].GetByte (_afc );if _ffba !=nil {return _ffba ;
};_ffba =_dcg [_gaf ].SetByte (_afc ,_gc .CombineBytes (_eaag ,_abcfe ,_gc .CmbOpXor ));if _ffba !=nil {return _ffba ;};_afc ++;};};return nil ;};type OrganizationType uint8 ;func (_cbca *RegionSegment )String ()string {_aeee :=&_cb .Builder {};_aeee .WriteString ("\u0009[\u0052E\u0047\u0049\u004f\u004e\u0020S\u0045\u0047M\u0045\u004e\u0054\u005d\u000a");
_aeee .WriteString (_ff .Sprintf ("\t\u0009\u002d\u0020\u0042\u0069\u0074m\u0061\u0070\u0020\u0028\u0077\u0069d\u0074\u0068\u002c\u0020\u0068\u0065\u0069g\u0068\u0074\u0029\u0020\u005b\u0025\u0064\u0078\u0025\u0064]\u000a",_cbca .BitmapWidth ,_cbca .BitmapHeight ));
_aeee .WriteString (_ff .Sprintf ("\u0009\u0009\u002d\u0020L\u006f\u0063\u0061\u0074\u0069\u006f\u006e\u0020\u0028\u0078,\u0079)\u003a\u0020\u005b\u0025\u0064\u002c\u0025d\u005d\u000a",_cbca .XLocation ,_cbca .YLocation ));_aeee .WriteString (_ff .Sprintf ("\t\u0009\u002d\u0020\u0043\u006f\u006db\u0069\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070e\u0072\u0061\u0074o\u0072:\u0020\u0025\u0073",_cbca .CombinaionOperator ));
return _aeee .String ();};func (_bddc *Header )subInputReader ()(_d .StreamReader ,error ){return _d .NewSubstreamReader (_bddc .Reader ,_bddc .SegmentDataStartOffset ,_bddc .SegmentDataLength );};type Documenter interface{GetPage (int )(Pager ,error );
GetGlobalSegment (int )(*Header ,error );};func (_edg *RegionSegment )Encode (w _d .BinaryWriter )(_bbbb int ,_eafc error ){const _gedcb ="R\u0065g\u0069\u006f\u006e\u0053\u0065\u0067\u006d\u0065n\u0074\u002e\u0045\u006eco\u0064\u0065";_ecgc :=make ([]byte ,4);
_bf .BigEndian .PutUint32 (_ecgc ,_edg .BitmapWidth );_bbbb ,_eafc =w .Write (_ecgc );if _eafc !=nil {return 0,_ccc .Wrap (_eafc ,_gedcb ,"\u0057\u0069\u0064t\u0068");};_bf .BigEndian .PutUint32 (_ecgc ,_edg .BitmapHeight );var _efdb int ;_efdb ,_eafc =w .Write (_ecgc );
if _eafc !=nil {return 0,_ccc .Wrap (_eafc ,_gedcb ,"\u0048\u0065\u0069\u0067\u0068\u0074");};_bbbb +=_efdb ;_bf .BigEndian .PutUint32 (_ecgc ,_edg .XLocation );_efdb ,_eafc =w .Write (_ecgc );if _eafc !=nil {return 0,_ccc .Wrap (_eafc ,_gedcb ,"\u0058L\u006f\u0063\u0061\u0074\u0069\u006fn");
};_bbbb +=_efdb ;_bf .BigEndian .PutUint32 (_ecgc ,_edg .YLocation );_efdb ,_eafc =w .Write (_ecgc );if _eafc !=nil {return 0,_ccc .Wrap (_eafc ,_gedcb ,"\u0059L\u006f\u0063\u0061\u0074\u0069\u006fn");};_bbbb +=_efdb ;if _eafc =w .WriteByte (byte (_edg .CombinaionOperator )&0x07);
_eafc !=nil {return 0,_ccc .Wrap (_eafc ,_gedcb ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};_bbbb ++;return _bbbb ,nil ;};func (_bgeb *PatternDictionary )readGrayMax ()error {_dada ,_bdfg :=_bgeb ._ccf .ReadBits (32);
if _bdfg !=nil {return _bdfg ;};_bgeb .GrayMax =uint32 (_dada &_g .MaxUint32 );return nil ;};func (_dbeaa *TextRegion )decodeRI ()(int64 ,error ){if !_dbeaa .UseRefinement {return 0,nil ;};if _dbeaa .IsHuffmanEncoded {_eaeae ,_cdfc :=_dbeaa ._bdgd .ReadBit ();
return int64 (_eaeae ),_cdfc ;};_gdbb ,_gdaf :=_dbeaa ._fffd .DecodeInt (_dbeaa ._feed );return int64 (_gdbb ),_gdaf ;};func (_fgf *GenericRegion )decodeLine (_gdcgc ,_egg ,_bdf int )error {const _cfb ="\u0064\u0065\u0063\u006f\u0064\u0065\u004c\u0069\u006e\u0065";
_cbf :=_fgf .Bitmap .GetByteIndex (0,_gdcgc );_ceda :=_cbf -_fgf .Bitmap .RowStride ;switch _fgf .GBTemplate {case 0:if !_fgf .UseExtTemplates {return _fgf .decodeTemplate0a (_gdcgc ,_egg ,_bdf ,_cbf ,_ceda );};return _fgf .decodeTemplate0b (_gdcgc ,_egg ,_bdf ,_cbf ,_ceda );
case 1:return _fgf .decodeTemplate1 (_gdcgc ,_egg ,_bdf ,_cbf ,_ceda );case 2:return _fgf .decodeTemplate2 (_gdcgc ,_egg ,_bdf ,_cbf ,_ceda );case 3:return _fgf .decodeTemplate3 (_gdcgc ,_egg ,_bdf ,_cbf ,_ceda );};return _ccc .Errorf (_cfb ,"\u0069\u006e\u0076a\u006c\u0069\u0064\u0020G\u0042\u0054\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u003a\u0020\u0025\u0064",_fgf .GBTemplate );
};func (_dfee *PageInformationSegment )readIsLossless ()error {_aaeb ,_afg :=_dfee ._feg .ReadBit ();if _afg !=nil {return _afg ;};if _aaeb ==1{_dfee .IsLossless =true ;};return nil ;};func (_efad *SymbolDictionary )decodeHeightClassBitmap (_gea *_gc .Bitmap ,_dbccd int64 ,_bcda int ,_gece []int )error {for _afbg :=_dbccd ;
_afbg < int64 (_efad ._bdfb );_afbg ++{var _abee int ;for _dddb :=_dbccd ;_dddb <=_afbg -1;_dddb ++{_abee +=_gece [_dddb ];};_geab :=_b .Rect (_abee ,0,_abee +_gece [_afbg ],_bcda );_aaca ,_egdd :=_gc .Extract (_geab ,_gea );if _egdd !=nil {return _egdd ;
};_efad ._bccb [_afbg ]=_aaca ;_efad ._ddad =append (_efad ._ddad ,_aaca );};return nil ;};type Regioner interface{GetRegionBitmap ()(*_gc .Bitmap ,error );GetRegionInfo ()*RegionSegment ;};func (_abgce *HalftoneRegion )grayScaleDecoding (_aede int )([][]int ,error ){var (_gbcg []int8 ;
_ggbe []int8 ;);if !_abgce .IsMMREncoded {_gbcg =make ([]int8 ,4);_ggbe =make ([]int8 ,4);if _abgce .HTemplate <=1{_gbcg [0]=3;}else if _abgce .HTemplate >=2{_gbcg [0]=2;};_ggbe [0]=-1;_gbcg [1]=-3;_ggbe [1]=-1;_gbcg [2]=2;_ggbe [2]=-2;_gbcg [3]=-2;_ggbe [3]=-2;
};_bffb :=make ([]*_gc .Bitmap ,_aede );_beee :=NewGenericRegion (_abgce ._fffg );_beee .setParametersMMR (_abgce .IsMMREncoded ,_abgce .DataOffset ,_abgce .DataLength ,_abgce .HGridHeight ,_abgce .HGridWidth ,_abgce .HTemplate ,false ,_abgce .HSkipEnabled ,_gbcg ,_ggbe );
_bcf :=_aede -1;var _gcc error ;_bffb [_bcf ],_gcc =_beee .GetRegionBitmap ();if _gcc !=nil {return nil ,_gcc ;};for _bcf > 0{_bcf --;_beee .Bitmap =nil ;_bffb [_bcf ],_gcc =_beee .GetRegionBitmap ();if _gcc !=nil {return nil ,_gcc ;};if _gcc =_abgce .combineGrayscalePlanes (_bffb ,_bcf );
_gcc !=nil {return nil ,_gcc ;};};return _abgce .computeGrayScalePlanes (_bffb ,_aede );};func (_fgag *HalftoneRegion )parseHeader ()error {if _ceeb :=_fgag .RegionSegment .parseHeader ();_ceeb !=nil {return _ceeb ;};_eccc ,_ffda :=_fgag ._fffg .ReadBit ();
if _ffda !=nil {return _ffda ;};_fgag .HDefaultPixel =int8 (_eccc );_bebd ,_ffda :=_fgag ._fffg .ReadBits (3);if _ffda !=nil {return _ffda ;};_fgag .CombinationOperator =_gc .CombinationOperator (_bebd &0xf);_eccc ,_ffda =_fgag ._fffg .ReadBit ();if _ffda !=nil {return _ffda ;
};if _eccc ==1{_fgag .HSkipEnabled =true ;};_bebd ,_ffda =_fgag ._fffg .ReadBits (2);if _ffda !=nil {return _ffda ;};_fgag .HTemplate =byte (_bebd &0xf);_eccc ,_ffda =_fgag ._fffg .ReadBit ();if _ffda !=nil {return _ffda ;};if _eccc ==1{_fgag .IsMMREncoded =true ;
};_bebd ,_ffda =_fgag ._fffg .ReadBits (32);if _ffda !=nil {return _ffda ;};_fgag .HGridWidth =uint32 (_bebd &_g .MaxUint32 );_bebd ,_ffda =_fgag ._fffg .ReadBits (32);if _ffda !=nil {return _ffda ;};_fgag .HGridHeight =uint32 (_bebd &_g .MaxUint32 );_bebd ,_ffda =_fgag ._fffg .ReadBits (32);
if _ffda !=nil {return _ffda ;};_fgag .HGridX =int32 (_bebd &_g .MaxInt32 );_bebd ,_ffda =_fgag ._fffg .ReadBits (32);if _ffda !=nil {return _ffda ;};_fgag .HGridY =int32 (_bebd &_g .MaxInt32 );_bebd ,_ffda =_fgag ._fffg .ReadBits (16);if _ffda !=nil {return _ffda ;
};_fgag .HRegionX =uint16 (_bebd &_g .MaxUint16 );_bebd ,_ffda =_fgag ._fffg .ReadBits (16);if _ffda !=nil {return _ffda ;};_fgag .HRegionY =uint16 (_bebd &_g .MaxUint16 );if _ffda =_fgag .computeSegmentDataStructure ();_ffda !=nil {return _ffda ;};return _fgag .checkInput ();
};func (_facd *PageInformationSegment )encodeStripingInformation (_cbffa _d .BinaryWriter )(_dcbee int ,_dbdfd error ){const _deda ="\u0065n\u0063\u006f\u0064\u0065S\u0074\u0072\u0069\u0070\u0069n\u0067I\u006ef\u006f\u0072\u006d\u0061\u0074\u0069\u006fn";
if !_facd .IsStripe {if _dcbee ,_dbdfd =_cbffa .Write ([]byte {0x00,0x00});_dbdfd !=nil {return 0,_ccc .Wrap (_dbdfd ,_deda ,"n\u006f\u0020\u0073\u0074\u0072\u0069\u0070\u0069\u006e\u0067");};return _dcbee ,nil ;};_bbcd :=make ([]byte ,2);_bf .BigEndian .PutUint16 (_bbcd ,_facd .MaxStripeSize |1<<15);
if _dcbee ,_dbdfd =_cbffa .Write (_bbcd );_dbdfd !=nil {return 0,_ccc .Wrapf (_dbdfd ,_deda ,"\u0073\u0074\u0072i\u0070\u0069\u006e\u0067\u003a\u0020\u0025\u0064",_facd .MaxStripeSize );};return _dcbee ,nil ;};func (_acda *PageInformationSegment )encodeFlags (_cbac _d .BinaryWriter )(_ecccc error ){const _eag ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _ecccc =_cbac .SkipBits (1);_ecccc !=nil {return _ccc .Wrap (_ecccc ,_eag ,"\u0072\u0065\u0073e\u0072\u0076\u0065\u0064\u0020\u0062\u0069\u0074");};var _dbfc int ;if _acda .CombinationOperatorOverrideAllowed (){_dbfc =1;};if _ecccc =_cbac .WriteBit (_dbfc );
_ecccc !=nil {return _ccc .Wrap (_ecccc ,_eag ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u006f\u0076\u0065\u0072\u0072\u0069\u0064\u0064\u0065\u006e");};_dbfc =0;if _acda ._bdec {_dbfc =1;
};if _ecccc =_cbac .WriteBit (_dbfc );_ecccc !=nil {return _ccc .Wrap (_ecccc ,_eag ,"\u0072e\u0071\u0075\u0069\u0072e\u0073\u0020\u0061\u0075\u0078i\u006ci\u0061r\u0079\u0020\u0062\u0075\u0066\u0066\u0065r");};if _ecccc =_cbac .WriteBit ((int (_acda ._cfdg )>>1)&0x01);
_ecccc !=nil {return _ccc .Wrap (_ecccc ,_eag ,"\u0063\u006f\u006d\u0062\u0069\u006e\u0061\u0074\u0069\u006fn\u0020\u006f\u0070\u0065\u0072\u0061\u0074o\u0072\u0020\u0066\u0069\u0072\u0073\u0074\u0020\u0062\u0069\u0074");};if _ecccc =_cbac .WriteBit (int (_acda ._cfdg )&0x01);
_ecccc !=nil {return _ccc .Wrap (_ecccc ,_eag ,"\u0063\u006f\u006db\u0069\u006e\u0061\u0074i\u006f\u006e\u0020\u006f\u0070\u0065\u0072a\u0074\u006f\u0072\u0020\u0073\u0065\u0063\u006f\u006e\u0064\u0020\u0062\u0069\u0074");};_dbfc =int (_acda .DefaultPixelValue );
if _ecccc =_cbac .WriteBit (_dbfc );_ecccc !=nil {return _ccc .Wrap (_ecccc ,_eag ,"\u0064e\u0066\u0061\u0075\u006c\u0074\u0020\u0070\u0061\u0067\u0065\u0020p\u0069\u0078\u0065\u006c\u0020\u0076\u0061\u006c\u0075\u0065");};_dbfc =0;if _acda ._cbec {_dbfc =1;
};if _ecccc =_cbac .WriteBit (_dbfc );_ecccc !=nil {return _ccc .Wrap (_ecccc ,_eag ,"\u0063\u006f\u006e\u0074ai\u006e\u0073\u0020\u0072\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074");};_dbfc =0;if _acda .IsLossless {_dbfc =1;};if _ecccc =_cbac .WriteBit (_dbfc );
_ecccc !=nil {return _ccc .Wrap (_ecccc ,_eag ,"p\u0061\u0067\u0065\u0020\u0069\u0073 \u0065\u0076\u0065\u006e\u0074\u0075\u0061\u006c\u006cy\u0020\u006c\u006fs\u0073l\u0065\u0073\u0073");};return nil ;};func (_faebf *SymbolDictionary )readNumberOfNewSymbols ()error {_gbfe ,_agda :=_faebf ._dbcd .ReadBits (32);
if _agda !=nil {return _agda ;};_faebf .NumberOfNewSymbols =uint32 (_gbfe &_g .MaxUint32 );return nil ;};func (_gdce *HalftoneRegion )computeX (_abb ,_fad int )int {return _gdce .shiftAndFill (int (_gdce .HGridX )+_abb *int (_gdce .HRegionY )+_fad *int (_gdce .HRegionX ));
};func (_deb *RegionSegment )Size ()int {return 17};func (_agdf *GenericRegion )decodeTemplate0a (_cgcb ,_eef ,_fedf int ,_gefb ,_bec int )(_bfg error ){const _gbd ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0061";
var (_cbcg ,_cacd int ;_gaa ,_cbceg int ;_gbae byte ;_dbeb int ;);if _cgcb >=1{_gbae ,_bfg =_agdf .Bitmap .GetByte (_bec );if _bfg !=nil {return _ccc .Wrap (_bfg ,_gbd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_gaa =int (_gbae );};if _cgcb >=2{_gbae ,_bfg =_agdf .Bitmap .GetByte (_bec -_agdf .Bitmap .RowStride );
if _bfg !=nil {return _ccc .Wrap (_bfg ,_gbd ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_cbceg =int (_gbae )<<6;};_cbcg =(_gaa &0xf0)|(_cbceg &0x3800);for _dafg :=0;_dafg < _fedf ;_dafg =_dbeb {var (_bdd byte ;_cgec int ;);_dbeb =_dafg +8;if _adc :=_eef -_dafg ;
_adc > 8{_cgec =8;}else {_cgec =_adc ;};if _cgcb > 0{_gaa <<=8;if _dbeb < _eef {_gbae ,_bfg =_agdf .Bitmap .GetByte (_bec +1);if _bfg !=nil {return _ccc .Wrap (_bfg ,_gbd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_gaa |=int (_gbae );};};if _cgcb > 1{_aeb :=_bec -_agdf .Bitmap .RowStride +1;
_cbceg <<=8;if _dbeb < _eef {_gbae ,_bfg =_agdf .Bitmap .GetByte (_aeb );if _bfg !=nil {return _ccc .Wrap (_bfg ,_gbd ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_cbceg |=int (_gbae )<<6;}else {_cbceg |=0;};};for _aag :=0;_aag < _cgec ;_aag ++{_fdf :=uint (7-_aag );
if _agdf ._eee {_cacd =_agdf .overrideAtTemplate0a (_cbcg ,_dafg +_aag ,_cgcb ,int (_bdd ),_aag ,int (_fdf ));_agdf ._ffed .SetIndex (int32 (_cacd ));}else {_agdf ._ffed .SetIndex (int32 (_cbcg ));};var _gcfg int ;_gcfg ,_bfg =_agdf ._abgc .DecodeBit (_agdf ._ffed );
if _bfg !=nil {return _ccc .Wrap (_bfg ,_gbd ,"");};_bdd |=byte (_gcfg )<<_fdf ;_cbcg =((_cbcg &0x7bf7)<<1)|_gcfg |((_gaa >>_fdf )&0x10)|((_cbceg >>_fdf )&0x800);};if _bdaf :=_agdf .Bitmap .SetByte (_gefb ,_bdd );_bdaf !=nil {return _ccc .Wrap (_bdaf ,_gbd ,"");
};_gefb ++;_bec ++;};return nil ;};type PageInformationSegment struct{_feg _d .StreamReader ;PageBMHeight int ;PageBMWidth int ;ResolutionX int ;ResolutionY int ;_dfec bool ;_cfdg _gc .CombinationOperator ;_bdec bool ;DefaultPixelValue uint8 ;_cbec bool ;
IsLossless bool ;IsStripe bool ;MaxStripeSize uint16 ;};func (_ed *GenericRefinementRegion )Init (header *Header ,r _d .StreamReader )error {_ed ._da =header ;_ed ._dg =r ;_ed .RegionInfo =NewRegionSegment (r );return _ed .parseHeader ();};func NewGenericRegion (r _d .StreamReader )*GenericRegion {return &GenericRegion {RegionSegment :NewRegionSegment (r ),_dga :r };
};func (_eddd *HalftoneRegion )Init (hd *Header ,r _d .StreamReader )error {_eddd ._fffg =r ;_eddd ._eabg =hd ;_eddd .RegionSegment =NewRegionSegment (r );return _eddd .parseHeader ();};type HalftoneRegion struct{_fffg _d .StreamReader ;_eabg *Header ;
DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;HDefaultPixel int8 ;CombinationOperator _gc .CombinationOperator ;HSkipEnabled bool ;HTemplate byte ;IsMMREncoded bool ;HGridWidth uint32 ;
HGridHeight uint32 ;HGridX int32 ;HGridY int32 ;HRegionX uint16 ;HRegionY uint16 ;HalftoneRegionBitmap *_gc .Bitmap ;Patterns []*_gc .Bitmap ;};func (_fbff *SymbolDictionary )setCodingStatistics ()error {if _fbff ._cdfd ==nil {_fbff ._cdfd =_a .NewStats (512,1);
};if _fbff ._abf ==nil {_fbff ._abf =_a .NewStats (512,1);};if _fbff ._gafd ==nil {_fbff ._gafd =_a .NewStats (512,1);};if _fbff ._agcb ==nil {_fbff ._agcb =_a .NewStats (512,1);};if _fbff ._gcaa ==nil {_fbff ._gcaa =_a .NewStats (512,1);};if _fbff .UseRefinementAggregation &&_fbff ._dcee ==nil {_fbff ._dcee =_a .NewStats (1<<uint (_fbff ._fded ),1);
_fbff ._ggf =_a .NewStats (512,1);_fbff ._gaeg =_a .NewStats (512,1);};if _fbff ._gadd ==nil {_fbff ._gadd =_a .NewStats (65536,1);};if _fbff ._aebe ==nil {var _gcg error ;_fbff ._aebe ,_gcg =_a .New (_fbff ._dbcd );if _gcg !=nil {return _gcg ;};};return nil ;
};func (_gfeb *SymbolDictionary )setRetainedCodingContexts (_acbfb *SymbolDictionary ){_gfeb ._aebe =_acbfb ._aebe ;_gfeb .IsHuffmanEncoded =_acbfb .IsHuffmanEncoded ;_gfeb .UseRefinementAggregation =_acbfb .UseRefinementAggregation ;_gfeb .SdTemplate =_acbfb .SdTemplate ;
_gfeb .SdrTemplate =_acbfb .SdrTemplate ;_gfeb .SdATX =_acbfb .SdATX ;_gfeb .SdATY =_acbfb .SdATY ;_gfeb .SdrATX =_acbfb .SdrATX ;_gfeb .SdrATY =_acbfb .SdrATY ;_gfeb ._gadd =_acbfb ._gadd ;};func (_cgde *Header )parse (_accb Documenter ,_cbcde _d .StreamReader ,_cadb int64 ,_ebd OrganizationType )(_eded error ){const _bagd ="\u0070\u0061\u0072s\u0065";
_eg .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u005b\u0050A\u0052\u0053\u0045\u005d\u0020\u0042\u0065\u0067\u0069\u006e\u0073");defer func (){if _eded !=nil {_eg .Log .Trace ("\u005b\u0053\u0045GM\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045R\u005d[\u0050A\u0052S\u0045\u005d\u0020\u0046\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0076",_eded );
}else {_eg .Log .Trace ("\u005b\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u002d\u0048\u0045\u0041\u0044\u0045\u0052]\u005bP\u0041\u0052\u0053\u0045\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");};}();_ ,_eded =_cbcde .Seek (_cadb ,_e .SeekStart );
if _eded !=nil {return _ccc .Wrap (_eded ,_bagd ,"\u0073\u0065\u0065\u006b\u0020\u0073\u0074\u0061\u0072\u0074");};if _eded =_cgde .readSegmentNumber (_cbcde );_eded !=nil {return _ccc .Wrap (_eded ,_bagd ,"");};if _eded =_cgde .readHeaderFlags ();_eded !=nil {return _ccc .Wrap (_eded ,_bagd ,"");
};var _dcdf uint64 ;_dcdf ,_eded =_cgde .readNumberOfReferredToSegments (_cbcde );if _eded !=nil {return _ccc .Wrap (_eded ,_bagd ,"");};_cgde .RTSNumbers ,_eded =_cgde .readReferredToSegmentNumbers (_cbcde ,int (_dcdf ));if _eded !=nil {return _ccc .Wrap (_eded ,_bagd ,"");
};_eded =_cgde .readSegmentPageAssociation (_accb ,_cbcde ,_dcdf ,_cgde .RTSNumbers ...);if _eded !=nil {return _ccc .Wrap (_eded ,_bagd ,"");};if _cgde .Type !=TEndOfFile {if _eded =_cgde .readSegmentDataLength (_cbcde );_eded !=nil {return _ccc .Wrap (_eded ,_bagd ,"");
};};_cgde .readDataStartOffset (_cbcde ,_ebd );_cgde .readHeaderLength (_cbcde ,_cadb );_eg .Log .Trace ("\u0025\u0073",_cgde );return nil ;};func (_cdef *GenericRegion )overrideAtTemplate2 (_gad ,_ffdg ,_eaef ,_efb ,_bgg int )int {_gad &=0x3FB;if _cdef .GBAtY [0]==0&&_cdef .GBAtX [0]>=-int8 (_bgg ){_gad |=(_efb >>uint (7-(int8 (_bgg )+_cdef .GBAtX [0]))&0x1)<<2;
}else {_gad |=int (_cdef .getPixel (_ffdg +int (_cdef .GBAtX [0]),_eaef +int (_cdef .GBAtY [0])))<<2;};return _gad ;};func (_caea *TextRegion )getUserTable (_dcff int )(_ad .Tabler ,error ){const _fdgfg ="\u0067\u0065\u0074U\u0073\u0065\u0072\u0054\u0061\u0062\u006c\u0065";
var _efce int ;for _ ,_dffd :=range _caea .Header .RTSegments {if _dffd .Type ==53{if _efce ==_dcff {_dcda ,_afed :=_dffd .GetSegmentData ();if _afed !=nil {return nil ,_afed ;};_fcdb ,_fddbd :=_dcda .(*TableSegment );if !_fddbd {_eg .Log .Debug (_ff .Sprintf ("\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079p\u0065\u00205\u0033\u0020\u002d\u0020\u0061\u006ed\u0020in\u0064\u0065\u0078\u003a\u0020\u0025\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_dffd .SegmentNumber ));
return nil ,_ccc .Error (_fdgfg ,"\u0073\u0065\u0067\u006d\u0065\u006e\u0074 \u0077\u0069\u0074h\u0020\u0054\u0079\u0070e\u0020\u0035\u0033\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u002a\u0054\u0061\u0062\u006c\u0065\u0053\u0065\u0067\u006d\u0065\u006e\u0074");
};return _ad .NewEncodedTable (_fcdb );};_efce ++;};};return nil ,nil ;};func (_dgbd *TableSegment )HtOOB ()int32 {return _dgbd ._eed };type Pager interface{GetSegment (int )(*Header ,error );GetBitmap ()(*_gc .Bitmap ,error );};func (_gee *Header )readSegmentDataLength (_defa _d .StreamReader )(_gbeg error ){_gee .SegmentDataLength ,_gbeg =_defa .ReadBits (32);
if _gbeg !=nil {return _gbeg ;};_gee .SegmentDataLength &=_g .MaxInt32 ;return nil ;};func (_affe *SymbolDictionary )encodeSymbols (_ecgg _d .BinaryWriter )(_efg int ,_bbae error ){const _eddc ="\u0065\u006e\u0063o\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c";
_ccfe :=_cca .New ();_ccfe .Init ();_gafb ,_bbae :=_affe ._aeede .SelectByIndexes (_affe ._bdbd );if _bbae !=nil {return 0,_ccc .Wrap (_bbae ,_eddc ,"\u0069n\u0069\u0074\u0069\u0061\u006c");};_cdec :=map[*_gc .Bitmap ]int {};for _ebfa ,_cfdc :=range _gafb .Values {_cdec [_cfdc ]=_ebfa ;
};_gafb .SortByHeight ();var _cbbd ,_ebea int ;_agbc ,_bbae :=_gafb .GroupByHeight ();if _bbae !=nil {return 0,_ccc .Wrap (_bbae ,_eddc ,"");};for _ ,_ecfb :=range _agbc .Values {_dedd :=_ecfb .Values [0].Height ;_bebac :=_dedd -_cbbd ;if _bbae =_ccfe .EncodeInteger (_cca .IADH ,_bebac );
_bbae !=nil {return 0,_ccc .Wrapf (_bbae ,_eddc ,"\u0049\u0041\u0044\u0048\u0020\u0066\u006f\u0072\u0020\u0064\u0068\u003a \u0027\u0025\u0064\u0027",_bebac );};_cbbd =_dedd ;_gebe ,_acab :=_ecfb .GroupByWidth ();if _acab !=nil {return 0,_ccc .Wrapf (_acab ,_eddc ,"\u0068\u0065\u0069g\u0068\u0074\u003a\u0020\u0027\u0025\u0064\u0027",_dedd );
};var _ecfa int ;for _ ,_gefbd :=range _gebe .Values {for _ ,_cbeb :=range _gefbd .Values {_edab :=_cbeb .Width ;_geba :=_edab -_ecfa ;if _acab =_ccfe .EncodeInteger (_cca .IADW ,_geba );_acab !=nil {return 0,_ccc .Wrapf (_acab ,_eddc ,"\u0049\u0041\u0044\u0057\u0020\u0066\u006f\u0072\u0020\u0064\u0077\u003a \u0027\u0025\u0064\u0027",_geba );
};_ecfa +=_geba ;if _acab =_ccfe .EncodeBitmap (_cbeb ,false );_acab !=nil {return 0,_ccc .Wrapf (_acab ,_eddc ,"H\u0065i\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u0020W\u0069\u0064\u0074\u0068: \u0025\u0064",_dedd ,_edab );};_dbcf :=_cdec [_cbeb ];_affe ._dgec [_dbcf ]=_ebea ;
_ebea ++;};};if _acab =_ccfe .EncodeOOB (_cca .IADW );_acab !=nil {return 0,_ccc .Wrap (_acab ,_eddc ,"\u0049\u0041\u0044\u0057");};};if _bbae =_ccfe .EncodeInteger (_cca .IAEX ,0);_bbae !=nil {return 0,_ccc .Wrap (_bbae ,_eddc ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");
};if _bbae =_ccfe .EncodeInteger (_cca .IAEX ,len (_affe ._bdbd ));_bbae !=nil {return 0,_ccc .Wrap (_bbae ,_eddc ,"\u006e\u0075\u006d\u0062\u0065\u0072\u0020\u006f\u0066\u0020\u0073\u0079m\u0062\u006f\u006c\u0073");};_ccfe .Final ();_bceb ,_bbae :=_ccfe .WriteTo (_ecgg );
if _bbae !=nil {return 0,_ccc .Wrap (_bbae ,_eddc ,"\u0077\u0072i\u0074\u0069\u006e\u0067 \u0065\u006ec\u006f\u0064\u0065\u0072\u0020\u0063\u006f\u006et\u0065\u0078\u0074\u0020\u0074\u006f\u0020\u0027\u0077\u0027\u0020\u0077r\u0069\u0074\u0065\u0072");
};return int (_bceb ),nil ;};func (_ffga *TextRegion )initSymbols ()error {const _fbb ="i\u006e\u0069\u0074\u0053\u0079\u006d\u0062\u006f\u006c\u0073";for _ ,_dddbg :=range _ffga .Header .RTSegments {if _dddbg ==nil {return _ccc .Error (_fbb ,"\u006e\u0069\u006c\u0020\u0073\u0065\u0067\u006de\u006e\u0074\u0020pr\u006f\u0076\u0069\u0064\u0065\u0064 \u0066\u006f\u0072\u0020\u0074\u0068\u0065\u0020\u0074\u0065\u0078\u0074\u0020\u0072\u0065g\u0069\u006f\u006e\u0020\u0053\u0079\u006d\u0062o\u006c\u0073");
};if _dddbg .Type ==0{_dbbbd ,_fcea :=_dddbg .GetSegmentData ();if _fcea !=nil {return _ccc .Wrap (_fcea ,_fbb ,"");};_aeca ,_cdda :=_dbbbd .(*SymbolDictionary );if !_cdda {return _ccc .Error (_fbb ,"\u0072e\u0066\u0065r\u0072\u0065\u0064 \u0054\u006f\u0020\u0053\u0065\u0067\u006de\u006e\u0074\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006cD\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079");
};_aeca ._dcee =_ffga ._cgeg ;_bafe ,_fcea :=_aeca .GetDictionary ();if _fcea !=nil {return _ccc .Wrap (_fcea ,_fbb ,"");};_ffga .Symbols =append (_ffga .Symbols ,_bafe ...);};};_ffga .NumberOfSymbols =uint32 (len (_ffga .Symbols ));return nil ;};func (_ggacc *TextRegion )readHuffmanFlags ()error {var (_ddbac int ;
_egeg uint64 ;_efae error ;);_ ,_efae =_ggacc ._bdgd .ReadBit ();if _efae !=nil {return _efae ;};_ddbac ,_efae =_ggacc ._bdgd .ReadBit ();if _efae !=nil {return _efae ;};_ggacc .SbHuffRSize =int8 (_ddbac );_egeg ,_efae =_ggacc ._bdgd .ReadBits (2);if _efae !=nil {return _efae ;
};_ggacc .SbHuffRDY =int8 (_egeg )&0xf;_egeg ,_efae =_ggacc ._bdgd .ReadBits (2);if _efae !=nil {return _efae ;};_ggacc .SbHuffRDX =int8 (_egeg )&0xf;_egeg ,_efae =_ggacc ._bdgd .ReadBits (2);if _efae !=nil {return _efae ;};_ggacc .SbHuffRDHeight =int8 (_egeg )&0xf;
_egeg ,_efae =_ggacc ._bdgd .ReadBits (2);if _efae !=nil {return _efae ;};_ggacc .SbHuffRDWidth =int8 (_egeg )&0xf;_egeg ,_efae =_ggacc ._bdgd .ReadBits (2);if _efae !=nil {return _efae ;};_ggacc .SbHuffDT =int8 (_egeg )&0xf;_egeg ,_efae =_ggacc ._bdgd .ReadBits (2);
if _efae !=nil {return _efae ;};_ggacc .SbHuffDS =int8 (_egeg )&0xf;_egeg ,_efae =_ggacc ._bdgd .ReadBits (2);if _efae !=nil {return _efae ;};_ggacc .SbHuffFS =int8 (_egeg )&0xf;return nil ;};type Header struct{SegmentNumber uint32 ;Type Type ;RetainFlag bool ;
PageAssociation int ;PageAssociationFieldSize bool ;RTSegments []*Header ;HeaderLength int64 ;SegmentDataLength uint64 ;SegmentDataStartOffset uint64 ;Reader _d .StreamReader ;SegmentData Segmenter ;RTSNumbers []int ;RetainBits []uint8 ;};func (_addg *HalftoneRegion )computeGrayScalePlanes (_agfg []*_gc .Bitmap ,_bag int )([][]int ,error ){_gcb :=make ([][]int ,_addg .HGridHeight );
for _abe :=0;_abe < len (_gcb );_abe ++{_gcb [_abe ]=make ([]int ,_addg .HGridWidth );};for _fda :=0;_fda < int (_addg .HGridHeight );_fda ++{for _aae :=0;_aae < int (_addg .HGridWidth );_aae +=8{var _aacg int ;if _dcbd :=int (_addg .HGridWidth )-_aae ;
_dcbd > 8{_aacg =8;}else {_aacg =_dcbd ;};_afb :=_agfg [0].GetByteIndex (_aae ,_fda );for _fdfa :=0;_fdfa < _aacg ;_fdfa ++{_dcgb :=_fdfa +_aae ;_gcb [_fda ][_dcgb ]=0;for _eccf :=0;_eccf < _bag ;_eccf ++{_gbaf ,_dccd :=_agfg [_eccf ].GetByte (_afb );if _dccd !=nil {return nil ,_dccd ;
};_edef :=_gbaf >>uint (7-_dcgb &7);_gfdc :=_edef &1;_ffc :=1<<uint (_eccf );_bgbf :=int (_gfdc )*_ffc ;_gcb [_fda ][_dcgb ]+=_bgbf ;};};};};return _gcb ,nil ;};func (_eeca *SymbolDictionary )setAtPixels ()error {if _eeca .IsHuffmanEncoded {return nil ;
};_acdb :=1;if _eeca .SdTemplate ==0{_acdb =4;};if _abcca :=_eeca .readAtPixels (_acdb );_abcca !=nil {return _abcca ;};return nil ;};func (_geca *HalftoneRegion )computeSegmentDataStructure ()error {_geca .DataOffset =_geca ._fffg .StreamPosition ();_geca .DataHeaderLength =_geca .DataOffset -_geca .DataHeaderOffset ;
_geca .DataLength =int64 (_geca ._fffg .Length ())-_geca .DataHeaderLength ;return nil ;};func (_gbca *PatternDictionary )parseHeader ()error {_eg .Log .Trace ("\u005b\u0050\u0041\u0054\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054I\u004f\u004e\u0041\u0052\u0059\u005d[\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d\u0020b\u0065\u0067\u0069\u006e");
defer func (){_eg .Log .Trace ("\u005b\u0050\u0041T\u0054\u0045\u0052\u004e\u002d\u0044\u0049\u0043\u0054\u0049\u004f\u004e\u0041\u0052\u0059\u005d\u005b\u0070\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072\u005d \u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064");
}();_ ,_bbef :=_gbca ._ccf .ReadBits (5);if _bbef !=nil {return _bbef ;};if _bbef =_gbca .readTemplate ();_bbef !=nil {return _bbef ;};if _bbef =_gbca .readIsMMREncoded ();_bbef !=nil {return _bbef ;};if _bbef =_gbca .readPatternWidthAndHeight ();_bbef !=nil {return _bbef ;
};if _bbef =_gbca .readGrayMax ();_bbef !=nil {return _bbef ;};if _bbef =_gbca .computeSegmentDataStructure ();_bbef !=nil {return _bbef ;};return _gbca .checkInput ();};func (_abge *GenericRefinementRegion )parseHeader ()(_afa error ){_eg .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072s\u0069\u006e\u0067\u0020\u0048e\u0061\u0064e\u0072\u002e\u002e\u002e");
_bdb :=_c .Now ();defer func (){if _afa ==nil {_eg .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045G\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020h\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0069\u006e\u0069\u0073\u0068id\u0020\u0069\u006e\u003a\u0020\u0025\u0064\u0020\u006e\u0073",_c .Since (_bdb ).Nanoseconds ());
}else {_eg .Log .Trace ("\u005b\u0047E\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u0020\u0070\u0061\u0072\u0073\u0069\u006e\u0067\u0020\u0068\u0065\u0061\u0064\u0065\u0072\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0073",_afa );
};}();if _afa =_abge .RegionInfo .parseHeader ();_afa !=nil {return _afa ;};_ ,_afa =_abge ._dg .ReadBits (6);if _afa !=nil {return _afa ;};_abge .IsTPGROn ,_afa =_abge ._dg .ReadBool ();if _afa !=nil {return _afa ;};var _deef int ;_deef ,_afa =_abge ._dg .ReadBit ();
if _afa !=nil {return _afa ;};_abge .TemplateID =int8 (_deef );switch _abge .TemplateID {case 0:_abge .Template =_abge ._eb ;if _afa =_abge .readAtPixels ();_afa !=nil {return ;};case 1:_abge .Template =_abge ._cd ;};return nil ;};func (_cagc *Header )readSegmentPageAssociation (_egab Documenter ,_bgge _d .StreamReader ,_ccg uint64 ,_cfd ...int )(_bfa error ){const _dfc ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074P\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061t\u0069\u006f\u006e";
if !_cagc .PageAssociationFieldSize {_dace ,_bbcc :=_bgge .ReadBits (8);if _bbcc !=nil {return _ccc .Wrap (_bbcc ,_dfc ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cagc .PageAssociation =int (_dace &0xFF);}else {_fceg ,_bagb :=_bgge .ReadBits (32);
if _bagb !=nil {return _ccc .Wrap (_bagb ,_dfc ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_cagc .PageAssociation =int (_fceg &_g .MaxInt32 );};if _ccg ==0{return nil ;};if _cagc .PageAssociation !=0{_feb ,_bccg :=_egab .GetPage (_cagc .PageAssociation );
if _bccg !=nil {return _ccc .Wrap (_bccg ,_dfc ,"\u0061s\u0073\u006f\u0063\u0069a\u0074\u0065\u0064\u0020\u0070a\u0067e\u0020n\u006f\u0074\u0020\u0066\u006f\u0075\u006ed");};var _dece int ;for _gadf :=uint64 (0);_gadf < _ccg ;_gadf ++{_dece =_cfd [_gadf ];
_cagc .RTSegments [_gadf ],_bccg =_feb .GetSegment (_dece );if _bccg !=nil {var _egdf error ;_cagc .RTSegments [_gadf ],_egdf =_egab .GetGlobalSegment (_dece );if _egdf !=nil {return _ccc .Wrapf (_bccg ,_dfc ,"\u0072\u0065\u0066\u0065\u0072\u0065n\u0063\u0065\u0020s\u0065\u0067\u006de\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064\u0020\u0061\u0074\u0020pa\u0067\u0065\u003a\u0020\u0027\u0025\u0064\u0027\u0020\u006e\u006f\u0072\u0020\u0069\u006e\u0020\u0067\u006c\u006f\u0062\u0061\u006c\u0073",_cagc .PageAssociation );
};};};return nil ;};for _bgfe :=uint64 (0);_bgfe < _ccg ;_bgfe ++{_cagc .RTSegments [_bgfe ],_bfa =_egab .GetGlobalSegment (_cfd [_bgfe ]);if _bfa !=nil {return _ccc .Wrapf (_bfa ,_dfc ,"\u0067\u006c\u006f\u0062\u0061\u006c\u0020\u0073\u0065\u0067m\u0065\u006e\u0074\u003a\u0020\u0027\u0025d\u0027\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064",_cfd [_bgfe ]);
};};return nil ;};func (_fced *GenericRegion )Size ()int {return _fced .RegionSegment .Size ()+1+2*len (_fced .GBAtX )};func (_gbeb *PatternDictionary )readIsMMREncoded ()error {_afgc ,_bea :=_gbeb ._ccf .ReadBit ();if _bea !=nil {return _bea ;};if _afgc !=0{_gbeb .IsMMREncoded =true ;
};return nil ;};func (_eaee *PageInformationSegment )readResolution ()error {_eea ,_adgb :=_eaee ._feg .ReadBits (32);if _adgb !=nil {return _adgb ;};_eaee .ResolutionX =int (_eea &_g .MaxInt32 );_eea ,_adgb =_eaee ._feg .ReadBits (32);if _adgb !=nil {return _adgb ;
};_eaee .ResolutionY =int (_eea &_g .MaxInt32 );return nil ;};func (_fadeb *SymbolDictionary )huffDecodeBmSize ()(int64 ,error ){if _fadeb ._gbcab ==nil {var (_efc int ;_bdg error ;);if _fadeb .SdHuffDecodeHeightSelection ==3{_efc ++;};if _fadeb .SdHuffDecodeWidthSelection ==3{_efc ++;
};_fadeb ._gbcab ,_bdg =_fadeb .getUserTable (_efc );if _bdg !=nil {return 0,_bdg ;};};return _fadeb ._gbcab .Decode (_fadeb ._dbcd );};func _acdc (_cde _d .StreamReader ,_cabd *Header )*GenericRefinementRegion {return &GenericRefinementRegion {_dg :_cde ,RegionInfo :NewRegionSegment (_cde ),_da :_cabd ,_eb :&template0 {},_cd :&template1 {}};
};func (_ace *GenericRegion )decodeTemplate0b (_ade ,_ceed ,_adee int ,_dbf ,_ged int )(_aea error ){const _egdg ="\u0064\u0065c\u006f\u0064\u0065T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0030\u0062";var (_deeg ,_gedc int ;_badd ,_bde int ;_ead byte ;
_ggbf int ;);if _ade >=1{_ead ,_aea =_ace .Bitmap .GetByte (_ged );if _aea !=nil {return _ccc .Wrap (_aea ,_egdg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_badd =int (_ead );};if _ade >=2{_ead ,_aea =_ace .Bitmap .GetByte (_ged -_ace .Bitmap .RowStride );
if _aea !=nil {return _ccc .Wrap (_aea ,_egdg ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_bde =int (_ead )<<6;};_deeg =(_badd &0xf0)|(_bde &0x3800);for _fdb :=0;_fdb < _adee ;_fdb =_ggbf {var (_aabf byte ;_fac int ;);_ggbf =_fdb +8;if _adga :=_ceed -_fdb ;
_adga > 8{_fac =8;}else {_fac =_adga ;};if _ade > 0{_badd <<=8;if _ggbf < _ceed {_ead ,_aea =_ace .Bitmap .GetByte (_ged +1);if _aea !=nil {return _ccc .Wrap (_aea ,_egdg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");};_badd |=int (_ead );};};if _ade > 1{_bde <<=8;
if _ggbf < _ceed {_ead ,_aea =_ace .Bitmap .GetByte (_ged -_ace .Bitmap .RowStride +1);if _aea !=nil {return _ccc .Wrap (_aea ,_egdg ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_bde |=int (_ead )<<6;};};for _bece :=0;_bece < _fac ;_bece ++{_ggd :=uint (7-_bece );
if _ace ._eee {_gedc =_ace .overrideAtTemplate0b (_deeg ,_fdb +_bece ,_ade ,int (_aabf ),_bece ,int (_ggd ));_ace ._ffed .SetIndex (int32 (_gedc ));}else {_ace ._ffed .SetIndex (int32 (_deeg ));};var _ecb int ;_ecb ,_aea =_ace ._abgc .DecodeBit (_ace ._ffed );
if _aea !=nil {return _ccc .Wrap (_aea ,_egdg ,"");};_aabf |=byte (_ecb <<_ggd );_deeg =((_deeg &0x7bf7)<<1)|_ecb |((_badd >>_ggd )&0x10)|((_bde >>_ggd )&0x800);};if _adgd :=_ace .Bitmap .SetByte (_dbf ,_aabf );_adgd !=nil {return _ccc .Wrap (_adgd ,_egdg ,"");
};_dbf ++;_ged ++;};return nil ;};func (_efac *SymbolDictionary )decodeRefinedSymbol (_cceb ,_gbcd uint32 )error {var (_eecc int ;_ggef ,_abgdc int32 ;);if _efac .IsHuffmanEncoded {_gda ,_fgfeb :=_efac ._dbcd .ReadBits (byte (_efac ._fded ));if _fgfeb !=nil {return _fgfeb ;
};_eecc =int (_gda );_fdgff ,_fgfeb :=_ad .GetStandardTable (15);if _fgfeb !=nil {return _fgfeb ;};_abdc ,_fgfeb :=_fdgff .Decode (_efac ._dbcd );if _fgfeb !=nil {return _fgfeb ;};_ggef =int32 (_abdc );_abdc ,_fgfeb =_fdgff .Decode (_efac ._dbcd );if _fgfeb !=nil {return _fgfeb ;
};_abgdc =int32 (_abdc );_fdgff ,_fgfeb =_ad .GetStandardTable (1);if _fgfeb !=nil {return _fgfeb ;};if _ ,_fgfeb =_fdgff .Decode (_efac ._dbcd );_fgfeb !=nil {return _fgfeb ;};_efac ._dbcd .Align ();}else {_efdd ,_fgfd :=_efac ._aebe .DecodeIAID (uint64 (_efac ._fded ),_efac ._dcee );
if _fgfd !=nil {return _fgfd ;};_eecc =int (_efdd );_ggef ,_fgfd =_efac ._aebe .DecodeInt (_efac ._ggf );if _fgfd !=nil {return _fgfd ;};_abgdc ,_fgfd =_efac ._aebe .DecodeInt (_efac ._gaeg );if _fgfd !=nil {return _fgfd ;};};if _facc :=_efac .setSymbolsArray ();
_facc !=nil {return _facc ;};_fedb :=_efac ._ddad [_eecc ];if _gag :=_efac .decodeNewSymbols (_cceb ,_gbcd ,_fedb ,_ggef ,_abgdc );_gag !=nil {return _gag ;};if _efac .IsHuffmanEncoded {_efac ._dbcd .Align ();};return nil ;};func (_eggb *PageInformationSegment )readMaxStripeSize ()error {_bgfdd ,_afac :=_eggb ._feg .ReadBits (15);
if _afac !=nil {return _afac ;};_eggb .MaxStripeSize =uint16 (_bgfdd &_g .MaxUint16 );return nil ;};type RegionSegment struct{_fggd _d .StreamReader ;BitmapWidth uint32 ;BitmapHeight uint32 ;XLocation uint32 ;YLocation uint32 ;CombinaionOperator _gc .CombinationOperator ;
};func (_acdg *GenericRegion )overrideAtTemplate0a (_ecfc ,_dagb ,_bgb ,_fbf ,_ccdd ,_dge int )int {if _acdg .GBAtOverride [0]{_ecfc &=0xFFEF;if _acdg .GBAtY [0]==0&&_acdg .GBAtX [0]>=-int8 (_ccdd ){_ecfc |=(_fbf >>uint (int8 (_dge )-_acdg .GBAtX [0]&0x1))<<4;
}else {_ecfc |=int (_acdg .getPixel (_dagb +int (_acdg .GBAtX [0]),_bgb +int (_acdg .GBAtY [0])))<<4;};};if _acdg .GBAtOverride [1]{_ecfc &=0xFBFF;if _acdg .GBAtY [1]==0&&_acdg .GBAtX [1]>=-int8 (_ccdd ){_ecfc |=(_fbf >>uint (int8 (_dge )-_acdg .GBAtX [1]&0x1))<<10;
}else {_ecfc |=int (_acdg .getPixel (_dagb +int (_acdg .GBAtX [1]),_bgb +int (_acdg .GBAtY [1])))<<10;};};if _acdg .GBAtOverride [2]{_ecfc &=0xF7FF;if _acdg .GBAtY [2]==0&&_acdg .GBAtX [2]>=-int8 (_ccdd ){_ecfc |=(_fbf >>uint (int8 (_dge )-_acdg .GBAtX [2]&0x1))<<11;
}else {_ecfc |=int (_acdg .getPixel (_dagb +int (_acdg .GBAtX [2]),_bgb +int (_acdg .GBAtY [2])))<<11;};};if _acdg .GBAtOverride [3]{_ecfc &=0x7FFF;if _acdg .GBAtY [3]==0&&_acdg .GBAtX [3]>=-int8 (_ccdd ){_ecfc |=(_fbf >>uint (int8 (_dge )-_acdg .GBAtX [3]&0x1))<<15;
}else {_ecfc |=int (_acdg .getPixel (_dagb +int (_acdg .GBAtX [3]),_bgb +int (_acdg .GBAtY [3])))<<15;};};return _ecfc ;};func (_dafc *PageInformationSegment )readDefaultPixelValue ()error {_ebfef ,_bgce :=_dafc ._feg .ReadBit ();if _bgce !=nil {return _bgce ;
};_dafc .DefaultPixelValue =uint8 (_ebfef &0xf);return nil ;};func (_cddbc *TextRegion )decodeRdw ()(int64 ,error ){const _cgbc ="\u0064e\u0063\u006f\u0064\u0065\u0052\u0064w";if _cddbc .IsHuffmanEncoded {if _cddbc .SbHuffRDWidth ==3{if _cddbc ._aacag ==nil {var (_eege int ;
_dbac error ;);if _cddbc .SbHuffFS ==3{_eege ++;};if _cddbc .SbHuffDS ==3{_eege ++;};if _cddbc .SbHuffDT ==3{_eege ++;};_cddbc ._aacag ,_dbac =_cddbc .getUserTable (_eege );if _dbac !=nil {return 0,_ccc .Wrap (_dbac ,_cgbc ,"");};};return _cddbc ._aacag .Decode (_cddbc ._bdgd );
};_gdcb ,_agea :=_ad .GetStandardTable (14+int (_cddbc .SbHuffRDWidth ));if _agea !=nil {return 0,_ccc .Wrap (_agea ,_cgbc ,"");};return _gdcb .Decode (_cddbc ._bdgd );};_dgda ,_gebag :=_cddbc ._fffd .DecodeInt (_cddbc ._afade );if _gebag !=nil {return 0,_ccc .Wrap (_gebag ,_cgbc ,"");
};return int64 (_dgda ),nil ;};func (_adg *GenericRefinementRegion )overrideAtTemplate0 (_cfee ,_gfe ,_bbd ,_fcg ,_ceg int )int {if _adg ._gge [0]{_cfee &=0xfff7;if _adg .GrAtY [0]==0&&int (_adg .GrAtX [0])>=-_ceg {_cfee |=(_fcg >>uint (7-(_ceg +int (_adg .GrAtX [0])))&0x1)<<3;
}else {_cfee |=_adg .getPixel (_adg .RegionBitmap ,_gfe +int (_adg .GrAtX [0]),_bbd +int (_adg .GrAtY [0]))<<3;};};if _adg ._gge [1]{_cfee &=0xefff;if _adg .GrAtY [1]==0&&int (_adg .GrAtX [1])>=-_ceg {_cfee |=(_fcg >>uint (7-(_ceg +int (_adg .GrAtX [1])))&0x1)<<12;
}else {_cfee |=_adg .getPixel (_adg .ReferenceBitmap ,_gfe +int (_adg .GrAtX [1]),_bbd +int (_adg .GrAtY [1]));};};return _cfee ;};func (_ffb *GenericRefinementRegion )String ()string {_cba :=&_cb .Builder {};_cba .WriteString ("\u000a[\u0047E\u004e\u0045\u0052\u0049\u0043 \u0052\u0045G\u0049\u004f\u004e\u005d\u000a");
_cba .WriteString (_ffb .RegionInfo .String ()+"\u000a");_cba .WriteString (_ff .Sprintf ("\u0009\u002d \u0049\u0073\u0054P\u0047\u0052\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_ffb .IsTPGROn ));_cba .WriteString (_ff .Sprintf ("\u0009-\u0020T\u0065\u006d\u0070\u006c\u0061t\u0065\u0049D\u003a\u0020\u0025\u0076\u000a",_ffb .TemplateID ));
_cba .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0058\u003a\u0020\u0025\u0076\u000a",_ffb .GrAtX ));_cba .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0047\u0072\u0041\u0074\u0059\u003a\u0020\u0025\u0076\u000a",_ffb .GrAtY ));
_cba .WriteString (_ff .Sprintf ("\u0009-\u0020R\u0065\u0066\u0065\u0072\u0065n\u0063\u0065D\u0058\u0020\u0025\u0076\u000a",_ffb .ReferenceDX ));_cba .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0052ef\u0065\u0072\u0065\u006e\u0063\u0044\u0065\u0059\u003a\u0020\u0025\u0076\u000a",_ffb .ReferenceDY ));
return _cba .String ();};func (_eefc *PageInformationSegment )CombinationOperator ()_gc .CombinationOperator {return _eefc ._cfdg ;};func (_bdaa *TextRegion )setCodingStatistics ()error {if _bdaa ._gfcg ==nil {_bdaa ._gfcg =_a .NewStats (512,1);};if _bdaa ._bbbe ==nil {_bdaa ._bbbe =_a .NewStats (512,1);
};if _bdaa ._edac ==nil {_bdaa ._edac =_a .NewStats (512,1);};if _bdaa ._ddaf ==nil {_bdaa ._ddaf =_a .NewStats (512,1);};if _bdaa ._feed ==nil {_bdaa ._feed =_a .NewStats (512,1);};if _bdaa ._afade ==nil {_bdaa ._afade =_a .NewStats (512,1);};if _bdaa ._dddd ==nil {_bdaa ._dddd =_a .NewStats (512,1);
};if _bdaa ._cgeg ==nil {_bdaa ._cgeg =_a .NewStats (1<<uint (_bdaa ._afde ),1);};if _bdaa ._fcf ==nil {_bdaa ._fcf =_a .NewStats (512,1);};if _bdaa ._gcdd ==nil {_bdaa ._gcdd =_a .NewStats (512,1);};if _bdaa ._fffd ==nil {var _dgdb error ;_bdaa ._fffd ,_dgdb =_a .New (_bdaa ._bdgd );
if _dgdb !=nil {return _dgdb ;};};return nil ;};func (_eadg *SymbolDictionary )Encode (w _d .BinaryWriter )(_bbfb int ,_dfcc error ){const _eaed ="\u0053\u0079\u006dbo\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002e\u0045\u006e\u0063\u006f\u0064\u0065";
if _eadg ==nil {return 0,_ccc .Error (_eaed ,"\u0073\u0079m\u0062\u006f\u006c\u0020\u0064\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066in\u0065\u0064");};if _bbfb ,_dfcc =_eadg .encodeFlags (w );_dfcc !=nil {return _bbfb ,_ccc .Wrap (_dfcc ,_eaed ,"");
};_bfbf ,_dfcc :=_eadg .encodeATFlags (w );if _dfcc !=nil {return _bbfb ,_ccc .Wrap (_dfcc ,_eaed ,"");};_bbfb +=_bfbf ;if _bfbf ,_dfcc =_eadg .encodeRefinementATFlags (w );_dfcc !=nil {return _bbfb ,_ccc .Wrap (_dfcc ,_eaed ,"");};_bbfb +=_bfbf ;if _bfbf ,_dfcc =_eadg .encodeNumSyms (w );
_dfcc !=nil {return _bbfb ,_ccc .Wrap (_dfcc ,_eaed ,"");};_bbfb +=_bfbf ;if _bfbf ,_dfcc =_eadg .encodeSymbols (w );_dfcc !=nil {return _bbfb ,_ccc .Wrap (_dfcc ,_eaed ,"");};_bbfb +=_bfbf ;return _bbfb ,nil ;};func (_caba *PatternDictionary )checkInput ()error {if _caba .HdpHeight < 1||_caba .HdpWidth < 1{return _fd .New ("in\u0076\u0061l\u0069\u0064\u0020\u0048\u0065\u0061\u0064\u0065\u0072 \u0056\u0061\u006c\u0075\u0065\u003a\u0020\u0057\u0069\u0064\u0074\u0068\u002f\u0048\u0065\u0069\u0067\u0068\u0074\u0020\u006d\u0075\u0073\u0074\u0020\u0062\u0065\u0020g\u0072e\u0061\u0074\u0065\u0072\u0020\u0074\u0068\u0061n\u0020z\u0065\u0072o");
};if _caba .IsMMREncoded {if _caba .HDTemplate !=0{_eg .Log .Debug ("\u0076\u0061\u0072\u0069\u0061\u0062\u006c\u0065\u0020\u0048\u0044\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0073\u0068\u006f\u0075\u006c\u0064 \u006e\u006f\u0074\u0020\u0063\u006f\u006e\u0074\u0061\u0069\u006e \u0074\u0068\u0065\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u0030");
};};return nil ;};func (_dae *GenericRegion )overrideAtTemplate3 (_bebg ,_eeedc ,_gfbc ,_dgag ,_gcd int )int {_bebg &=0x3EF;if _dae .GBAtY [0]==0&&_dae .GBAtX [0]>=-int8 (_gcd ){_bebg |=(_dgag >>uint (7-(int8 (_gcd )+_dae .GBAtX [0]))&0x1)<<4;}else {_bebg |=int (_dae .getPixel (_eeedc +int (_dae .GBAtX [0]),_gfbc +int (_dae .GBAtY [0])))<<4;
};return _bebg ;};func (_adba *TextRegion )decodeIds ()(int64 ,error ){const _acfcc ="\u0064e\u0063\u006f\u0064\u0065\u0049\u0064s";if _adba .IsHuffmanEncoded {if _adba .SbHuffDS ==3{if _adba ._ffaea ==nil {_bgacd :=0;if _adba .SbHuffFS ==3{_bgacd ++;};
var _ffce error ;_adba ._ffaea ,_ffce =_adba .getUserTable (_bgacd );if _ffce !=nil {return 0,_ccc .Wrap (_ffce ,_acfcc ,"");};};return _adba ._ffaea .Decode (_adba ._bdgd );};_cade ,_beefg :=_ad .GetStandardTable (8+int (_adba .SbHuffDS ));if _beefg !=nil {return 0,_ccc .Wrap (_beefg ,_acfcc ,"");
};return _cade .Decode (_adba ._bdgd );};_bdge ,_abbg :=_adba ._fffd .DecodeInt (_adba ._edac );if _abbg !=nil {return 0,_ccc .Wrap (_abbg ,_acfcc ,"\u0063\u0078\u0049\u0041\u0044\u0053");};return int64 (_bdge ),nil ;};func _cacb (_gaec int )int {if _gaec ==0{return 0;
};_gaec |=_gaec >>1;_gaec |=_gaec >>2;_gaec |=_gaec >>4;_gaec |=_gaec >>8;_gaec |=_gaec >>16;return (_gaec +1)>>1;};func (_gfdg *PageInformationSegment )String ()string {_beec :=&_cb .Builder {};_beec .WriteString ("\u000a\u005b\u0050\u0041G\u0045\u002d\u0049\u004e\u0046\u004f\u0052\u004d\u0041\u0054I\u004fN\u002d\u0053\u0045\u0047\u004d\u0045\u004eT\u005d\u000a");
_beec .WriteString (_ff .Sprintf ("\u0009\u002d \u0042\u004d\u0048e\u0069\u0067\u0068\u0074\u003a\u0020\u0025\u0064\u000a",_gfdg .PageBMHeight ));_beec .WriteString (_ff .Sprintf ("\u0009-\u0020B\u004d\u0057\u0069\u0064\u0074\u0068\u003a\u0020\u0025\u0064\u000a",_gfdg .PageBMWidth ));
_beec .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0058\u003a\u0020\u0025\u0064\u000a",_gfdg .ResolutionX ));_beec .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0052es\u006f\u006c\u0075\u0074\u0069\u006f\u006e\u0059\u003a\u0020\u0025\u0064\u000a",_gfdg .ResolutionY ));
_beec .WriteString (_ff .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0073\u000a",_gfdg ._cfdg ));_beec .WriteString (_ff .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006eO\u0070\u0065\u0072\u0061\u0074\u006f\u0072O\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u003a\u0020\u0025v\u000a",_gfdg ._dfec ));
_beec .WriteString (_ff .Sprintf ("\u0009-\u0020I\u0073\u004c\u006f\u0073\u0073l\u0065\u0073s\u003a\u0020\u0025\u0076\u000a",_gfdg .IsLossless ));_beec .WriteString (_ff .Sprintf ("\u0009\u002d\u0020R\u0065\u0071\u0075\u0069r\u0065\u0073\u0041\u0075\u0078\u0069\u006ci\u0061\u0072\u0079\u0042\u0075\u0066\u0066\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_gfdg ._bdec ));
_beec .WriteString (_ff .Sprintf ("\u0009\u002d\u0020M\u0069\u0067\u0068\u0074C\u006f\u006e\u0074\u0061\u0069\u006e\u0052e\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0076\u000a",_gfdg ._cbec ));_beec .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0049\u0073\u0053\u0074\u0072\u0069\u0070\u0065\u0064:\u0020\u0025\u0076\u000a",_gfdg .IsStripe ));
_beec .WriteString (_ff .Sprintf ("\t\u002d\u0020\u004d\u0061xS\u0074r\u0069\u0070\u0065\u0053\u0069z\u0065\u003a\u0020\u0025\u0076\u000a",_gfdg .MaxStripeSize ));return _beec .String ();};func (_bg *GenericRefinementRegion )decodeSLTP ()(int ,error ){_bg .Template .setIndex (_bg ._fdd );
return _bg ._cbc .DecodeBit (_bg ._fdd );};func (_gfac *SymbolDictionary )setInSyms ()error {if _gfac .Header .RTSegments !=nil {return _gfac .retrieveImportSymbols ();};_gfac ._faad =make ([]*_gc .Bitmap ,0);return nil ;};func (_ag *EndOfStripe )Init (h *Header ,r _d .StreamReader )error {_ag ._ege =r ;
return _ag .parseHeader (h ,r );};func (_ffca *SymbolDictionary )readNumberOfExportedSymbols ()error {_cfaf ,_fcbcc :=_ffca ._dbcd .ReadBits (32);if _fcbcc !=nil {return _fcbcc ;};_ffca .NumberOfExportedSymbols =uint32 (_cfaf &_g .MaxUint32 );return nil ;
};func (_abg *GenericRefinementRegion )decodeTypicalPredictedLineTemplate1 (_fga ,_gcf ,_cec ,_fce ,_aee ,_fgc ,_bfc ,_gbc ,_fed int )(_aef error ){var (_bff ,_fcc int ;_gdcd ,_dgcb int ;_egc ,_fa int ;_cbg byte ;);if _fga > 0{_cbg ,_aef =_abg .RegionBitmap .GetByte (_bfc -_cec );
if _aef !=nil {return ;};_gdcd =int (_cbg );};if _gbc > 0&&_gbc <=_abg .ReferenceBitmap .Height {_cbg ,_aef =_abg .ReferenceBitmap .GetByte (_fed -_fce +_fgc );if _aef !=nil {return ;};_dgcb =int (_cbg )<<2;};if _gbc >=0&&_gbc < _abg .ReferenceBitmap .Height {_cbg ,_aef =_abg .ReferenceBitmap .GetByte (_fed +_fgc );
if _aef !=nil {return ;};_egc =int (_cbg );};if _gbc > -2&&_gbc < _abg .ReferenceBitmap .Height -1{_cbg ,_aef =_abg .ReferenceBitmap .GetByte (_fed +_fce +_fgc );if _aef !=nil {return ;};_fa =int (_cbg );};_bff =((_gdcd >>5)&0x6)|((_fa >>2)&0x30)|(_egc &0xc0)|(_dgcb &0x200);
_fcc =((_fa >>2)&0x70)|(_egc &0xc0)|(_dgcb &0x700);var _fff int ;for _dbd :=0;_dbd < _aee ;_dbd =_fff {var (_fb int ;_be int ;);_fff =_dbd +8;if _fb =_gcf -_dbd ;_fb > 8{_fb =8;};_bbb :=_fff < _gcf ;_abc :=_fff < _abg .ReferenceBitmap .Width ;_acb :=_fgc +1;
if _fga > 0{_cbg =0;if _bbb {_cbg ,_aef =_abg .RegionBitmap .GetByte (_bfc -_cec +1);if _aef !=nil {return ;};};_gdcd =(_gdcd <<8)|int (_cbg );};if _gbc > 0&&_gbc <=_abg .ReferenceBitmap .Height {var _abcc int ;if _abc {_cbg ,_aef =_abg .ReferenceBitmap .GetByte (_fed -_fce +_acb );
if _aef !=nil {return ;};_abcc =int (_cbg )<<2;};_dgcb =(_dgcb <<8)|_abcc ;};if _gbc >=0&&_gbc < _abg .ReferenceBitmap .Height {_cbg =0;if _abc {_cbg ,_aef =_abg .ReferenceBitmap .GetByte (_fed +_acb );if _aef !=nil {return ;};};_egc =(_egc <<8)|int (_cbg );
};if _gbc > -2&&_gbc < (_abg .ReferenceBitmap .Height -1){_cbg =0;if _abc {_cbg ,_aef =_abg .ReferenceBitmap .GetByte (_fed +_fce +_acb );if _aef !=nil {return ;};};_fa =(_fa <<8)|int (_cbg );};for _geg :=0;_geg < _fb ;_geg ++{var _cfe int ;_dca :=(_fcc >>4)&0x1ff;
switch _dca {case 0x1ff:_cfe =1;case 0x00:_cfe =0;default:_abg ._fdd .SetIndex (int32 (_bff ));_cfe ,_aef =_abg ._cbc .DecodeBit (_abg ._fdd );if _aef !=nil {return ;};};_gbg :=uint (7-_geg );_be |=_cfe <<_gbg ;_bff =((_bff &0x0d6)<<1)|_cfe |(_gdcd >>_gbg +5)&0x002|((_fa >>_gbg +2)&0x010)|((_egc >>_gbg )&0x040)|((_dgcb >>_gbg )&0x200);
_fcc =((_fcc &0xdb)<<1)|((_fa >>_gbg +2)&0x010)|((_egc >>_gbg )&0x080)|((_dgcb >>_gbg )&0x400);};_aef =_abg .RegionBitmap .SetByte (_bfc ,byte (_be ));if _aef !=nil {return ;};_bfc ++;_fed ++;};return nil ;};func (_ecbf *Header )referenceSize ()uint {switch {case _ecbf .SegmentNumber <=255:return 1;
case _ecbf .SegmentNumber <=65535:return 2;default:return 4;};};func (_cbbf *TextRegion )decodeSymbolInstances ()error {_gecf ,_gbcf :=_cbbf .decodeStripT ();if _gbcf !=nil {return _gbcf ;};var (_ffbf int64 ;_eaab uint32 ;);for _eaab < _cbbf .NumberOfSymbolInstances {_gbafe ,_edcc :=_cbbf .decodeDT ();
if _edcc !=nil {return _edcc ;};_gecf +=_gbafe ;var _cdcg int64 ;_acbfd :=true ;_cbbf ._fee =0;for {if _acbfd {_cdcg ,_edcc =_cbbf .decodeDfs ();if _edcc !=nil {return _edcc ;};_ffbf +=_cdcg ;_cbbf ._fee =_ffbf ;_acbfd =false ;}else {_cfbaa ,_ecge :=_cbbf .decodeIds ();
if _cc .Is (_ecge ,_ge .ErrOOB ){break ;};if _ecge !=nil {return _ecge ;};if _eaab >=_cbbf .NumberOfSymbolInstances {break ;};_cbbf ._fee +=_cfbaa +int64 (_cbbf .SbDsOffset );};_bacd ,_gdba :=_cbbf .decodeCurrentT ();if _gdba !=nil {return _gdba ;};_cbbdd :=_gecf +_bacd ;
_fcca ,_gdba :=_cbbf .decodeID ();if _gdba !=nil {return _gdba ;};_dcbbd ,_gdba :=_cbbf .decodeRI ();if _gdba !=nil {return _gdba ;};_ceae ,_gdba :=_cbbf .decodeIb (_dcbbd ,_fcca );if _gdba !=nil {return _gdba ;};if _gdba =_cbbf .blit (_ceae ,_cbbdd );
_gdba !=nil {return _gdba ;};_eaab ++;};};return nil ;};func (_cegb *GenericRegion )decodeTemplate1 (_ffd ,_eged ,_dbeg int ,_abdb ,_aced int )(_dbcc error ){const _ccda ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0031";
var (_aggf ,_cagd int ;_gfd ,_eaca int ;_agded byte ;_bba ,_aad int ;);if _ffd >=1{_agded ,_dbcc =_cegb .Bitmap .GetByte (_aced );if _dbcc !=nil {return _ccc .Wrap (_dbcc ,_ccda ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00201");};_gfd =int (_agded );};if _ffd >=2{_agded ,_dbcc =_cegb .Bitmap .GetByte (_aced -_cegb .Bitmap .RowStride );
if _dbcc !=nil {return _ccc .Wrap (_dbcc ,_ccda ,"\u006ci\u006e\u0065\u0020\u003e\u003d\u00202");};_eaca =int (_agded )<<5;};_aggf =((_gfd >>1)&0x1f8)|((_eaca >>1)&0x1e00);for _eeeg :=0;_eeeg < _dbeg ;_eeeg =_bba {var (_dea byte ;_adfc int ;);_bba =_eeeg +8;
if _gdg :=_eged -_eeeg ;_gdg > 8{_adfc =8;}else {_adfc =_gdg ;};if _ffd > 0{_gfd <<=8;if _bba < _eged {_agded ,_dbcc =_cegb .Bitmap .GetByte (_aced +1);if _dbcc !=nil {return _ccc .Wrap (_dbcc ,_ccda ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0030");
};_gfd |=int (_agded );};};if _ffd > 1{_eaca <<=8;if _bba < _eged {_agded ,_dbcc =_cegb .Bitmap .GetByte (_aced -_cegb .Bitmap .RowStride +1);if _dbcc !=nil {return _ccc .Wrap (_dbcc ,_ccda ,"\u006c\u0069\u006e\u0065\u0020\u003e\u0020\u0031");};_eaca |=int (_agded )<<5;
};};for _faf :=0;_faf < _adfc ;_faf ++{if _cegb ._eee {_cagd =_cegb .overrideAtTemplate1 (_aggf ,_eeeg +_faf ,_ffd ,int (_dea ),_faf );_cegb ._ffed .SetIndex (int32 (_cagd ));}else {_cegb ._ffed .SetIndex (int32 (_aggf ));};_aad ,_dbcc =_cegb ._abgc .DecodeBit (_cegb ._ffed );
if _dbcc !=nil {return _ccc .Wrap (_dbcc ,_ccda ,"");};_dea |=byte (_aad )<<uint (7-_faf );_acba :=uint (8-_faf );_aggf =((_aggf &0xefb)<<1)|_aad |((_gfd >>_acba )&0x8)|((_eaca >>_acba )&0x200);};if _dbg :=_cegb .Bitmap .SetByte (_abdb ,_dea );_dbg !=nil {return _ccc .Wrap (_dbg ,_ccda ,"");
};_abdb ++;_aced ++;};return nil ;};func (_cac *GenericRefinementRegion )GetRegionInfo ()*RegionSegment {return _cac .RegionInfo };func (_agdb *TableSegment )HtLow ()int32 {return _agdb ._cdaff };func (_ga *template0 )form (_fcgf ,_gfec ,_acbeg ,_dgg ,_abcf int16 )int16 {return (_fcgf <<10)|(_gfec <<7)|(_acbeg <<4)|(_dgg <<1)|_abcf ;
};func (_dggbd *TextRegion )encodeFlags (_edbf _d .BinaryWriter )(_dbae int ,_bbefc error ){const _ceeec ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";if _bbefc =_edbf .WriteBit (int (_dggbd .SbrTemplate ));_bbefc !=nil {return _dbae ,_ccc .Wrap (_bbefc ,_ceeec ,"s\u0062\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};if _ ,_bbefc =_edbf .WriteBits (uint64 (_dggbd .SbDsOffset ),5);_bbefc !=nil {return _dbae ,_ccc .Wrap (_bbefc ,_ceeec ,"\u0073\u0062\u0044\u0073\u004f\u0066\u0066\u0073\u0065\u0074");};if _bbefc =_edbf .WriteBit (int (_dggbd .DefaultPixel ));_bbefc !=nil {return _dbae ,_ccc .Wrap (_bbefc ,_ceeec ,"\u0044\u0065\u0066a\u0075\u006c\u0074\u0050\u0069\u0078\u0065\u006c");
};if _ ,_bbefc =_edbf .WriteBits (uint64 (_dggbd .CombinationOperator ),2);_bbefc !=nil {return _dbae ,_ccc .Wrap (_bbefc ,_ceeec ,"\u0043\u006f\u006d\u0062in\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065\u0072\u0061\u0074\u006f\u0072");};if _bbefc =_edbf .WriteBit (int (_dggbd .IsTransposed ));
_bbefc !=nil {return _dbae ,_ccc .Wrap (_bbefc ,_ceeec ,"\u0069\u0073\u0020\u0074\u0072\u0061\u006e\u0073\u0070\u006f\u0073\u0065\u0064");};if _ ,_bbefc =_edbf .WriteBits (uint64 (_dggbd .ReferenceCorner ),2);_bbefc !=nil {return _dbae ,_ccc .Wrap (_bbefc ,_ceeec ,"\u0072\u0065f\u0065\u0072\u0065n\u0063\u0065\u0020\u0063\u006f\u0072\u006e\u0065\u0072");
};if _ ,_bbefc =_edbf .WriteBits (uint64 (_dggbd .LogSBStrips ),2);_bbefc !=nil {return _dbae ,_ccc .Wrap (_bbefc ,_ceeec ,"L\u006f\u0067\u0053\u0042\u0053\u0074\u0072\u0069\u0070\u0073");};var _afaag int ;if _dggbd .UseRefinement {_afaag =1;};if _bbefc =_edbf .WriteBit (_afaag );
_bbefc !=nil {return _dbae ,_ccc .Wrap (_bbefc ,_ceeec ,"\u0075\u0073\u0065\u0020\u0072\u0065\u0066\u0069\u006ee\u006d\u0065\u006e\u0074");};_afaag =0;if _dggbd .IsHuffmanEncoded {_afaag =1;};if _bbefc =_edbf .WriteBit (_afaag );_bbefc !=nil {return _dbae ,_ccc .Wrap (_bbefc ,_ceeec ,"u\u0073\u0065\u0020\u0068\u0075\u0066\u0066\u006d\u0061\u006e");
};_dbae =2;return _dbae ,nil ;};func (_fdgf *GenericRegion )GetRegionBitmap ()(_ddg *_gc .Bitmap ,_eaa error ){if _fdgf .Bitmap !=nil {return _fdgf .Bitmap ,nil ;};if _fdgf .IsMMREncoded {if _fdgf ._dce ==nil {_fdgf ._dce ,_eaa =_cg .New (_fdgf ._dga ,int (_fdgf .RegionSegment .BitmapWidth ),int (_fdgf .RegionSegment .BitmapHeight ),_fdgf .DataOffset ,_fdgf .DataLength );
if _eaa !=nil {return nil ,_eaa ;};};_fdgf .Bitmap ,_eaa =_fdgf ._dce .UncompressMMR ();return _fdgf .Bitmap ,_eaa ;};if _eaa =_fdgf .updateOverrideFlags ();_eaa !=nil {return nil ,_eaa ;};var _adaa int ;if _fdgf ._abgc ==nil {_fdgf ._abgc ,_eaa =_a .New (_fdgf ._dga );
if _eaa !=nil {return nil ,_eaa ;};};if _fdgf ._ffed ==nil {_fdgf ._ffed =_a .NewStats (65536,1);};_fdgf .Bitmap =_gc .New (int (_fdgf .RegionSegment .BitmapWidth ),int (_fdgf .RegionSegment .BitmapHeight ));_faa :=int (uint32 (_fdgf .Bitmap .Width +7)&(^uint32 (7)));
for _dcdg :=0;_dcdg < _fdgf .Bitmap .Height ;_dcdg ++{if _fdgf .IsTPGDon {var _dbe int ;_dbe ,_eaa =_fdgf .decodeSLTP ();if _eaa !=nil {return nil ,_eaa ;};_adaa ^=_dbe ;};if _adaa ==1{if _dcdg > 0{if _eaa =_fdgf .copyLineAbove (_dcdg );_eaa !=nil {return nil ,_eaa ;
};};}else {if _eaa =_fdgf .decodeLine (_dcdg ,_fdgf .Bitmap .Width ,_faa );_eaa !=nil {return nil ,_eaa ;};};};return _fdgf .Bitmap ,nil ;};func (_ac *EndOfStripe )parseHeader (_ca *Header ,_gg _d .StreamReader )error {_ab ,_bb :=_ac ._ege .ReadBits (32);
if _bb !=nil {return _bb ;};_ac ._geb =int (_ab &_g .MaxInt32 );return nil ;};func (_adaaf *SymbolDictionary )getToExportFlags ()([]int ,error ){var (_gbcdf int ;_dbffc int32 ;_dgdc error ;_bgee =int32 (_adaaf ._fcga +_adaaf .NumberOfNewSymbols );_baggg =make ([]int ,_bgee );
);for _abcfbb :=int32 (0);_abcfbb < _bgee ;_abcfbb +=_dbffc {if _adaaf .IsHuffmanEncoded {_deeef ,_eefeg :=_ad .GetStandardTable (1);if _eefeg !=nil {return nil ,_eefeg ;};_egffc ,_eefeg :=_deeef .Decode (_adaaf ._dbcd );if _eefeg !=nil {return nil ,_eefeg ;
};_dbffc =int32 (_egffc );}else {_dbffc ,_dgdc =_adaaf ._aebe .DecodeInt (_adaaf ._gcaa );if _dgdc !=nil {return nil ,_dgdc ;};};if _dbffc !=0{for _ebee :=_abcfbb ;_ebee < _abcfbb +_dbffc ;_ebee ++{_baggg [_ebee ]=_gbcdf ;};};if _gbcdf ==0{_gbcdf =1;}else {_gbcdf =0;
};};return _baggg ,nil ;};func (_ceab *HalftoneRegion )renderPattern (_gbda [][]int )(_acag error ){var _ecad ,_dddg int ;for _cgcf :=0;_cgcf < int (_ceab .HGridHeight );_cgcf ++{for _fdc :=0;_fdc < int (_ceab .HGridWidth );_fdc ++{_ecad =_ceab .computeX (_cgcf ,_fdc );
_dddg =_ceab .computeY (_cgcf ,_fdc );_gae :=_ceab .Patterns [_gbda [_cgcf ][_fdc ]];if _acag =_gc .Blit (_gae ,_ceab .HalftoneRegionBitmap ,_ecad +int (_ceab .HGridX ),_dddg +int (_ceab .HGridY ),_ceab .CombinationOperator );_acag !=nil {return _acag ;
};};};return nil ;};func (_fgb *GenericRegion )readGBAtPixels (_aafa int )error {const _fca ="\u0072\u0065\u0061\u0064\u0047\u0042\u0041\u0074\u0050i\u0078\u0065\u006c\u0073";_fgb .GBAtX =make ([]int8 ,_aafa );_fgb .GBAtY =make ([]int8 ,_aafa );for _deegf :=0;
_deegf < _aafa ;_deegf ++{_aba ,_cbcd :=_fgb ._dga .ReadByte ();if _cbcd !=nil {return _ccc .Wrapf (_cbcd ,_fca ,"\u0058\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_deegf );};_fgb .GBAtX [_deegf ]=int8 (_aba );_aba ,_cbcd =_fgb ._dga .ReadByte ();
if _cbcd !=nil {return _ccc .Wrapf (_cbcd ,_fca ,"\u0059\u0020\u0061t\u0020\u0069\u003a\u0020\u0027\u0025\u0064\u0027",_deegf );};_fgb .GBAtY [_deegf ]=int8 (_aba );};return nil ;};func (_ebec *SymbolDictionary )readRefinementAtPixels (_eeac int )error {_ebec .SdrATX =make ([]int8 ,_eeac );
_ebec .SdrATY =make ([]int8 ,_eeac );var (_aeae byte ;_bcacb error ;);for _ggdd :=0;_ggdd < _eeac ;_ggdd ++{_aeae ,_bcacb =_ebec ._dbcd .ReadByte ();if _bcacb !=nil {return _bcacb ;};_ebec .SdrATX [_ggdd ]=int8 (_aeae );_aeae ,_bcacb =_ebec ._dbcd .ReadByte ();
if _bcacb !=nil {return _bcacb ;};_ebec .SdrATY [_ggdd ]=int8 (_aeae );};return nil ;};func (_bbcg *TextRegion )parseHeader ()error {var _cgfa error ;_eg .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069n\u0073\u002e\u002e\u002e");
defer func (){if _cgfa !=nil {_eg .Log .Trace ("\u005b\u0054\u0045\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044E\u0052\u005d\u0020\u0066\u0061i\u006c\u0065d\u002e\u0020\u0025\u0076",_cgfa );
}else {_eg .Log .Trace ("\u005b\u0054E\u0058\u0054\u0020\u0052E\u0047\u0049O\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045-\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069s\u0068\u0065\u0064\u002e");};}();if _cgfa =_bbcg .RegionInfo .parseHeader ();
_cgfa !=nil {return _cgfa ;};if _cgfa =_bbcg .readRegionFlags ();_cgfa !=nil {return _cgfa ;};if _bbcg .IsHuffmanEncoded {if _cgfa =_bbcg .readHuffmanFlags ();_cgfa !=nil {return _cgfa ;};};if _cgfa =_bbcg .readUseRefinement ();_cgfa !=nil {return _cgfa ;
};if _cgfa =_bbcg .readAmountOfSymbolInstances ();_cgfa !=nil {return _cgfa ;};if _cgfa =_bbcg .getSymbols ();_cgfa !=nil {return _cgfa ;};if _cgfa =_bbcg .computeSymbolCodeLength ();_cgfa !=nil {return _cgfa ;};if _cgfa =_bbcg .checkInput ();_cgfa !=nil {return _cgfa ;
};_eg .Log .Trace ("\u0025\u0073",_bbcg .String ());return nil ;};func (_dgeb *SymbolDictionary )decodeThroughTextRegion (_gbabd ,_abbc ,_fcbc uint32 )error {if _dgeb ._cegd ==nil {_dgeb ._cegd =_ffgd (_dgeb ._dbcd ,nil );_dgeb ._cegd .setContexts (_dgeb ._gadd ,_a .NewStats (512,1),_a .NewStats (512,1),_a .NewStats (512,1),_a .NewStats (512,1),_dgeb ._dcee ,_a .NewStats (512,1),_a .NewStats (512,1),_a .NewStats (512,1),_a .NewStats (512,1));
};if _eafd :=_dgeb .setSymbolsArray ();_eafd !=nil {return _eafd ;};_dgeb ._cegd .setParameters (_dgeb ._aebe ,_dgeb .IsHuffmanEncoded ,true ,_gbabd ,_abbc ,_fcbc ,1,_dgeb ._fcga +_dgeb ._bdfb ,0,0,0,1,0,0,0,0,0,0,0,0,0,_dgeb .SdrTemplate ,_dgeb .SdrATX ,_dgeb .SdrATY ,_dgeb ._ddad ,_dgeb ._fded );
return _dgeb .addSymbol (_dgeb ._cegd );};func (_eadbg *TableSegment )StreamReader ()_d .StreamReader {return _eadbg ._fgeg };func (_cbad *HalftoneRegion )GetRegionInfo ()*RegionSegment {return _cbad .RegionSegment };func (_bcdbe *GenericRegion )writeGBAtPixels (_bbdg _d .BinaryWriter )(_aada int ,_gdga error ){const _abaf ="\u0077r\u0069t\u0065\u0047\u0042\u0041\u0074\u0050\u0069\u0078\u0065\u006c\u0073";
if _bcdbe .UseMMR {return 0,nil ;};_fdba :=1;if _bcdbe .GBTemplate ==0{_fdba =4;}else if _bcdbe .UseExtTemplates {_fdba =12;};if len (_bcdbe .GBAtX )!=_fdba {return 0,_ccc .Errorf (_abaf ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0058\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};if len (_bcdbe .GBAtY )!=_fdba {return 0,_ccc .Errorf (_abaf ,"\u0067\u0062\u0020\u0061\u0074\u0020\u0070\u0061\u0069\u0072\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u0020d\u006f\u0065\u0073\u006e\u0027\u0074\u0020m\u0061\u0074\u0063\u0068\u0020\u0074\u006f\u0020\u0047\u0042\u0041t\u0059\u0020\u0073\u006c\u0069\u0063\u0065\u0020\u006c\u0065\u006e");
};for _gdgf :=0;_gdgf < _fdba ;_gdgf ++{if _gdga =_bbdg .WriteByte (byte (_bcdbe .GBAtX [_gdgf ]));_gdga !=nil {return _aada ,_ccc .Wrap (_gdga ,_abaf ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0058");};_aada ++;if _gdga =_bbdg .WriteByte (byte (_bcdbe .GBAtY [_gdgf ]));
_gdga !=nil {return _aada ,_ccc .Wrap (_gdga ,_abaf ,"w\u0072\u0069\u0074\u0065\u0020\u0047\u0042\u0041\u0074\u0059");};_aada ++;};return _aada ,nil ;};func (_age *GenericRegion )updateOverrideFlags ()error {const _faeb ="\u0075\u0070\u0064\u0061te\u004f\u0076\u0065\u0072\u0072\u0069\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _age .GBAtX ==nil ||_age .GBAtY ==nil {return nil ;};if len (_age .GBAtX )!=len (_age .GBAtY ){return _ccc .Errorf (_faeb ,"i\u006eco\u0073i\u0073t\u0065\u006e\u0074\u0020\u0041T\u0020\u0070\u0069x\u0065\u006c\u002e\u0020\u0041m\u006f\u0075\u006et\u0020\u006f\u0066\u0020\u0027\u0078\u0027\u0020\u0070\u0069\u0078e\u006c\u0073\u003a %d\u002c\u0020\u0041\u006d\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0027\u0079\u0027\u0020\u0070\u0069\u0078e\u006cs\u003a\u0020\u0025\u0064",len (_age .GBAtX ),len (_age .GBAtY ));
};_age .GBAtOverride =make ([]bool ,len (_age .GBAtX ));switch _age .GBTemplate {case 0:if !_age .UseExtTemplates {if _age .GBAtX [0]!=3||_age .GBAtY [0]!=-1{_age .setOverrideFlag (0);};if _age .GBAtX [1]!=-3||_age .GBAtY [1]!=-1{_age .setOverrideFlag (1);
};if _age .GBAtX [2]!=2||_age .GBAtY [2]!=-2{_age .setOverrideFlag (2);};if _age .GBAtX [3]!=-2||_age .GBAtY [3]!=-2{_age .setOverrideFlag (3);};}else {if _age .GBAtX [0]!=-2||_age .GBAtY [0]!=0{_age .setOverrideFlag (0);};if _age .GBAtX [1]!=0||_age .GBAtY [1]!=-2{_age .setOverrideFlag (1);
};if _age .GBAtX [2]!=-2||_age .GBAtY [2]!=-1{_age .setOverrideFlag (2);};if _age .GBAtX [3]!=-1||_age .GBAtY [3]!=-2{_age .setOverrideFlag (3);};if _age .GBAtX [4]!=1||_age .GBAtY [4]!=-2{_age .setOverrideFlag (4);};if _age .GBAtX [5]!=2||_age .GBAtY [5]!=-1{_age .setOverrideFlag (5);
};if _age .GBAtX [6]!=-3||_age .GBAtY [6]!=0{_age .setOverrideFlag (6);};if _age .GBAtX [7]!=-4||_age .GBAtY [7]!=0{_age .setOverrideFlag (7);};if _age .GBAtX [8]!=2||_age .GBAtY [8]!=-2{_age .setOverrideFlag (8);};if _age .GBAtX [9]!=3||_age .GBAtY [9]!=-1{_age .setOverrideFlag (9);
};if _age .GBAtX [10]!=-2||_age .GBAtY [10]!=-2{_age .setOverrideFlag (10);};if _age .GBAtX [11]!=-3||_age .GBAtY [11]!=-1{_age .setOverrideFlag (11);};};case 1:if _age .GBAtX [0]!=3||_age .GBAtY [0]!=-1{_age .setOverrideFlag (0);};case 2:if _age .GBAtX [0]!=2||_age .GBAtY [0]!=-1{_age .setOverrideFlag (0);
};case 3:if _age .GBAtX [0]!=2||_age .GBAtY [0]!=-1{_age .setOverrideFlag (0);};};return nil ;};func (_egae *HalftoneRegion )GetRegionBitmap ()(*_gc .Bitmap ,error ){if _egae .HalftoneRegionBitmap !=nil {return _egae .HalftoneRegionBitmap ,nil ;};var _faea error ;
_egae .HalftoneRegionBitmap =_gc .New (int (_egae .RegionSegment .BitmapWidth ),int (_egae .RegionSegment .BitmapHeight ));if _egae .Patterns ==nil ||len (_egae .Patterns )==0{_egae .Patterns ,_faea =_egae .GetPatterns ();if _faea !=nil {return nil ,_faea ;
};};if _egae .HDefaultPixel ==1{_egae .HalftoneRegionBitmap .SetDefaultPixel ();};_ccdaa :=_g .Ceil (_g .Log (float64 (len (_egae .Patterns )))/_g .Log (2));_accdd :=int (_ccdaa );var _bcdbc [][]int ;_bcdbc ,_faea =_egae .grayScaleDecoding (_accdd );if _faea !=nil {return nil ,_faea ;
};if _faea =_egae .renderPattern (_bcdbc );_faea !=nil {return nil ,_faea ;};return _egae .HalftoneRegionBitmap ,nil ;};func (_cbff Type )String ()string {switch _cbff {case TSymbolDictionary :return "\u0053\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069o\u006e\u0061\u0072\u0079";
case TIntermediateTextRegion :return "\u0049n\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020T\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateTextRegion :return "I\u006d\u006d\u0065\u0064ia\u0074e\u0020\u0054\u0065\u0078\u0074 \u0052\u0065\u0067\u0069\u006f\u006e";
case TImmediateLosslessTextRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020L\u006f\u0073\u0073\u006c\u0065\u0073\u0073 \u0054\u0065\u0078\u0074\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TPatternDictionary :return "\u0050a\u0074t\u0065\u0072\u006e\u0020\u0044i\u0063\u0074i\u006f\u006e\u0061\u0072\u0079";
case TIntermediateHalftoneRegion :return "\u0049\u006e\u0074\u0065r\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0048\u0061l\u0066t\u006f\u006e\u0065\u0020\u0052\u0065\u0067i\u006f\u006e";case TImmediateHalftoneRegion :return "\u0049m\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u0048\u0061l\u0066t\u006fn\u0065\u0020\u0052\u0065\u0067\u0069\u006fn";
case TImmediateLosslessHalftoneRegion :return "\u0049\u006d\u006ded\u0069\u0061\u0074\u0065\u0020\u004c\u006f\u0073\u0073l\u0065s\u0073 \u0048a\u006c\u0066\u0074\u006f\u006e\u0065\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TIntermediateGenericRegion :return "I\u006e\u0074\u0065\u0072\u006d\u0065d\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020R\u0065g\u0069\u006f\u006e";
case TImmediateGenericRegion :return "\u0049m\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006ee\u0072\u0069\u0063\u0020\u0052\u0065\u0067\u0069\u006f\u006e";case TImmediateLosslessGenericRegion :return "\u0049\u006d\u006d\u0065\u0064\u0069a\u0074\u0065\u0020\u004c\u006f\u0073\u0073\u006c\u0065\u0073\u0073\u0020\u0047e\u006e\u0065\u0072\u0069\u0063\u0020\u0052e\u0067\u0069\u006f\u006e";
case TIntermediateGenericRefinementRegion :return "\u0049\u006e\u0074\u0065\u0072\u006d\u0065\u0064\u0069\u0061\u0074\u0065\u0020\u0047\u0065\u006e\u0065\u0072\u0069\u0063\u0020\u0052\u0065\u0066i\u006e\u0065\u006d\u0065\u006et\u0020\u0052e\u0067\u0069\u006f\u006e";
case TImmediateGenericRefinementRegion :return "I\u006d\u006d\u0065\u0064\u0069\u0061t\u0065\u0020\u0047\u0065\u006e\u0065r\u0069\u0063\u0020\u0052\u0065\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020\u0052\u0065\u0067\u0069o\u006e";case TImmediateLosslessGenericRefinementRegion :return "\u0049m\u006d\u0065d\u0069\u0061\u0074\u0065 \u004c\u006f\u0073s\u006c\u0065\u0073\u0073\u0020\u0047\u0065\u006e\u0065ri\u0063\u0020\u0052e\u0066\u0069n\u0065\u006d\u0065\u006e\u0074\u0020R\u0065\u0067i\u006f\u006e";
case TPageInformation :return "\u0050\u0061g\u0065\u0020\u0049n\u0066\u006f\u0072\u006d\u0061\u0074\u0069\u006f\u006e";case TEndOfPage :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0050\u0061\u0067\u0065";case TEndOfStrip :return "\u0045\u006e\u0064 \u004f\u0066\u0020\u0053\u0074\u0072\u0069\u0070";
case TEndOfFile :return "E\u006e\u0064\u0020\u004f\u0066\u0020\u0046\u0069\u006c\u0065";case TProfiles :return "\u0050\u0072\u006f\u0066\u0069\u006c\u0065\u0073";case TTables :return "\u0054\u0061\u0062\u006c\u0065\u0073";case TExtension :return "\u0045x\u0074\u0065\u006e\u0073\u0069\u006fn";
case TBitmap :return "\u0042\u0069\u0074\u006d\u0061\u0070";};return "I\u006ev\u0061\u006c\u0069\u0064\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0020Ki\u006e\u0064";};func (_bedc *SymbolDictionary )decodeDirectlyThroughGenericRegion (_deca ,_becc uint32 )error {if _bedc ._abgd ==nil {_bedc ._abgd =NewGenericRegion (_bedc ._dbcd );
};_bedc ._abgd .setParametersWithAt (false ,byte (_bedc .SdTemplate ),false ,false ,_bedc .SdATX ,_bedc .SdATY ,_deca ,_becc ,_bedc ._gadd ,_bedc ._aebe );return _bedc .addSymbol (_bedc ._abgd );};func (_ede *GenericRegion )decodeTemplate2 (_gbdb ,_bfcc ,_dfb int ,_egef ,_bgf int )(_eeb error ){const _bdbe ="\u0064e\u0063o\u0064\u0065\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0032";
var (_ffa ,_gabe int ;_daa ,_gegd int ;_eeed byte ;_bfcd ,_bac int ;);if _gbdb >=1{_eeed ,_eeb =_ede .Bitmap .GetByte (_bgf );if _eeb !=nil {return _ccc .Wrap (_eeb ,_bdbe ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0031");
};_daa =int (_eeed );};if _gbdb >=2{_eeed ,_eeb =_ede .Bitmap .GetByte (_bgf -_ede .Bitmap .RowStride );if _eeb !=nil {return _ccc .Wrap (_eeb ,_bdbe ,"\u006ci\u006ee\u004e\u0075\u006d\u0062\u0065\u0072\u0020\u003e\u003d\u0020\u0032");};_gegd =int (_eeed )<<4;
};_ffa =(_daa >>3&0x7c)|(_gegd >>3&0x380);for _def :=0;_def < _dfb ;_def =_bfcd {var (_eca byte ;_bfgf int ;);_bfcd =_def +8;if _cdaf :=_bfcc -_def ;_cdaf > 8{_bfgf =8;}else {_bfgf =_cdaf ;};if _gbdb > 0{_daa <<=8;if _bfcd < _bfcc {_eeed ,_eeb =_ede .Bitmap .GetByte (_bgf +1);
if _eeb !=nil {return _ccc .Wrap (_eeb ,_bdbe ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0030");};_daa |=int (_eeed );};};if _gbdb > 1{_gegd <<=8;if _bfcd < _bfcc {_eeed ,_eeb =_ede .Bitmap .GetByte (_bgf -_ede .Bitmap .RowStride +1);
if _eeb !=nil {return _ccc .Wrap (_eeb ,_bdbe ,"\u006c\u0069\u006e\u0065\u004e\u0075\u006d\u0062\u0065r\u0020\u003e\u0020\u0031");};_gegd |=int (_eeed )<<4;};};for _cdd :=0;_cdd < _bfgf ;_cdd ++{_ddf :=uint (10-_cdd );if _ede ._eee {_gabe =_ede .overrideAtTemplate2 (_ffa ,_def +_cdd ,_gbdb ,int (_eca ),_cdd );
_ede ._ffed .SetIndex (int32 (_gabe ));}else {_ede ._ffed .SetIndex (int32 (_ffa ));};_bac ,_eeb =_ede ._abgc .DecodeBit (_ede ._ffed );if _eeb !=nil {return _ccc .Wrap (_eeb ,_bdbe ,"");};_eca |=byte (_bac <<uint (7-_cdd ));_ffa =((_ffa &0x1bd)<<1)|_bac |((_daa >>_ddf )&0x4)|((_gegd >>_ddf )&0x80);
};if _befc :=_ede .Bitmap .SetByte (_egef ,_eca );_befc !=nil {return _ccc .Wrap (_befc ,_bdbe ,"");};_egef ++;_bgf ++;};return nil ;};func (_dfac *TextRegion )readRegionFlags ()error {var (_dcga int ;_gcde uint64 ;_ddda error ;);_dcga ,_ddda =_dfac ._bdgd .ReadBit ();
if _ddda !=nil {return _ddda ;};_dfac .SbrTemplate =int8 (_dcga );_gcde ,_ddda =_dfac ._bdgd .ReadBits (5);if _ddda !=nil {return _ddda ;};_dfac .SbDsOffset =int8 (_gcde );if _dfac .SbDsOffset > 0x0f{_dfac .SbDsOffset -=0x20;};_dcga ,_ddda =_dfac ._bdgd .ReadBit ();
if _ddda !=nil {return _ddda ;};_dfac .DefaultPixel =int8 (_dcga );_gcde ,_ddda =_dfac ._bdgd .ReadBits (2);if _ddda !=nil {return _ddda ;};_dfac .CombinationOperator =_gc .CombinationOperator (int (_gcde )&0x3);_dcga ,_ddda =_dfac ._bdgd .ReadBit ();if _ddda !=nil {return _ddda ;
};_dfac .IsTransposed =int8 (_dcga );_gcde ,_ddda =_dfac ._bdgd .ReadBits (2);if _ddda !=nil {return _ddda ;};_dfac .ReferenceCorner =int16 (_gcde )&0x3;_gcde ,_ddda =_dfac ._bdgd .ReadBits (2);if _ddda !=nil {return _ddda ;};_dfac .LogSBStrips =int16 (_gcde )&0x3;
_dfac .SbStrips =1<<uint (_dfac .LogSBStrips );_dcga ,_ddda =_dfac ._bdgd .ReadBit ();if _ddda !=nil {return _ddda ;};if _dcga ==1{_dfac .UseRefinement =true ;};_dcga ,_ddda =_dfac ._bdgd .ReadBit ();if _ddda !=nil {return _ddda ;};if _dcga ==1{_dfac .IsHuffmanEncoded =true ;
};return nil ;};func (_ccdg *GenericRegion )computeSegmentDataStructure ()error {_ccdg .DataOffset =_ccdg ._dga .StreamPosition ();_ccdg .DataHeaderLength =_ccdg .DataOffset -_ccdg .DataHeaderOffset ;_ccdg .DataLength =int64 (_ccdg ._dga .Length ())-_ccdg .DataHeaderLength ;
return nil ;};func (_gffe *GenericRegion )copyLineAbove (_gfb int )error {_gebd :=_gfb *_gffe .Bitmap .RowStride ;_agbd :=_gebd -_gffe .Bitmap .RowStride ;for _gab :=0;_gab < _gffe .Bitmap .RowStride ;_gab ++{_bcdb ,_cfad :=_gffe .Bitmap .GetByte (_agbd );
if _cfad !=nil {return _cfad ;};_agbd ++;if _cfad =_gffe .Bitmap .SetByte (_gebd ,_bcdb );_cfad !=nil {return _cfad ;};_gebd ++;};return nil ;};type EndOfStripe struct{_ege _d .StreamReader ;_geb int ;};func (_ddfb *Header )readHeaderLength (_fccc _d .StreamReader ,_cddbg int64 ){_ddfb .HeaderLength =_fccc .StreamPosition ()-_cddbg ;
};func (_ddbca *PageInformationSegment )readRequiresAuxiliaryBuffer ()error {_dddf ,_bcg :=_ddbca ._feg .ReadBit ();if _bcg !=nil {return _bcg ;};if _dddf ==1{_ddbca ._bdec =true ;};return nil ;};func (_aebc *TextRegion )Init (header *Header ,r _d .StreamReader )error {_aebc .Header =header ;
_aebc ._bdgd =r ;_aebc .RegionInfo =NewRegionSegment (_aebc ._bdgd );return _aebc .parseHeader ();};type TableSegment struct{_fgeg _d .StreamReader ;_eed int32 ;_ecfac int32 ;_abcfc int32 ;_cdaff int32 ;_dged int32 ;};func (_dggb *GenericRegion )setParameters (_beba bool ,_fef ,_eab int64 ,_dgf ,_dcbe uint32 ){_dggb .IsMMREncoded =_beba ;
_dggb .DataOffset =_fef ;_dggb .DataLength =_eab ;_dggb .RegionSegment .BitmapHeight =_dgf ;_dggb .RegionSegment .BitmapWidth =_dcbe ;_dggb ._dce =nil ;_dggb .Bitmap =nil ;};func (_ecff *SymbolDictionary )decodeDifferenceWidth ()(int64 ,error ){if _ecff .IsHuffmanEncoded {switch _ecff .SdHuffDecodeWidthSelection {case 0:_dfab ,_gdb :=_ad .GetStandardTable (2);
if _gdb !=nil {return 0,_gdb ;};return _dfab .Decode (_ecff ._dbcd );case 1:_gaea ,_fbd :=_ad .GetStandardTable (3);if _fbd !=nil {return 0,_fbd ;};return _gaea .Decode (_ecff ._dbcd );case 3:if _ecff ._ecca ==nil {var _cccd int ;if _ecff .SdHuffDecodeHeightSelection ==3{_cccd ++;
};_cfgd ,_fcegd :=_ecff .getUserTable (_cccd );if _fcegd !=nil {return 0,_fcegd ;};_ecff ._ecca =_cfgd ;};return _ecff ._ecca .Decode (_ecff ._dbcd );};}else {_bdbc ,_bbbbc :=_ecff ._aebe .DecodeInt (_ecff ._gafd );if _bbbbc !=nil {return 0,_bbbbc ;};return int64 (_bdbc ),nil ;
};return 0,nil ;};func (_ecbb *SymbolDictionary )Init (h *Header ,r _d .StreamReader )error {_ecbb .Header =h ;_ecbb ._dbcd =r ;return _ecbb .parseHeader ();};func (_gbaee *SymbolDictionary )decodeHeightClassDeltaHeight ()(int64 ,error ){if _gbaee .IsHuffmanEncoded {return _gbaee .decodeHeightClassDeltaHeightWithHuffman ();
};_dbbd ,_dcac :=_gbaee ._aebe .DecodeInt (_gbaee ._abf );if _dcac !=nil {return 0,_dcac ;};return int64 (_dbbd ),nil ;};func (_dfd *GenericRegion )overrideAtTemplate0b (_bcc ,_adac ,_ffff ,_fde ,_cbgd ,_fgfe int )int {if _dfd .GBAtOverride [0]{_bcc &=0xFFFD;
if _dfd .GBAtY [0]==0&&_dfd .GBAtX [0]>=-int8 (_cbgd ){_bcc |=(_fde >>uint (int8 (_fgfe )-_dfd .GBAtX [0]&0x1))<<1;}else {_bcc |=int (_dfd .getPixel (_adac +int (_dfd .GBAtX [0]),_ffff +int (_dfd .GBAtY [0])))<<1;};};if _dfd .GBAtOverride [1]{_bcc &=0xDFFF;
if _dfd .GBAtY [1]==0&&_dfd .GBAtX [1]>=-int8 (_cbgd ){_bcc |=(_fde >>uint (int8 (_fgfe )-_dfd .GBAtX [1]&0x1))<<13;}else {_bcc |=int (_dfd .getPixel (_adac +int (_dfd .GBAtX [1]),_ffff +int (_dfd .GBAtY [1])))<<13;};};if _dfd .GBAtOverride [2]{_bcc &=0xFDFF;
if _dfd .GBAtY [2]==0&&_dfd .GBAtX [2]>=-int8 (_cbgd ){_bcc |=(_fde >>uint (int8 (_fgfe )-_dfd .GBAtX [2]&0x1))<<9;}else {_bcc |=int (_dfd .getPixel (_adac +int (_dfd .GBAtX [2]),_ffff +int (_dfd .GBAtY [2])))<<9;};};if _dfd .GBAtOverride [3]{_bcc &=0xBFFF;
if _dfd .GBAtY [3]==0&&_dfd .GBAtX [3]>=-int8 (_cbgd ){_bcc |=(_fde >>uint (int8 (_fgfe )-_dfd .GBAtX [3]&0x1))<<14;}else {_bcc |=int (_dfd .getPixel (_adac +int (_dfd .GBAtX [3]),_ffff +int (_dfd .GBAtY [3])))<<14;};};if _dfd .GBAtOverride [4]{_bcc &=0xEFFF;
if _dfd .GBAtY [4]==0&&_dfd .GBAtX [4]>=-int8 (_cbgd ){_bcc |=(_fde >>uint (int8 (_fgfe )-_dfd .GBAtX [4]&0x1))<<12;}else {_bcc |=int (_dfd .getPixel (_adac +int (_dfd .GBAtX [4]),_ffff +int (_dfd .GBAtY [4])))<<12;};};if _dfd .GBAtOverride [5]{_bcc &=0xFFDF;
if _dfd .GBAtY [5]==0&&_dfd .GBAtX [5]>=-int8 (_cbgd ){_bcc |=(_fde >>uint (int8 (_fgfe )-_dfd .GBAtX [5]&0x1))<<5;}else {_bcc |=int (_dfd .getPixel (_adac +int (_dfd .GBAtX [5]),_ffff +int (_dfd .GBAtY [5])))<<5;};};if _dfd .GBAtOverride [6]{_bcc &=0xFFFB;
if _dfd .GBAtY [6]==0&&_dfd .GBAtX [6]>=-int8 (_cbgd ){_bcc |=(_fde >>uint (int8 (_fgfe )-_dfd .GBAtX [6]&0x1))<<2;}else {_bcc |=int (_dfd .getPixel (_adac +int (_dfd .GBAtX [6]),_ffff +int (_dfd .GBAtY [6])))<<2;};};if _dfd .GBAtOverride [7]{_bcc &=0xFFF7;
if _dfd .GBAtY [7]==0&&_dfd .GBAtX [7]>=-int8 (_cbgd ){_bcc |=(_fde >>uint (int8 (_fgfe )-_dfd .GBAtX [7]&0x1))<<3;}else {_bcc |=int (_dfd .getPixel (_adac +int (_dfd .GBAtX [7]),_ffff +int (_dfd .GBAtY [7])))<<3;};};if _dfd .GBAtOverride [8]{_bcc &=0xF7FF;
if _dfd .GBAtY [8]==0&&_dfd .GBAtX [8]>=-int8 (_cbgd ){_bcc |=(_fde >>uint (int8 (_fgfe )-_dfd .GBAtX [8]&0x1))<<11;}else {_bcc |=int (_dfd .getPixel (_adac +int (_dfd .GBAtX [8]),_ffff +int (_dfd .GBAtY [8])))<<11;};};if _dfd .GBAtOverride [9]{_bcc &=0xFFEF;
if _dfd .GBAtY [9]==0&&_dfd .GBAtX [9]>=-int8 (_cbgd ){_bcc |=(_fde >>uint (int8 (_fgfe )-_dfd .GBAtX [9]&0x1))<<4;}else {_bcc |=int (_dfd .getPixel (_adac +int (_dfd .GBAtX [9]),_ffff +int (_dfd .GBAtY [9])))<<4;};};if _dfd .GBAtOverride [10]{_bcc &=0x7FFF;
if _dfd .GBAtY [10]==0&&_dfd .GBAtX [10]>=-int8 (_cbgd ){_bcc |=(_fde >>uint (int8 (_fgfe )-_dfd .GBAtX [10]&0x1))<<15;}else {_bcc |=int (_dfd .getPixel (_adac +int (_dfd .GBAtX [10]),_ffff +int (_dfd .GBAtY [10])))<<15;};};if _dfd .GBAtOverride [11]{_bcc &=0xFDFF;
if _dfd .GBAtY [11]==0&&_dfd .GBAtX [11]>=-int8 (_cbgd ){_bcc |=(_fde >>uint (int8 (_fgfe )-_dfd .GBAtX [11]&0x1))<<10;}else {_bcc |=int (_dfd .getPixel (_adac +int (_dfd .GBAtX [11]),_ffff +int (_dfd .GBAtY [11])))<<10;};};return _bcc ;};func (_efdc *TextRegion )readAmountOfSymbolInstances ()error {_ffdee ,_cdca :=_efdc ._bdgd .ReadBits (32);
if _cdca !=nil {return _cdca ;};_efdc .NumberOfSymbolInstances =uint32 (_ffdee &_g .MaxUint32 );_dgfa :=_efdc .RegionInfo .BitmapWidth *_efdc .RegionInfo .BitmapHeight ;if _dgfa < _efdc .NumberOfSymbolInstances {_eg .Log .Debug ("\u004c\u0069\u006d\u0069t\u0069\u006e\u0067\u0020t\u0068\u0065\u0020n\u0075\u006d\u0062\u0065\u0072\u0020o\u0066\u0020d\u0065\u0063\u006f\u0064e\u0064\u0020\u0073\u0079m\u0062\u006f\u006c\u0020\u0069n\u0073\u0074\u0061\u006e\u0063\u0065\u0073 \u0074\u006f\u0020\u006f\u006ee\u0020\u0070\u0065\u0072\u0020\u0070\u0069\u0078\u0065l\u0020\u0028\u0020\u0025\u0064\u0020\u0069\u006e\u0073\u0074\u0065\u0061\u0064\u0020\u006f\u0066\u0020\u0025\u0064\u0029",_dgfa ,_efdc .NumberOfSymbolInstances );
_efdc .NumberOfSymbolInstances =_dgfa ;};return nil ;};func (_cddc *SymbolDictionary )getSymbol (_cdbf int )(*_gc .Bitmap ,error ){const _gfa ="\u0067e\u0074\u0053\u0079\u006d\u0062\u006fl";_fbge ,_edcb :=_cddc ._aeede .GetBitmap (_cddc ._bdbd [_cdbf ]);
if _edcb !=nil {return nil ,_ccc .Wrap (_edcb ,_gfa ,"\u0063\u0061n\u0027\u0074\u0020g\u0065\u0074\u0020\u0073\u0079\u006d\u0062\u006f\u006c");};return _fbge ,nil ;};func (_cege *Header )readNumberOfReferredToSegments (_dfa _d .StreamReader )(uint64 ,error ){const _bddf ="\u0072\u0065\u0061\u0064\u004e\u0075\u006d\u0062\u0065\u0072O\u0066\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";
_fcae ,_cgea :=_dfa .ReadBits (3);if _cgea !=nil {return 0,_ccc .Wrap (_cgea ,_bddf ,"\u0063\u006f\u0075n\u0074\u0020\u006f\u0066\u0020\u0072\u0074\u0073");};_fcae &=0xf;var _fagc []byte ;if _fcae <=4{_fagc =make ([]byte ,5);for _dbgf :=0;_dbgf <=4;_dbgf ++{_dba ,_bcafa :=_dfa .ReadBit ();
if _bcafa !=nil {return 0,_ccc .Wrap (_bcafa ,_bddf ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};_fagc [_dbgf ]=byte (_dba );};}else {_fcae ,_cgea =_dfa .ReadBits (29);if _cgea !=nil {return 0,_cgea ;};_fcae &=_g .MaxInt32 ;
_cgcda :=(_fcae +8)>>3;_cgcda <<=3;_fagc =make ([]byte ,_cgcda );var _feda uint64 ;for _feda =0;_feda < _cgcda ;_feda ++{_afbc ,_bddd :=_dfa .ReadBit ();if _bddd !=nil {return 0,_ccc .Wrap (_bddd ,_bddf ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};_fagc [_feda ]=byte (_afbc );};};return _fcae ,nil ;};func (_eefe *SymbolDictionary )decodeNewSymbols (_fcebf ,_ggdb uint32 ,_fdcd *_gc .Bitmap ,_debe ,_edbg int32 )error {if _eefe ._fgcc ==nil {_eefe ._fgcc =_acdc (_eefe ._dbcd ,nil );if _eefe ._aebe ==nil {var _bbg error ;
_eefe ._aebe ,_bbg =_a .New (_eefe ._dbcd );if _bbg !=nil {return _bbg ;};};if _eefe ._gadd ==nil {_eefe ._gadd =_a .NewStats (65536,1);};};_eefe ._fgcc .setParameters (_eefe ._gadd ,_eefe ._aebe ,_eefe .SdrTemplate ,_fcebf ,_ggdb ,_fdcd ,_debe ,_edbg ,false ,_eefe .SdrATX ,_eefe .SdrATY );
return _eefe .addSymbol (_eefe ._fgcc );};func (_aebaf *PageInformationSegment )CombinationOperatorOverrideAllowed ()bool {return _aebaf ._dfec };func (_dfeb *SymbolDictionary )decodeAggregate (_eaba ,_edca uint32 )error {var (_abccg int64 ;_cadfg error ;
);if _dfeb .IsHuffmanEncoded {_abccg ,_cadfg =_dfeb .huffDecodeRefAggNInst ();if _cadfg !=nil {return _cadfg ;};}else {_bgcf ,_cfba :=_dfeb ._aebe .DecodeInt (_dfeb ._agcb );if _cfba !=nil {return _cfba ;};_abccg =int64 (_bgcf );};if _abccg > 1{return _dfeb .decodeThroughTextRegion (_eaba ,_edca ,uint32 (_abccg ));
}else if _abccg ==1{return _dfeb .decodeRefinedSymbol (_eaba ,_edca );};return nil ;};func (_gffb *TableSegment )HtPS ()int32 {return _gffb ._ecfac };func (_aacc *SymbolDictionary )setSymbolsArray ()error {if _aacc ._faad ==nil {if _cdgc :=_aacc .retrieveImportSymbols ();
_cdgc !=nil {return _cdgc ;};};if _aacc ._ddad ==nil {_aacc ._ddad =append (_aacc ._ddad ,_aacc ._faad ...);};return nil ;};func (_aab *GenericRefinementRegion )readAtPixels ()error {_aab .GrAtX =make ([]int8 ,2);_aab .GrAtY =make ([]int8 ,2);_bcaf ,_fba :=_aab ._dg .ReadByte ();
if _fba !=nil {return _fba ;};_aab .GrAtX [0]=int8 (_bcaf );_bcaf ,_fba =_aab ._dg .ReadByte ();if _fba !=nil {return _fba ;};_aab .GrAtY [0]=int8 (_bcaf );_bcaf ,_fba =_aab ._dg .ReadByte ();if _fba !=nil {return _fba ;};_aab .GrAtX [1]=int8 (_bcaf );
_bcaf ,_fba =_aab ._dg .ReadByte ();if _fba !=nil {return _fba ;};_aab .GrAtY [1]=int8 (_bcaf );return nil ;};func (_ef *EndOfStripe )LineNumber ()int {return _ef ._geb };func (_agfc *GenericRegion )setOverrideFlag (_acca int ){_agfc .GBAtOverride [_acca ]=true ;
_agfc ._eee =true ;};func (_adea *SymbolDictionary )encodeATFlags (_gede _d .BinaryWriter )(_cfca int ,_fdaa error ){const _eagbd ="\u0065\u006e\u0063\u006f\u0064\u0065\u0041\u0054\u0046\u006c\u0061\u0067\u0073";if _adea .IsHuffmanEncoded ||_adea .SdTemplate !=0{return 0,nil ;
};_edfe :=4;if _adea .SdTemplate !=0{_edfe =1;};for _agee :=0;_agee < _edfe ;_agee ++{if _fdaa =_gede .WriteByte (byte (_adea .SdATX [_agee ]));_fdaa !=nil {return _cfca ,_ccc .Wrapf (_fdaa ,_eagbd ,"\u0053d\u0041\u0054\u0058\u005b\u0025\u0064]",_agee );
};_cfca ++;if _fdaa =_gede .WriteByte (byte (_adea .SdATY [_agee ]));_fdaa !=nil {return _cfca ,_ccc .Wrapf (_fdaa ,_eagbd ,"\u0053d\u0041\u0054\u0059\u005b\u0025\u0064]",_agee );};_cfca ++;};return _cfca ,nil ;};func (_aaa *GenericRegion )setParametersWithAt (_bbdc bool ,_bggc byte ,_bcdg ,_eefb bool ,_efd ,_cdcc []int8 ,_ebaa ,_ddbc uint32 ,_abcd *_a .DecoderStats ,_acg *_a .Decoder ){_aaa .IsMMREncoded =_bbdc ;
_aaa .GBTemplate =_bggc ;_aaa .IsTPGDon =_bcdg ;_aaa .GBAtX =_efd ;_aaa .GBAtY =_cdcc ;_aaa .RegionSegment .BitmapHeight =_ddbc ;_aaa .RegionSegment .BitmapWidth =_ebaa ;_aaa ._dce =nil ;_aaa .Bitmap =nil ;if _abcd !=nil {_aaa ._ffed =_abcd ;};if _acg !=nil {_aaa ._abgc =_acg ;
};_eg .Log .Trace ("\u005b\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052\u0045\u0047\u0049O\u004e\u005d\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073\u0020\u0053\u0044\u0041t\u003a\u0020\u0025\u0073",_aaa );};func (_ced *template0 )setIndex (_edd *_a .DecoderStats ){_edd .SetIndex (0x100)};
func (_fdag *TextRegion )createRegionBitmap ()error {_fdag .RegionBitmap =_gc .New (int (_fdag .RegionInfo .BitmapWidth ),int (_fdag .RegionInfo .BitmapHeight ));if _fdag .DefaultPixel !=0{_fdag .RegionBitmap .SetDefaultPixel ();};return nil ;};func (_cecb *TextRegion )String ()string {_gbcdc :=&_cb .Builder {};
_gbcdc .WriteString ("\u000a[\u0054E\u0058\u0054\u0020\u0052\u0045\u0047\u0049\u004f\u004e\u005d\u000a");_gbcdc .WriteString (_cecb .RegionInfo .String ()+"\u000a");_gbcdc .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053br\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0025\u0076\u000a",_cecb .SbrTemplate ));
_gbcdc .WriteString (_ff .Sprintf ("\u0009-\u0020S\u0062\u0044\u0073\u004f\u0066f\u0073\u0065t\u003a\u0020\u0025\u0076\u000a",_cecb .SbDsOffset ));_gbcdc .WriteString (_ff .Sprintf ("\t\u002d \u0044\u0065\u0066\u0061\u0075\u006c\u0074\u0050i\u0078\u0065\u006c\u003a %\u0076\u000a",_cecb .DefaultPixel ));
_gbcdc .WriteString (_ff .Sprintf ("\t\u002d\u0020\u0043\u006f\u006d\u0062i\u006e\u0061\u0074\u0069\u006f\u006e\u004f\u0070\u0065r\u0061\u0074\u006fr\u003a \u0025\u0076\u000a",_cecb .CombinationOperator ));_gbcdc .WriteString (_ff .Sprintf ("\t\u002d \u0049\u0073\u0054\u0072\u0061\u006e\u0073\u0070o\u0073\u0065\u0064\u003a %\u0076\u000a",_cecb .IsTransposed ));
_gbcdc .WriteString (_ff .Sprintf ("\u0009\u002d\u0020Re\u0066\u0065\u0072\u0065\u006e\u0063\u0065\u0043\u006f\u0072\u006e\u0065\u0072\u003a\u0020\u0025\u0076\u000a",_cecb .ReferenceCorner ));_gbcdc .WriteString (_ff .Sprintf ("\t\u002d\u0020\u0055\u0073eR\u0065f\u0069\u006e\u0065\u006d\u0065n\u0074\u003a\u0020\u0025\u0076\u000a",_cecb .UseRefinement ));
_gbcdc .WriteString (_ff .Sprintf ("\u0009-\u0020\u0049\u0073\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045n\u0063\u006f\u0064\u0065\u0064\u003a\u0020\u0025\u0076\u000a",_cecb .IsHuffmanEncoded ));if _cecb .IsHuffmanEncoded {_gbcdc .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_cecb .SbHuffRSize ));
_gbcdc .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0059:\u0020\u0025\u0076\u000a",_cecb .SbHuffRDY ));_gbcdc .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0058:\u0020\u0025\u0076\u000a",_cecb .SbHuffRDX ));
_gbcdc .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053bH\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069\u0067\u0068\u0074\u003a\u0020\u0025v\u000a",_cecb .SbHuffRDHeight ));_gbcdc .WriteString (_ff .Sprintf ("\t\u002d\u0020\u0053\u0062Hu\u0066f\u0052\u0044\u0057\u0069\u0064t\u0068\u003a\u0020\u0025\u0076\u000a",_cecb .SbHuffRDWidth ));
_gbcdc .WriteString (_ff .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0054\u003a\u0020\u0025\u0076\u000a",_cecb .SbHuffDT ));_gbcdc .WriteString (_ff .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0044\u0053\u003a\u0020\u0025\u0076\u000a",_cecb .SbHuffDS ));
_gbcdc .WriteString (_ff .Sprintf ("\u0009\u002d \u0053\u0062\u0048u\u0066\u0066\u0046\u0053\u003a\u0020\u0025\u0076\u000a",_cecb .SbHuffFS ));};_gbcdc .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_cecb .SbrATX ));
_gbcdc .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0059:\u0020\u0025\u0076\u000a",_cecb .SbrATY ));_gbcdc .WriteString (_ff .Sprintf ("\u0009\u002d\u0020N\u0075\u006d\u0062\u0065r\u004f\u0066\u0053\u0079\u006d\u0062\u006fl\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u003a\u0020\u0025\u0076\u000a",_cecb .NumberOfSymbolInstances ));
_gbcdc .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0062\u0072\u0041\u0054\u0058:\u0020\u0025\u0076\u000a",_cecb .SbrATX ));return _gbcdc .String ();};func (_fafe *PatternDictionary )readPatternWidthAndHeight ()error {_acdca ,_bcdc :=_fafe ._ccf .ReadByte ();
if _bcdc !=nil {return _bcdc ;};_fafe .HdpWidth =_acdca ;_acdca ,_bcdc =_fafe ._ccf .ReadByte ();if _bcdc !=nil {return _bcdc ;};_fafe .HdpHeight =_acdca ;return nil ;};func (_efa *GenericRefinementRegion )decodeTypicalPredictedLineTemplate0 (_ba ,_cdb ,_gba ,_eaf ,_cef ,_df ,_agf ,_dcc ,_dd int )error {var (_cbe ,_cag ,_bad ,_gef ,_cda ,_agde int ;
_db byte ;_eba error ;);if _ba > 0{_db ,_eba =_efa .RegionBitmap .GetByte (_agf -_gba );if _eba !=nil {return _eba ;};_bad =int (_db );};if _dcc > 0&&_dcc <=_efa .ReferenceBitmap .Height {_db ,_eba =_efa .ReferenceBitmap .GetByte (_dd -_eaf +_df );if _eba !=nil {return _eba ;
};_gef =int (_db )<<4;};if _dcc >=0&&_dcc < _efa .ReferenceBitmap .Height {_db ,_eba =_efa .ReferenceBitmap .GetByte (_dd +_df );if _eba !=nil {return _eba ;};_cda =int (_db )<<1;};if _dcc > -2&&_dcc < _efa .ReferenceBitmap .Height -1{_db ,_eba =_efa .ReferenceBitmap .GetByte (_dd +_eaf +_df );
if _eba !=nil {return _eba ;};_agde =int (_db );};_cbe =((_bad >>5)&0x6)|((_agde >>2)&0x30)|(_cda &0x180)|(_gef &0xc00);var _gf int ;for _dee :=0;_dee < _cef ;_dee =_gf {var _dbb int ;_gf =_dee +8;var _adf int ;if _adf =_cdb -_dee ;_adf > 8{_adf =8;};_fgg :=_gf < _cdb ;
_fdg :=_gf < _efa .ReferenceBitmap .Width ;_ddb :=_df +1;if _ba > 0{_db =0;if _fgg {_db ,_eba =_efa .RegionBitmap .GetByte (_agf -_gba +1);if _eba !=nil {return _eba ;};};_bad =(_bad <<8)|int (_db );};if _dcc > 0&&_dcc <=_efa .ReferenceBitmap .Height {var _cge int ;
if _fdg {_db ,_eba =_efa .ReferenceBitmap .GetByte (_dd -_eaf +_ddb );if _eba !=nil {return _eba ;};_cge =int (_db )<<4;};_gef =(_gef <<8)|_cge ;};if _dcc >=0&&_dcc < _efa .ReferenceBitmap .Height {var _ee int ;if _fdg {_db ,_eba =_efa .ReferenceBitmap .GetByte (_dd +_ddb );
if _eba !=nil {return _eba ;};_ee =int (_db )<<1;};_cda =(_cda <<8)|_ee ;};if _dcc > -2&&_dcc < (_efa .ReferenceBitmap .Height -1){_db =0;if _fdg {_db ,_eba =_efa .ReferenceBitmap .GetByte (_dd +_eaf +_ddb );if _eba !=nil {return _eba ;};};_agde =(_agde <<8)|int (_db );
};for _cff :=0;_cff < _adf ;_cff ++{var _ebe int ;_dab :=false ;_bfba :=(_cbe >>4)&0x1ff;if _bfba ==0x1ff{_dab =true ;_ebe =1;}else if _bfba ==0x00{_dab =true ;};if !_dab {if _efa ._ea {_cag =_efa .overrideAtTemplate0 (_cbe ,_dee +_cff ,_ba ,_dbb ,_cff );
_efa ._fdd .SetIndex (int32 (_cag ));}else {_efa ._fdd .SetIndex (int32 (_cbe ));};_ebe ,_eba =_efa ._cbc .DecodeBit (_efa ._fdd );if _eba !=nil {return _eba ;};};_cfa :=uint (7-_cff );_dbb |=_ebe <<_cfa ;_cbe =((_cbe &0xdb6)<<1)|_ebe |(_bad >>_cfa +5)&0x002|((_agde >>_cfa +2)&0x010)|((_cda >>_cfa )&0x080)|((_gef >>_cfa )&0x400);
};_eba =_efa .RegionBitmap .SetByte (_agf ,byte (_dbb ));if _eba !=nil {return _eba ;};_agf ++;_dd ++;};return nil ;};type template1 struct{};var _ SegmentEncoder =&RegionSegment {};func (_cgb *Header )writeReferredToCount (_abeg _d .BinaryWriter )(_bdddc int ,_bgfd error ){const _ceec ="w\u0072i\u0074\u0065\u0052\u0065\u0066\u0065\u0072\u0072e\u0064\u0054\u006f\u0043ou\u006e\u0074";
_cgb .RTSNumbers =make ([]int ,len (_cgb .RTSegments ));for _bed ,_gadg :=range _cgb .RTSegments {_cgb .RTSNumbers [_bed ]=int (_gadg .SegmentNumber );};if len (_cgb .RTSNumbers )<=4{var _dcdd byte ;if len (_cgb .RetainBits )>=1{_dcdd =_cgb .RetainBits [0];
};_dcdd |=byte (len (_cgb .RTSNumbers ))<<5;if _bgfd =_abeg .WriteByte (_dcdd );_bgfd !=nil {return 0,_ccc .Wrap (_bgfd ,_ceec ,"\u0073\u0068\u006fr\u0074\u0020\u0066\u006f\u0072\u006d\u0061\u0074");};return 1,nil ;};_gabf :=uint32 (len (_cgb .RTSNumbers ));
_badde :=make ([]byte ,4+_dc .Ceil (len (_cgb .RTSNumbers )+1,8));_gabf |=0x7<<29;_bf .BigEndian .PutUint32 (_badde ,_gabf );copy (_badde [1:],_cgb .RetainBits );_bdddc ,_bgfd =_abeg .Write (_badde );if _bgfd !=nil {return 0,_ccc .Wrap (_bgfd ,_ceec ,"l\u006f\u006e\u0067\u0020\u0066\u006f\u0072\u006d\u0061\u0074");
};return _bdddc ,nil ;};func (_acge *SymbolDictionary )encodeNumSyms (_gaae _d .BinaryWriter )(_fdfe int ,_cadf error ){const _dcbdc ="\u0065\u006e\u0063\u006f\u0064\u0065\u004e\u0075\u006d\u0053\u0079\u006d\u0073";_ggab :=make ([]byte ,4);_bf .BigEndian .PutUint32 (_ggab ,_acge .NumberOfExportedSymbols );
if _fdfe ,_cadf =_gaae .Write (_ggab );_cadf !=nil {return _fdfe ,_ccc .Wrap (_cadf ,_dcbdc ,"\u0065\u0078p\u006f\u0072\u0074e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};_bf .BigEndian .PutUint32 (_ggab ,_acge .NumberOfNewSymbols );_cdgd ,_cadf :=_gaae .Write (_ggab );
if _cadf !=nil {return _fdfe ,_ccc .Wrap (_cadf ,_dcbdc ,"n\u0065\u0077\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0073");};return _fdfe +_cdgd ,nil ;};func (_dabb *TextRegion )decodeStripT ()(_gddd int64 ,_fcgdg error ){if _dabb .IsHuffmanEncoded {if _dabb .SbHuffDT ==3{if _dabb ._agcc ==nil {var _cbfc int ;
if _dabb .SbHuffFS ==3{_cbfc ++;};if _dabb .SbHuffDS ==3{_cbfc ++;};_dabb ._agcc ,_fcgdg =_dabb .getUserTable (_cbfc );if _fcgdg !=nil {return 0,_fcgdg ;};};_gddd ,_fcgdg =_dabb ._agcc .Decode (_dabb ._bdgd );if _fcgdg !=nil {return 0,_fcgdg ;};}else {var _cfae _ad .Tabler ;
_cfae ,_fcgdg =_ad .GetStandardTable (11+int (_dabb .SbHuffDT ));if _fcgdg !=nil {return 0,_fcgdg ;};_gddd ,_fcgdg =_cfae .Decode (_dabb ._bdgd );if _fcgdg !=nil {return 0,_fcgdg ;};};}else {var _fffa int32 ;_fffa ,_fcgdg =_dabb ._fffd .DecodeInt (_dabb ._gfcg );
if _fcgdg !=nil {return 0,_fcgdg ;};_gddd =int64 (_fffa );};_gddd *=int64 (-_dabb .SbStrips );return _gddd ,nil ;};func (_fade *RegionSegment )readCombinationOperator ()error {_ccca ,_eda :=_fade ._fggd .ReadBits (3);if _eda !=nil {return _eda ;};_fade .CombinaionOperator =_gc .CombinationOperator (_ccca &0xF);
return nil ;};func (_eac *GenericRefinementRegion )decodeOptimized (_gdc ,_dad ,_edc ,_abd ,_dgc ,_dgbf ,_cbce int )error {var (_acc error ;_fg int ;_bd int ;);_ae :=_gdc -int (_eac .ReferenceDY );if _fc :=int (-_eac .ReferenceDX );_fc > 0{_fg =_fc ;};
_cf :=_eac .ReferenceBitmap .GetByteIndex (_fg ,_ae );if _eac .ReferenceDX > 0{_bd =int (_eac .ReferenceDX );};_ffe :=_eac .RegionBitmap .GetByteIndex (_bd ,_gdc );switch _eac .TemplateID {case 0:_acc =_eac .decodeTemplate (_gdc ,_dad ,_edc ,_abd ,_dgc ,_dgbf ,_cbce ,_ffe ,_ae ,_cf ,_eac ._eb );
case 1:_acc =_eac .decodeTemplate (_gdc ,_dad ,_edc ,_abd ,_dgc ,_dgbf ,_cbce ,_ffe ,_ae ,_cf ,_eac ._cd );};return _acc ;};func (_fffb *TextRegion )encodeSymbols (_cadd _d .BinaryWriter )(_fcegf int ,_cbedg error ){const _acde ="\u0065\u006e\u0063\u006f\u0064\u0065\u0053\u0079\u006d\u0062\u006f\u006c\u0073";
_gfca :=make ([]byte ,4);_bf .BigEndian .PutUint32 (_gfca ,_fffb .NumberOfSymbols );if _fcegf ,_cbedg =_cadd .Write (_gfca );_cbedg !=nil {return _fcegf ,_ccc .Wrap (_cbedg ,_acde ,"\u004e\u0075\u006dbe\u0072\u004f\u0066\u0053\u0079\u006d\u0062\u006f\u006c\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073");
};_fbfe ,_cbedg :=_gc .NewClassedPoints (_fffb ._ccbb ,_fffb ._dbag );if _cbedg !=nil {return 0,_ccc .Wrap (_cbedg ,_acde ,"");};var _bggcg ,_fbcd int ;_agbdd :=_cca .New ();_agbdd .Init ();if _cbedg =_agbdd .EncodeInteger (_cca .IADT ,0);_cbedg !=nil {return _fcegf ,_ccc .Wrap (_cbedg ,_acde ,"\u0069\u006e\u0069\u0074\u0069\u0061\u006c\u0020\u0044\u0054");
};_becd ,_cbedg :=_fbfe .GroupByY ();if _cbedg !=nil {return 0,_ccc .Wrap (_cbedg ,_acde ,"");};for _ ,_ffde :=range _becd {_decb :=int (_ffde .YAtIndex (0));_ggbeb :=_decb -_bggcg ;if _cbedg =_agbdd .EncodeInteger (_cca .IADT ,_ggbeb );_cbedg !=nil {return _fcegf ,_ccc .Wrap (_cbedg ,_acde ,"");
};var _cffe int ;for _eecac ,_gaddd :=range _ffde .IntSlice {switch _eecac {case 0:_abegd :=int (_ffde .XAtIndex (_eecac ))-_fbcd ;if _cbedg =_agbdd .EncodeInteger (_cca .IAFS ,_abegd );_cbedg !=nil {return _fcegf ,_ccc .Wrap (_cbedg ,_acde ,"");};_fbcd +=_abegd ;
_cffe =_fbcd ;default:_defda :=int (_ffde .XAtIndex (_eecac ))-_cffe ;if _cbedg =_agbdd .EncodeInteger (_cca .IADS ,_defda );_cbedg !=nil {return _fcegf ,_ccc .Wrap (_cbedg ,_acde ,"");};_cffe +=_defda ;};_feae ,_bacf :=_fffb ._bdad .Get (_gaddd );if _bacf !=nil {return _fcegf ,_ccc .Wrap (_bacf ,_acde ,"");
};_cagb ,_edabb :=_fffb ._cdbc [_feae ];if !_edabb {_cagb ,_edabb =_fffb ._gcea [_feae ];if !_edabb {return _fcegf ,_ccc .Errorf (_acde ,"\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027\u0025d\u0027\u0020\u0069s\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064 \u0069\u006e\u0020\u0067\u006cob\u0061\u006c\u0020\u0061\u006e\u0064\u0020\u006c\u006f\u0063\u0061\u006c\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u0020\u006d\u0061\u0070",_feae );
};};if _bacf =_agbdd .EncodeIAID (_fffb ._bgaa ,_cagb );_bacf !=nil {return _fcegf ,_ccc .Wrap (_bacf ,_acde ,"");};};if _cbedg =_agbdd .EncodeOOB (_cca .IADS );_cbedg !=nil {return _fcegf ,_ccc .Wrap (_cbedg ,_acde ,"");};};_agbdd .Final ();_cegbg ,_cbedg :=_agbdd .WriteTo (_cadd );
if _cbedg !=nil {return _fcegf ,_ccc .Wrap (_cbedg ,_acde ,"");};_fcegf +=int (_cegbg );return _fcegf ,nil ;};func (_ecd *GenericRegion )GetRegionInfo ()*RegionSegment {return _ecd .RegionSegment };func (_aafe *SymbolDictionary )encodeFlags (_bedg _d .BinaryWriter )(_ffbbf int ,_eeee error ){const _abgdg ="e\u006e\u0063\u006f\u0064\u0065\u0046\u006c\u0061\u0067\u0073";
if _eeee =_bedg .SkipBits (3);_eeee !=nil {return 0,_ccc .Wrap (_eeee ,_abgdg ,"\u0065\u006d\u0070\u0074\u0079\u0020\u0062\u0069\u0074\u0073");};var _ebfec int ;if _aafe .SdrTemplate > 0{_ebfec =1;};if _eeee =_bedg .WriteBit (_ebfec );_eeee !=nil {return _ffbbf ,_ccc .Wrap (_eeee ,_abgdg ,"s\u0064\u0072\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");
};_ebfec =0;if _aafe .SdTemplate > 1{_ebfec =1;};if _eeee =_bedg .WriteBit (_ebfec );_eeee !=nil {return _ffbbf ,_ccc .Wrap (_eeee ,_abgdg ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_ebfec =0;if _aafe .SdTemplate ==1||_aafe .SdTemplate ==3{_ebfec =1;
};if _eeee =_bedg .WriteBit (_ebfec );_eeee !=nil {return _ffbbf ,_ccc .Wrap (_eeee ,_abgdg ,"\u0073\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065");};_ebfec =0;if _aafe ._bfgfe {_ebfec =1;};if _eeee =_bedg .WriteBit (_ebfec );_eeee !=nil {return _ffbbf ,_ccc .Wrap (_eeee ,_abgdg ,"\u0063\u006f\u0064in\u0067\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0072\u0065\u0074\u0061\u0069\u006e\u0065\u0064");
};_ebfec =0;if _aafe ._fcce {_ebfec =1;};if _eeee =_bedg .WriteBit (_ebfec );_eeee !=nil {return _ffbbf ,_ccc .Wrap (_eeee ,_abgdg ,"\u0063\u006f\u0064\u0069ng\u0020\u0063\u006f\u006e\u0074\u0065\u0078\u0074\u0020\u0075\u0073\u0065\u0064");};_ebfec =0;
if _aafe .SdHuffAggInstanceSelection {_ebfec =1;};if _eeee =_bedg .WriteBit (_ebfec );_eeee !=nil {return _ffbbf ,_ccc .Wrap (_eeee ,_abgdg ,"\u0073\u0064\u0048\u0075\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074");};_ebfec =int (_aafe .SdHuffBMSizeSelection );
if _eeee =_bedg .WriteBit (_ebfec );_eeee !=nil {return _ffbbf ,_ccc .Wrap (_eeee ,_abgdg ,"\u0073\u0064\u0048u\u0066\u0066\u0042\u006d\u0053\u0069\u007a\u0065");};_ebfec =0;if _aafe .SdHuffDecodeWidthSelection > 1{_ebfec =1;};if _eeee =_bedg .WriteBit (_ebfec );
_eeee !=nil {return _ffbbf ,_ccc .Wrap (_eeee ,_abgdg ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");};_ebfec =0;switch _aafe .SdHuffDecodeWidthSelection {case 1,3:_ebfec =1;};if _eeee =_bedg .WriteBit (_ebfec );_eeee !=nil {return _ffbbf ,_ccc .Wrap (_eeee ,_abgdg ,"s\u0064\u0048\u0075\u0066\u0066\u0057\u0069\u0064\u0074\u0068");
};_ebfec =0;if _aafe .SdHuffDecodeHeightSelection > 1{_ebfec =1;};if _eeee =_bedg .WriteBit (_ebfec );_eeee !=nil {return _ffbbf ,_ccc .Wrap (_eeee ,_abgdg ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_ebfec =0;switch _aafe .SdHuffDecodeHeightSelection {case 1,3:_ebfec =1;
};if _eeee =_bedg .WriteBit (_ebfec );_eeee !=nil {return _ffbbf ,_ccc .Wrap (_eeee ,_abgdg ,"\u0073\u0064\u0048u\u0066\u0066\u0048\u0065\u0069\u0067\u0068\u0074");};_ebfec =0;if _aafe .UseRefinementAggregation {_ebfec =1;};if _eeee =_bedg .WriteBit (_ebfec );
_eeee !=nil {return _ffbbf ,_ccc .Wrap (_eeee ,_abgdg ,"\u0073\u0064\u0052\u0065\u0066\u0041\u0067\u0067");};_ebfec =0;if _aafe .IsHuffmanEncoded {_ebfec =1;};if _eeee =_bedg .WriteBit (_ebfec );_eeee !=nil {return _ffbbf ,_ccc .Wrap (_eeee ,_abgdg ,"\u0073\u0064\u0048\u0075\u0066\u0066");
};return 2,nil ;};func (_gggb *TextRegion )readUseRefinement ()error {if !_gggb .UseRefinement ||_gggb .SbrTemplate !=0{return nil ;};var (_bafge byte ;_fdfg error ;);_gggb .SbrATX =make ([]int8 ,2);_gggb .SbrATY =make ([]int8 ,2);_bafge ,_fdfg =_gggb ._bdgd .ReadByte ();
if _fdfg !=nil {return _fdfg ;};_gggb .SbrATX [0]=int8 (_bafge );_bafge ,_fdfg =_gggb ._bdgd .ReadByte ();if _fdfg !=nil {return _fdfg ;};_gggb .SbrATY [0]=int8 (_bafge );_bafge ,_fdfg =_gggb ._bdgd .ReadByte ();if _fdfg !=nil {return _fdfg ;};_gggb .SbrATX [1]=int8 (_bafge );
_bafge ,_fdfg =_gggb ._bdgd .ReadByte ();if _fdfg !=nil {return _fdfg ;};_gggb .SbrATY [1]=int8 (_bafge );return nil ;};func (_cfcd *TextRegion )computeSymbolCodeLength ()error {if _cfcd .IsHuffmanEncoded {return _cfcd .symbolIDCodeLengths ();};_cfcd ._afde =int8 (_g .Ceil (_g .Log (float64 (_cfcd .NumberOfSymbols ))/_g .Log (2)));
return nil ;};func (_abgg *SymbolDictionary )parseHeader ()(_eecf error ){_eg .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0062\u0065\u0067\u0069\u006e\u0073\u002e\u002e\u002e");
defer func (){if _eecf !=nil {_eg .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u0020\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u005b\u0050\u0041\u0052SE\u002d\u0048\u0045A\u0044\u0045R\u005d\u0020\u0066\u0061\u0069\u006ce\u0064\u002e \u0025\u0076",_eecf );
}else {_eg .Log .Trace ("\u005b\u0053\u0059\u004d\u0042\u004f\u004c \u0044\u0049\u0043T\u0049\u004f\u004e\u0041R\u0059\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002d\u0048\u0045\u0041\u0044\u0045\u0052\u005d\u0020\u0066\u0069\u006e\u0069\u0073\u0068\u0065\u0064\u002e");
};}();if _eecf =_abgg .readRegionFlags ();_eecf !=nil {return _eecf ;};if _eecf =_abgg .setAtPixels ();_eecf !=nil {return _eecf ;};if _eecf =_abgg .setRefinementAtPixels ();_eecf !=nil {return _eecf ;};if _eecf =_abgg .readNumberOfExportedSymbols ();_eecf !=nil {return _eecf ;
};if _eecf =_abgg .readNumberOfNewSymbols ();_eecf !=nil {return _eecf ;};if _eecf =_abgg .setInSyms ();_eecf !=nil {return _eecf ;};if _abgg ._fcce {_ddcb :=_abgg .Header .RTSegments ;for _gfee :=len (_ddcb )-1;_gfee >=0;_gfee --{if _ddcb [_gfee ].Type ==0{_deefc ,_ebeea :=_ddcb [_gfee ].SegmentData .(*SymbolDictionary );
if !_ebeea {_eecf =_ff .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074:\u0020\u0025\u0076\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020S\u0079\u006d\u0062\u006f\u006c\u0020\u0044\u0069\u0063\u0074\u0069\u006fna\u0072\u0079\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074",_ddcb [_gfee ]);
return _eecf ;};if _deefc ._fcce {_abgg .setRetainedCodingContexts (_deefc );};break ;};};};if _eecf =_abgg .checkInput ();_eecf !=nil {return _eecf ;};return nil ;};type TextRegion struct{_bdgd _d .StreamReader ;RegionInfo *RegionSegment ;SbrTemplate int8 ;
SbDsOffset int8 ;DefaultPixel int8 ;CombinationOperator _gc .CombinationOperator ;IsTransposed int8 ;ReferenceCorner int16 ;LogSBStrips int16 ;UseRefinement bool ;IsHuffmanEncoded bool ;SbHuffRSize int8 ;SbHuffRDY int8 ;SbHuffRDX int8 ;SbHuffRDHeight int8 ;
SbHuffRDWidth int8 ;SbHuffDT int8 ;SbHuffDS int8 ;SbHuffFS int8 ;SbrATX []int8 ;SbrATY []int8 ;NumberOfSymbolInstances uint32 ;_fee int64 ;SbStrips int8 ;NumberOfSymbols uint32 ;RegionBitmap *_gc .Bitmap ;Symbols []*_gc .Bitmap ;_fffd *_a .Decoder ;_eabad *GenericRefinementRegion ;
_gfcg *_a .DecoderStats ;_bbbe *_a .DecoderStats ;_edac *_a .DecoderStats ;_ddaf *_a .DecoderStats ;_feed *_a .DecoderStats ;_afade *_a .DecoderStats ;_dddd *_a .DecoderStats ;_cgeg *_a .DecoderStats ;_fcf *_a .DecoderStats ;_gcdd *_a .DecoderStats ;_fddb *_a .DecoderStats ;
_afde int8 ;_acfc *_ad .FixedSizeTable ;Header *Header ;_abecc _ad .Tabler ;_ffaea _ad .Tabler ;_agcc _ad .Tabler ;_aacag _ad .Tabler ;_cgg _ad .Tabler ;_cbced _ad .Tabler ;_cbde _ad .Tabler ;_fgcd _ad .Tabler ;_cdbc ,_gcea map[int ]int ;_dbag []int ;_ccbb *_gc .Points ;
_adcd *_gc .Bitmaps ;_bdad *_dc .IntSlice ;_cdbd ,_bgaa int ;_fbgg *_gc .Boxes ;};func (_beceb *Header )pageSize ()uint {if _beceb .PageAssociation <=255{return 1;};return 4;};func (_gcfc *GenericRefinementRegion )setParameters (_aff *_a .DecoderStats ,_afad *_a .Decoder ,_fbg int8 ,_cad ,_cdc uint32 ,_ggb *_gc .Bitmap ,_acd ,_fcd int32 ,_abccb bool ,_dcce []int8 ,_dbdf []int8 ){_eg .Log .Trace ("\u005b\u0047\u0045NE\u0052\u0049\u0043\u002d\u0052\u0045\u0046\u002d\u0052E\u0047I\u004fN\u005d \u0073\u0065\u0074\u0050\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073");
if _aff !=nil {_gcfc ._fdd =_aff ;};if _afad !=nil {_gcfc ._cbc =_afad ;};_gcfc .TemplateID =_fbg ;_gcfc .RegionInfo .BitmapWidth =_cad ;_gcfc .RegionInfo .BitmapHeight =_cdc ;_gcfc .ReferenceBitmap =_ggb ;_gcfc .ReferenceDX =_acd ;_gcfc .ReferenceDY =_fcd ;
_gcfc .IsTPGROn =_abccb ;_gcfc .GrAtX =_dcce ;_gcfc .GrAtY =_dbdf ;_gcfc .RegionBitmap =nil ;_eg .Log .Trace ("[\u0047\u0045\u004e\u0045\u0052\u0049\u0043\u002d\u0052E\u0046\u002d\u0052\u0045\u0047\u0049\u004fN]\u0020\u0073\u0065\u0074P\u0061\u0072\u0061\u006d\u0065\u0074\u0065\u0072\u0073 f\u0069\u006ei\u0073\u0068\u0065\u0064\u002e\u0020\u0025\u0073",_gcfc );
};func (_ecdb *TableSegment )HtRS ()int32 {return _ecdb ._abcfc };func (_fgd *HalftoneRegion )computeY (_bagg ,_ebb int )int {return _fgd .shiftAndFill (int (_fgd .HGridY )+_bagg *int (_fgd .HRegionX )-_ebb *int (_fgd .HRegionY ));};const (ORandom OrganizationType =iota ;
OSequential ;);func (_eacc *Header )readDataStartOffset (_acbf _d .StreamReader ,_cce OrganizationType ){if _cce ==OSequential {_eacc .SegmentDataStartOffset =uint64 (_acbf .StreamPosition ());};};func (_dbdfde *PatternDictionary )extractPatterns (_abae *_gc .Bitmap )error {var _bgcc int ;
_bcfd :=make ([]*_gc .Bitmap ,_dbdfde .GrayMax +1);for _bgcc <=int (_dbdfde .GrayMax ){_eabgg :=int (_dbdfde .HdpWidth )*_bgcc ;_eagb :=_b .Rect (_eabgg ,0,_eabgg +int (_dbdfde .HdpWidth ),int (_dbdfde .HdpHeight ));_ffae ,_acdgg :=_gc .Extract (_eagb ,_abae );
if _acdgg !=nil {return _acdgg ;};_bcfd [_bgcc ]=_ffae ;_bgcc ++;};_dbdfde .Patterns =_bcfd ;return nil ;};type Type int ;func (_acf *GenericRefinementRegion )getGrReference ()(*_gc .Bitmap ,error ){segments :=_acf ._da .RTSegments ;if len (segments )==0{return nil ,_fd .New ("\u0052\u0065f\u0065\u0072\u0065\u006e\u0063\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u006e\u006f\u0074\u0020\u0065\u0078is\u0074\u0073");
};_bc ,_dgb :=segments [0].GetSegmentData ();if _dgb !=nil {return nil ,_dgb ;};_fe ,_edb :=_bc .(Regioner );if !_edb {return nil ,_ff .Errorf ("\u0072\u0065\u0066\u0065\u0072r\u0065\u0064\u0020\u0074\u006f\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074 \u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0052\u0065\u0067\u0069\u006f\u006e\u0065\u0072\u003a\u0020\u0025\u0054",_bc );
};return _fe .GetRegionBitmap ();};func (_facg *SymbolDictionary )huffDecodeRefAggNInst ()(int64 ,error ){if !_facg .SdHuffAggInstanceSelection {_fbab ,_feaa :=_ad .GetStandardTable (1);if _feaa !=nil {return 0,_feaa ;};return _fbab .Decode (_facg ._dbcd );
};if _facg ._fada ==nil {var (_gegb int ;_cagf error ;);if _facg .SdHuffDecodeHeightSelection ==3{_gegb ++;};if _facg .SdHuffDecodeWidthSelection ==3{_gegb ++;};if _facg .SdHuffBMSizeSelection ==3{_gegb ++;};_facg ._fada ,_cagf =_facg .getUserTable (_gegb );
if _cagf !=nil {return 0,_cagf ;};};return _facg ._fada .Decode (_facg ._dbcd );};func (_agfgd *SymbolDictionary )addSymbol (_gbebg Regioner )error {_ggg ,_egcdb :=_gbebg .GetRegionBitmap ();if _egcdb !=nil {return _egcdb ;};_agfgd ._bccb [_agfgd ._bdfb ]=_ggg ;
_agfgd ._ddad =append (_agfgd ._ddad ,_ggg );_eg .Log .Trace ("\u005b\u0053YM\u0042\u004f\u004c \u0044\u0049\u0043\u0054ION\u0041RY\u005d\u0020\u0041\u0064\u0064\u0065\u0064 s\u0079\u006d\u0062\u006f\u006c\u003a\u0020%\u0073",_ggg );return nil ;};func (_dfdcb *TableSegment )HtHigh ()int32 {return _dfdcb ._dged };
func (_cdad *PageInformationSegment )readCombinationOperatorOverrideAllowed ()error {_fddd ,_dbcb :=_cdad ._feg .ReadBit ();if _dbcb !=nil {return _dbcb ;};if _fddd ==1{_cdad ._dfec =true ;};return nil ;};func (_cefe *TableSegment )Init (h *Header ,r _d .StreamReader )error {_cefe ._fgeg =r ;
return _cefe .parseHeader ();};func (_cdge *PageInformationSegment )Init (h *Header ,r _d .StreamReader )(_efe error ){_cdge ._feg =r ;if _efe =_cdge .parseHeader ();_efe !=nil {return _ccc .Wrap (_efe ,"P\u0061\u0067\u0065\u0049\u006e\u0066o\u0072\u006d\u0061\u0074\u0069\u006f\u006e\u0053\u0065g\u006d\u0065\u006et\u002eI\u006e\u0069\u0074","");
};return nil ;};type GenericRegion struct{_dga _d .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;DataOffset int64 ;DataLength int64 ;RegionSegment *RegionSegment ;UseExtTemplates bool ;IsTPGDon bool ;GBTemplate byte ;IsMMREncoded bool ;
UseMMR bool ;GBAtX []int8 ;GBAtY []int8 ;GBAtOverride []bool ;_eee bool ;Bitmap *_gc .Bitmap ;_abgc *_a .Decoder ;_ffed *_a .DecoderStats ;_dce *_cg .Decoder ;};func (_bdbf *PageInformationSegment )checkInput ()error {if _bdbf .PageBMHeight ==_g .MaxInt32 {if !_bdbf .IsStripe {_eg .Log .Debug ("P\u0061\u0067\u0065\u0049\u006e\u0066\u006f\u0072\u006da\u0074\u0069\u006f\u006e\u0053\u0065\u0067me\u006e\u0074\u002e\u0049s\u0053\u0074\u0072\u0069\u0070\u0065\u0020\u0073\u0068ou\u006c\u0064 \u0062\u0065\u0020\u0074\u0072\u0075\u0065\u002e");
};};return nil ;};func (_edfc *TextRegion )decodeID ()(int64 ,error ){if _edfc .IsHuffmanEncoded {if _edfc ._acfc ==nil {_cfbg ,_cdga :=_edfc ._bdgd .ReadBits (byte (_edfc ._afde ));return int64 (_cfbg ),_cdga ;};return _edfc ._acfc .Decode (_edfc ._bdgd );
};return _edfc ._fffd .DecodeIAID (uint64 (_edfc ._afde ),_edfc ._cgeg );};func (_gafe *Header )String ()string {_agc :=&_cb .Builder {};_agc .WriteString ("\u000a[\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045A\u0044\u0045\u0052\u005d\u000a");_agc .WriteString (_ff .Sprintf ("\t\u002d\u0020\u0053\u0065gm\u0065n\u0074\u004e\u0075\u006d\u0062e\u0072\u003a\u0020\u0025\u0076\u000a",_gafe .SegmentNumber ));
_agc .WriteString (_ff .Sprintf ("\u0009\u002d\u0020T\u0079\u0070\u0065\u003a\u0020\u0025\u0076\u000a",_gafe .Type ));_agc .WriteString (_ff .Sprintf ("\u0009-\u0020R\u0065\u0074\u0061\u0069\u006eF\u006c\u0061g\u003a\u0020\u0025\u0076\u000a",_gafe .RetainFlag ));
_agc .WriteString (_ff .Sprintf ("\u0009\u002d\u0020Pa\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e\u003a\u0020\u0025\u0076\u000a",_gafe .PageAssociation ));_agc .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0050\u0061\u0067\u0065\u0041\u0073\u0073\u006f\u0063\u0069\u0061\u0074i\u006fn\u0046\u0069\u0065\u006c\u0064\u0053\u0069\u007a\u0065\u003a\u0020\u0025\u0076\u000a",_gafe .PageAssociationFieldSize ));
_agc .WriteString ("\u0009-\u0020R\u0054\u0053\u0045\u0047\u004d\u0045\u004e\u0054\u0053\u003a\u000a");for _ ,_ceee :=range _gafe .RTSNumbers {_agc .WriteString (_ff .Sprintf ("\u0009\t\u002d\u0020\u0025\u0064\u000a",_ceee ));};_agc .WriteString (_ff .Sprintf ("\t\u002d \u0048\u0065\u0061\u0064\u0065\u0072\u004c\u0065n\u0067\u0074\u0068\u003a %\u0076\u000a",_gafe .HeaderLength ));
_agc .WriteString (_ff .Sprintf ("\u0009-\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u0044\u0061t\u0061L\u0065n\u0067\u0074\u0068\u003a\u0020\u0025\u0076\n",_gafe .SegmentDataLength ));_agc .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074D\u0061\u0074\u0061\u0053\u0074\u0061\u0072t\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0076\u000a",_gafe .SegmentDataStartOffset ));
return _agc .String ();};func (_dgagb *Header )readHeaderFlags ()error {const _aecf ="\u0072e\u0061d\u0048\u0065\u0061\u0064\u0065\u0072\u0046\u006c\u0061\u0067\u0073";_ecadf ,_cfag :=_dgagb .Reader .ReadBit ();if _cfag !=nil {return _ccc .Wrap (_cfag ,_aecf ,"r\u0065\u0074\u0061\u0069\u006e\u0020\u0066\u006c\u0061\u0067");
};if _ecadf !=0{_dgagb .RetainFlag =true ;};_ecadf ,_cfag =_dgagb .Reader .ReadBit ();if _cfag !=nil {return _ccc .Wrap (_cfag ,_aecf ,"\u0070\u0061g\u0065\u0020\u0061s\u0073\u006f\u0063\u0069\u0061\u0074\u0069\u006f\u006e");};if _ecadf !=0{_dgagb .PageAssociationFieldSize =true ;
};_ceegf ,_cfag :=_dgagb .Reader .ReadBits (6);if _cfag !=nil {return _ccc .Wrap (_cfag ,_aecf ,"\u0073\u0065\u0067m\u0065\u006e\u0074\u0020\u0074\u0079\u0070\u0065");};_dgagb .Type =Type (int (_ceegf ));return nil ;};func (_gfeca *Header )readSegmentNumber (_bgga _d .StreamReader )error {const _faed ="\u0072\u0065\u0061\u0064\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u004eu\u006d\u0062\u0065\u0072";
_dgba :=make ([]byte ,4);_ ,_acgb :=_bgga .Read (_dgba );if _acgb !=nil {return _ccc .Wrap (_acgb ,_faed ,"");};_gfeca .SegmentNumber =_bf .BigEndian .Uint32 (_dgba );return nil ;};func (_gfbf *PatternDictionary )readTemplate ()error {_gcee ,_acce :=_gfbf ._ccf .ReadBits (2);
if _acce !=nil {return _acce ;};_gfbf .HDTemplate =byte (_gcee );return nil ;};func (_fgea *SymbolDictionary )getSbSymCodeLen ()int8 {_eabfd :=int8 (_g .Ceil (_g .Log (float64 (_fgea ._fcga +_fgea .NumberOfNewSymbols ))/_g .Log (2)));if _fgea .IsHuffmanEncoded &&_eabfd < 1{return 1;
};return _eabfd ;};func (_efacf *TextRegion )getSymbols ()error {if _efacf .Header .RTSegments !=nil {return _efacf .initSymbols ();};return nil ;};type SymbolDictionary struct{_dbcd _d .StreamReader ;SdrTemplate int8 ;SdTemplate int8 ;_bfgfe bool ;_fcce bool ;
SdHuffAggInstanceSelection bool ;SdHuffBMSizeSelection int8 ;SdHuffDecodeWidthSelection int8 ;SdHuffDecodeHeightSelection int8 ;UseRefinementAggregation bool ;IsHuffmanEncoded bool ;SdATX []int8 ;SdATY []int8 ;SdrATX []int8 ;SdrATY []int8 ;NumberOfExportedSymbols uint32 ;
NumberOfNewSymbols uint32 ;Header *Header ;_fcga uint32 ;_faad []*_gc .Bitmap ;_bdfb uint32 ;_bccb []*_gc .Bitmap ;_egff _ad .Tabler ;_ecca _ad .Tabler ;_gbcab _ad .Tabler ;_fada _ad .Tabler ;_gbgg []*_gc .Bitmap ;_ddad []*_gc .Bitmap ;_aebe *_a .Decoder ;
_cegd *TextRegion ;_abgd *GenericRegion ;_fgcc *GenericRefinementRegion ;_gadd *_a .DecoderStats ;_abf *_a .DecoderStats ;_gafd *_a .DecoderStats ;_agcb *_a .DecoderStats ;_gcaa *_a .DecoderStats ;_ggf *_a .DecoderStats ;_gaeg *_a .DecoderStats ;_cdfd *_a .DecoderStats ;
_dcee *_a .DecoderStats ;_fded int8 ;_aeede *_gc .Bitmaps ;_bdbd []int ;_dgec map[int ]int ;_gade bool ;};func (_cecf *Header )writeSegmentPageAssociation (_eggg _d .BinaryWriter )(_cfgf int ,_ggbfg error ){const _agge ="w\u0072\u0069\u0074\u0065\u0053\u0065g\u006d\u0065\u006e\u0074\u0050\u0061\u0067\u0065\u0041s\u0073\u006f\u0063i\u0061t\u0069\u006f\u006e";
if _cecf .pageSize ()!=4{if _ggbfg =_eggg .WriteByte (byte (_cecf .PageAssociation ));_ggbfg !=nil {return 0,_ccc .Wrap (_ggbfg ,_agge ,"\u0070\u0061\u0067\u0065\u0053\u0069\u007a\u0065\u0020\u0021\u003d\u0020\u0034");};return 1,nil ;};_gcbd :=make ([]byte ,4);
_bf .BigEndian .PutUint32 (_gcbd ,uint32 (_cecf .PageAssociation ));if _cfgf ,_ggbfg =_eggg .Write (_gcbd );_ggbfg !=nil {return 0,_ccc .Wrap (_ggbfg ,_agge ,"\u0034 \u0062y\u0074\u0065\u0020\u0070\u0061g\u0065\u0020n\u0075\u006d\u0062\u0065\u0072");};
return _cfgf ,nil ;};var _ _ad .BasicTabler =&TableSegment {};type template0 struct{};func (_baa *GenericRegion )Init (h *Header ,r _d .StreamReader )error {_baa .RegionSegment =NewRegionSegment (r );_baa ._dga =r ;return _baa .parseHeader ();};func (_adb *TextRegion )GetRegionInfo ()*RegionSegment {return _adb .RegionInfo };
func (_beca *Header )writeReferredToSegments (_ebfg _d .BinaryWriter )(_cegc int ,_dccf error ){const _dacec ="\u0077\u0072\u0069te\u0052\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0073";var (_ebfe uint16 ;
_ded uint32 ;);_cbdc :=_beca .referenceSize ();_dacg :=1;_feba :=make ([]byte ,_cbdc );for _ ,_dbbf :=range _beca .RTSNumbers {switch _cbdc {case 4:_ded =uint32 (_dbbf );_bf .BigEndian .PutUint32 (_feba ,_ded );_dacg ,_dccf =_ebfg .Write (_feba );if _dccf !=nil {return 0,_ccc .Wrap (_dccf ,_dacec ,"u\u0069\u006e\u0074\u0033\u0032\u0020\u0073\u0069\u007a\u0065");
};case 2:_ebfe =uint16 (_dbbf );_bf .BigEndian .PutUint16 (_feba ,_ebfe );_dacg ,_dccf =_ebfg .Write (_feba );if _dccf !=nil {return 0,_ccc .Wrap (_dccf ,_dacec ,"\u0075\u0069\u006e\u0074\u0031\u0036");};default:if _dccf =_ebfg .WriteByte (byte (_dbbf ));
_dccf !=nil {return 0,_ccc .Wrap (_dccf ,_dacec ,"\u0075\u0069\u006et\u0038");};};_cegc +=_dacg ;};return _cegc ,nil ;};func (_aggge *TextRegion )symbolIDCodeLengths ()error {var (_adbf []*_ad .Code ;_cfegff uint64 ;_adff _ad .Tabler ;_dfad error ;);for _cfcf :=0;
_cfcf < 35;_cfcf ++{_cfegff ,_dfad =_aggge ._bdgd .ReadBits (4);if _dfad !=nil {return _dfad ;};_gbbbe :=int (_cfegff &0xf);if _gbbbe > 0{_adbf =append (_adbf ,_ad .NewCode (int32 (_gbbbe ),0,int32 (_cfcf ),false ));};};_adff ,_dfad =_ad .NewFixedSizeTable (_adbf );
if _dfad !=nil {return _dfad ;};var (_aegfe int64 ;_afab uint32 ;_bfeed []*_ad .Code ;_abcg int64 ;);for _afab < _aggge .NumberOfSymbols {_abcg ,_dfad =_adff .Decode (_aggge ._bdgd );if _dfad !=nil {return _dfad ;};if _abcg < 32{if _abcg > 0{_bfeed =append (_bfeed ,_ad .NewCode (int32 (_abcg ),0,int32 (_afab ),false ));
};_aegfe =_abcg ;_afab ++;}else {var _edde ,_eabb int64 ;switch _abcg {case 32:_cfegff ,_dfad =_aggge ._bdgd .ReadBits (2);if _dfad !=nil {return _dfad ;};_edde =3+int64 (_cfegff );if _afab > 0{_eabb =_aegfe ;};case 33:_cfegff ,_dfad =_aggge ._bdgd .ReadBits (3);
if _dfad !=nil {return _dfad ;};_edde =3+int64 (_cfegff );case 34:_cfegff ,_dfad =_aggge ._bdgd .ReadBits (7);if _dfad !=nil {return _dfad ;};_edde =11+int64 (_cfegff );};for _efaa :=0;_efaa < int (_edde );_efaa ++{if _eabb > 0{_bfeed =append (_bfeed ,_ad .NewCode (int32 (_eabb ),0,int32 (_afab ),false ));
};_afab ++;};};};_aggge ._bdgd .Align ();_aggge ._acfc ,_dfad =_ad .NewFixedSizeTable (_bfeed );return _dfad ;};func (_edba *SymbolDictionary )setRefinementAtPixels ()error {if !_edba .UseRefinementAggregation ||_edba .SdrTemplate !=0{return nil ;};if _cfff :=_edba .readRefinementAtPixels (2);
_cfff !=nil {return _cfff ;};return nil ;};func (_dcbbc *RegionSegment )parseHeader ()error {const _fefb ="p\u0061\u0072\u0073\u0065\u0048\u0065\u0061\u0064\u0065\u0072";_eg .Log .Trace ("\u005b\u0052\u0045\u0047I\u004f\u004e\u005d\u005b\u0050\u0041\u0052\u0053\u0045\u002dH\u0045A\u0044\u0045\u0052\u005d\u0020\u0042\u0065g\u0069\u006e");
defer func (){_eg .Log .Trace ("\u005b\u0052\u0045G\u0049\u004f\u004e\u005d[\u0050\u0041\u0052\u0053\u0045\u002d\u0048E\u0041\u0044\u0045\u0052\u005d\u0020\u0046\u0069\u006e\u0069\u0073\u0068\u0065\u0064");}();_eccca ,_aabe :=_dcbbc ._fggd .ReadBits (32);
if _aabe !=nil {return _ccc .Wrap (_aabe ,_fefb ,"\u0077\u0069\u0064t\u0068");};_dcbbc .BitmapWidth =uint32 (_eccca &_g .MaxUint32 );_eccca ,_aabe =_dcbbc ._fggd .ReadBits (32);if _aabe !=nil {return _ccc .Wrap (_aabe ,_fefb ,"\u0068\u0065\u0069\u0067\u0068\u0074");
};_dcbbc .BitmapHeight =uint32 (_eccca &_g .MaxUint32 );_eccca ,_aabe =_dcbbc ._fggd .ReadBits (32);if _aabe !=nil {return _ccc .Wrap (_aabe ,_fefb ,"\u0078\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_dcbbc .XLocation =uint32 (_eccca &_g .MaxUint32 );
_eccca ,_aabe =_dcbbc ._fggd .ReadBits (32);if _aabe !=nil {return _ccc .Wrap (_aabe ,_fefb ,"\u0079\u0020\u006c\u006f\u0063\u0061\u0074\u0069\u006f\u006e");};_dcbbc .YLocation =uint32 (_eccca &_g .MaxUint32 );if _ ,_aabe =_dcbbc ._fggd .ReadBits (5);_aabe !=nil {return _ccc .Wrap (_aabe ,_fefb ,"\u0064i\u0072\u0079\u0020\u0072\u0065\u0061d");
};if _aabe =_dcbbc .readCombinationOperator ();_aabe !=nil {return _ccc .Wrap (_aabe ,_fefb ,"c\u006fm\u0062\u0069\u006e\u0061\u0074\u0069\u006f\u006e \u006f\u0070\u0065\u0072at\u006f\u0072");};return nil ;};func (_abcfb *PageInformationSegment )readIsStriped ()error {_fab ,_dddfa :=_abcfb ._feg .ReadBit ();
if _dddfa !=nil {return _dddfa ;};if _fab ==1{_abcfb .IsStripe =true ;};return nil ;};func (_fgeag *SymbolDictionary )retrieveImportSymbols ()error {for _ ,_cgaf :=range _fgeag .Header .RTSegments {if _cgaf .Type ==0{_gceef ,_daeg :=_cgaf .GetSegmentData ();
if _daeg !=nil {return _daeg ;};_gdcf ,_efba :=_gceef .(*SymbolDictionary );if !_efba {return _ff .Errorf ("\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0044\u0061\u0074a\u0020\u0069\u0073\u0020\u006e\u006f\u0074\u0020\u0061\u0020\u0053\u0079\u006d\u0062\u006f\u006c\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0053\u0065\u0067m\u0065\u006e\u0074\u003a\u0020%\u0054",_gceef );
};_gbafc ,_daeg :=_gdcf .GetDictionary ();if _daeg !=nil {return _ff .Errorf ("\u0072\u0065\u006c\u0061\u0074\u0065\u0064 \u0073\u0065\u0067m\u0065\u006e\u0074 \u0077\u0069t\u0068\u0020\u0069\u006e\u0064\u0065x\u003a %\u0064\u0020\u0067\u0065\u0074\u0044\u0069\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u002e\u0020\u0025\u0073",_cgaf .SegmentNumber ,_daeg .Error ());
};_fgeag ._faad =append (_fgeag ._faad ,_gbafc ...);_fgeag ._fcga +=_gdcf .NumberOfExportedSymbols ;};};return nil ;};func (_ccaec *TextRegion )setContexts (_abbb *_a .DecoderStats ,_bgcb *_a .DecoderStats ,_edae *_a .DecoderStats ,_bfgbd *_a .DecoderStats ,_eece *_a .DecoderStats ,_adeb *_a .DecoderStats ,_acaf *_a .DecoderStats ,_aggd *_a .DecoderStats ,_dbaca *_a .DecoderStats ,_agbgb *_a .DecoderStats ){_ccaec ._gfcg =_bgcb ;
_ccaec ._bbbe =_edae ;_ccaec ._edac =_bfgbd ;_ccaec ._ddaf =_eece ;_ccaec ._afade =_acaf ;_ccaec ._dddd =_aggd ;_ccaec ._cgeg =_adeb ;_ccaec ._fcf =_dbaca ;_ccaec ._gcdd =_agbgb ;_ccaec ._fddb =_abbb ;};func (_bafg *TableSegment )parseHeader ()error {var (_ggac int ;
_bgac uint64 ;_acfd error ;);_ggac ,_acfd =_bafg ._fgeg .ReadBit ();if _acfd !=nil {return _acfd ;};if _ggac ==1{return _ff .Errorf ("\u0069\u006e\u0076\u0061\u006c\u0069\u0064\u0020\u0074\u0061\u0062\u006c\u0065 \u0073\u0065\u0067\u006d\u0065\u006e\u0074\u0020\u0064e\u0066\u0069\u006e\u0069\u0074\u0069\u006f\u006e\u002e\u0020\u0042\u002e\u0032\u002e1\u0020\u0043\u006f\u0064\u0065\u0020\u0054\u0061\u0062\u006c\u0065\u0020\u0066\u006c\u0061\u0067\u0073\u003a\u0020\u0042\u0069\u0074\u0020\u0037\u0020\u006d\u0075\u0073\u0074\u0020b\u0065\u0020\u007a\u0065\u0072\u006f\u002e\u0020\u0057a\u0073\u003a \u0025\u0064",_ggac );
};if _bgac ,_acfd =_bafg ._fgeg .ReadBits (3);_acfd !=nil {return _acfd ;};_bafg ._abcfc =(int32 (_bgac )+1)&0xf;if _bgac ,_acfd =_bafg ._fgeg .ReadBits (3);_acfd !=nil {return _acfd ;};_bafg ._ecfac =(int32 (_bgac )+1)&0xf;if _bgac ,_acfd =_bafg ._fgeg .ReadBits (32);
_acfd !=nil {return _acfd ;};_bafg ._cdaff =int32 (_bgac &_g .MaxInt32 );if _bgac ,_acfd =_bafg ._fgeg .ReadBits (32);_acfd !=nil {return _acfd ;};_bafg ._dged =int32 (_bgac &_g .MaxInt32 );return nil ;};func (_bbfd *SymbolDictionary )getUserTable (_bgfef int )(_ad .Tabler ,error ){var _becg int ;
for _ ,_abef :=range _bbfd .Header .RTSegments {if _abef .Type ==53{if _becg ==_bgfef {_gbf ,_ffccb :=_abef .GetSegmentData ();if _ffccb !=nil {return nil ,_ffccb ;};_ccag :=_gbf .(_ad .BasicTabler );return _ad .NewEncodedTable (_ccag );};_becg ++;};};
return nil ,nil ;};func (_gbcaa *TextRegion )Encode (w _d .BinaryWriter )(_gdgc int ,_ggdbb error ){const _bcde ="\u0054\u0065\u0078\u0074\u0052\u0065\u0067\u0069\u006f\u006e\u002e\u0045n\u0063\u006f\u0064\u0065";if _gdgc ,_ggdbb =_gbcaa .RegionInfo .Encode (w );
_ggdbb !=nil {return _gdgc ,_ccc .Wrap (_ggdbb ,_bcde ,"");};var _dffb int ;if _dffb ,_ggdbb =_gbcaa .encodeFlags (w );_ggdbb !=nil {return _gdgc ,_ccc .Wrap (_ggdbb ,_bcde ,"");};_gdgc +=_dffb ;if _dffb ,_ggdbb =_gbcaa .encodeSymbols (w );_ggdbb !=nil {return _gdgc ,_ccc .Wrap (_ggdbb ,_bcde ,"");
};_gdgc +=_dffb ;return _gdgc ,nil ;};func (_fae *GenericRegion )decodeSLTP ()(int ,error ){switch _fae .GBTemplate {case 0:_fae ._ffed .SetIndex (0x9B25);case 1:_fae ._ffed .SetIndex (0x795);case 2:_fae ._ffed .SetIndex (0xE5);case 3:_fae ._ffed .SetIndex (0x195);
};return _fae ._abgc .DecodeBit (_fae ._ffed );};func (_aga *Header )GetSegmentData ()(Segmenter ,error ){var _ddcc Segmenter ;if _aga .SegmentData !=nil {_ddcc =_aga .SegmentData ;};if _ddcc ==nil {_gbab ,_cccg :=_bfce [_aga .Type ];if !_cccg {return nil ,_ff .Errorf ("\u0074\u0079\u0070\u0065\u003a\u0020\u0025\u0073\u002f\u0020\u0025\u0064\u0020\u0063\u0072e\u0061t\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0066\u006f\u0075\u006e\u0064\u002e\u0020",_aga .Type ,_aga .Type );
};_ddcc =_gbab ();_eg .Log .Trace ("\u005b\u0053E\u0047\u004d\u0045\u004e\u0054-\u0048\u0045\u0041\u0044\u0045R\u005d\u005b\u0023\u0025\u0064\u005d\u0020\u0047\u0065\u0074\u0053\u0065\u0067\u006d\u0065\u006e\u0074\u0044\u0061\u0074\u0061\u0020\u0061\u0074\u0020\u004f\u0066\u0066\u0073\u0065\u0074\u003a\u0020\u0025\u0030\u0034\u0058",_aga .SegmentNumber ,_aga .SegmentDataStartOffset );
_aeed ,_ggcaa :=_aga .subInputReader ();if _ggcaa !=nil {return nil ,_ggcaa ;};if _beggg :=_ddcc .Init (_aga ,_aeed );_beggg !=nil {_eg .Log .Debug ("\u0049\u006e\u0069\u0074 \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076 \u0066o\u0072\u0020\u0074\u0079\u0070\u0065\u003a \u0025\u0054",_beggg ,_ddcc );
return nil ,_beggg ;};_aga .SegmentData =_ddcc ;};return _ddcc ,nil ;};func (_ada *GenericRefinementRegion )decodeTemplate (_accd ,_aa ,_agb ,_aec ,_bda ,_cgf ,_gebf ,_bee ,_bfbc ,_ec int ,_cga templater )(_gca error ){var (_gde ,_gcab ,_gbed ,_cfeg ,_agdc int16 ;
_eae ,_bgc ,_ecg ,_dcd int ;_cdac byte ;);if _bfbc >=1&&(_bfbc -1)< _ada .ReferenceBitmap .Height {_cdac ,_gca =_ada .ReferenceBitmap .GetByte (_ec -_aec );if _gca !=nil {return ;};_eae =int (_cdac );};if _bfbc >=0&&(_bfbc )< _ada .ReferenceBitmap .Height {_cdac ,_gca =_ada .ReferenceBitmap .GetByte (_ec );
if _gca !=nil {return ;};_bgc =int (_cdac );};if _bfbc >=-1&&(_bfbc +1)< _ada .ReferenceBitmap .Height {_cdac ,_gca =_ada .ReferenceBitmap .GetByte (_ec +_aec );if _gca !=nil {return ;};_ecg =int (_cdac );};_ec ++;if _accd >=1{_cdac ,_gca =_ada .RegionBitmap .GetByte (_bee -_agb );
if _gca !=nil {return ;};_dcd =int (_cdac );};_bee ++;_aac :=_ada .ReferenceDX %8;_bcd :=6+_aac ;_ecc :=_ec %_aec ;if _bcd >=0{if _bcd < 8{_gde =int16 (_eae >>uint (_bcd ))&0x07;};if _bcd < 8{_gcab =int16 (_bgc >>uint (_bcd ))&0x07;};if _bcd < 8{_gbed =int16 (_ecg >>uint (_bcd ))&0x07;
};if _bcd ==6&&_ecc > 1{if _bfbc >=1&&(_bfbc -1)< _ada .ReferenceBitmap .Height {_cdac ,_gca =_ada .ReferenceBitmap .GetByte (_ec -_aec -2);if _gca !=nil {return _gca ;};_gde |=int16 (_cdac <<2)&0x04;};if _bfbc >=0&&_bfbc < _ada .ReferenceBitmap .Height {_cdac ,_gca =_ada .ReferenceBitmap .GetByte (_ec -2);
if _gca !=nil {return _gca ;};_gcab |=int16 (_cdac <<2)&0x04;};if _bfbc >=-1&&_bfbc +1< _ada .ReferenceBitmap .Height {_cdac ,_gca =_ada .ReferenceBitmap .GetByte (_ec +_aec -2);if _gca !=nil {return _gca ;};_gbed |=int16 (_cdac <<2)&0x04;};};if _bcd ==0{_eae =0;
_bgc =0;_ecg =0;if _ecc < _aec -1{if _bfbc >=1&&_bfbc -1< _ada .ReferenceBitmap .Height {_cdac ,_gca =_ada .ReferenceBitmap .GetByte (_ec -_aec );if _gca !=nil {return _gca ;};_eae =int (_cdac );};if _bfbc >=0&&_bfbc < _ada .ReferenceBitmap .Height {_cdac ,_gca =_ada .ReferenceBitmap .GetByte (_ec );
if _gca !=nil {return _gca ;};_bgc =int (_cdac );};if _bfbc >=-1&&_bfbc +1< _ada .ReferenceBitmap .Height {_cdac ,_gca =_ada .ReferenceBitmap .GetByte (_ec +_aec );if _gca !=nil {return _gca ;};_ecg =int (_cdac );};};_ec ++;};}else {_gde =int16 (_eae <<1)&0x07;
_gcab =int16 (_bgc <<1)&0x07;_gbed =int16 (_ecg <<1)&0x07;_eae =0;_bgc =0;_ecg =0;if _ecc < _aec -1{if _bfbc >=1&&_bfbc -1< _ada .ReferenceBitmap .Height {_cdac ,_gca =_ada .ReferenceBitmap .GetByte (_ec -_aec );if _gca !=nil {return _gca ;};_eae =int (_cdac );
};if _bfbc >=0&&_bfbc < _ada .ReferenceBitmap .Height {_cdac ,_gca =_ada .ReferenceBitmap .GetByte (_ec );if _gca !=nil {return _gca ;};_bgc =int (_cdac );};if _bfbc >=-1&&_bfbc +1< _ada .ReferenceBitmap .Height {_cdac ,_gca =_ada .ReferenceBitmap .GetByte (_ec +_aec );
if _gca !=nil {return _gca ;};_ecg =int (_cdac );};_ec ++;};_gde |=int16 ((_eae >>7)&0x07);_gcab |=int16 ((_bgc >>7)&0x07);_gbed |=int16 ((_ecg >>7)&0x07);};_cfeg =int16 (_dcd >>6);_agdc =0;_cdaa :=(2-_aac )%8;_eae <<=uint (_cdaa );_bgc <<=uint (_cdaa );
_ecg <<=uint (_cdaa );_dcd <<=2;var _aaf int ;for _cfg :=0;_cfg < _aa ;_cfg ++{_cbed :=_cfg &0x07;_ecf :=_cga .form (_gde ,_gcab ,_gbed ,_cfeg ,_agdc );if _ada ._ea {_cdac ,_gca =_ada .RegionBitmap .GetByte (_ada .RegionBitmap .GetByteIndex (_cfg ,_accd ));
if _gca !=nil {return _gca ;};_ada ._fdd .SetIndex (int32 (_ada .overrideAtTemplate0 (int (_ecf ),_cfg ,_accd ,int (_cdac ),_cbed )));}else {_ada ._fdd .SetIndex (int32 (_ecf ));};_aaf ,_gca =_ada ._cbc .DecodeBit (_ada ._fdd );if _gca !=nil {return _gca ;
};if _gca =_ada .RegionBitmap .SetPixel (_cfg ,_accd ,byte (_aaf ));_gca !=nil {return _gca ;};_gde =((_gde <<1)|0x01&int16 (_eae >>7))&0x07;_gcab =((_gcab <<1)|0x01&int16 (_bgc >>7))&0x07;_gbed =((_gbed <<1)|0x01&int16 (_ecg >>7))&0x07;_cfeg =((_cfeg <<1)|0x01&int16 (_dcd >>7))&0x07;
_agdc =int16 (_aaf );if (_cfg -int (_ada .ReferenceDX ))%8==5{_eae =0;_bgc =0;_ecg =0;if ((_cfg -int (_ada .ReferenceDX ))/8)+1< _ada .ReferenceBitmap .RowStride {if _bfbc >=1&&(_bfbc -1)< _ada .ReferenceBitmap .Height {_cdac ,_gca =_ada .ReferenceBitmap .GetByte (_ec -_aec );
if _gca !=nil {return _gca ;};_eae =int (_cdac );};if _bfbc >=0&&_bfbc < _ada .ReferenceBitmap .Height {_cdac ,_gca =_ada .ReferenceBitmap .GetByte (_ec );if _gca !=nil {return _gca ;};_bgc =int (_cdac );};if _bfbc >=-1&&(_bfbc +1)< _ada .ReferenceBitmap .Height {_cdac ,_gca =_ada .ReferenceBitmap .GetByte (_ec +_aec );
if _gca !=nil {return _gca ;};_ecg =int (_cdac );};};_ec ++;}else {_eae <<=1;_bgc <<=1;_ecg <<=1;};if _cbed ==5&&_accd >=1{if ((_cfg >>3)+1)>=_ada .RegionBitmap .RowStride {_dcd =0;}else {_cdac ,_gca =_ada .RegionBitmap .GetByte (_bee -_agb );if _gca !=nil {return _gca ;
};_dcd =int (_cdac );};_bee ++;}else {_dcd <<=1;};};return nil ;};func (_decg *SymbolDictionary )InitEncode (symbols *_gc .Bitmaps ,symbolList []int ,symbolMap map[int ]int ,unborderSymbols bool )error {const _agbg ="S\u0079\u006d\u0062\u006f\u006c\u0044i\u0063\u0074\u0069\u006f\u006e\u0061\u0072\u0079\u002eI\u006e\u0069\u0074E\u006ec\u006f\u0064\u0065";
_decg .SdATX =[]int8 {3,-3,2,-2};_decg .SdATY =[]int8 {-1,-1,-2,-2};_decg ._aeede =symbols ;_decg ._bdbd =make ([]int ,len (symbolList ));copy (_decg ._bdbd ,symbolList );if len (_decg ._bdbd )!=_decg ._aeede .Size (){return _ccc .Error (_agbg ,"s\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0061\u006e\u0064\u0020\u0073\u0079\u006d\u0062\u006f\u006c\u004ci\u0073\u0074\u0020\u006f\u0066\u0020\u0064\u0069\u0066\u0066er\u0065\u006e\u0074 \u0073i\u007a\u0065");
};_decg .NumberOfNewSymbols =uint32 (symbols .Size ());_decg .NumberOfExportedSymbols =uint32 (symbols .Size ());_decg ._dgec =symbolMap ;_decg ._gade =unborderSymbols ;return nil ;};func (_gefd *Header )writeSegmentNumber (_bdfd _d .BinaryWriter )(_efff int ,_dcab error ){_fdcc :=make ([]byte ,4);
_bf .BigEndian .PutUint32 (_fdcc ,_gefd .SegmentNumber );if _efff ,_dcab =_bdfd .Write (_fdcc );_dcab !=nil {return 0,_ccc .Wrap (_dcab ,"\u0048e\u0061\u0064\u0065\u0072.\u0077\u0072\u0069\u0074\u0065S\u0065g\u006de\u006e\u0074\u004e\u0075\u006d\u0062\u0065r","");
};return _efff ,nil ;};func (_fddg *SymbolDictionary )setExportedSymbols (_fcaef []int ){for _agfa :=uint32 (0);_agfa < _fddg ._fcga +_fddg .NumberOfNewSymbols ;_agfa ++{if _fcaef [_agfa ]==1{var _dfg *_gc .Bitmap ;if _agfa < _fddg ._fcga {_dfg =_fddg ._faad [_agfa ];
}else {_dfg =_fddg ._bccb [_agfa -_fddg ._fcga ];};_eg .Log .Trace ("\u005bS\u0059\u004dB\u004f\u004c\u002d\u0044I\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u0020\u0041\u0064\u0064 E\u0078\u0070\u006fr\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c:\u0020\u0027%\u0073\u0027",_dfg );
_fddg ._gbgg =append (_fddg ._gbgg ,_dfg );};};};func (_gdf *template1 )setIndex (_bga *_a .DecoderStats ){_bga .SetIndex (0x080)};func (_ecdg *TextRegion )decodeSymInRefSize ()(int64 ,error ){const _agcd ="\u0064e\u0063o\u0064\u0065\u0053\u0079\u006dI\u006e\u0052e\u0066\u0053\u0069\u007a\u0065";
if _ecdg .SbHuffRSize ==0{_bedd ,_gbbe :=_ad .GetStandardTable (1);if _gbbe !=nil {return 0,_ccc .Wrap (_gbbe ,_agcd ,"");};return _bedd .Decode (_ecdg ._bdgd );};if _ecdg ._fgcd ==nil {var (_dedc int ;_gbcc error ;);if _ecdg .SbHuffFS ==3{_dedc ++;};if _ecdg .SbHuffDS ==3{_dedc ++;
};if _ecdg .SbHuffDT ==3{_dedc ++;};if _ecdg .SbHuffRDWidth ==3{_dedc ++;};if _ecdg .SbHuffRDHeight ==3{_dedc ++;};if _ecdg .SbHuffRDX ==3{_dedc ++;};if _ecdg .SbHuffRDY ==3{_dedc ++;};_ecdg ._fgcd ,_gbcc =_ecdg .getUserTable (_dedc );if _gbcc !=nil {return 0,_ccc .Wrap (_gbcc ,_agcd ,"");
};};_fcebe ,_afeb :=_ecdg ._fgcd .Decode (_ecdg ._bdgd );if _afeb !=nil {return 0,_ccc .Wrap (_afeb ,_agcd ,"");};return _fcebe ,nil ;};func (_gacd *TextRegion )blit (_ffec *_gc .Bitmap ,_bcfg int64 )error {if _gacd .IsTransposed ==0&&(_gacd .ReferenceCorner ==2||_gacd .ReferenceCorner ==3){_gacd ._fee +=int64 (_ffec .Width -1);
}else if _gacd .IsTransposed ==1&&(_gacd .ReferenceCorner ==0||_gacd .ReferenceCorner ==2){_gacd ._fee +=int64 (_ffec .Height -1);};_caeg :=_gacd ._fee ;if _gacd .IsTransposed ==1{_caeg ,_bcfg =_bcfg ,_caeg ;};switch _gacd .ReferenceCorner {case 0:_bcfg -=int64 (_ffec .Height -1);
case 2:_bcfg -=int64 (_ffec .Height -1);_caeg -=int64 (_ffec .Width -1);case 3:_caeg -=int64 (_ffec .Width -1);};_gfbd :=_gc .Blit (_ffec ,_gacd .RegionBitmap ,int (_caeg ),int (_bcfg ),_gacd .CombinationOperator );if _gfbd !=nil {return _gfbd ;};if _gacd .IsTransposed ==0&&(_gacd .ReferenceCorner ==0||_gacd .ReferenceCorner ==1){_gacd ._fee +=int64 (_ffec .Width -1);
};if _gacd .IsTransposed ==1&&(_gacd .ReferenceCorner ==1||_gacd .ReferenceCorner ==3){_gacd ._fee +=int64 (_ffec .Height -1);};return nil ;};func (_dbab *SymbolDictionary )String ()string {_beeeb :=&_cb .Builder {};_beeeb .WriteString ("\n\u005b\u0053\u0059\u004dBO\u004c-\u0044\u0049\u0043\u0054\u0049O\u004e\u0041\u0052\u0059\u005d\u000a");
_beeeb .WriteString (_ff .Sprintf ("\u0009-\u0020S\u0064\u0072\u0054\u0065\u006dp\u006c\u0061t\u0065\u0020\u0025\u0076\u000a",_dbab .SdrTemplate ));_beeeb .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0054\u0065\u006d\u0070\u006c\u0061\u0074e\u0020\u0025\u0076\u000a",_dbab .SdTemplate ));
_beeeb .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006eg\u0043\u006f\u006e\u0074\u0065\u0078\u0074R\u0065\u0074\u0061\u0069\u006e\u0065\u0064\u0020\u0025\u0076\u000a",_dbab ._bfgfe ));_beeeb .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0069\u0073\u0043\u006f\u0064\u0069\u006e\u0067C\u006f\u006e\u0074\u0065\u0078\u0074\u0055\u0073\u0065\u0064 \u0025\u0076\u000a",_dbab ._fcce ));
_beeeb .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0041\u0067\u0067\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_dbab .SdHuffAggInstanceSelection ));
_beeeb .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053d\u0048\u0075\u0066\u0066\u0042\u004d\u0053\u0069\u007a\u0065S\u0065l\u0065\u0063\u0074\u0069\u006f\u006e\u0020%\u0076\u000a",_dbab .SdHuffBMSizeSelection ));_beeeb .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0048u\u0066\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0057\u0069\u0064\u0074\u0068S\u0065\u006c\u0065\u0063\u0074\u0069\u006fn\u0020\u0025\u0076\u000a",_dbab .SdHuffDecodeWidthSelection ));
_beeeb .WriteString (_ff .Sprintf ("\u0009\u002d\u0020Sd\u0048\u0075\u0066\u0066\u0044\u0065\u0063\u006f\u0064e\u0048e\u0069g\u0068t\u0053\u0065\u006c\u0065\u0063\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_dbab .SdHuffDecodeHeightSelection ));_beeeb .WriteString (_ff .Sprintf ("\u0009\u002d\u0020U\u0073\u0065\u0052\u0065f\u0069\u006e\u0065\u006d\u0065\u006e\u0074A\u0067\u0067\u0072\u0065\u0067\u0061\u0074\u0069\u006f\u006e\u0020\u0025\u0076\u000a",_dbab .UseRefinementAggregation ));
_beeeb .WriteString (_ff .Sprintf ("\u0009\u002d\u0020is\u0048\u0075\u0066\u0066\u006d\u0061\u006e\u0045\u006e\u0063\u006f\u0064\u0065\u0064\u0020\u0025\u0076\u000a",_dbab .IsHuffmanEncoded ));_beeeb .WriteString (_ff .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_dbab .SdATX ));
_beeeb .WriteString (_ff .Sprintf ("\u0009\u002d\u0020S\u0064\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_dbab .SdATY ));_beeeb .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0058\u0020\u0025\u0076\u000a",_dbab .SdrATX ));
_beeeb .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u0053\u0064\u0072\u0041\u0054\u0059\u0020\u0025\u0076\u000a",_dbab .SdrATY ));_beeeb .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u004e\u0075\u006d\u0062\u0065\u0072\u004ff\u0045\u0078\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_dbab .NumberOfExportedSymbols ));
_beeeb .WriteString (_ff .Sprintf ("\u0009-\u0020\u004e\u0075\u006db\u0065\u0072\u004f\u0066\u004ee\u0077S\u0079m\u0062\u006f\u006c\u0073\u0020\u0025\u0076\n",_dbab .NumberOfNewSymbols ));_beeeb .WriteString (_ff .Sprintf ("\u0009\u002d\u0020\u006e\u0075\u006d\u0062\u0065\u0072\u004ff\u0049\u006d\u0070\u006f\u0072\u0074\u0065d\u0053\u0079\u006d\u0062\u006f\u006c\u0073\u0020\u0025\u0076\u000a",_dbab ._fcga ));
_beeeb .WriteString (_ff .Sprintf ("\u0009\u002d \u006e\u0075\u006d\u0062\u0065\u0072\u004f\u0066\u0044\u0065\u0063\u006f\u0064\u0065\u0064\u0053\u0079\u006d\u0062\u006f\u006c\u0073 %\u0076\u000a",_dbab ._bdfb ));return _beeeb .String ();};func (_bded *SymbolDictionary )encodeRefinementATFlags (_badg _d .BinaryWriter )(_badda int ,_gbaa error ){const _fcaea ="\u0065\u006e\u0063od\u0065\u0052\u0065\u0066\u0069\u006e\u0065\u006d\u0065\u006e\u0074\u0041\u0054\u0046\u006c\u0061\u0067\u0073";
if !_bded .UseRefinementAggregation ||_bded .SdrTemplate !=0{return 0,nil ;};for _adcc :=0;_adcc < 2;_adcc ++{if _gbaa =_badg .WriteByte (byte (_bded .SdrATX [_adcc ]));_gbaa !=nil {return _badda ,_ccc .Wrapf (_gbaa ,_fcaea ,"\u0053\u0064\u0072\u0041\u0054\u0058\u005b\u0025\u0064\u005d",_adcc );
};_badda ++;if _gbaa =_badg .WriteByte (byte (_bded .SdrATY [_adcc ]));_gbaa !=nil {return _badda ,_ccc .Wrapf (_gbaa ,_fcaea ,"\u0053\u0064\u0072\u0041\u0054\u0059\u005b\u0025\u0064\u005d",_adcc );};_badda ++;};return _badda ,nil ;};var _ templater =&template1 {};
func (_gffef *TextRegion )checkInput ()error {const _faeae ="\u0063\u0068\u0065\u0063\u006b\u0049\u006e\u0070\u0075\u0074";if !_gffef .UseRefinement {if _gffef .SbrTemplate !=0{_eg .Log .Debug ("\u0053\u0062\u0072Te\u006d\u0070\u006c\u0061\u0074\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");
_gffef .SbrTemplate =0;};};if _gffef .SbHuffFS ==2||_gffef .SbHuffRDWidth ==2||_gffef .SbHuffRDHeight ==2||_gffef .SbHuffRDX ==2||_gffef .SbHuffRDY ==2{return _ccc .Error (_faeae ,"h\u0075\u0066\u0066\u006d\u0061\u006e \u0066\u006c\u0061\u0067\u0020\u0076a\u006c\u0075\u0065\u0020\u0069\u0073\u0020n\u006f\u0074\u0020\u0070\u0065\u0072\u006d\u0069\u0074\u0074e\u0064");
};if !_gffef .UseRefinement {if _gffef .SbHuffRSize !=0{_eg .Log .Debug ("\u0053\u0062\u0048uf\u0066\u0052\u0053\u0069\u007a\u0065\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020\u0062\u0065\u0020\u0030");_gffef .SbHuffRSize =0;};if _gffef .SbHuffRDY !=0{_eg .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044Y\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");
_gffef .SbHuffRDY =0;};if _gffef .SbHuffRDX !=0{_eg .Log .Debug ("S\u0062\u0048\u0075\u0066fR\u0044X\u0020\u0073\u0068\u006f\u0075l\u0064\u0020\u0062\u0065\u0020\u0030");_gffef .SbHuffRDX =0;};if _gffef .SbHuffRDWidth !=0{_eg .Log .Debug ("\u0053b\u0048\u0075\u0066\u0066R\u0044\u0057\u0069\u0064\u0074h\u0020s\u0068o\u0075\u006c\u0064\u0020\u0062\u0065\u00200");
_gffef .SbHuffRDWidth =0;};if _gffef .SbHuffRDHeight !=0{_eg .Log .Debug ("\u0053\u0062\u0048\u0075\u0066\u0066\u0052\u0044\u0048\u0065\u0069g\u0068\u0074\u0020\u0073\u0068\u006f\u0075\u006c\u0064\u0020b\u0065\u0020\u0030");_gffef .SbHuffRDHeight =0;};
};return nil ;};func (_cgdb *PageInformationSegment )readContainsRefinement ()error {_agad ,_edff :=_cgdb ._feg .ReadBit ();if _edff !=nil {return _edff ;};if _agad ==1{_cgdb ._cbec =true ;};return nil ;};func (_dgfg *SymbolDictionary )readRegionFlags ()error {var (_adfd uint64 ;
_cgbf int ;);_ ,_dabg :=_dgfg ._dbcd .ReadBits (3);if _dabg !=nil {return _dabg ;};_cgbf ,_dabg =_dgfg ._dbcd .ReadBit ();if _dabg !=nil {return _dabg ;};_dgfg .SdrTemplate =int8 (_cgbf );_adfd ,_dabg =_dgfg ._dbcd .ReadBits (2);if _dabg !=nil {return _dabg ;
};_dgfg .SdTemplate =int8 (_adfd &0xf);_cgbf ,_dabg =_dgfg ._dbcd .ReadBit ();if _dabg !=nil {return _dabg ;};if _cgbf ==1{_dgfg ._bfgfe =true ;};_cgbf ,_dabg =_dgfg ._dbcd .ReadBit ();if _dabg !=nil {return _dabg ;};if _cgbf ==1{_dgfg ._fcce =true ;};
_cgbf ,_dabg =_dgfg ._dbcd .ReadBit ();if _dabg !=nil {return _dabg ;};if _cgbf ==1{_dgfg .SdHuffAggInstanceSelection =true ;};_cgbf ,_dabg =_dgfg ._dbcd .ReadBit ();if _dabg !=nil {return _dabg ;};_dgfg .SdHuffBMSizeSelection =int8 (_cgbf );_adfd ,_dabg =_dgfg ._dbcd .ReadBits (2);
if _dabg !=nil {return _dabg ;};_dgfg .SdHuffDecodeWidthSelection =int8 (_adfd &0xf);_adfd ,_dabg =_dgfg ._dbcd .ReadBits (2);if _dabg !=nil {return _dabg ;};_dgfg .SdHuffDecodeHeightSelection =int8 (_adfd &0xf);_cgbf ,_dabg =_dgfg ._dbcd .ReadBit ();if _dabg !=nil {return _dabg ;
};if _cgbf ==1{_dgfg .UseRefinementAggregation =true ;};_cgbf ,_dabg =_dgfg ._dbcd .ReadBit ();if _dabg !=nil {return _dabg ;};if _cgbf ==1{_dgfg .IsHuffmanEncoded =true ;};return nil ;};func (_dcge *SymbolDictionary )decodeHeightClassCollectiveBitmap (_dbff int64 ,_ecae ,_gfbb uint32 )(*_gc .Bitmap ,error ){if _dbff ==0{_gcad :=_gc .New (int (_gfbb ),int (_ecae ));
var (_eacg byte ;_fbfc error ;);for _beef :=0;_beef < len (_gcad .Data );_beef ++{_eacg ,_fbfc =_dcge ._dbcd .ReadByte ();if _fbfc !=nil {return nil ,_fbfc ;};if _fbfc =_gcad .SetByte (_beef ,_eacg );_fbfc !=nil {return nil ,_fbfc ;};};return _gcad ,nil ;
};if _dcge ._abgd ==nil {_dcge ._abgd =NewGenericRegion (_dcge ._dbcd );};_dcge ._abgd .setParameters (true ,_dcge ._dbcd .StreamPosition (),_dbff ,_ecae ,_gfbb );_gcec ,_cgac :=_dcge ._abgd .GetRegionBitmap ();if _cgac !=nil {return nil ,_cgac ;};return _gcec ,nil ;
};func (_fdac *TextRegion )InitEncode (globalSymbolsMap ,localSymbolsMap map[int ]int ,comps []int ,inLL *_gc .Points ,symbols *_gc .Bitmaps ,classIDs *_dc .IntSlice ,boxes *_gc .Boxes ,width ,height ,symBits int ){_fdac .RegionInfo =&RegionSegment {BitmapWidth :uint32 (width ),BitmapHeight :uint32 (height )};
_fdac ._cdbc =globalSymbolsMap ;_fdac ._gcea =localSymbolsMap ;_fdac ._dbag =comps ;_fdac ._ccbb =inLL ;_fdac ._adcd =symbols ;_fdac ._bdad =classIDs ;_fdac ._fbgg =boxes ;_fdac ._bgaa =symBits ;};func (_fgca *GenericRefinementRegion )updateOverride ()error {if _fgca .GrAtX ==nil ||_fgca .GrAtY ==nil {return _fd .New ("\u0041\u0054\u0020\u0070\u0069\u0078\u0065\u006c\u0073\u0020\u006e\u006ft\u0020\u0073\u0065\u0074");
};if len (_fgca .GrAtX )!=len (_fgca .GrAtY ){return _fd .New ("A\u0054\u0020\u0070\u0069xe\u006c \u0069\u006e\u0063\u006f\u006es\u0069\u0073\u0074\u0065\u006e\u0074");};_fgca ._gge =make ([]bool ,len (_fgca .GrAtX ));switch _fgca .TemplateID {case 0:if _fgca .GrAtX [0]!=-1&&_fgca .GrAtY [0]!=-1{_fgca ._gge [0]=true ;
_fgca ._ea =true ;};if _fgca .GrAtX [1]!=-1&&_fgca .GrAtY [1]!=-1{_fgca ._gge [1]=true ;_fgca ._ea =true ;};case 1:_fgca ._ea =false ;};return nil ;};func (_fec *GenericRefinementRegion )getPixel (_acbe *_gc .Bitmap ,_dda ,_gfg int )int {if _dda < 0||_dda >=_acbe .Width {return 0;
};if _gfg < 0||_gfg >=_acbe .Height {return 0;};if _acbe .GetPixel (_dda ,_gfg ){return 1;};return 0;};func (_fbe *TextRegion )decodeDfs ()(int64 ,error ){if _fbe .IsHuffmanEncoded {if _fbe .SbHuffFS ==3{if _fbe ._abecc ==nil {var _dfccf error ;_fbe ._abecc ,_dfccf =_fbe .getUserTable (0);
if _dfccf !=nil {return 0,_dfccf ;};};return _fbe ._abecc .Decode (_fbe ._bdgd );};_ccge ,_bace :=_ad .GetStandardTable (6+int (_fbe .SbHuffFS ));if _bace !=nil {return 0,_bace ;};return _ccge .Decode (_fbe ._bdgd );};_ccac ,_affb :=_fbe ._fffd .DecodeInt (_fbe ._bbbe );
if _affb !=nil {return 0,_affb ;};return int64 (_ccac ),nil ;};type templater interface{form (_bef ,_cfgb ,_agg ,_cadc ,_ebag int16 )int16 ;setIndex (_fcb *_a .DecoderStats );};func (_ecag *TextRegion )decodeDT ()(_gdfc int64 ,_bbce error ){if _ecag .IsHuffmanEncoded {if _ecag .SbHuffDT ==3{_gdfc ,_bbce =_ecag ._agcc .Decode (_ecag ._bdgd );
if _bbce !=nil {return 0,_bbce ;};}else {var _bacdc _ad .Tabler ;_bacdc ,_bbce =_ad .GetStandardTable (11+int (_ecag .SbHuffDT ));if _bbce !=nil {return 0,_bbce ;};_gdfc ,_bbce =_bacdc .Decode (_ecag ._bdgd );if _bbce !=nil {return 0,_bbce ;};};}else {var _ddba int32 ;
_ddba ,_bbce =_ecag ._fffd .DecodeInt (_ecag ._gfcg );if _bbce !=nil {return ;};_gdfc =int64 (_ddba );};_gdfc *=int64 (_ecag .SbStrips );return _gdfc ,nil ;};func NewRegionSegment (r _d .StreamReader )*RegionSegment {return &RegionSegment {_fggd :r }};
type SegmentEncoder interface{Encode (_cfegc _d .BinaryWriter )(_egad int ,_ebfc error );};func (_fbfb *PageInformationSegment )Size ()int {return 19};type PatternDictionary struct{_ccf _d .StreamReader ;DataHeaderOffset int64 ;DataHeaderLength int64 ;
DataOffset int64 ;DataLength int64 ;GBAtX []int8 ;GBAtY []int8 ;IsMMREncoded bool ;HDTemplate byte ;HdpWidth byte ;HdpHeight byte ;Patterns []*_gc .Bitmap ;GrayMax uint32 ;};func (_aeaf *SymbolDictionary )decodeHeightClassDeltaHeightWithHuffman ()(int64 ,error ){switch _aeaf .SdHuffDecodeHeightSelection {case 0:_ffcc ,_ffccf :=_ad .GetStandardTable (4);
if _ffccf !=nil {return 0,_ffccf ;};return _ffcc .Decode (_aeaf ._dbcd );case 1:_eddcd ,_ccb :=_ad .GetStandardTable (5);if _ccb !=nil {return 0,_ccb ;};return _eddcd .Decode (_aeaf ._dbcd );case 3:if _aeaf ._egff ==nil {_dbbb ,_bceg :=_ad .GetStandardTable (0);
if _bceg !=nil {return 0,_bceg ;};_aeaf ._egff =_dbbb ;};return _aeaf ._egff .Decode (_aeaf ._dbcd );};return 0,nil ;};type EncodeInitializer interface{InitEncode ();};func (_baf *Header )readReferredToSegmentNumbers (_bbfa _d .StreamReader ,_bfge int )([]int ,error ){const _dbca ="\u0072\u0065\u0061\u0064R\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0054\u006f\u0053e\u0067m\u0065\u006e\u0074\u004e\u0075\u006d\u0062e\u0072\u0073";
_bbe :=make ([]int ,_bfge );if _bfge > 0{_baf .RTSegments =make ([]*Header ,_bfge );var (_ebf uint64 ;_deea error ;);for _bbea :=0;_bbea < _bfge ;_bbea ++{_ebf ,_deea =_bbfa .ReadBits (byte (_baf .referenceSize ())<<3);if _deea !=nil {return nil ,_ccc .Wrapf (_deea ,_dbca ,"\u0027\u0025\u0064\u0027 \u0072\u0065\u0066\u0065\u0072\u0072\u0065\u0064\u0020\u0073e\u0067m\u0065\u006e\u0074\u0020\u006e\u0075\u006db\u0065\u0072",_bbea );
};_bbe [_bbea ]=int (_ebf &_g .MaxInt32 );};};return _bbe ,nil ;};var (_bgad Segmenter ;_bfce =map[Type ]func ()Segmenter {TSymbolDictionary :func ()Segmenter {return &SymbolDictionary {}},TIntermediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateTextRegion :func ()Segmenter {return &TextRegion {}},TImmediateLosslessTextRegion :func ()Segmenter {return &TextRegion {}},TPatternDictionary :func ()Segmenter {return &PatternDictionary {}},TIntermediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TImmediateLosslessHalftoneRegion :func ()Segmenter {return &HalftoneRegion {}},TIntermediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateGenericRegion :func ()Segmenter {return &GenericRegion {}},TImmediateLosslessGenericRegion :func ()Segmenter {return &GenericRegion {}},TIntermediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TImmediateLosslessGenericRefinementRegion :func ()Segmenter {return &GenericRefinementRegion {}},TPageInformation :func ()Segmenter {return &PageInformationSegment {}},TEndOfPage :func ()Segmenter {return _bgad },TEndOfStrip :func ()Segmenter {return &EndOfStripe {}},TEndOfFile :func ()Segmenter {return _bgad },TProfiles :func ()Segmenter {return _bgad },TTables :func ()Segmenter {return &TableSegment {}},TExtension :func ()Segmenter {return _bgad },TBitmap :func ()Segmenter {return _bgad }};
);
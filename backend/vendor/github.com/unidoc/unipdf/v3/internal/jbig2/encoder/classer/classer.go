//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package classer ;import (_ab "github.com/unidoc/unipdf/v3/common";_d "github.com/unidoc/unipdf/v3/internal/jbig2/basic";_aa "github.com/unidoc/unipdf/v3/internal/jbig2/bitmap";_db "github.com/unidoc/unipdf/v3/internal/jbig2/errors";_b "image";_f "math";
);var _cgg bool ;const (MaxDiffWidth =2;MaxDiffHeight =2;);func Init (settings Settings )(*Classer ,error ){const _g ="\u0063\u006c\u0061s\u0073\u0065\u0072\u002e\u0049\u006e\u0069\u0074";_e :=&Classer {Settings :settings ,Widths :map[int ]int {},Heights :map[int ]int {},TemplatesSize :_d .IntsMap {},TemplateAreas :&_d .IntSlice {},ComponentPageNumbers :&_d .IntSlice {},ClassIDs :&_d .IntSlice {},ComponentsNumber :&_d .IntSlice {},CentroidPoints :&_aa .Points {},CentroidPointsTemplates :&_aa .Points {},UndilatedTemplates :&_aa .Bitmaps {},DilatedTemplates :&_aa .Bitmaps {},ClassInstances :&_aa .BitmapsArray {},FgTemplates :&_d .NumSlice {}};
if _gg :=_e .Settings .Validate ();_gg !=nil {return nil ,_db .Wrap (_gg ,_g ,"");};return _e ,nil ;};func _gca (_dac *_aa .Bitmap ,_ace ,_fbe ,_cdfe ,_df int ,_befa *_aa .Bitmap )(_acd _b .Point ,_bad error ){const _ecf ="\u0066i\u006e\u0061\u006c\u0041l\u0069\u0067\u006e\u006d\u0065n\u0074P\u006fs\u0069\u0074\u0069\u006f\u006e\u0069\u006eg";
if _dac ==nil {return _acd ,_db .Error (_ecf ,"\u0073\u006f\u0075\u0072ce\u0020\u006e\u006f\u0074\u0020\u0070\u0072\u006f\u0076\u0069\u0064\u0065\u0064");};if _befa ==nil {return _acd ,_db .Error (_ecf ,"t\u0065\u006d\u0070\u006cat\u0065 \u006e\u006f\u0074\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064");
};_gba ,_bga :=_befa .Width ,_befa .Height ;_dgg ,_gee :=_ace -_cdfe -JbAddedPixels ,_fbe -_df -JbAddedPixels ;_ab .Log .Trace ("\u0078\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0079\u003a\u0020\u0027\u0025\u0064'\u002c\u0020\u0077\u003a\u0020\u0027\u0025\u0064\u0027\u002c\u0020\u0068\u003a \u0027\u0025\u0064\u0027\u002c\u0020\u0062\u0078\u003a\u0020\u0027\u0025d'\u002c\u0020\u0062\u0079\u003a\u0020\u0027\u0025\u0064\u0027",_ace ,_fbe ,_gba ,_bga ,_dgg ,_gee );
_fade ,_bad :=_aa .Rect (_dgg ,_gee ,_gba ,_bga );if _bad !=nil {return _acd ,_db .Wrap (_bad ,_ecf ,"");};_ee ,_ ,_bad :=_dac .ClipRectangle (_fade );if _bad !=nil {_ab .Log .Error ("\u0043a\u006e\u0027\u0074\u0020\u0063\u006c\u0069\u0070\u0020\u0072\u0065c\u0074\u0061\u006e\u0067\u006c\u0065\u003a\u0020\u0025\u0076",_fade );
return _acd ,_db .Wrap (_bad ,_ecf ,"");};_ef :=_aa .New (_ee .Width ,_ee .Height );_dbd :=_f .MaxInt32 ;var _cg ,_cf ,_cc ,_af ,_cdb int ;for _cg =-1;_cg <=1;_cg ++{for _cf =-1;_cf <=1;_cf ++{if _ ,_bad =_aa .Copy (_ef ,_ee );_bad !=nil {return _acd ,_db .Wrap (_bad ,_ecf ,"");
};if _bad =_ef .RasterOperation (_cf ,_cg ,_gba ,_bga ,_aa .PixSrcXorDst ,_befa ,0,0);_bad !=nil {return _acd ,_db .Wrap (_bad ,_ecf ,"");};_cc =_ef .CountPixels ();if _cc < _dbd {_af =_cf ;_cdb =_cg ;_dbd =_cc ;};};};_acd .X =_af ;_acd .Y =_cdb ;return _acd ,nil ;
};func (_fdd *Classer )classifyRankHaus (_fgc *_aa .Boxes ,_fdb *_aa .Bitmaps ,_aac int )error {const _fggd ="\u0063\u006ca\u0073\u0073\u0069f\u0079\u0052\u0061\u006e\u006b\u0048\u0061\u0075\u0073";if _fgc ==nil {return _db .Error (_fggd ,"\u0062\u006fx\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");
};if _fdb ==nil {return _db .Error (_fggd ,"\u0070\u0069x\u0061\u0020\u006eo\u0074\u0020\u0064\u0065\u0066\u0069\u006e\u0065\u0064");};_bdd :=len (_fdb .Values );if _bdd ==0{return _db .Error (_fggd ,"e\u006dp\u0074\u0079\u0020\u006e\u0065\u0077\u0020\u0063o\u006d\u0070\u006f\u006een\u0074\u0073");
};_afb :=_fdb .CountPixels ();_efe :=_fdd .Settings .SizeHaus ;_deg :=_aa .SelCreateBrick (_efe ,_efe ,_efe /2,_efe /2,_aa .SelHit );_ccf :=&_aa .Bitmaps {Values :make ([]*_aa .Bitmap ,_bdd )};_fea :=&_aa .Bitmaps {Values :make ([]*_aa .Bitmap ,_bdd )};
var (_gaff ,_ggba ,_faa *_aa .Bitmap ;_bgd error ;);for _dgd :=0;_dgd < _bdd ;_dgd ++{_gaff ,_bgd =_fdb .GetBitmap (_dgd );if _bgd !=nil {return _db .Wrap (_bgd ,_fggd ,"");};_ggba ,_bgd =_gaff .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _bgd !=nil {return _db .Wrap (_bgd ,_fggd ,"");};_faa ,_bgd =_aa .Dilate (nil ,_ggba ,_deg );if _bgd !=nil {return _db .Wrap (_bgd ,_fggd ,"");};_ccf .Values [_bdd ]=_ggba ;_fea .Values [_bdd ]=_faa ;};_cca ,_bgd :=_aa .Centroids (_ccf .Values );if _bgd !=nil {return _db .Wrap (_bgd ,_fggd ,"");
};if _bgd =_cca .Add (_fdd .CentroidPoints );_bgd !=nil {_ab .Log .Trace ("\u004e\u006f\u0020\u0063en\u0074\u0072\u006f\u0069\u0064\u0073\u0020\u0074\u006f\u0020\u0061\u0064\u0064");};if _fdd .Settings .RankHaus ==1.0{_bgd =_fdd .classifyRankHouseOne (_fgc ,_fdb ,_ccf ,_fea ,_cca ,_aac );
}else {_bgd =_fdd .classifyRankHouseNonOne (_fgc ,_fdb ,_ccf ,_fea ,_cca ,_afb ,_aac );};if _bgd !=nil {return _db .Wrap (_bgd ,_fggd ,"");};return nil ;};const JbAddedPixels =6;func _bbfe (_bgfb *Classer ,_aba *_aa .Bitmap )*similarTemplatesFinder {return &similarTemplatesFinder {Width :_aba .Width ,Height :_aba .Height ,Classer :_bgfb };
};type Method int ;func (_cda *Settings )SetDefault (){if _cda .MaxCompWidth ==0{switch _cda .Components {case _aa .ComponentConn :_cda .MaxCompWidth =MaxConnCompWidth ;case _aa .ComponentCharacters :_cda .MaxCompWidth =MaxCharCompWidth ;case _aa .ComponentWords :_cda .MaxCompWidth =MaxWordCompWidth ;
};};if _cda .MaxCompHeight ==0{_cda .MaxCompHeight =MaxCompHeight ;};if _cda .Thresh ==0.0{_cda .Thresh =0.9;};if _cda .WeightFactor ==0.0{_cda .WeightFactor =0.75;};if _cda .RankHaus ==0.0{_cda .RankHaus =0.97;};if _cda .SizeHaus ==0{_cda .SizeHaus =2;
};};type similarTemplatesFinder struct{Classer *Classer ;Width int ;Height int ;Index int ;CurrentNumbers []int ;N int ;};func DefaultSettings ()Settings {_geg :=&Settings {};_geg .SetDefault ();return *_geg };type Classer struct{BaseIndex int ;Settings Settings ;
ComponentsNumber *_d .IntSlice ;TemplateAreas *_d .IntSlice ;Widths map[int ]int ;Heights map[int ]int ;NumberOfClasses int ;ClassInstances *_aa .BitmapsArray ;UndilatedTemplates *_aa .Bitmaps ;DilatedTemplates *_aa .Bitmaps ;TemplatesSize _d .IntsMap ;
FgTemplates *_d .NumSlice ;CentroidPoints *_aa .Points ;CentroidPointsTemplates *_aa .Points ;ClassIDs *_d .IntSlice ;ComponentPageNumbers *_d .IntSlice ;PtaUL *_aa .Points ;PtaLL *_aa .Points ;};const (MaxConnCompWidth =350;MaxCharCompWidth =350;MaxWordCompWidth =1000;
MaxCompHeight =120;);const (RankHaus Method =iota ;Correlation ;);type Settings struct{MaxCompWidth int ;MaxCompHeight int ;SizeHaus int ;RankHaus float64 ;Thresh float64 ;WeightFactor float64 ;KeepClassInstances bool ;Components _aa .Component ;Method Method ;
};func (_ggf *Classer )ComputeLLCorners ()(_fa error ){const _ea ="\u0043l\u0061\u0073\u0073\u0065\u0072\u002e\u0043\u006f\u006d\u0070\u0075t\u0065\u004c\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";if _ggf .PtaUL ==nil {return _db .Error (_ea ,"\u0055\u004c\u0020\u0043or\u006e\u0065\u0072\u0073\u0020\u006e\u006f\u0074\u0020\u0064\u0065\u0066\u0069\u006ee\u0064");
};_da :=len (*_ggf .PtaUL );_ggf .PtaLL =&_aa .Points {};var (_ec ,_ac float32 ;_be ,_dd int ;_aaf *_aa .Bitmap ;);for _edb :=0;_edb < _da ;_edb ++{_ec ,_ac ,_fa =_ggf .PtaUL .GetGeometry (_edb );if _fa !=nil {_ab .Log .Debug ("\u0047e\u0074\u0074\u0069\u006e\u0067\u0020\u0050\u0074\u0061\u0055\u004c \u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_fa );
return _db .Wrap (_fa ,_ea ,"\u0050\u0074\u0061\u0055\u004c\u0020\u0047\u0065\u006fm\u0065\u0074\u0072\u0079");};_be ,_fa =_ggf .ClassIDs .Get (_edb );if _fa !=nil {_ab .Log .Debug ("\u0047\u0065\u0074\u0074\u0069\u006e\u0067\u0020\u0043\u006c\u0061s\u0073\u0049\u0044\u0020\u0066\u0061\u0069\u006c\u0065\u0064:\u0020\u0025\u0076",_fa );
return _db .Wrap (_fa ,_ea ,"\u0043l\u0061\u0073\u0073\u0049\u0044");};_aaf ,_fa =_ggf .UndilatedTemplates .GetBitmap (_be );if _fa !=nil {_ab .Log .Debug ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0055\u006ed\u0069\u006c\u0061\u0074\u0065\u0064\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_fa );
return _db .Wrap (_fa ,_ea ,"\u0055\u006e\u0064\u0069la\u0074\u0065\u0064\u0020\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_dd =_aaf .Height ;_ggf .PtaLL .AddPoint (_ec ,_ac +float32 (_dd ));};return nil ;};func (_eec *similarTemplatesFinder )Next ()int {var (_cff ,_bag ,_dad ,_fef int ;
_ggc bool ;_fcg *_aa .Bitmap ;_fegc error ;);for {if _eec .Index >=25{return -1;};_bag =_eec .Width +TwoByTwoWalk [2*_eec .Index ];_cff =_eec .Height +TwoByTwoWalk [2*_eec .Index +1];if _cff < 1||_bag < 1{_eec .Index ++;continue ;};if len (_eec .CurrentNumbers )==0{_eec .CurrentNumbers ,_ggc =_eec .Classer .TemplatesSize .GetSlice (uint64 (_bag )*uint64 (_cff ));
if !_ggc {_eec .Index ++;continue ;};_eec .N =0;};_dad =len (_eec .CurrentNumbers );for ;_eec .N < _dad ;_eec .N ++{_fef =_eec .CurrentNumbers [_eec .N ];_fcg ,_fegc =_eec .Classer .DilatedTemplates .GetBitmap (_fef );if _fegc !=nil {_ab .Log .Debug ("\u0046\u0069\u006e\u0064\u004e\u0065\u0078\u0074\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u003a\u0020\u0074\u0065\u006d\u0070\u006c\u0061t\u0065\u0020\u006e\u006f\u0074 \u0066\u006fu\u006e\u0064\u003a\u0020");
return 0;};if _fcg .Width -2*JbAddedPixels ==_bag &&_fcg .Height -2*JbAddedPixels ==_cff {return _fef ;};};_eec .Index ++;_eec .CurrentNumbers =nil ;};};func (_gb *Classer )getULCorners (_bd *_aa .Bitmap ,_bea *_aa .Boxes )error {const _gd ="\u0067\u0065\u0074U\u004c\u0043\u006f\u0072\u006e\u0065\u0072\u0073";
if _bd ==nil {return _db .Error (_gd ,"\u006e\u0069l\u0020\u0069\u006da\u0067\u0065\u0020\u0062\u0069\u0074\u006d\u0061\u0070");};if _bea ==nil {return _db .Error (_gd ,"\u006e\u0069\u006c\u0020\u0062\u006f\u0075\u006e\u0064\u0073");};if _gb .PtaUL ==nil {_gb .PtaUL =&_aa .Points {};
};_gcc :=len (*_bea );var (_edg ,_ba ,_aae ,_bef int ;_fd ,_fad ,_dc ,_fdc float32 ;_de error ;_gf *_b .Rectangle ;_fb *_aa .Bitmap ;_dg _b .Point ;);for _def :=0;_def < _gcc ;_def ++{_edg =_gb .BaseIndex +_def ;if _fd ,_fad ,_de =_gb .CentroidPoints .GetGeometry (_edg );
_de !=nil {return _db .Wrap (_de ,_gd ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050o\u0069\u006e\u0074\u0073");};if _ba ,_de =_gb .ClassIDs .Get (_edg );_de !=nil {return _db .Wrap (_de ,_gd ,"\u0043\u006c\u0061s\u0073\u0049\u0044\u0073\u002e\u0047\u0065\u0074");
};if _dc ,_fdc ,_de =_gb .CentroidPointsTemplates .GetGeometry (_ba );_de !=nil {return _db .Wrap (_de ,_gd ,"\u0043\u0065\u006etr\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074\u0073\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073");};_geb :=_dc -_fd ;
_bae :=_fdc -_fad ;if _geb >=0{_aae =int (_geb +0.5);}else {_aae =int (_geb -0.5);};if _bae >=0{_bef =int (_bae +0.5);}else {_bef =int (_bae -0.5);};if _gf ,_de =_bea .Get (_def );_de !=nil {return _db .Wrap (_de ,_gd ,"");};_cdf ,_ga :=_gf .Min .X ,_gf .Min .Y ;
_fb ,_de =_gb .UndilatedTemplates .GetBitmap (_ba );if _de !=nil {return _db .Wrap (_de ,_gd ,"\u0055\u006e\u0064\u0069\u006c\u0061\u0074\u0065\u0064\u0054e\u006d\u0070\u006c\u0061\u0074\u0065\u0073.\u0047\u0065\u0074\u0028\u0069\u0043\u006c\u0061\u0073\u0073\u0029");
};_dg ,_de =_gca (_bd ,_cdf ,_ga ,_aae ,_bef ,_fb );if _de !=nil {return _db .Wrap (_de ,_gd ,"");};_gb .PtaUL .AddPoint (float32 (_cdf -_aae +_dg .X ),float32 (_ga -_bef +_dg .Y ));};return nil ;};func (_ffg Settings )Validate ()error {const _aab ="\u0053\u0065\u0074\u0074\u0069\u006e\u0067\u0073\u002e\u0056\u0061\u006ci\u0064\u0061\u0074\u0065";
if _ffg .Thresh < 0.4||_ffg .Thresh > 0.98{return _db .Error (_aab ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0074\u0068\u0072\u0065\u0073\u0068\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0034\u0020\u002d\u0020\u0030\u002e\u0039\u0038\u005d");
};if _ffg .WeightFactor < 0.0||_ffg .WeightFactor > 1.0{return _db .Error (_aab ,"\u006a\u0062i\u0067\u0032\u0020\u0065\u006ec\u006f\u0064\u0065\u0072\u0020w\u0065\u0069\u0067\u0068\u0074\u0020\u0066\u0061\u0063\u0074\u006f\u0072\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0030\u002e\u0030\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _ffg .RankHaus < 0.5||_ffg .RankHaus > 1.0{return _db .Error (_aab ,"\u006a\u0062\u0069\u0067\u0032\u0020\u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0072a\u006e\u006b\u0020\u0068\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065 \u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065 [\u0030\u002e\u0035\u0020\u002d\u0020\u0031\u002e\u0030\u005d");
};if _ffg .SizeHaus < 1||_ffg .SizeHaus > 10{return _db .Error (_aab ,"\u006a\u0062\u0069\u0067\u0032 \u0065\u006e\u0063\u006f\u0064\u0065\u0072\u0020\u0073\u0069\u007a\u0065\u0020h\u0061\u0075\u0073\u0020\u0076\u0061\u006c\u0075\u0065\u0020\u006e\u006f\u0074\u0020\u0069\u006e\u0020\u0072\u0061\u006e\u0067\u0065\u0020\u005b\u0031\u0020\u002d\u0020\u0031\u0030]");
};switch _ffg .Components {case _aa .ComponentConn ,_aa .ComponentCharacters ,_aa .ComponentWords :default:return _db .Error (_aab ,"\u0069n\u0076\u0061\u006c\u0069d\u0020\u0063\u006c\u0061\u0073s\u0065r\u0020c\u006f\u006d\u0070\u006f\u006e\u0065\u006et");
};return nil ;};func (_fdf *Classer )classifyRankHouseNonOne (_daf *_aa .Boxes ,_ce ,_bdb ,_fcab *_aa .Bitmaps ,_cdg *_aa .Points ,_ebd *_d .NumSlice ,_bfec int )(_gfb error ){const _acg ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_bgc ,_fcd ,_gge ,_gbf float32 ;_gce ,_aee ,_gbaf int ;_fcaa ,_bcga ,_efa ,_add ,_gdf *_aa .Bitmap ;_adge ,_gfd bool ;);_aaec :=_aa .MakePixelSumTab8 ();for _ccc :=0;_ccc < len (_ce .Values );_ccc ++{if _bcga ,_gfb =_bdb .GetBitmap (_ccc );_gfb !=nil {return _db .Wrap (_gfb ,_acg ,"b\u006d\u0073\u0031\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};if _gce ,_gfb =_ebd .GetInt (_ccc );_gfb !=nil {_ab .Log .Trace ("\u0047\u0065t\u0074\u0069\u006e\u0067 \u0046\u0047T\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u0073 \u0061\u0074\u003a\u0020\u0025\u0064\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_ccc ,_gfb );
};if _efa ,_gfb =_fcab .GetBitmap (_ccc );_gfb !=nil {return _db .Wrap (_gfb ,_acg ,"b\u006d\u0073\u0032\u002e\u0047\u0065\u0074\u0028\u0069\u0029");};if _bgc ,_fcd ,_gfb =_cdg .GetGeometry (_ccc );_gfb !=nil {return _db .Wrapf (_gfb ,_acg ,"\u0070t\u0061[\u0069\u005d\u002e\u0047\u0065\u006f\u006d\u0065\u0074\u0072\u0079");
};_bbf :=len (_fdf .UndilatedTemplates .Values );_adge =false ;_befg :=_bbfe (_fdf ,_bcga );for _gbaf =_befg .Next ();_gbaf > -1;{if _add ,_gfb =_fdf .UndilatedTemplates .GetBitmap (_gbaf );_gfb !=nil {return _db .Wrap (_gfb ,_acg ,"\u0070\u0069\u0078\u0061\u0074\u002e\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");
};if _aee ,_gfb =_fdf .FgTemplates .GetInt (_gbaf );_gfb !=nil {_ab .Log .Trace ("\u0047\u0065\u0074\u0074\u0069\u006eg\u0020\u0046\u0047\u0054\u0065\u006d\u0070\u006c\u0061\u0074\u0065\u005b\u0025d\u005d\u0020\u0066\u0061\u0069\u006c\u0065d\u003a\u0020\u0025\u0076",_gbaf ,_gfb );
};if _gdf ,_gfb =_fdf .DilatedTemplates .GetBitmap (_gbaf );_gfb !=nil {return _db .Wrap (_gfb ,_acg ,"\u0070\u0069\u0078\u0061\u0074\u0064\u005b\u0069\u0043l\u0061\u0073\u0073\u005d");};if _gge ,_gbf ,_gfb =_fdf .CentroidPointsTemplates .GetGeometry (_gbaf );
_gfb !=nil {return _db .Wrap (_gfb ,_acg ,"\u0043\u0065\u006et\u0072\u006f\u0069\u0064P\u006f\u0069\u006e\u0074\u0073\u0054\u0065m\u0070\u006c\u0061\u0074\u0065\u0073\u005b\u0069\u0043\u006c\u0061\u0073\u0073\u005d");};_gfd ,_gfb =_aa .RankHausTest (_bcga ,_efa ,_add ,_gdf ,_bgc -_gge ,_fcd -_gbf ,MaxDiffWidth ,MaxDiffHeight ,_gce ,_aee ,float32 (_fdf .Settings .RankHaus ),_aaec );
if _gfb !=nil {return _db .Wrap (_gfb ,_acg ,"");};if _gfd {_adge =true ;if _gfb =_fdf .ClassIDs .Add (_gbaf );_gfb !=nil {return _db .Wrap (_gfb ,_acg ,"");};if _gfb =_fdf .ComponentPageNumbers .Add (_bfec );_gfb !=nil {return _db .Wrap (_gfb ,_acg ,"");
};if _fdf .Settings .KeepClassInstances {_cfef ,_edgaa :=_fdf .ClassInstances .GetBitmaps (_gbaf );if _edgaa !=nil {return _db .Wrap (_edgaa ,_acg ,"\u0063\u002e\u0050\u0069\u0078\u0061\u0061\u002e\u0047\u0065\u0074B\u0069\u0074\u006d\u0061\u0070\u0073\u0028\u0069\u0043\u006ca\u0073\u0073\u0029");
};if _fcaa ,_edgaa =_ce .GetBitmap (_ccc );_edgaa !=nil {return _db .Wrap (_edgaa ,_acg ,"\u0070i\u0078\u0061\u005b\u0069\u005d");};_cfef .Values =append (_cfef .Values ,_fcaa );_eead ,_edgaa :=_daf .Get (_ccc );if _edgaa !=nil {return _db .Wrap (_edgaa ,_acg ,"b\u006f\u0078\u0061\u002e\u0047\u0065\u0074\u0028\u0069\u0029");
};_cfef .Boxes =append (_cfef .Boxes ,_eead );};break ;};};if !_adge {if _gfb =_fdf .ClassIDs .Add (_bbf );_gfb !=nil {return _db .Wrap (_gfb ,_acg ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _gfb =_fdf .ComponentPageNumbers .Add (_bfec );_gfb !=nil {return _db .Wrap (_gfb ,_acg ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_gced :=&_aa .Bitmaps {};_fcaa =_ce .Values [_ccc ];_gced .AddBitmap (_fcaa );_feg ,_ddc :=_fcaa .Width ,_fcaa .Height ;_fdf .TemplatesSize .Add (uint64 (_feg )*uint64 (_ddc ),_bbf );_fddf ,_fbg :=_daf .Get (_ccc );if _fbg !=nil {return _db .Wrap (_fbg ,_acg ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_gced .AddBox (_fddf );_fdf .ClassInstances .AddBitmaps (_gced );_fdf .CentroidPointsTemplates .AddPoint (_bgc ,_fcd );_fdf .UndilatedTemplates .AddBitmap (_bcga );_fdf .DilatedTemplates .AddBitmap (_efa );_fdf .FgTemplates .AddInt (_gce );};};_fdf .NumberOfClasses =len (_fdf .UndilatedTemplates .Values );
return nil ;};func (_adg *Classer )classifyRankHouseOne (_baf *_aa .Boxes ,_dege ,_eb ,_eea *_aa .Bitmaps ,_aea *_aa .Points ,_egf int )(_eae error ){const _agb ="\u0043\u006c\u0061\u0073s\u0065\u0072\u002e\u0063\u006c\u0061\u0073\u0073\u0069\u0066y\u0052a\u006e\u006b\u0048\u006f\u0075\u0073\u0065O\u006e\u0065";
var (_fdcb ,_adc ,_bfa ,_ff float32 ;_fbb int ;_dfc ,_dcg ,_bfea ,_aed ,_eef *_aa .Bitmap ;_bda ,_geef bool ;);for _efd :=0;_efd < len (_dege .Values );_efd ++{_dcg =_eb .Values [_efd ];_bfea =_eea .Values [_efd ];_fdcb ,_adc ,_eae =_aea .GetGeometry (_efd );
if _eae !=nil {return _db .Wrapf (_eae ,_agb ,"\u0066\u0069\u0072\u0073\u0074\u0020\u0067\u0065\u006fm\u0065\u0074\u0072\u0079");};_abg :=len (_adg .UndilatedTemplates .Values );_bda =false ;_edbc :=_bbfe (_adg ,_dcg );for _fbb =_edbc .Next ();_fbb > -1;
{_aed ,_eae =_adg .UndilatedTemplates .GetBitmap (_fbb );if _eae !=nil {return _db .Wrap (_eae ,_agb ,"\u0062\u006d\u0033");};_eef ,_eae =_adg .DilatedTemplates .GetBitmap (_fbb );if _eae !=nil {return _db .Wrap (_eae ,_agb ,"\u0062\u006d\u0034");};_bfa ,_ff ,_eae =_adg .CentroidPointsTemplates .GetGeometry (_fbb );
if _eae !=nil {return _db .Wrap (_eae ,_agb ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0054\u0065\u006d\u0070l\u0061\u0074\u0065\u0073");};_geef ,_eae =_aa .HausTest (_dcg ,_bfea ,_aed ,_eef ,_fdcb -_bfa ,_adc -_ff ,MaxDiffWidth ,MaxDiffHeight );
if _eae !=nil {return _db .Wrap (_eae ,_agb ,"");};if _geef {_bda =true ;if _eae =_adg .ClassIDs .Add (_fbb );_eae !=nil {return _db .Wrap (_eae ,_agb ,"");};if _eae =_adg .ComponentPageNumbers .Add (_egf );_eae !=nil {return _db .Wrap (_eae ,_agb ,"");
};if _adg .Settings .KeepClassInstances {_bdda ,_bfg :=_adg .ClassInstances .GetBitmaps (_fbb );if _bfg !=nil {return _db .Wrap (_bfg ,_agb ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_dfc ,_bfg =_dege .GetBitmap (_efd );if _bfg !=nil {return _db .Wrap (_bfg ,_agb ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");
};_bdda .AddBitmap (_dfc );_acc ,_bfg :=_baf .Get (_efd );if _bfg !=nil {return _db .Wrap (_bfg ,_agb ,"\u004be\u0065\u0070\u0050\u0069\u0078\u0061a");};_bdda .AddBox (_acc );};break ;};};if !_bda {if _eae =_adg .ClassIDs .Add (_abg );_eae !=nil {return _db .Wrap (_eae ,_agb ,"");
};if _eae =_adg .ComponentPageNumbers .Add (_egf );_eae !=nil {return _db .Wrap (_eae ,_agb ,"");};_dgb :=&_aa .Bitmaps {};_dfc ,_eae =_dege .GetBitmap (_efd );if _eae !=nil {return _db .Wrap (_eae ,_agb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_dgb .Values =append (_dgb .Values ,_dfc );
_cbd ,_ddf :=_dfc .Width ,_dfc .Height ;_adg .TemplatesSize .Add (uint64 (_ddf )*uint64 (_cbd ),_abg );_daa ,_bddb :=_baf .Get (_efd );if _bddb !=nil {return _db .Wrap (_bddb ,_agb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_dgb .AddBox (_daa );_adg .ClassInstances .AddBitmaps (_dgb );
_adg .CentroidPointsTemplates .AddPoint (_fdcb ,_adc );_adg .UndilatedTemplates .AddBitmap (_dcg );_adg .DilatedTemplates .AddBitmap (_bfea );};};return nil ;};var TwoByTwoWalk =[]int {0,0,0,1,-1,0,0,-1,1,0,-1,1,1,1,-1,-1,1,-1,0,-2,2,0,0,2,-2,0,-1,-2,1,-2,2,-1,2,1,1,2,-1,2,-2,1,-2,-1,-2,-2,2,-2,2,2,-2,2};
func (_eg *Classer )verifyMethod (_ca Method )error {if _ca !=RankHaus &&_ca !=Correlation {return _db .Error ("\u0076\u0065\u0072i\u0066\u0079\u004d\u0065\u0074\u0068\u006f\u0064","\u0069\u006e\u0076\u0061li\u0064\u0020\u0063\u006c\u0061\u0073\u0073\u0065\u0072\u0020\u006d\u0065\u0074\u0068o\u0064");
};return nil ;};func (_ag *Classer )AddPage (inputPage *_aa .Bitmap ,pageNumber int ,method Method )(_bf error ){const _gc ="\u0043l\u0061s\u0073\u0065\u0072\u002e\u0041\u0064\u0064\u0050\u0061\u0067\u0065";_ag .Widths [pageNumber ]=inputPage .Width ;_ag .Heights [pageNumber ]=inputPage .Height ;
if _bf =_ag .verifyMethod (method );_bf !=nil {return _db .Wrap (_bf ,_gc ,"");};_fg ,_ed ,_bf :=inputPage .GetComponents (_ag .Settings .Components ,_ag .Settings .MaxCompWidth ,_ag .Settings .MaxCompHeight );if _bf !=nil {return _db .Wrap (_bf ,_gc ,"");
};_ab .Log .Debug ("\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074s\u003a\u0020\u0025\u0076",_fg );if _bf =_ag .addPageComponents (inputPage ,_ed ,_fg ,pageNumber ,method );_bf !=nil {return _db .Wrap (_bf ,_gc ,"");};return nil ;};func (_bdg *Classer )classifyCorrelation (_fe *_aa .Boxes ,_bfd *_aa .Bitmaps ,_fed int )error {const _gbb ="\u0063\u006c\u0061\u0073si\u0066\u0079\u0043\u006f\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e";
if _fe ==nil {return _db .Error (_gbb ,"\u006e\u0065\u0077\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u0020\u0062\u006f\u0075\u006e\u0064\u0069\u006e\u0067\u0020\u0062o\u0078\u0065\u0073\u0020\u006eo\u0074\u0020f\u006f\u0075\u006e\u0064");
};if _bfd ==nil {return _db .Error (_gbb ,"\u006e\u0065wC\u006f\u006d\u0070o\u006e\u0065\u006e\u0074s b\u0069tm\u0061\u0070\u0020\u0061\u0072\u0072\u0061y \u006e\u006f\u0074\u0020\u0066\u006f\u0075n\u0064");};_egc :=len (_bfd .Values );if _egc ==0{_ab .Log .Debug ("\u0063l\u0061\u0073s\u0069\u0066\u0079C\u006f\u0072\u0072\u0065\u006c\u0061\u0074i\u006f\u006e\u0020\u002d\u0020\u0070r\u006f\u0076\u0069\u0064\u0065\u0064\u0020\u0070\u0069\u0078\u0061s\u0020\u0069\u0073\u0020\u0065\u006d\u0070\u0074\u0079");
return nil ;};var (_acde ,_efg *_aa .Bitmap ;_cfe error ;);_ae :=&_aa .Bitmaps {Values :make ([]*_aa .Bitmap ,_egc )};for _gfe ,_gdd :=range _bfd .Values {_efg ,_cfe =_gdd .AddBorderGeneral (JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,JbAddedPixels ,0);
if _cfe !=nil {return _db .Wrap (_cfe ,_gbb ,"");};_ae .Values [_gfe ]=_efg ;};_gaf :=_bdg .FgTemplates ;_gde :=_aa .MakePixelSumTab8 ();_dab :=_aa .MakePixelCentroidTab8 ();_bcg :=make ([]int ,_egc );_bcf :=make ([][]int ,_egc );_aeb :=_aa .Points (make ([]_aa .Point ,_egc ));
_bbd :=&_aeb ;var (_gae ,_ddb int ;_bgf ,_eab ,_bcfg int ;_acb ,_edga int ;_bdf byte ;);for _ead ,_abe :=range _ae .Values {_bcf [_ead ]=make ([]int ,_abe .Height );_gae =0;_ddb =0;_eab =(_abe .Height -1)*_abe .RowStride ;_bgf =0;for _edga =_abe .Height -1;
_edga >=0;_edga ,_eab =_edga -1,_eab -_abe .RowStride {_bcf [_ead ][_edga ]=_bgf ;_bcfg =0;for _acb =0;_acb < _abe .RowStride ;_acb ++{_bdf =_abe .Data [_eab +_acb ];_bcfg +=_gde [_bdf ];_gae +=_dab [_bdf ]+_acb *8*_gde [_bdf ];};_bgf +=_bcfg ;_ddb +=_bcfg *_edga ;
};_bcg [_ead ]=_bgf ;if _bgf > 0{(*_bbd )[_ead ]=_aa .Point {X :float32 (_gae )/float32 (_bgf ),Y :float32 (_ddb )/float32 (_bgf )};}else {(*_bbd )[_ead ]=_aa .Point {X :float32 (_abe .Width )/float32 (2),Y :float32 (_abe .Height )/float32 (2)};};};if _cfe =_bdg .CentroidPoints .Add (_bbd );
_cfe !=nil {return _db .Wrap (_cfe ,_gbb ,"\u0063\u0065\u006et\u0072\u006f\u0069\u0064\u0020\u0061\u0064\u0064");};var (_eff ,_beg ,_bfe int ;_ad float64 ;_fbc ,_gga ,_aec ,_cga float32 ;_fca ,_aeba _aa .Point ;_efb bool ;_dff *similarTemplatesFinder ;
_abf int ;_eac *_aa .Bitmap ;_ggb *_b .Rectangle ;_edc *_aa .Bitmaps ;);for _abf ,_efg =range _ae .Values {_beg =_bcg [_abf ];if _fbc ,_gga ,_cfe =_bbd .GetGeometry (_abf );_cfe !=nil {return _db .Wrap (_cfe ,_gbb ,"\u0070t\u0061\u0020\u002d\u0020\u0069");
};_efb =false ;_bca :=len (_bdg .UndilatedTemplates .Values );_dff =_bbfe (_bdg ,_efg );for _fec :=_dff .Next ();_fec > -1;{if _eac ,_cfe =_bdg .UndilatedTemplates .GetBitmap (_fec );_cfe !=nil {return _db .Wrap (_cfe ,_gbb ,"\u0075\u006e\u0069dl\u0061\u0074\u0065\u0064\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0062\u006d\u0032");
};if _bfe ,_cfe =_gaf .GetInt (_fec );_cfe !=nil {_ab .Log .Trace ("\u0046\u0047\u0020T\u0065\u006d\u0070\u006ca\u0074\u0065\u0020\u005b\u0069\u0063\u006ca\u0073\u0073\u005d\u0020\u0066\u0061\u0069\u006c\u0065\u0064\u003a\u0020\u0025\u0076",_cfe );};if _aec ,_cga ,_cfe =_bdg .CentroidPointsTemplates .GetGeometry (_fec );
_cfe !=nil {return _db .Wrap (_cfe ,_gbb ,"\u0043\u0065\u006e\u0074\u0072\u006f\u0069\u0064\u0050\u006f\u0069\u006e\u0074T\u0065\u006d\u0070\u006c\u0061\u0074e\u0073\u005b\u0069\u0063\u006c\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u00782\u002c\u0079\u0032\u0020");
};if _bdg .Settings .WeightFactor > 0.0{if _eff ,_cfe =_bdg .TemplateAreas .Get (_fec );_cfe !=nil {_ab .Log .Trace ("\u0054\u0065\u006dp\u006c\u0061\u0074\u0065A\u0072\u0065\u0061\u0073\u005b\u0069\u0063l\u0061\u0073\u0073\u005d\u0020\u003d\u0020\u0061\u0072\u0065\u0061\u0020\u0025\u0076",_cfe );
};_ad =_bdg .Settings .Thresh +(1.0-_bdg .Settings .Thresh )*_bdg .Settings .WeightFactor *float64 (_bfe )/float64 (_eff );}else {_ad =_bdg .Settings .Thresh ;};_dee ,_fgg :=_aa .CorrelationScoreThresholded (_efg ,_eac ,_beg ,_bfe ,_fca .X -_aeba .X ,_fca .Y -_aeba .Y ,MaxDiffWidth ,MaxDiffHeight ,_gde ,_bcf [_abf ],float32 (_ad ));
if _fgg !=nil {return _db .Wrap (_fgg ,_gbb ,"");};if _cgg {var (_cb ,_dcf float64 ;_dcb ,_faba int ;);_cb ,_fgg =_aa .CorrelationScore (_efg ,_eac ,_beg ,_bfe ,_fbc -_aec ,_gga -_cga ,MaxDiffWidth ,MaxDiffHeight ,_gde );if _fgg !=nil {return _db .Wrap (_fgg ,_gbb ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_dcf ,_fgg =_aa .CorrelationScoreSimple (_efg ,_eac ,_beg ,_bfe ,_fbc -_aec ,_gga -_cga ,MaxDiffWidth ,MaxDiffHeight ,_gde );if _fgg !=nil {return _db .Wrap (_fgg ,_gbb ,"d\u0065\u0062\u0075\u0067Co\u0072r\u0065\u006c\u0061\u0074\u0069o\u006e\u0053\u0063\u006f\u0072\u0065");
};_dcb =int (_f .Sqrt (_cb *float64 (_beg )*float64 (_bfe )));_faba =int (_f .Sqrt (_dcf *float64 (_beg )*float64 (_bfe )));if (_cb >=_ad )!=(_dcf >=_ad ){return _db .Errorf (_gbb ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043\u006f\u0072r\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020\u0073\u0063\u006f\u0072\u0065\u0020\u006d\u0069\u0073\u006d\u0061\u0074\u0063\u0068\u0020-\u0020\u0025d\u0028\u00250\u002e\u0034\u0066\u002c\u0020\u0025\u0076\u0029\u0020\u0076\u0073\u0020\u0025d(\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0076)\u0020\u0025\u0030\u002e\u0034\u0066",_dcb ,_cb ,_cb >=_ad ,_faba ,_dcf ,_dcf >=_ad ,_cb -_dcf );
};if _cb >=_ad !=_dee {return _db .Errorf (_gbb ,"\u0064\u0065\u0062\u0075\u0067\u0020\u0043o\u0072\u0072\u0065\u006c\u0061\u0074\u0069\u006f\u006e \u0073\u0063\u006f\u0072\u0065 \u004d\u0069\u0073\u006d\u0061t\u0063\u0068 \u0062\u0065\u0074w\u0065\u0065\u006e\u0020\u0063\u006frr\u0065\u006c\u0061\u0074\u0069\u006f\u006e\u0020/\u0020\u0074\u0068\u0072\u0065s\u0068\u006f\u006c\u0064\u002e\u0020\u0043\u006f\u006dpa\u0072\u0069\u0073\u006f\u006e:\u0020\u0025\u0030\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u002c\u0020\u0025\u0064\u0029\u0020\u003e\u003d\u0020\u00250\u002e\u0034\u0066\u0028\u0025\u0030\u002e\u0034\u0066\u0029\u0020\u0076\u0073\u0020\u0025\u0076",_cb ,_cb *float64 (_beg )*float64 (_bfe ),_dcb ,_ad ,float32 (_ad )*float32 (_beg )*float32 (_bfe ),_dee );
};};if _dee {_efb =true ;if _fgg =_bdg .ClassIDs .Add (_fec );_fgg !=nil {return _db .Wrap (_fgg ,_gbb ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");};if _fgg =_bdg .ComponentPageNumbers .Add (_fed );_fgg !=nil {return _db .Wrap (_fgg ,_gbb ,"\u006f\u0076\u0065\u0072\u0054\u0068\u0072\u0065\u0073\u0068\u006f\u006c\u0064");
};if _bdg .Settings .KeepClassInstances {if _acde ,_fgg =_bfd .GetBitmap (_abf );_fgg !=nil {return _db .Wrap (_fgg ,_gbb ,"\u004b\u0065\u0065\u0070Cl\u0061\u0073\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065\u0073\u0020\u002d \u0069");};if _edc ,_fgg =_bdg .ClassInstances .GetBitmaps (_fec );
_fgg !=nil {return _db .Wrap (_fgg ,_gbb ,"K\u0065\u0065\u0070\u0043\u006c\u0061s\u0073\u0049\u006e\u0073\u0074\u0061\u006e\u0063\u0065s\u0020\u002d\u0020i\u0043l\u0061\u0073\u0073");};_edc .AddBitmap (_acde );if _ggb ,_fgg =_fe .Get (_abf );_fgg !=nil {return _db .Wrap (_fgg ,_gbb ,"\u004be\u0065p\u0043\u006c\u0061\u0073\u0073I\u006e\u0073t\u0061\u006e\u0063\u0065\u0073");
};_edc .AddBox (_ggb );};break ;};};if !_efb {if _cfe =_bdg .ClassIDs .Add (_bca );_cfe !=nil {return _db .Wrap (_cfe ,_gbb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};if _cfe =_bdg .ComponentPageNumbers .Add (_fed );_cfe !=nil {return _db .Wrap (_cfe ,_gbb ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};_edc =&_aa .Bitmaps {};if _acde ,_cfe =_bfd .GetBitmap (_abf );_cfe !=nil {return _db .Wrap (_cfe ,_gbb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_edc .AddBitmap (_acde );_eag ,_dfe :=_acde .Width ,_acde .Height ;_gda :=uint64 (_dfe )*uint64 (_eag );
_bdg .TemplatesSize .Add (_gda ,_bca );if _ggb ,_cfe =_fe .Get (_abf );_cfe !=nil {return _db .Wrap (_cfe ,_gbb ,"\u0021\u0066\u006f\u0075\u006e\u0064");};_edc .AddBox (_ggb );_bdg .ClassInstances .AddBitmaps (_edc );_bdg .CentroidPointsTemplates .AddPoint (_fbc ,_gga );
_bdg .FgTemplates .AddInt (_beg );_bdg .UndilatedTemplates .AddBitmap (_acde );_eff =(_efg .Width -2*JbAddedPixels )*(_efg .Height -2*JbAddedPixels );if _cfe =_bdg .TemplateAreas .Add (_eff );_cfe !=nil {return _db .Wrap (_cfe ,_gbb ,"\u0021\u0066\u006f\u0075\u006e\u0064");
};};};_bdg .NumberOfClasses =len (_bdg .UndilatedTemplates .Values );return nil ;};func (_bc *Classer )addPageComponents (_fc *_aa .Bitmap ,_bb *_aa .Boxes ,_c *_aa .Bitmaps ,_cd int ,_ge Method )error {const _ddg ="\u0043l\u0061\u0073\u0073\u0065r\u002e\u0041\u0064\u0064\u0050a\u0067e\u0043o\u006d\u0070\u006f\u006e\u0065\u006e\u0074s";
if _fc ==nil {return _db .Error (_ddg ,"\u006e\u0069\u006c\u0020\u0069\u006e\u0070\u0075\u0074 \u0070\u0061\u0067\u0065");};if _bb ==nil ||_c ==nil ||len (*_bb )==0{_ab .Log .Trace ("\u0041\u0064\u0064P\u0061\u0067\u0065\u0043\u006f\u006d\u0070\u006f\u006e\u0065\u006e\u0074\u0073\u003a\u0020\u0025\u0073\u002e\u0020\u004e\u006f\u0020\u0063\u006f\u006d\u0070\u006f\u006e\u0065n\u0074\u0073\u0020\u0066\u006f\u0075\u006e\u0064",_fc );
return nil ;};var _fab error ;switch _ge {case RankHaus :_fab =_bc .classifyRankHaus (_bb ,_c ,_cd );case Correlation :_fab =_bc .classifyCorrelation (_bb ,_c ,_cd );default:_ab .Log .Debug ("\u0055\u006ek\u006e\u006f\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064\u003a\u0020'%\u0076\u0027",_ge );
return _db .Error (_ddg ,"\u0075\u006e\u006bno\u0077\u006e\u0020\u0063\u006c\u0061\u0073\u0073\u0069\u0066\u0079\u0020\u006d\u0065\u0074\u0068\u006f\u0064");};if _fab !=nil {return _db .Wrap (_fab ,_ddg ,"");};if _fab =_bc .getULCorners (_fc ,_bb );_fab !=nil {return _db .Wrap (_fab ,_ddg ,"");
};_bg :=len (*_bb );_bc .BaseIndex +=_bg ;if _fab =_bc .ComponentsNumber .Add (_bg );_fab !=nil {return _db .Wrap (_fab ,_ddg ,"");};return nil ;};
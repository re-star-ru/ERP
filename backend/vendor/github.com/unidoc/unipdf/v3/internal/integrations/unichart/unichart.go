//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package unichart ;import (_e "bytes";_b "fmt";_ea "github.com/unidoc/unichart/render";_g "github.com/unidoc/unipdf/v3/common";_ag "github.com/unidoc/unipdf/v3/contentstream";_dg "github.com/unidoc/unipdf/v3/contentstream/draw";_a "github.com/unidoc/unipdf/v3/core";
_d "github.com/unidoc/unipdf/v3/model";_c "image/color";_bd "io";_bg "math";);func _gff (_fff _c .Color )(uint8 ,uint8 ,uint8 ,uint8 ){_agf ,_bbb ,_gba ,_fcg :=_fff .RGBA ();return uint8 (_agf >>8),uint8 (_bbb >>8),uint8 (_gba >>8),uint8 (_fcg >>8);};func (_ge *Renderer )GetDPI ()float64 {return _ge ._ce };
func (_cf *Renderer )SetFillColor (color _c .Color ){_cf ._bga =color ;_ac ,_gb ,_ga ,_ :=_gca (color );_cf ._ba .Add_rg (_ac ,_gb ,_ga );};func (_aa *Renderer )ArcTo (cx ,cy int ,rx ,ry ,startAngle ,deltaAngle float64 ){startAngle =_bab (2.0*_bg .Pi -startAngle );
deltaAngle =_bab (-deltaAngle );_dda ,_aff :=deltaAngle ,1;if _bg .Abs (deltaAngle )> 90.0{_aff =int (_bg .Ceil (_bg .Abs (deltaAngle )/90.0));_dda =deltaAngle /float64 (_aff );};var (_cbd =_aba (_dda /2);_fb =_bg .Abs (4.0/3.0*(1.0-_bg .Cos (_cbd ))/_bg .Sin (_cbd ));
_fbd =float64 (cx );_bdd =float64 (cy ););for _edb :=0;_edb < _aff ;_edb ++{_dbd :=_aba (startAngle +float64 (_edb )*_dda );_fgc :=_aba (startAngle +float64 (_edb +1)*_dda );_dgf :=_bg .Cos (_dbd );_efc :=_bg .Cos (_fgc );_bgb :=_bg .Sin (_dbd );_cc :=_bg .Sin (_fgc );
var _edbf []float64 ;if _dda > 0{_edbf =[]float64 {_fbd +rx *_dgf ,_bdd -ry *_bgb ,_fbd +rx *(_dgf -_fb *_bgb ),_bdd -ry *(_bgb +_fb *_dgf ),_fbd +rx *(_efc +_fb *_cc ),_bdd -ry *(_cc -_fb *_efc ),_fbd +rx *_efc ,_bdd -ry *_cc };}else {_edbf =[]float64 {_fbd +rx *_dgf ,_bdd -ry *_bgb ,_fbd +rx *(_dgf +_fb *_bgb ),_bdd -ry *(_bgb -_fb *_dgf ),_fbd +rx *(_efc -_fb *_cc ),_bdd -ry *(_cc +_fb *_efc ),_fbd +rx *_efc ,_bdd -ry *_cc };
};if _edb ==0{_aa ._ba .Add_l (_edbf [0],_edbf [1]);};_aa ._ba .Add_c (_edbf [2],_edbf [3],_edbf [4],_edbf [5],_edbf [6],_edbf [7]);};};func (_cg *Renderer )QuadCurveTo (cx ,cy ,x ,y int ){_cg ._ba .Add_v (float64 (x ),float64 (y ),float64 (cx ),float64 (cy ));
};func (_eag *Renderer )MeasureText (text string )_ea .Box {_gc :=_eag ._fg ;_da ,_baa :=_eag ._dd .GetFontDescriptor ();if _baa !=nil {_g .Log .Debug ("W\u0041\u0052\u004e\u003a\u0020\u0055n\u0061\u0062\u006c\u0065\u0020\u0074o\u0020\u0067\u0065\u0074\u0020\u0066\u006fn\u0074\u0020\u0064\u0065\u0073\u0063\u0072\u0069\u0070\u0074o\u0072");
}else {_agg ,_bece :=_da .GetCapHeight ();if _bece !=nil {_g .Log .Debug ("\u0057\u0041\u0052\u004e\u003a\u0020\u0055\u006e\u0061\u0062\u006c\u0065\u0020t\u006f\u0020\u0067\u0065\u0074\u0020f\u006f\u006e\u0074\u0020\u0063\u0061\u0070\u0020\u0068\u0065\u0069\u0067\u0068t\u003a\u0020\u0025\u0076",_bece );
}else {_gc =_agg /1000.0*_eag ._fg ;};};var (_fee =0.0;_edc =_eag .wrapText (text ););for _ ,_eca :=range _edc {if _ddea :=_eag .getTextWidth (_eca );_ddea > _fee {_fee =_ddea ;};};_defc :=_ea .NewBox (0,0,int (_fee ),int (_gc ));if _ede :=_eag ._gd ;_ede !=0{_defc =_defc .Corners ().Rotate (_ede ).Box ();
};return _defc ;};func (_dde *Renderer )FillStroke (){_dde ._ba .Add_B ()};func (_be *Renderer )SetFont (font _ea .Font ){_cbf ,_bec :=font .(*_d .PdfFont );if !_bec {_g .Log .Debug ("\u0045R\u0052\u004f\u0052\u003a\u0020\u0069\u006e\u0076\u0061\u006c\u0069d\u0020\u0066\u006f\u006e\u0074\u0020\u0074\u0079\u0070\u0065");
return ;};_eg ,_bec :=_be ._de [_cbf ];if !_bec {_eg =_eea ("\u0046\u006f\u006e\u0074",1,_be ._fd .HasFontByName );if _ae :=_be ._fd .SetFontByName (_eg ,_cbf .ToPdfObject ());_ae !=nil {_g .Log .Debug ("\u0045\u0052\u0052\u004f\u0052:\u0020\u0063\u006f\u0075\u006c\u0064\u0020\u006e\u006f\u0074\u0020\u0061\u0064d\u0020\u0066\u006f\u006e\u0074\u0020\u0025\u0076\u0020\u0074\u006f\u0020\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u0073",_cbf );
};_be ._de [_cbf ]=_eg ;};_be ._ba .Add_Tf (_eg ,_be ._fg );_be ._dd =_cbf ;};type Renderer struct{_fc int ;_cb int ;_ce float64 ;_ba *_ag .ContentCreator ;_fd *_d .PdfPageResources ;_bga _c .Color ;_af _c .Color ;_ed float64 ;_dd *_d .PdfFont ;_fg float64 ;
_ec _c .Color ;_gd float64 ;_de map[*_d .PdfFont ]_a .PdfObjectName ;};func _bab (_bcg float64 )float64 {return _bcg *180/_bg .Pi };func NewRenderer (cc *_ag .ContentCreator ,res *_d .PdfPageResources )func (int ,int )(_ea .Renderer ,error ){return func (_ee ,_def int )(_ea .Renderer ,error ){_fe :=&Renderer {_fc :_ee ,_cb :_def ,_ce :72,_ba :cc ,_fd :res ,_de :map[*_d .PdfFont ]_a .PdfObjectName {}};
_fe .ResetStyle ();return _fe ,nil ;};};func (_ab *Renderer )SetStrokeColor (color _c .Color ){_ab ._af =color ;_feg ,_bda ,_cbb ,_ :=_gca (color );_ab ._ba .Add_RG (_feg ,_bda ,_cbb );};func (_bb *Renderer )wrapText (_agd string )[]string {var (_gef []string ;
_dgce []rune ;);for _ ,_efb :=range _agd {if _efb =='\n'{_gef =append (_gef ,string (_dgce ));_dgce =[]rune {};continue ;};_dgce =append (_dgce ,_efb );};if len (_dgce )> 0{_gef =append (_gef ,string (_dgce ));};return _gef ;};func (_gdg *Renderer )Fill (){_gdg ._ba .Add_f ()};
func (_db *Renderer )SetDPI (dpi float64 ){_db ._ce =dpi };func (_cba *Renderer )getTextWidth (_eef string )float64 {var _dcd float64 ;for _ ,_eec :=range _eef {_abe ,_fdde :=_cba ._dd .GetRuneMetrics (_eec );if !_fdde {_g .Log .Debug ("\u0045\u0052\u0052OR\u003a\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006fr\u0074e\u0064 \u0072u\u006e\u0065\u0020\u0025\u0076\u0020\u0069\u006e\u0020\u0066\u006f\u006e\u0074",_eec );
};_dcd +=_abe .Wx ;};return _cba ._fg *_dcd /1000.0;};func (_dff *Renderer )LineTo (x ,y int ){_dff ._ba .Add_l (float64 (x ),float64 (y ))};func (_cee *Renderer )SetStrokeWidth (width float64 ){_cee ._ed =width ;_cee ._ba .Add_w (width )};func (_ad *Renderer )SetTextRotation (radians float64 ){_ad ._gd =_bab (-radians )};
func (_dca *Renderer )ClearTextRotation (){_dca ._gd =0};func (_acd *Renderer )Circle (radius float64 ,x ,y int ){_cd :=radius ;if _cec :=_acd ._ed ;_cec !=0{_cd -=_cec /2;};_gbd :=_cd *0.551784;_dc :=_dg .CubicBezierPath {Curves :[]_dg .CubicBezierCurve {_dg .NewCubicBezierCurve (-_cd ,0,-_cd ,_gbd ,-_gbd ,_cd ,0,_cd ),_dg .NewCubicBezierCurve (0,_cd ,_gbd ,_cd ,_cd ,_gbd ,_cd ,0),_dg .NewCubicBezierCurve (_cd ,0,_cd ,-_gbd ,_gbd ,-_cd ,0,-_cd ),_dg .NewCubicBezierCurve (0,-_cd ,-_gbd ,-_cd ,-_cd ,-_gbd ,-_cd ,0)}};
if _ff :=_acd ._ed ;_ff !=0{_dc =_dc .Offset (_ff /2,_ff /2);};_dc =_dc .Offset (float64 (x ),float64 (y ));_dg .DrawBezierPathWithCreator (_dc ,_acd ._ba );};func (_aga *Renderer )SetFontColor (color _c .Color ){_aga ._ec =color };func (_fdc *Renderer )Text (text string ,x ,y int ){_fdc ._ba .Add_q ();
_fdc .SetFont (_fdc ._dd );_dgb ,_dgc ,_ca ,_ :=_gca (_fdc ._ec );_fdc ._ba .Add_rg (_dgb ,_dgc ,_ca );_fdc ._ba .Translate (float64 (x ),float64 (y )).Scale (1,-1);if _fcd :=_fdc ._gd ;_fcd !=0{_fdc ._ba .RotateDeg (_fcd );};_fdc ._ba .Add_BT ().Add_TL (_fdc ._fg );
var (_bed =_fdc ._dd .Encoder ();_cde =_fdc .wrapText (text );_bf =len (_cde ););for _aab ,_fbg :=range _cde {_fdc ._ba .Add_TJ (_a .MakeStringFromBytes (_bed .Encode (_fbg )));if _aab !=_bf -1{_fdc ._ba .Add_Tstar ();};};_fdc ._ba .Add_ET ();_fdc ._ba .Add_Q ();
};func (_fcc *Renderer )Stroke (){_fcc ._ba .Add_S ()};func (_gf *Renderer )Close (){_gf ._ba .Add_h ()};func _eea (_agb string ,_gg int ,_eefc func (_a .PdfObjectName )bool )_a .PdfObjectName {_geb :=_a .PdfObjectName (_b .Sprintf ("\u0025\u0073\u0025\u0064",_agb ,_gg ));
for _egf :=_gg ;_eefc (_geb );{_egf ++;_geb =_a .PdfObjectName (_b .Sprintf ("\u0025\u0073\u0025\u0064",_agb ,_egf ));};return _geb ;};func (_ceec *Renderer )SetStrokeDashArray (dashArray []float64 ){_cfa :=make ([]int64 ,len (dashArray ));for _efe ,_feb :=range dashArray {_cfa [_efe ]=int64 (_feb );
};_ceec ._ba .Add_d (_cfa ,0);};func (_ffg *Renderer )SetFontSize (size float64 ){_ffg ._fg =size };func (_fge *Renderer )Save (w _bd .Writer )error {if w ==nil {return nil ;};_ ,_cea :=_bd .Copy (w ,_e .NewBuffer (_fge ._ba .Bytes ()));return _cea ;};
func (_ef *Renderer )ResetStyle (){_ef .SetFillColor (_c .Black );_ef .SetStrokeColor (_c .Transparent );_ef .SetStrokeWidth (0);_ef .SetFont (_d .DefaultFont ());_ef .SetFontColor (_c .Black );_ef .SetFontSize (12);_ef .SetTextRotation (0);};func (_fdd *Renderer )MoveTo (x ,y int ){_fdd ._ba .Add_m (float64 (x ),float64 (y ))};
func _gca (_edf _c .Color )(float64 ,float64 ,float64 ,float64 ){_cga ,_bc ,_gdf ,_affe :=_gff (_edf );return float64 (_cga )/255,float64 (_bc )/255,float64 (_gdf )/255,float64 (_affe )/255;};func (_fa *Renderer )SetClassName (name string ){};func _aba (_bcb float64 )float64 {return _bcb *_bg .Pi /180.0};
